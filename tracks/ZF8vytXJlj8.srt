1
00:00:00,000 --> 00:00:07,195

2
00:00:07,195 --> 00:00:10,060
LOUIS GRAY: Welcome back to
Google Developers Live at I/O.

3
00:00:10,060 --> 00:00:12,920
I'm Louis Gray from GDL, and I
have with me two distinguished

4
00:00:12,920 --> 00:00:15,430
guests, Colt McAnlis
and Ilya Grigorik.

5
00:00:15,430 --> 00:00:16,160
Thank you for coming,
gentlemen.

6
00:00:16,160 --> 00:00:17,060
COLT MCANLIS: Thanks
for having us.

7
00:00:17,060 --> 00:00:17,860
ILYA GRIGORIK: Thanks.

8
00:00:17,860 --> 00:00:18,700
LOUIS GRAY: And we're
here to talk about

9
00:00:18,700 --> 00:00:19,720
web performance today.

10
00:00:19,720 --> 00:00:22,180
And if you remember from the
keynote, it seems like so long

11
00:00:22,180 --> 00:00:25,180
ago now, but it was only about
five to six hours, we were

12
00:00:25,180 --> 00:00:28,440
talking about performance and
speed and simplicity and all

13
00:00:28,440 --> 00:00:30,870
those things that really are
part of Chrome and really part

14
00:00:30,870 --> 00:00:32,509
of everything that Google
is doing with our

15
00:00:32,509 --> 00:00:33,790
approach to the web.

16
00:00:33,790 --> 00:00:36,270
And so I'm really happy to have
Colt and Ilya on here.

17
00:00:36,270 --> 00:00:38,960
Both of them have spoken a lot
about making the web faster

18
00:00:38,960 --> 00:00:41,060
and Chrome tools that will
get the job done to make

19
00:00:41,060 --> 00:00:43,740
everything go more quickly
for the web platform.

20
00:00:43,740 --> 00:00:45,320
So I want to just get
really started.

21
00:00:45,320 --> 00:00:48,530
Web performance is really all
of what we do at I/O and

22
00:00:48,530 --> 00:00:49,950
through the rest of the year.

23
00:00:49,950 --> 00:00:51,560
You guys even have
a booth upstairs.

24
00:00:51,560 --> 00:00:53,220
I just checked it out,
which is great.

25
00:00:53,220 --> 00:00:55,860
Why so much attention on
web performance, Colt?

26
00:00:55,860 --> 00:00:58,280
COLT MCANLIS: Well, as every
app developer knows, as we

27
00:00:58,280 --> 00:01:01,010
start to bridge into mobile,
it's not just about network

28
00:01:01,010 --> 00:01:03,560
performance anymore, about
how fast your page loads.

29
00:01:03,560 --> 00:01:06,890
It's about how fast the page is
to respond to the user once

30
00:01:06,890 --> 00:01:07,520
they're in it.

31
00:01:07,520 --> 00:01:10,520
So we have to feel like apps,
which means developers have to

32
00:01:10,520 --> 00:01:13,110
worry about the three pillars
of performance now--

33
00:01:13,110 --> 00:01:14,810
network, rendering,
and compute.

34
00:01:14,810 --> 00:01:17,410
And because of this, we've got
a lot of presence here, a lot

35
00:01:17,410 --> 00:01:19,960
of great talks going on to try
to help developers start

36
00:01:19,960 --> 00:01:22,580
talking about this, bring this
mental model to the table, and

37
00:01:22,580 --> 00:01:25,270
show them what tools they
need to get things done.

38
00:01:25,270 --> 00:01:26,850
LOUIS GRAY: It's interesting
you bring up networking,

39
00:01:26,850 --> 00:01:28,010
rendering, and computing.

40
00:01:28,010 --> 00:01:30,430
I came from a world where
computation was always the

41
00:01:30,430 --> 00:01:31,300
bottleneck.

42
00:01:31,300 --> 00:01:33,050
And it was the server
that was slow.

43
00:01:33,050 --> 00:01:35,100
And I think what you've seen
with networking is networking

44
00:01:35,100 --> 00:01:38,370
has grown exponentially,
10X each round.

45
00:01:38,370 --> 00:01:40,110
And it's really become something
where the data

46
00:01:40,110 --> 00:01:42,000
center kind of becomes a cloud,
and you don't think

47
00:01:42,000 --> 00:01:43,320
about the server anymore.

48
00:01:43,320 --> 00:01:44,810
And it's the network that's
the bottleneck.

49
00:01:44,810 --> 00:01:46,580
And that, as you mentioned,
can be really

50
00:01:46,580 --> 00:01:49,140
difficult and complex.

51
00:01:49,140 --> 00:01:51,380
So what are you guys doing up at
the booth to take all that

52
00:01:51,380 --> 00:01:53,690
complexity and make it simple?

53
00:01:53,690 --> 00:01:55,280
COLT MCANLIS: Well, we
absolutely are sure that it's

54
00:01:55,280 --> 00:01:56,310
super-complex.

55
00:01:56,310 --> 00:01:58,840
I mean, we, as the Chrome
developers, spend a long time

56
00:01:58,840 --> 00:02:00,420
architecting this stuff.

57
00:02:00,420 --> 00:02:02,400
What we've actually done is
we've assembled all of the

58
00:02:02,400 --> 00:02:04,580
brains at Google who deal
with performance on

59
00:02:04,580 --> 00:02:05,265
a day-to-day basis.

60
00:02:05,265 --> 00:02:07,270
And we basically have them
standing around for about

61
00:02:07,270 --> 00:02:09,289
eight hours answering
questions.

62
00:02:09,289 --> 00:02:10,720
In addition to that, they're
going to be walking you

63
00:02:10,720 --> 00:02:13,490
through the tools that we use
for internal analysis and all

64
00:02:13,490 --> 00:02:15,630
of our profiling and showing
you how to use them.

65
00:02:15,630 --> 00:02:17,460
And at best, if you bring us
one of your sites, we'll

66
00:02:17,460 --> 00:02:19,300
actually tell you what's
wrong and how to fix

67
00:02:19,300 --> 00:02:20,390
it as soon as possible.

68
00:02:20,390 --> 00:02:21,680
LOUIS GRAY: And so that's the
performance Ilya shared.

69
00:02:21,680 --> 00:02:22,220
COLT MCANLIS: Absolutely.

70
00:02:22,220 --> 00:02:23,440
LOUIS GRAY: Now, I like the
idea of hearing a bunch of

71
00:02:23,440 --> 00:02:26,080
gurus standing around,
like, at my service.

72
00:02:26,080 --> 00:02:27,750
What exactly are they
going to be doing?

73
00:02:27,750 --> 00:02:29,960
Is it like I show up with my
laptop and they're going to

74
00:02:29,960 --> 00:02:31,710
tweak my browser settings,
or what's the deal?

75
00:02:31,710 --> 00:02:32,920
ILYA GRIGORIK: We won't tweak
your browser settings

76
00:02:32,920 --> 00:02:35,190
necessarily, although maybe we
could, because as you saw in

77
00:02:35,190 --> 00:02:37,330
the keynote, we have the Chrome
data compression.

78
00:02:37,330 --> 00:02:38,960
That's already a nice one
that you can enable.

79
00:02:38,960 --> 00:02:41,300
But as a web developer, I think
another thing that we

80
00:02:41,300 --> 00:02:44,150
can take away from the keynote
is not only is the web getting

81
00:02:44,150 --> 00:02:46,700
faster, it's also getting more
ambitious in terms of the

82
00:02:46,700 --> 00:02:49,050
applications that we're
building, which is why we care

83
00:02:49,050 --> 00:02:52,870
about rendering performance
like 60FPS in a browser.

84
00:02:52,870 --> 00:02:55,435
For game developers, this has
been a day-to-day thing.

85
00:02:55,435 --> 00:02:57,910
For a lot of web developers,
this is a new concept.

86
00:02:57,910 --> 00:03:01,800
So upstairs we're talking people
through the steps of

87
00:03:01,800 --> 00:03:04,310
what are the tools in Chrome
that can help you figure out

88
00:03:04,310 --> 00:03:05,890
what are the rendering
bottlenecks?

89
00:03:05,890 --> 00:03:08,130
Maybe you have a CPU bottleneck,
a compute

90
00:03:08,130 --> 00:03:10,400
bottleneck, or maybe
it's networking.

91
00:03:10,400 --> 00:03:12,270
So, for example, for networking
we have a suite of

92
00:03:12,270 --> 00:03:14,520
tools called Page Speed, which
is basically like a

93
00:03:14,520 --> 00:03:15,380
performance linter.

94
00:03:15,380 --> 00:03:18,050
You run analyze, and it tells
you here are the 10 things you

95
00:03:18,050 --> 00:03:19,630
should fix right now.

96
00:03:19,630 --> 00:03:21,700
And then we can also provide
some tools to help you

97
00:03:21,700 --> 00:03:25,302
automate that web performance
best practice, which is great.

98
00:03:25,302 --> 00:03:26,850
LOUIS GRAY: Isn't it true you
never really eliminate the

99
00:03:26,850 --> 00:03:27,270
bottleneck.

100
00:03:27,270 --> 00:03:28,400
You just move it to
a different place?

101
00:03:28,400 --> 00:03:28,840
ILYA GRIGORIK: Absolutely.

102
00:03:28,840 --> 00:03:29,880
That's what happens.

103
00:03:29,880 --> 00:03:31,080
LOUIS GRAY: And that's the way
we always learned that.

104
00:03:31,080 --> 00:03:32,780
I mean, if you get out of this
spot, you're going to find

105
00:03:32,780 --> 00:03:33,690
something else that's hot.

106
00:03:33,690 --> 00:03:34,020
ILYA GRIGORIK: Yes.

107
00:03:34,020 --> 00:03:35,170
LOUIS GRAY: So you're talking
about really like a

108
00:03:35,170 --> 00:03:39,000
performance analysis service,
finding the best stuff, and

109
00:03:39,000 --> 00:03:41,250
finding how you can
optimize for that.

110
00:03:41,250 --> 00:03:43,270
I know we often have
you online at GDL.

111
00:03:43,270 --> 00:03:44,910
I appreciate you coming
on and talking about

112
00:03:44,910 --> 00:03:46,510
making the web fast.

113
00:03:46,510 --> 00:03:49,750
What are those things that web
developers can really key on

114
00:03:49,750 --> 00:03:52,240
to try and make their pages
load more quickly?

115
00:03:52,240 --> 00:03:54,150
What are the things that really
are the slowdowns?

116
00:03:54,150 --> 00:03:56,290
I think one of the pieces that
was touched on in the keynote

117
00:03:56,290 --> 00:03:58,350
was the option to get away
from possibly JPEG

118
00:03:58,350 --> 00:03:59,100
and moving to WebP.

119
00:03:59,100 --> 00:03:59,430
ILYA GRIGORIK: Yep.

120
00:03:59,430 --> 00:04:00,850
LOUIS GRAY: Can you talk
a little bit about that

121
00:04:00,850 --> 00:04:02,430
compression and things
that are out there?

122
00:04:02,430 --> 00:04:03,630
ILYA GRIGORIK: That's a
really cool example.

123
00:04:03,630 --> 00:04:06,460
So it turns out for an average
page on the web today, over

124
00:04:06,460 --> 00:04:08,460
60% of all of the data

125
00:04:08,460 --> 00:04:10,620
transferred is actually images.

126
00:04:10,620 --> 00:04:13,650
So we're building pages which
are very media-heavy, lots and

127
00:04:13,650 --> 00:04:14,750
lots of images.

128
00:04:14,750 --> 00:04:18,250
And with WebP, we can actually
give or provide about 30%

129
00:04:18,250 --> 00:04:20,070
better compression over JPEG.

130
00:04:20,070 --> 00:04:23,390
And what we didn't mention in
the keynote was an 80% win

131
00:04:23,390 --> 00:04:27,240
over PNGs, which we often used
for alpha channel and

132
00:04:27,240 --> 00:04:28,730
transparencies, which
are very popular in

133
00:04:28,730 --> 00:04:30,370
games and other places.

134
00:04:30,370 --> 00:04:33,440
So you put those two things
together by using something

135
00:04:33,440 --> 00:04:37,050
like a WebP format and you get
a huge savings, which fewer

136
00:04:37,050 --> 00:04:40,510
bytes transferred, which makes
the page load faster.

137
00:04:40,510 --> 00:04:42,310
It also decreases the
cost of your page.

138
00:04:42,310 --> 00:04:45,370
I think it's something that we
forget on our 4G connections.

139
00:04:45,370 --> 00:04:48,460
For a lot of users, bytes are
expensive, so reducing that

140
00:04:48,460 --> 00:04:50,540
amount is actually very,
very beneficial.

141
00:04:50,540 --> 00:04:51,930
LOUIS GRAY: You mentioned
4G connections.

142
00:04:51,930 --> 00:04:53,630
I'm going to date myself a
little bit and go back to

143
00:04:53,630 --> 00:04:54,580
talking about modems.

144
00:04:54,580 --> 00:04:55,220
ILYA GRIGORIK: Sure.

145
00:04:55,220 --> 00:04:57,620
LOUIS GRAY: So the web, they
just announced its 20th

146
00:04:57,620 --> 00:04:58,930
anniversary essentially.

147
00:04:58,930 --> 00:05:00,970
And so some of us have been
using the web for a long time.

148
00:05:00,970 --> 00:05:02,880
And some of us were using
Mosaic and Netscape

149
00:05:02,880 --> 00:05:05,440
Communicator and all those cool
things, where you had

150
00:05:05,440 --> 00:05:07,870
essentially gray pages with
blue links, and when you

151
00:05:07,870 --> 00:05:09,970
clicked through, you would
get to text files.

152
00:05:09,970 --> 00:05:13,040
And you had to do that, because
the downloading speed

153
00:05:13,040 --> 00:05:14,900
wasn't even possible
to load an image.

154
00:05:14,900 --> 00:05:17,930
And it was painful to download
hundreds of kilobytes of data,

155
00:05:17,930 --> 00:05:19,820
which are things we absolutely
take for granted.

156
00:05:19,820 --> 00:05:22,900
And I think often what we run
into is if you have a pipe and

157
00:05:22,900 --> 00:05:25,880
you make that pipe bigger, the
people who are designing your

158
00:05:25,880 --> 00:05:27,550
apps are going to
fill that pipe.

159
00:05:27,550 --> 00:05:31,120
And so how do you manage that
kind of one-upmanship on the

160
00:05:31,120 --> 00:05:34,140
equipment side that's really
sucking down the data to the

161
00:05:34,140 --> 00:05:38,380
people that are creating bigger
and more greater apps?

162
00:05:38,380 --> 00:05:39,890
ILYA GRIGORIK: I think it's
a challenge to both us

163
00:05:39,890 --> 00:05:42,530
developers on Chrome
and Google and

164
00:05:42,530 --> 00:05:43,720
all the rest to make--

165
00:05:43,720 --> 00:05:46,110
so we want to build more
ambitious applications.

166
00:05:46,110 --> 00:05:48,360
We want life streaming
to happen.

167
00:05:48,360 --> 00:05:51,400
We want to deliver rich media,
rich games in the browser and

168
00:05:51,400 --> 00:05:52,070
all the rest.

169
00:05:52,070 --> 00:05:55,950
So developers keep pushing us
to build more ambitious

170
00:05:55,950 --> 00:05:57,430
applications, which means
we need to improve the

171
00:05:57,430 --> 00:05:59,920
performance of the web, the
performance of the browser.

172
00:05:59,920 --> 00:06:01,620
But it is a collaboration.

173
00:06:01,620 --> 00:06:04,130
We can't fix everything within
Chrome, which is why we have

174
00:06:04,130 --> 00:06:07,340
the performance area, where
developers can come, show us

175
00:06:07,340 --> 00:06:10,310
their application, and it gives
us feedback as a browser

176
00:06:10,310 --> 00:06:13,490
developer to say, here are the
things that we need to

177
00:06:13,490 --> 00:06:17,290
address, help developers fix,
or vice versa, like we were

178
00:06:17,290 --> 00:06:19,942
not educating developers
about something.

179
00:06:19,942 --> 00:06:22,830
LOUIS GRAY: What is it about
Chrome specifically that makes

180
00:06:22,830 --> 00:06:24,140
you say it's speedier?

181
00:06:24,140 --> 00:06:25,780
What is it that we
can test on?

182
00:06:25,780 --> 00:06:27,820
And what's different
about that browser?

183
00:06:27,820 --> 00:06:29,690
COLT MCANLIS: Well, from the
ground up, we always focus on

184
00:06:29,690 --> 00:06:30,190
performance.

185
00:06:30,190 --> 00:06:31,990
I mean, that's one of the
cornerstones of Chrome that

186
00:06:31,990 --> 00:06:35,610
started in the beginning was we
need to make a faster, more

187
00:06:35,610 --> 00:06:38,090
secure browser for people,
because that enhances the web

188
00:06:38,090 --> 00:06:39,360
experience for everyone.

189
00:06:39,360 --> 00:06:41,060
The browsers get better,
the web gets better,

190
00:06:41,060 --> 00:06:42,240
everyone gets happier.

191
00:06:42,240 --> 00:06:44,430
So we do a lot of things across
network, compute, and

192
00:06:44,430 --> 00:06:45,750
render to make sure
this happens.

193
00:06:45,750 --> 00:06:48,970
V8 is by far one of the top
JavaScript VMs out there.

194
00:06:48,970 --> 00:06:52,350
The way we handle rendering and
our utilization of the GPU

195
00:06:52,350 --> 00:06:53,610
is top tier.

196
00:06:53,610 --> 00:06:55,060
We do things that no
other browsers can

197
00:06:55,060 --> 00:06:56,150
do just right now.

198
00:06:56,150 --> 00:06:58,320
Networking, we do a lot of great
stuff, like the Flywheel

199
00:06:58,320 --> 00:07:01,970
technology, as well as the way
we're compressing the network

200
00:07:01,970 --> 00:07:02,370
transfer stuff.

201
00:07:02,370 --> 00:07:04,320
ILYA GRIGORIK: A really cool
example with network is Chrome

202
00:07:04,320 --> 00:07:08,110
literally learns the topology
of the web.

203
00:07:08,110 --> 00:07:11,270
And it becomes faster
the more you use it.

204
00:07:11,270 --> 00:07:12,700
We learn your browsing
patterns.

205
00:07:12,700 --> 00:07:15,250
And next time you open the
Google News homepage, we say,

206
00:07:15,250 --> 00:07:18,230
hey, we can preload these other
pages to make it seem

207
00:07:18,230 --> 00:07:21,900
faster, pre-rendering and other
tricks under the hood.

208
00:07:21,900 --> 00:07:23,360
LOUIS GRAY: So a lot of
precaching and fetching of

209
00:07:23,360 --> 00:07:24,700
pages that I might go to in the

210
00:07:24,700 --> 00:07:27,260
future, almost like cheating.

211
00:07:27,260 --> 00:07:29,150
I think one thing that Linus,
I believe it was, touched on

212
00:07:29,150 --> 00:07:31,080
today, they looked at the
performance of Chrome on

213
00:07:31,080 --> 00:07:33,600
JavaScript, both on desktop
and on mobile.

214
00:07:33,600 --> 00:07:35,730
And on the desktop side, year
over year, maybe we

215
00:07:35,730 --> 00:07:37,420
increased by 50%.

216
00:07:37,420 --> 00:07:38,840
And I apologize if I get
the number wrong.

217
00:07:38,840 --> 00:07:41,210
And in mobile, it practically
doubled.

218
00:07:41,210 --> 00:07:44,130
And so when you look at mobile,
how important is

219
00:07:44,130 --> 00:07:46,730
making the web fast relative
to desktop?

220
00:07:46,730 --> 00:07:48,940
COLT MCANLIS: Oh, it's
everything right now.

221
00:07:48,940 --> 00:07:51,020
As we've already talked about,
the amount of content coming

222
00:07:51,020 --> 00:07:53,910
from mobile platforms is
eclipsing desktop.

223
00:07:53,910 --> 00:07:55,600
More and more and more
we're seeing that.

224
00:07:55,600 --> 00:07:57,810
And especially it's becoming
the life force for a lot of

225
00:07:57,810 --> 00:08:00,870
these small businesses that rely
on mobile for their input

226
00:08:00,870 --> 00:08:02,470
and their income.

227
00:08:02,470 --> 00:08:04,710
A user visiting a website
has a different sort of

228
00:08:04,710 --> 00:08:06,330
expectation when they
visit it on mobile

229
00:08:06,330 --> 00:08:07,580
than they do on desktop.

230
00:08:07,580 --> 00:08:09,590
And so decreasing the load
time, increasing the

231
00:08:09,590 --> 00:08:11,420
performance is going to be
critical for these guys to

232
00:08:11,420 --> 00:08:14,970
stay afloat as the technology
moves forward.

233
00:08:14,970 --> 00:08:16,550
LOUIS GRAY: Well, I know we
actually did this pretty fast.

234
00:08:16,550 --> 00:08:17,530
It's good for guys
who are doing

235
00:08:17,530 --> 00:08:18,960
performance to talk quick.

236
00:08:18,960 --> 00:08:20,770
And I appreciate your
performance on it.

237
00:08:20,770 --> 00:08:23,370
I appreciate you joining
us at GDL at I/O.

238
00:08:23,370 --> 00:08:24,820
For those of you who are on the
live stream, we're going

239
00:08:24,820 --> 00:08:26,640
to get back to your
sessions next.

240
00:08:26,640 --> 00:08:27,660
And follow us again.

241
00:08:27,660 --> 00:08:31,375
We'll be GDL at I/O again at
5:20 talking about Drive.

242
00:08:31,375 --> 00:08:32,625
See you there.

243
00:08:32,625 --> 00:08:37,919

