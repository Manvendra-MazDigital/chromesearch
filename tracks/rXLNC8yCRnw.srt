1
00:00:00,000 --> 00:01:47,784
[MUSIC PLAYING]

2
00:01:47,784 --> 00:01:59,261

3
00:01:59,261 --> 00:02:01,340
PAUL KINLAN: Hi, everyone.

4
00:02:01,340 --> 00:02:06,800
Welcome to our very first "Stack
Overflow" and Chrome

5
00:02:06,800 --> 00:02:08,870
for Android Hangout.

6
00:02:08,870 --> 00:02:10,590
This is the very first time
that we've done this.

7
00:02:10,590 --> 00:02:11,240
I'm Paul Kinlan.

8
00:02:11,240 --> 00:02:13,680
I'd like to introduce
Matt Gaunt.

9
00:02:13,680 --> 00:02:15,507
Matt, do you want to say
hello to everyone?

10
00:02:15,507 --> 00:02:17,892
MATT GAUNT: Hi, everyone.

11
00:02:17,892 --> 00:02:19,620
PAUL KINLAN: Well done.

12
00:02:19,620 --> 00:02:20,010
Cool.

13
00:02:20,010 --> 00:02:23,050
So yeah, this is the first
of us at the moment.

14
00:02:23,050 --> 00:02:27,690
So what we're trying to do with
this show is kind of show

15
00:02:27,690 --> 00:02:30,000
you our workflow for how we
actually do with "Stack

16
00:02:30,000 --> 00:02:32,450
Overflow" questions and how we
support the community inside

17
00:02:32,450 --> 00:02:37,530
"Stack Overflow" for Chrome on
Android and Chrome in general.

18
00:02:37,530 --> 00:02:38,730
So we're going to do
a couple of things.

19
00:02:38,730 --> 00:02:41,805
We're also definitely going
to answer questions live.

20
00:02:41,805 --> 00:02:44,930
I say "live." we did go through
and prepare the

21
00:02:44,930 --> 00:02:47,720
answers for quite a lot of these
earlier today because we

22
00:02:47,720 --> 00:02:51,390
didn't want this show just to be
full of "uh" and "um" and,

23
00:02:51,390 --> 00:02:55,410
"Yeah, that's a bug." You will
see a lot of, "Yeah, that's a

24
00:02:55,410 --> 00:02:59,110
bug." But yeah, I think we're
going to be quite cool.

25
00:02:59,110 --> 00:03:01,235
If you hear in the background
today I've got some kids with

26
00:03:01,235 --> 00:03:01,980
me just crying.

27
00:03:01,980 --> 00:03:03,810
Don't worry about it.

28
00:03:03,810 --> 00:03:05,740
They're just-- it's bed time,
and they don't like it.

29
00:03:05,740 --> 00:03:07,320
It's fine.

30
00:03:07,320 --> 00:03:09,350
But yeah, so we're going to
show you our workflow.

31
00:03:09,350 --> 00:03:11,510
We're going to show you how
we think you should--

32
00:03:11,510 --> 00:03:14,500
well, not how you should file
issues on "Stack Overflow,"

33
00:03:14,500 --> 00:03:18,510
but what we think is a good
process for helping us help

34
00:03:18,510 --> 00:03:19,930
you, if that makes sense.

35
00:03:19,930 --> 00:03:21,790
Because sometimes, it's a little
bit hard to work out

36
00:03:21,790 --> 00:03:23,350
what you mean.

37
00:03:23,350 --> 00:03:24,610
And we'll just kind of
walk through that

38
00:03:24,610 --> 00:03:25,900
flow of what we do.

39
00:03:25,900 --> 00:03:29,120
So Matt, shall we jump straight
on to the "Stack

40
00:03:29,120 --> 00:03:29,790
Overflow" questions?

41
00:03:29,790 --> 00:03:31,400
MATT GAUNT: Let's just do it.

42
00:03:31,400 --> 00:03:32,190
PAUL KINLAN: Yeah,
let's do it.

43
00:03:32,190 --> 00:03:35,180
So you're going to see not
my face anymore, which is

44
00:03:35,180 --> 00:03:37,840
normally a good thing.

45
00:03:37,840 --> 00:03:41,300
So "Stack Overflow,"
here we go.

46
00:03:41,300 --> 00:03:43,540
This is our special tag
that we've got.

47
00:03:43,540 --> 00:03:44,850
Well, it's not a special tag.

48
00:03:44,850 --> 00:03:47,430
It's google-chrome
and android.

49
00:03:47,430 --> 00:03:51,010
They're two separate tags that
we've got inside "Stack

50
00:03:51,010 --> 00:03:51,800
Overflow."

51
00:03:51,800 --> 00:03:54,390
And this is actually
how we monitor.

52
00:03:54,390 --> 00:03:57,830
And my day just normally
consists of me just pressing

53
00:03:57,830 --> 00:04:01,840
screens like this and then
seeing what happens.

54
00:04:01,840 --> 00:04:03,390
So we'll start off.

55
00:04:03,390 --> 00:04:05,090
Shall we start off with
the first one, Matt?

56
00:04:05,090 --> 00:04:07,230
MATT GAUNT: Yeah, let's just
do it, right from the top.

57
00:04:07,230 --> 00:04:08,620
PAUL KINLAN: Right
from the top.

58
00:04:08,620 --> 00:04:11,315
So this one has actually
been closed, I think.

59
00:04:11,315 --> 00:04:13,960
But basically, the question is,
Chrome browser in Android

60
00:04:13,960 --> 00:04:17,190
always renames the downloaded
file to download.bin.

61
00:04:17,190 --> 00:04:20,310
And basically, what it's saying
is if the file is over

62
00:04:20,310 --> 00:04:24,110
28 megabytes in size, then it
won't respect the name.

63
00:04:24,110 --> 00:04:26,200
Now there are a couple of things
that we need to get

64
00:04:26,200 --> 00:04:28,140
sorted with this is that
I actually think

65
00:04:28,140 --> 00:04:29,410
there's a bug in this.

66
00:04:29,410 --> 00:04:32,890
The question's been, I think,
closed originally, and so we

67
00:04:32,890 --> 00:04:34,010
can't do too much with it.

68
00:04:34,010 --> 00:04:37,350
But anyway, the general idea is
that there's a thing called

69
00:04:37,350 --> 00:04:40,070
a download attribute on
[INAUDIBLE], which, if I load

70
00:04:40,070 --> 00:04:44,240
up JS Bin now, we should
see one of the

71
00:04:44,240 --> 00:04:46,860
examples that I've done.

72
00:04:46,860 --> 00:04:49,230
Sorry, just--

73
00:04:49,230 --> 00:04:51,600
I can't see the screen
properly.

74
00:04:51,600 --> 00:04:55,050
File system demo,
there we are.

75
00:04:55,050 --> 00:04:59,930
Now if I zoom back in, what
you'll see actually isn't the

76
00:04:59,930 --> 00:05:02,560
answer to the question, but
there's this attribute here

77
00:05:02,560 --> 00:05:06,790
called download equals log.txt,
and that actually

78
00:05:06,790 --> 00:05:07,490
saves the name.

79
00:05:07,490 --> 00:05:10,120
Now the interesting thing that
we've got about this is if you

80
00:05:10,120 --> 00:05:13,370
go back to this question, I
can't really answer this

81
00:05:13,370 --> 00:05:14,520
question because there's
not enough

82
00:05:14,520 --> 00:05:15,770
information in this page.

83
00:05:15,770 --> 00:05:16,990
There isn't any code.

84
00:05:16,990 --> 00:05:20,300
There's just reference to the
fact that he uses IIS 7.5,

85
00:05:20,300 --> 00:05:21,930
which is fine.

86
00:05:21,930 --> 00:05:23,640
But we don't actually
understand how

87
00:05:23,640 --> 00:05:24,980
the download is initiated.

88
00:05:24,980 --> 00:05:26,660
And there's a couple of things
that you can do.

89
00:05:26,660 --> 00:05:29,300
You can set the content--

90
00:05:29,300 --> 00:05:32,120
the disposition, basically, on
the type if it's coming in

91
00:05:32,120 --> 00:05:32,970
from the server.

92
00:05:32,970 --> 00:05:35,400
But if it's generated from the
client, for instance, you can

93
00:05:35,400 --> 00:05:38,920
do things like that anchor
attribute that we saw before

94
00:05:38,920 --> 00:05:41,170
with download, you can set
the name from that.

95
00:05:41,170 --> 00:05:43,490
And the thing I wanted to talk
about inside this bug in

96
00:05:43,490 --> 00:05:47,390
particular is that there has
been a bug inside Chrome,

97
00:05:47,390 --> 00:05:50,300
which is in stable right now,
so it's broken in the stable

98
00:05:50,300 --> 00:05:52,830
version of Chrome, where if you
give a name [? in the ?]

99
00:05:52,830 --> 00:05:54,850
download attribute, it doesn't
actually let you

100
00:05:54,850 --> 00:05:56,360
download the file.

101
00:05:56,360 --> 00:05:59,890
It starts up the Android
download manager but then just

102
00:05:59,890 --> 00:06:01,570
kind of flakes out.

103
00:06:01,570 --> 00:06:03,860
Now the really cool thing is if
you get the beta, which you

104
00:06:03,860 --> 00:06:09,760
can find from Google Search, if
you get that beta, you'll

105
00:06:09,760 --> 00:06:10,690
see it's actually fixed.

106
00:06:10,690 --> 00:06:13,070
So if you actually specify a
download attribute on your

107
00:06:13,070 --> 00:06:15,740
anchor, you'll see the file
is actually named.

108
00:06:15,740 --> 00:06:18,600
And it won't be called
download.bin, which is what

109
00:06:18,600 --> 00:06:21,140
you get it you don't name
the file at the moment.

110
00:06:21,140 --> 00:06:24,270
So this one, it might
be fixed.

111
00:06:24,270 --> 00:06:27,920
I think my kid's getting
told off at the moment.

112
00:06:27,920 --> 00:06:30,330
So it might be fixed
in the latest beta.

113
00:06:30,330 --> 00:06:31,670
But we're going to have
to check it later on.

114
00:06:31,670 --> 00:06:34,370
And unfortunately, we can't
really answer this question.

115
00:06:34,370 --> 00:06:36,220
So this isn't a bad question.

116
00:06:36,220 --> 00:06:37,890
I know the guy's
got a problem.

117
00:06:37,890 --> 00:06:39,400
We want to try and help
as much as possible.

118
00:06:39,400 --> 00:06:41,430
But we can't really do too much
with this other than say,

119
00:06:41,430 --> 00:06:43,453
you know, it might actually
be fixed.

120
00:06:43,453 --> 00:06:47,060
Matt, do you have any other
thoughts about that one?

121
00:06:47,060 --> 00:06:47,980
MATT GAUNT: No.

122
00:06:47,980 --> 00:06:50,920
I must admit, I did actually
find it, I think it was a

123
00:06:50,920 --> 00:06:53,060
couple of days ago I actually
experienced exactly the same

124
00:06:53,060 --> 00:06:56,600
thing, so I have the feeling
it could be a bug.

125
00:06:56,600 --> 00:06:57,620
PAUL KINLAN: Yeah, it
could be a bug.

126
00:06:57,620 --> 00:07:00,690
And so what we'll do in a minute
is we'll try and show a

127
00:07:00,690 --> 00:07:02,730
little bit of the process
that we go through.

128
00:07:02,730 --> 00:07:04,840
Once we know a little bit
more, we can actually

129
00:07:04,840 --> 00:07:07,480
reproduce the problem.

130
00:07:07,480 --> 00:07:08,300
Actually, tell you what.

131
00:07:08,300 --> 00:07:12,240
We'll go into this overlap
in slide transition.

132
00:07:12,240 --> 00:07:15,720
Now this is on the other end
of a lot of information has

133
00:07:15,720 --> 00:07:17,243
been provided to us.

134
00:07:17,243 --> 00:07:20,450
You can probably see here,
there's a lot of list elements

135
00:07:20,450 --> 00:07:21,790
and everything.

136
00:07:21,790 --> 00:07:23,830
And then the guy says, if
you look at Firebug, the

137
00:07:23,830 --> 00:07:25,370
attribute's applied.

138
00:07:25,370 --> 00:07:28,240
I'm not too sure why he's using
Firebug with Chrome.

139
00:07:28,240 --> 00:07:30,590
You can get a lot better
integration with Chrome using

140
00:07:30,590 --> 00:07:31,635
the DevTools.

141
00:07:31,635 --> 00:07:33,650
If you're in the Chrome
Canary, you can go to

142
00:07:33,650 --> 00:07:37,676
chrome://inspect, and if you've
got ADB running, you

143
00:07:37,676 --> 00:07:39,040
can actually see your
devices, and you can

144
00:07:39,040 --> 00:07:40,610
actually debug the devices.

145
00:07:40,610 --> 00:07:42,366
And I think Matt might be able
to show you a little bit of

146
00:07:42,366 --> 00:07:43,940
that later on.

147
00:07:43,940 --> 00:07:46,800
So this question here is, we
can't actually answer this

148
00:07:46,800 --> 00:07:49,370
question either, unfortunately,
because when

149
00:07:49,370 --> 00:07:52,840
you actually go and press the
site, I can't actually work

150
00:07:52,840 --> 00:07:53,840
out what the problem is.

151
00:07:53,840 --> 00:07:57,670
He says basically, it doesn't
transition exactly correctly.

152
00:07:57,670 --> 00:08:00,770
So I think that this type of
question, some screenshots

153
00:08:00,770 --> 00:08:01,610
would be really cool.

154
00:08:01,610 --> 00:08:03,890
I know it's a little bit awkward
sometimes to get a

155
00:08:03,890 --> 00:08:05,484
screenshot off the phone
and on, and it takes a

156
00:08:05,484 --> 00:08:06,200
little bit of time.

157
00:08:06,200 --> 00:08:09,240
But in this case, I couldn't
actually find out what the

158
00:08:09,240 --> 00:08:11,740
problem was, so I couldn't
actually offer any help.

159
00:08:11,740 --> 00:08:14,440
Which is a little bit
frustrating, because we want

160
00:08:14,440 --> 00:08:18,190
to really help these guys
solve their problems.

161
00:08:18,190 --> 00:08:20,470
But the next one actually is
a kind of interesting one

162
00:08:20,470 --> 00:08:24,400
because we can actually
help out on this one.

163
00:08:24,400 --> 00:08:26,880
And the question is, I can't
open local files from the

164
00:08:26,880 --> 00:08:30,980
FileSystem API on my
Android phone.

165
00:08:30,980 --> 00:08:36,110
So this one is kind of cool
because, Matt, I think this is

166
00:08:36,110 --> 00:08:37,460
the one that we got the
demo for as well,

167
00:08:37,460 --> 00:08:39,500
so we can kind of--

168
00:08:39,500 --> 00:08:40,270
oh no, it's not, actually.

169
00:08:40,270 --> 00:08:40,840
It's later on.

170
00:08:40,840 --> 00:08:43,870
The two questions are
really similar.

171
00:08:43,870 --> 00:08:46,640
And essentially, the person
wants to be able to take their

172
00:08:46,640 --> 00:08:49,620
file from the file system.

173
00:08:49,620 --> 00:08:52,500
In this case, it's an
XML HTTP request,

174
00:08:52,500 --> 00:08:53,440
which is kind of cool.

175
00:08:53,440 --> 00:08:56,425
So they're going to download
something from the internet

176
00:08:56,425 --> 00:08:59,370
and cache it locally inside
not the database but the

177
00:08:59,370 --> 00:09:00,880
FileSystem API.

178
00:09:00,880 --> 00:09:04,190
And the FileSystem API is like
a normal Unix-based file

179
00:09:04,190 --> 00:09:07,050
system so you can write data
to it and read data from it

180
00:09:07,050 --> 00:09:09,580
and iterate through the
directories and all the type

181
00:09:09,580 --> 00:09:12,860
of file structure that
we'd normally expect.

182
00:09:12,860 --> 00:09:15,660
The interesting thing about this
is I actually think this

183
00:09:15,660 --> 00:09:18,550
part of the question is a little
bit of a red herring

184
00:09:18,550 --> 00:09:20,145
because it's basically anything,
I need to get the

185
00:09:20,145 --> 00:09:20,890
array buffer and save it.

186
00:09:20,890 --> 00:09:21,950
And the guy can--

187
00:09:21,950 --> 00:09:22,470
I say the guy.

188
00:09:22,470 --> 00:09:26,670
The person who did this bug
can actually save it.

189
00:09:26,670 --> 00:09:29,050
And we know they can save it
because what they're saying is

190
00:09:29,050 --> 00:09:31,300
that the file is visible
from the actual file

191
00:09:31,300 --> 00:09:32,820
system inside Chrome.

192
00:09:32,820 --> 00:09:36,650
So if you go to filesystem
Chrome, the URL forward slash

193
00:09:36,650 --> 00:09:39,800
persistent, you'll actually
see the list of files that

194
00:09:39,800 --> 00:09:41,810
have been offline cached.

195
00:09:41,810 --> 00:09:44,250
Now the interesting thing here
is this is where it gets a

196
00:09:44,250 --> 00:09:45,890
little bit more interesting.

197
00:09:45,890 --> 00:09:49,200
Again, because you can see the
person is basically saying, I

198
00:09:49,200 --> 00:09:52,490
want to save to a PDF, and then
I want to write to it.

199
00:09:52,490 --> 00:09:54,780
And then when it's written,
we'll save out.

200
00:09:54,780 --> 00:09:58,030
Now the interesting thing
is that this here

201
00:09:58,030 --> 00:10:00,060
is the actual problem.

202
00:10:00,060 --> 00:10:03,440
So the exact error message in
English is "Untitled, download

203
00:10:03,440 --> 00:10:08,566
unsuccessful." Now this,
unfortunately, is the bit that

204
00:10:08,566 --> 00:10:10,535
we really, really need
to know and we really

205
00:10:10,535 --> 00:10:11,810
need to try and debug.

206
00:10:11,810 --> 00:10:14,560
And everything above it doesn't
particularly help us

207
00:10:14,560 --> 00:10:17,370
that much when we're looking at
this, other than the fact

208
00:10:17,370 --> 00:10:19,435
that we know that the
"download started"

209
00:10:19,435 --> 00:10:20,680
notification happens.

210
00:10:20,680 --> 00:10:22,800
So there's a couple of things
that happened here.

211
00:10:22,800 --> 00:10:26,810
And if we go down to my answer,
basically, so I

212
00:10:26,810 --> 00:10:31,440
answered this about four hours
ago, is that on stable, it

213
00:10:31,440 --> 00:10:32,420
kind of works.

214
00:10:32,420 --> 00:10:36,490
In beta, it does work, in the
sense that the stable version

215
00:10:36,490 --> 00:10:39,030
of the program has this
attribute problem.

216
00:10:39,030 --> 00:10:41,950
So the demo that we saw before,
this file system demo,

217
00:10:41,950 --> 00:10:43,380
this is the code I recreate--

218
00:10:43,380 --> 00:10:44,871
[HIGH-PITCHED NOISE]

219
00:10:44,871 --> 00:10:46,650
PAUL KINLAN: That's my son
not liking going to

220
00:10:46,650 --> 00:10:48,430
sleep at the moment.

221
00:10:48,430 --> 00:10:51,990
So in this demo, basically, in
this actual question, we've

222
00:10:51,990 --> 00:10:54,230
written this demo to try
and log the file.

223
00:10:54,230 --> 00:10:56,690
And now if I press save
on the desktop, it's

224
00:10:56,690 --> 00:10:57,670
a little bit awkward.

225
00:10:57,670 --> 00:11:03,520
You might have seen at the
bottom of the screen, there is

226
00:11:03,520 --> 00:11:07,590
the log.txt file, which if I
open, you're not going to be

227
00:11:07,590 --> 00:11:08,640
able to see because
I'm sharing the

228
00:11:08,640 --> 00:11:10,030
window and not the screen.

229
00:11:10,030 --> 00:11:11,860
But it basically says,
hello world.

230
00:11:11,860 --> 00:11:15,190
Now this works on a desktop,
but it doesn't work on the

231
00:11:15,190 --> 00:11:16,100
phone in stable.

232
00:11:16,100 --> 00:11:18,640
But if you go to the latest beta
version of Chrome, you'll

233
00:11:18,640 --> 00:11:20,550
find that basically,
it works now.

234
00:11:20,550 --> 00:11:23,820
Now the way that we answer this
question is basically

235
00:11:23,820 --> 00:11:28,180
saying, it's not the
greatest solution.

236
00:11:28,180 --> 00:11:30,820
In stable right now for the
majority of your users,

237
00:11:30,820 --> 00:11:32,990
there's really nothing that you
can do about this problem,

238
00:11:32,990 --> 00:11:33,690
unfortunately.

239
00:11:33,690 --> 00:11:35,670
But in the beta, it's going
to work as expected.

240
00:11:35,670 --> 00:11:37,910
And we've given the
demo beneath which

241
00:11:37,910 --> 00:11:39,280
shows how it works.

242
00:11:39,280 --> 00:11:45,230
Now the interesting thing about
this is I would normally

243
00:11:45,230 --> 00:11:45,940
raise a bug.

244
00:11:45,940 --> 00:11:48,540
But because I know I've raised
the bug in the past, and it's

245
00:11:48,540 --> 00:11:48,770
been fixed--

246
00:11:48,770 --> 00:11:50,410
MATT GAUNT: Paul, Paul, it's
getting a bit creepy without

247
00:11:50,410 --> 00:11:52,510
having a face on screen,
I've got to admit.

248
00:11:52,510 --> 00:11:54,631
We need to bring you
back on, man.

249
00:11:54,631 --> 00:11:56,228
PAUL KINLAN: Yeah, do you want
to bring me back in?

250
00:11:56,228 --> 00:11:57,722
Let me just jump out.

251
00:11:57,722 --> 00:11:58,720
[CHILD CRYING]

252
00:11:58,720 --> 00:11:59,940
MATT GAUNT: There we go.

253
00:11:59,940 --> 00:12:02,850
PAUL KINLAN: The sounds of
the crying [INAUDIBLE].

254
00:12:02,850 --> 00:12:03,610
So anyway, yeah.

255
00:12:03,610 --> 00:12:06,710
So we basically find this
bug normally, and

256
00:12:06,710 --> 00:12:07,580
we raise the bug.

257
00:12:07,580 --> 00:12:09,690
And I'll show you how
we do that in a bit.

258
00:12:09,690 --> 00:12:11,890
Actually, it's not that
interesting, really.

259
00:12:11,890 --> 00:12:13,960
But then we go and find it, and
then we'll go and fix it

260
00:12:13,960 --> 00:12:16,880
or get it fixed or prioritize
and escalate it.

261
00:12:16,880 --> 00:12:24,366
Now the interesting thing about
this is we know it's

262
00:12:24,366 --> 00:12:25,310
going to get fixed.

263
00:12:25,310 --> 00:12:27,055
And that's all we have to really
do is say, it's going

264
00:12:27,055 --> 00:12:28,840
to get fixed, and this answers
your question.

265
00:12:28,840 --> 00:12:31,780
And if we give a demo to how
it's actually going to work,

266
00:12:31,780 --> 00:12:32,570
that's going to be great.

267
00:12:32,570 --> 00:12:35,370
Because the hardest thing
actually is parsing out what

268
00:12:35,370 --> 00:12:37,650
normally happens inside the
JavaScript and HTML from a

269
00:12:37,650 --> 00:12:40,450
question and trying to re-create
that in your

270
00:12:40,450 --> 00:12:41,080
application.

271
00:12:41,080 --> 00:12:45,180
So that's why we've given the
link into the JS Bin, to

272
00:12:45,180 --> 00:12:46,510
answer your question.

273
00:12:46,510 --> 00:12:50,650
MATT GAUNT: It's also a lot of
the times that it simplifies

274
00:12:50,650 --> 00:12:54,360
things for us is if we already
a JS vid or a JS Bin link,

275
00:12:54,360 --> 00:12:57,100
where someone's gone, here's
an example of the problem.

276
00:12:57,100 --> 00:12:59,900
So I've taken the source code
that I would have put in Stack

277
00:12:59,900 --> 00:13:03,500
Overflow anyway but just made
sure it's in a small sample.

278
00:13:03,500 --> 00:13:05,610
The nice thing with that is
often, if you're working on a

279
00:13:05,610 --> 00:13:08,880
production product, you can't
really put the code in.

280
00:13:08,880 --> 00:13:11,170
Whereas JS Bin and JS
[INAUDIBLE], it means you can

281
00:13:11,170 --> 00:13:12,800
condense everything
down to really the

282
00:13:12,800 --> 00:13:14,160
core of your problem.

283
00:13:14,160 --> 00:13:16,340
And that means we can take that,
fork it, play around

284
00:13:16,340 --> 00:13:19,210
with it, adjust it, try and
diagnose the problems

285
00:13:19,210 --> 00:13:22,770
ourselves and then either come
back with a fix or, like you

286
00:13:22,770 --> 00:13:25,370
say, we get the opportunity
to go and raise a bug.

287
00:13:25,370 --> 00:13:28,990
And then we can also point our
engineers to that as well.

288
00:13:28,990 --> 00:13:30,830
PAUL KINLAN: Yeah, I think
that's the most important bit

289
00:13:30,830 --> 00:13:34,350
is that whenever we
ask the engineers,

290
00:13:34,350 --> 00:13:36,220
they cry like crazy.

291
00:13:36,220 --> 00:13:38,100
But then at the same time
is they ask for a

292
00:13:38,100 --> 00:13:38,510
reproducible case.

293
00:13:38,510 --> 00:13:41,250
And if we give them an entire
web page, like an entire

294
00:13:41,250 --> 00:13:43,390
application, they can't
break down exactly

295
00:13:43,390 --> 00:13:44,415
what the problem is.

296
00:13:44,415 --> 00:13:46,810
And if you can get a
reproducible case, that really

297
00:13:46,810 --> 00:13:49,230
helps engineers actually try
and solve the problem.

298
00:13:49,230 --> 00:13:52,820
And if you can't get a
reproducible case, sometimes

299
00:13:52,820 --> 00:13:55,150
it means that the actual issue
or the logic might be on your

300
00:13:55,150 --> 00:13:56,940
side of things.

301
00:13:56,940 --> 00:14:00,020
So let me just jump out to
the previous question.

302
00:14:00,020 --> 00:14:01,650
That was the one thing I really,
really wanted to

303
00:14:01,650 --> 00:14:05,140
mention was, if you actually
notice, there's an issue on

304
00:14:05,140 --> 00:14:07,280
the desktop but not inside
mobile Chrome, or the other

305
00:14:07,280 --> 00:14:07,790
way around.

306
00:14:07,790 --> 00:14:09,830
There was an issue on
the mobile Chrome,

307
00:14:09,830 --> 00:14:11,200
but not on the desktop.

308
00:14:11,200 --> 00:14:12,670
It's normally a bug.

309
00:14:12,670 --> 00:14:15,900
It's not normally kind of
something different in the

310
00:14:15,900 --> 00:14:18,460
stack or kind of
anywhere else.

311
00:14:18,460 --> 00:14:22,040
It normally is the fact that
something is not working as

312
00:14:22,040 --> 00:14:23,190
it's expected to work.

313
00:14:23,190 --> 00:14:25,380
And a great case is this
download thing that we've just

314
00:14:25,380 --> 00:14:28,035
seen before where, you want to
try and download some data and

315
00:14:28,035 --> 00:14:30,830
give it a name, and it just
doesn't work on the desk-- it

316
00:14:30,830 --> 00:14:32,690
works on the desktop, doesn't
work on mobile.

317
00:14:32,690 --> 00:14:34,180
That's a really strong
indication that you should

318
00:14:34,180 --> 00:14:35,060
raise a bug.

319
00:14:35,060 --> 00:14:38,450
Now the interesting thing, so
normally what happens from

320
00:14:38,450 --> 00:14:42,410
this, and I'm just going to
jump back to my screen, is

321
00:14:42,410 --> 00:14:47,360
that what will happen is we'll
find a bug, but then we'll go

322
00:14:47,360 --> 00:14:52,906
to [INAUDIBLE], I think.

323
00:14:52,906 --> 00:14:56,430
The other way around.

324
00:14:56,430 --> 00:14:57,200
No, that's not the one.

325
00:14:57,200 --> 00:14:59,010
That could have been a really
dodgy site, [INAUDIBLE].

326
00:14:59,010 --> 00:15:02,880

327
00:15:02,880 --> 00:15:06,870
New, new dot, there we are.

328
00:15:06,870 --> 00:15:09,620
Basically what happens is that
URL, that really short URL,

329
00:15:09,620 --> 00:15:11,420
will take you to the place
where you can submit an

330
00:15:11,420 --> 00:15:12,470
Android issue.

331
00:15:12,470 --> 00:15:14,540
And the template you want
to use is Android.

332
00:15:14,540 --> 00:15:16,610
And then you just basically give
us as much information as

333
00:15:16,610 --> 00:15:18,480
possible, the steps
to reproduce.

334
00:15:18,480 --> 00:15:21,500
If you're going to download a
file, for instance, you'd say,

335
00:15:21,500 --> 00:15:23,220
click on this link.

336
00:15:23,220 --> 00:15:24,490
I have this attribute set.

337
00:15:24,490 --> 00:15:26,910
It doesn't download the file,
and those type of things.

338
00:15:26,910 --> 00:15:29,020
And then the expected
and actual result.

339
00:15:29,020 --> 00:15:31,903
The expected result isn't, it
should work, which is normally

340
00:15:31,903 --> 00:15:32,630
what we get.

341
00:15:32,630 --> 00:15:36,570
But like, if you expect to have
a log.txt produced, say

342
00:15:36,570 --> 00:15:39,630
that you should expect to see
a log.txt file on your local

343
00:15:39,630 --> 00:15:42,190
file system.

344
00:15:42,190 --> 00:15:45,910
So that's one of the things we
use when we're doing the bug

345
00:15:45,910 --> 00:15:48,250
tracking is new.mcrbug.

346
00:15:48,250 --> 00:15:49,840
And that's the site which
I have no idea

347
00:15:49,840 --> 00:15:50,465
what that one was.

348
00:15:50,465 --> 00:15:52,310
That was just my typo.

349
00:15:52,310 --> 00:15:55,390
So I'm going to jump back to the
previous question, or the

350
00:15:55,390 --> 00:15:57,540
next question.

351
00:15:57,540 --> 00:15:59,120
So this one's actually been
closed, but i did actually

352
00:15:59,120 --> 00:16:00,610
want to answer this one.

353
00:16:00,610 --> 00:16:04,115
Will Chrome on Android
eventually support Pepper, and

354
00:16:04,115 --> 00:16:06,280
thus, the Flash player?

355
00:16:06,280 --> 00:16:08,200
The basic answer, it's
not going to happen.

356
00:16:08,200 --> 00:16:09,970
Unless some things change
internally, it's

357
00:16:09,970 --> 00:16:11,070
not going to happen.

358
00:16:11,070 --> 00:16:12,550
We want to make sure that
all the web pages

359
00:16:12,550 --> 00:16:13,800
are completely sandboxed.

360
00:16:13,800 --> 00:16:15,910

361
00:16:15,910 --> 00:16:19,450
MATT GAUNT: And I think given
the way Flash has been going

362
00:16:19,450 --> 00:16:21,980
on mobile, it doesn't seem like
many of the browsers are

363
00:16:21,980 --> 00:16:22,940
really supporting it.

364
00:16:22,940 --> 00:16:25,790
So it kind of feels like we
should be pushing the web

365
00:16:25,790 --> 00:16:28,015
forward for more responsive
sites.

366
00:16:28,015 --> 00:16:30,785
And it doesn't seem like Flash
really has much of a place in

367
00:16:30,785 --> 00:16:32,340
there at the moment.

368
00:16:32,340 --> 00:16:33,400
PAUL KINLAN: Yeah, it doesn't.

369
00:16:33,400 --> 00:16:34,910
That's he easiest way
of saying it.

370
00:16:34,910 --> 00:16:35,820
But it's not just Flash.

371
00:16:35,820 --> 00:16:37,730
It's all the plug-ins as well.

372
00:16:37,730 --> 00:16:41,790
We can't get the plug-ins
working across all these

373
00:16:41,790 --> 00:16:44,955
devices properly.

374
00:16:44,955 --> 00:16:47,150
He doesn't like going to
bed at the moment.

375
00:16:47,150 --> 00:16:49,650
And so we can't get all these
plug-ins working across all

376
00:16:49,650 --> 00:16:50,550
the devices.

377
00:16:50,550 --> 00:16:53,180
And we want it to be a pure,
open web, and that's the way

378
00:16:53,180 --> 00:16:54,940
that we're going at the moment,
and that's what were

379
00:16:54,940 --> 00:16:55,600
trying to support.

380
00:16:55,600 --> 00:16:58,000
So let me just jump back to the
screen, because I want to

381
00:16:58,000 --> 00:17:01,880
also go to the next question,
which I think that we've got a

382
00:17:01,880 --> 00:17:04,210
demo for at the moment
as well.

383
00:17:04,210 --> 00:17:05,140
So there we are.

384
00:17:05,140 --> 00:17:10,030
Next question, fetching a blog
in Chrome from Android.

385
00:17:10,030 --> 00:17:12,729
So Matt, this is the one that
we've got a demo for, right?

386
00:17:12,729 --> 00:17:13,750
MATT GAUNT: I believe so.

387
00:17:13,750 --> 00:17:14,180
This is the--

388
00:17:14,180 --> 00:17:14,859
[INTERPOSING VOICES]

389
00:17:14,859 --> 00:17:16,410
PAUL KINLAN: So I'm going to
hand across to you in a second

390
00:17:16,410 --> 00:17:17,670
on this one.

391
00:17:17,670 --> 00:17:21,359
But this is a really good
report, actually, because

392
00:17:21,359 --> 00:17:27,160
basically, it says it works in
Chrome for Firefox on desktop

393
00:17:27,160 --> 00:17:29,570
and Android, but not on
Chrome for Android.

394
00:17:29,570 --> 00:17:30,600
And then we get a good

395
00:17:30,600 --> 00:17:32,030
description of what's happening.

396
00:17:32,030 --> 00:17:34,260
So basically, requesting the
video from somewhere on the

397
00:17:34,260 --> 00:17:36,925
web of response type blob, and
then we're going to cache it

398
00:17:36,925 --> 00:17:38,320
in the local file system.

399
00:17:38,320 --> 00:17:40,780
So it's nearly exactly the same
as the question that we

400
00:17:40,780 --> 00:17:42,632
saw earlier on in the show.

401
00:17:42,632 --> 00:17:45,470
But it's a little bit different
because the actual

402
00:17:45,470 --> 00:17:49,860
issue here is that once the
blob's been taken and made a

403
00:17:49,860 --> 00:17:54,780
[? URL ?] of, we can't
attach it to the

404
00:17:54,780 --> 00:17:56,770
source, the video element.

405
00:17:56,770 --> 00:17:59,320
It works on desktop, but it
doesn't work on Android.

406
00:17:59,320 --> 00:18:02,610
Now the interesting thing about
this is the answer here

407
00:18:02,610 --> 00:18:04,550
is, it's a bug.

408
00:18:04,550 --> 00:18:06,420
We've replicated the issue, and
we've found out what the

409
00:18:06,420 --> 00:18:09,780
issue is, but we don't
have a fix.

410
00:18:09,780 --> 00:18:12,160
Which is not a nice answer
to give people, but

411
00:18:12,160 --> 00:18:13,640
unfortunately, it's the only
answer that we can give in

412
00:18:13,640 --> 00:18:15,220
some cases.

413
00:18:15,220 --> 00:18:19,030
So Matt, can we just jump onto
your screen so we can kind of

414
00:18:19,030 --> 00:18:19,570
[INAUDIBLE]

415
00:18:19,570 --> 00:18:22,430
through how we go about
testing this?

416
00:18:22,430 --> 00:18:28,860
MATT GAUNT: So if i just jump
to my desktop, there we go.

417
00:18:28,860 --> 00:18:33,070
So the first step is going to
be to go to Chrome Inspect,

418
00:18:33,070 --> 00:18:35,200
because that's where we're going
to start being able to

419
00:18:35,200 --> 00:18:36,560
debug this on the
Android device.

420
00:18:36,560 --> 00:18:41,280
It'd be nice to say we
got video load by--

421
00:18:41,280 --> 00:18:42,830
PAUL KINLAN: Didn't [INAUDIBLE],
sorry.

422
00:18:42,830 --> 00:18:46,410
MATT GAUNT: If I hit Inspect
on there, and then I'm also

423
00:18:46,410 --> 00:18:51,780
going to need to go, can I--

424
00:18:51,780 --> 00:18:53,260
cool.

425
00:18:53,260 --> 00:18:56,150
So what this is doing is
actually showing the web page

426
00:18:56,150 --> 00:18:58,040
that I currently have
on my phone.

427
00:18:58,040 --> 00:19:02,050
So if I quickly switch back,
I'll actually be able to show

428
00:19:02,050 --> 00:19:04,290
you what my phone is doing.

429
00:19:04,290 --> 00:19:08,570

430
00:19:08,570 --> 00:19:09,770
There we--

431
00:19:09,770 --> 00:19:10,890
no.

432
00:19:10,890 --> 00:19:12,240
No, it's falling apart.

433
00:19:12,240 --> 00:19:15,418

434
00:19:15,418 --> 00:19:16,780
There we go.

435
00:19:16,780 --> 00:19:21,070
So what we should be able to
see is, this is Pauls demo

436
00:19:21,070 --> 00:19:24,260
that he's put together.

437
00:19:24,260 --> 00:19:28,400
And basically, all it is, is
just a simple video page with

438
00:19:28,400 --> 00:19:32,635
a link on it which says
load XHR, just there.

439
00:19:32,635 --> 00:19:35,670
And when you click on that,
you'll see that the video

440
00:19:35,670 --> 00:19:36,770
[INAUDIBLE] actually come in.

441
00:19:36,770 --> 00:19:38,840
And the problem is when you hit
play, then it's going to

442
00:19:38,840 --> 00:19:40,830
fail to do anything.

443
00:19:40,830 --> 00:19:43,570
So this then comes
into the bug.

444
00:19:43,570 --> 00:19:49,990
So if I dump to SlideShare
again, so the way we debugged

445
00:19:49,990 --> 00:19:54,420
this was if we actually look
at the sources to the web

446
00:19:54,420 --> 00:20:02,840
page, and I find where we
had the JavaScript.

447
00:20:02,840 --> 00:20:04,130
This one?

448
00:20:04,130 --> 00:20:07,460
Is this the one?

449
00:20:07,460 --> 00:20:10,190
And it was as simple as putting
a break point under

450
00:20:10,190 --> 00:20:12,280
this video source window URL.

451
00:20:12,280 --> 00:20:16,240
So now, if I hit refresh on the
mobile device, we should

452
00:20:16,240 --> 00:20:19,796
get to a point where when
I tap the button--

453
00:20:19,796 --> 00:20:21,120
there we go.

454
00:20:21,120 --> 00:20:23,190
So at that point, we're
debugging the JavaScript

455
00:20:23,190 --> 00:20:25,785
that's running on the
mobile device.

456
00:20:25,785 --> 00:20:27,570
And I believe this is what Paul

457
00:20:27,570 --> 00:20:30,570
used to actually diagnose--

458
00:20:30,570 --> 00:20:31,200
PAUL KINLAN: Yeah.

459
00:20:31,200 --> 00:20:34,810
So the really nice thing here
was that we used a couple of

460
00:20:34,810 --> 00:20:35,630
bits of Chrome.

461
00:20:35,630 --> 00:20:37,330
So I use tab sync a
lot inside Chrome.

462
00:20:37,330 --> 00:20:39,760
So I have a desktop, my
desktop instance.

463
00:20:39,760 --> 00:20:42,410
And I'll test it,
make the JS Bin.

464
00:20:42,410 --> 00:20:45,090
And in this case, we just
literally copied all the code

465
00:20:45,090 --> 00:20:48,800
from the actual "Stack
Overflow" question.

466
00:20:48,800 --> 00:20:50,830
I had to put my own video
in and make it

467
00:20:50,830 --> 00:20:52,770
cross-origin enabled.

468
00:20:52,770 --> 00:20:55,070
That's not part of the question,
but we just had do

469
00:20:55,070 --> 00:20:58,290
it to make it work properly.

470
00:20:58,290 --> 00:21:00,800
So we copied all the code in.

471
00:21:00,800 --> 00:21:02,750
And then I tested
it on desktop.

472
00:21:02,750 --> 00:21:06,190
And I just had the debugger
open, went into it.

473
00:21:06,190 --> 00:21:06,870
And it worked.

474
00:21:06,870 --> 00:21:11,080
The video gets cached locally,
or the object gets created and

475
00:21:11,080 --> 00:21:12,760
then attached to the
video, and then you

476
00:21:12,760 --> 00:21:13,240
can play the video.

477
00:21:13,240 --> 00:21:15,294
And it's a nice little video of
me smiling and all of that

478
00:21:15,294 --> 00:21:17,730
type of stuff.

479
00:21:17,730 --> 00:21:20,620
So what happened then is that I
then open up my device, get

480
00:21:20,620 --> 00:21:23,180
my device open, and use tab sync
so I can just pull the

481
00:21:23,180 --> 00:21:26,280
page up straightaway, rather
than type the URL in.

482
00:21:26,280 --> 00:21:29,570
And then just connect in, as
Matt showed you a second ago,

483
00:21:29,570 --> 00:21:34,850
via the debugger, via Chrome
inspect into the device.

484
00:21:34,850 --> 00:21:37,520
And then once it was in the
device, I basically just

485
00:21:37,520 --> 00:21:39,230
tested it to see whether
it worked.

486
00:21:39,230 --> 00:21:41,670
And everything worked
exactly the same, so

487
00:21:41,670 --> 00:21:42,700
all the events fire.

488
00:21:42,700 --> 00:21:44,220
No errors fire at all.

489
00:21:44,220 --> 00:21:45,970
So it's not a problem
with the JavaScript.

490
00:21:45,970 --> 00:21:48,670
But when you press play,
literally nothing happens.

491
00:21:48,670 --> 00:21:51,290
And if you actually attach a
normal video to it, it just

492
00:21:51,290 --> 00:21:51,790
plays like normal.

493
00:21:51,790 --> 00:21:53,220
So it should work.

494
00:21:53,220 --> 00:21:54,830
It's not an unsupported
video format

495
00:21:54,830 --> 00:21:55,980
that's causing the issue.

496
00:21:55,980 --> 00:21:59,710
So it was using WebM,
which is fine.

497
00:21:59,710 --> 00:22:01,080
So that's pretty much
all it was.

498
00:22:01,080 --> 00:22:03,780
So we can take this code,
and then we make a bug.

499
00:22:03,780 --> 00:22:06,030
And if you look at the issue
that we've raised, or the

500
00:22:06,030 --> 00:22:09,500
issue that's on the Stack
Overflow site, we've linked it

501
00:22:09,500 --> 00:22:12,170
directly to a CR bug
that we've created.

502
00:22:12,170 --> 00:22:14,580
Now the CR bug itself might not
be one that the engineer

503
00:22:14,580 --> 00:22:15,520
goes off and fixes.

504
00:22:15,520 --> 00:22:17,100
They might get it merged
with a couple of

505
00:22:17,100 --> 00:22:18,420
other issues fixed.

506
00:22:18,420 --> 00:22:21,070
But normally, this is what
happens when we know that

507
00:22:21,070 --> 00:22:25,800
there's some functionality that
is missing on the site,

508
00:22:25,800 --> 00:22:28,670
for instance, or inside
Chrome on Android.

509
00:22:28,670 --> 00:22:30,490
We'll then go and raise the bug
because we know there's a

510
00:22:30,490 --> 00:22:32,770
difference, and there's not
something that we can tell the

511
00:22:32,770 --> 00:22:36,150
user or the developer to go off
and fix, because there is

512
00:22:36,150 --> 00:22:39,092
actually no other way that they
can work around this.

513
00:22:39,092 --> 00:22:41,970
And it's unfortunate, really,
because the developer can't

514
00:22:41,970 --> 00:22:42,960
actually fix that problem.

515
00:22:42,960 --> 00:22:46,450
So the answer always tells
them, it's a bug.

516
00:22:46,450 --> 00:22:48,530
Unfortunately, right now,
it's the correct answer.

517
00:22:48,530 --> 00:22:50,570
And then once we have a fix, we
might go back to the issue

518
00:22:50,570 --> 00:22:54,800
and then re-edit the answers so
that we can say, hey guys,

519
00:22:54,800 --> 00:22:55,550
this is now fixed.

520
00:22:55,550 --> 00:22:56,790
And this is how we fixed it.

521
00:22:56,790 --> 00:22:58,760
And it's nothing
to do with you.

522
00:22:58,760 --> 00:23:01,430
It's always not you,
basically.

523
00:23:01,430 --> 00:23:04,710
So there we go.

524
00:23:04,710 --> 00:23:05,660
Right.

525
00:23:05,660 --> 00:23:08,830
So there were a couple
of other questions.

526
00:23:08,830 --> 00:23:11,700
Allow me to jump into another
one, which I know that we've

527
00:23:11,700 --> 00:23:14,080
got an answer to, at least.

528
00:23:14,080 --> 00:23:15,890
I'm going to screen
share again so

529
00:23:15,890 --> 00:23:19,200
everyone can see the question.

530
00:23:19,200 --> 00:23:20,080
There we go.

531
00:23:20,080 --> 00:23:22,790
So there's a couple here.

532
00:23:22,790 --> 00:23:25,430
There's a WebView HTML5
audio length.

533
00:23:25,430 --> 00:23:26,350
Unfortunately--

534
00:23:26,350 --> 00:23:29,030
so the WebView work is going to
take a little bit more time

535
00:23:29,030 --> 00:23:32,060
for us to investigate because
we need to make an app which

536
00:23:32,060 --> 00:23:34,960
uses the Android WebView and
then test it out to see if

537
00:23:34,960 --> 00:23:36,110
it's working.

538
00:23:36,110 --> 00:23:38,600
And there's not a whole lot of
code that we can copy and

539
00:23:38,600 --> 00:23:39,870
paste inside this,
which is going to

540
00:23:39,870 --> 00:23:42,220
speed up our diagnosis.

541
00:23:42,220 --> 00:23:46,010
So I'm not sure that's going to
get answered any time soon,

542
00:23:46,010 --> 00:23:47,860
within the next couple
of hours.

543
00:23:47,860 --> 00:23:51,530
But one I really want to bring
this to, there's two in quick

544
00:23:51,530 --> 00:23:56,290
succession on June the 16th
about data URLs and base 64

545
00:23:56,290 --> 00:23:59,800
encoding and audio, which
is really weird.

546
00:23:59,800 --> 00:24:01,890
Normally, these two things never
happen at the same time,

547
00:24:01,890 --> 00:24:04,810
but both these questions
have come up.

548
00:24:04,810 --> 00:24:05,800
So here.

549
00:24:05,800 --> 00:24:08,250
This says, the following snippet
plays while in Chrome.

550
00:24:08,250 --> 00:24:11,720
Base 64 data, something which
we can't replicate because

551
00:24:11,720 --> 00:24:14,860
it's specific to their
application, but audio dot

552
00:24:14,860 --> 00:24:19,150
source, the data file, and some
base 64 encoded data.

553
00:24:19,150 --> 00:24:23,890
Now we got audioPlayer.load and
audioPlayer.play, which

554
00:24:23,890 --> 00:24:26,080
are the two functions that
you should expect.

555
00:24:26,080 --> 00:24:29,805
And again, the person says, hey,
this works on desktop but

556
00:24:29,805 --> 00:24:32,290
not on Chrome for Android.

557
00:24:32,290 --> 00:24:35,730
So I'm going to jump
across to, I

558
00:24:35,730 --> 00:24:38,196
think, another question--

559
00:24:38,196 --> 00:24:40,320
inside JS Bin.

560
00:24:40,320 --> 00:24:42,075
This is a good advert
for JS Bin.

561
00:24:42,075 --> 00:24:44,466
It's a pretty awesome tool.

562
00:24:44,466 --> 00:24:45,934
Here we go.

563
00:24:45,934 --> 00:24:48,660
[INAUDIBLE]

564
00:24:48,660 --> 00:24:49,170
on my screen.

565
00:24:49,170 --> 00:24:52,870
But this is how I replicated
the issue today.

566
00:24:52,870 --> 00:24:56,730
So basically, I set up my page
with a button that says play,

567
00:24:56,730 --> 00:24:59,710
an audio file, and
[INAUDIBLE].

568
00:24:59,710 --> 00:25:00,945
There it is on the page there.

569
00:25:00,945 --> 00:25:03,160
So you can see it there.

570
00:25:03,160 --> 00:25:07,900
Now there's a whole bunch of
base 64 data across here,

571
00:25:07,900 --> 00:25:10,615
which is a WAV file that's
been encoded.

572
00:25:10,615 --> 00:25:13,540
And then I basically try and
replicate exactly what the

573
00:25:13,540 --> 00:25:15,030
person has actually put in.

574
00:25:15,030 --> 00:25:16,010
So if I press Play here--

575
00:25:16,010 --> 00:25:17,470
[SOUND EFFECT PLAYING]

576
00:25:17,470 --> 00:25:18,430
PAUL KINLAN: I don't know
whether you can hear it, but

577
00:25:18,430 --> 00:25:20,900
it's actually playing some
audio in the background.

578
00:25:20,900 --> 00:25:23,470
Now let me just jump out of this
demo because there's not

579
00:25:23,470 --> 00:25:26,900
a huge amount extra I can
show you on the screen.

580
00:25:26,900 --> 00:25:28,490
But the interesting thing here,
this is another one of

581
00:25:28,490 --> 00:25:30,980
those examples where
we debug locally.

582
00:25:30,980 --> 00:25:33,360
And you don't even have to debug
too much locally because

583
00:25:33,360 --> 00:25:35,140
you can hear the sound
getting played.

584
00:25:35,140 --> 00:25:39,400
But once we have this
reproducible case, we go and

585
00:25:39,400 --> 00:25:41,150
then hook it up to the
actual device, Chrome

586
00:25:41,150 --> 00:25:43,370
Inspect, plug it in.

587
00:25:43,370 --> 00:25:47,470
And then I go to my device, my
tab, pull the sync in, and

588
00:25:47,470 --> 00:25:49,040
then get back up that way.

589
00:25:49,040 --> 00:25:50,340
And then we connect the
debugger just in

590
00:25:50,340 --> 00:25:51,590
case we need it.

591
00:25:51,590 --> 00:25:54,240
But because we've loaded the
page, I just press Play.

592
00:25:54,240 --> 00:25:55,350
It's not loading.

593
00:25:55,350 --> 00:25:57,910
Now the thing is, now we've got
the debugger connected, I

594
00:25:57,910 --> 00:26:01,010
basically go and look at the
page to see if all the

595
00:26:01,010 --> 00:26:02,005
relevant events fire.

596
00:26:02,005 --> 00:26:03,680
They do.

597
00:26:03,680 --> 00:26:06,230
So we know that things are kind
of starting to happen a

598
00:26:06,230 --> 00:26:08,390
little bit, but no
audio comes out.

599
00:26:08,390 --> 00:26:12,030
And it feels very similar to
the video issue that we saw

600
00:26:12,030 --> 00:26:16,860
before where you're attaching a
different type of URL to the

601
00:26:16,860 --> 00:26:19,830
video source element,
but it doesn't play.

602
00:26:19,830 --> 00:26:22,940
Again, I think it's going to be
in the same type of area.

603
00:26:22,940 --> 00:26:27,383
So to cut a long story short,
there's not a huge amount I

604
00:26:27,383 --> 00:26:29,850
can say about this, is basically
we think there's a

605
00:26:29,850 --> 00:26:34,660
bug inside the actual loading
subsystem, or the load and

606
00:26:34,660 --> 00:26:36,660
play subsystem of Android
for Chrome.

607
00:26:36,660 --> 00:26:38,450
It's going to be down to an
engineer to try and find out

608
00:26:38,450 --> 00:26:39,800
exactly what that is
at the moment.

609
00:26:39,800 --> 00:26:43,360
But the only thing that we can
say to developers is, we think

610
00:26:43,360 --> 00:26:43,810
it's a bug.

611
00:26:43,810 --> 00:26:46,050
We've raised an issue with
the exact reproducible

612
00:26:46,050 --> 00:26:47,330
case that we put in.

613
00:26:47,330 --> 00:26:49,500
So the two people who have
raised this issue today, the

614
00:26:49,500 --> 00:26:52,990
same audio issue, one is a data
URI, and one is about

615
00:26:52,990 --> 00:26:53,990
base 64 encoded.

616
00:26:53,990 --> 00:26:56,240
They are actually the same issue
when you look in the

617
00:26:56,240 --> 00:26:59,150
line bits of this, is that
we basically just

618
00:26:59,150 --> 00:27:00,440
said, it's a bug.

619
00:27:00,440 --> 00:27:01,875
Go and track it on this.

620
00:27:01,875 --> 00:27:03,870
Put any other of your use cases
that you need to get

621
00:27:03,870 --> 00:27:05,330
fixed and follow it.

622
00:27:05,330 --> 00:27:07,036
There's not much else
that we can do.

623
00:27:07,036 --> 00:27:10,270
And because the developer wants
to generate their audio

624
00:27:10,270 --> 00:27:14,190
file on the client side, which
is why they generate the data

625
00:27:14,190 --> 00:27:16,940
URIs and the base 64 encoded
URIs, there's not a huge

626
00:27:16,940 --> 00:27:19,805
amount that we can do to solve
this issue at the moment,

627
00:27:19,805 --> 00:27:21,160
other than say that.

628
00:27:21,160 --> 00:27:23,470
We could suggest that they go
put it on a server somewhere,

629
00:27:23,470 --> 00:27:27,000
but it's not quite right.

630
00:27:27,000 --> 00:27:28,620
I think we're probably getting
close to time.

631
00:27:28,620 --> 00:27:30,920
Is that right, [? Keith? ?]

632
00:27:30,920 --> 00:27:32,250
MATT GAUNT: Yup, it
looks like it.

633
00:27:32,250 --> 00:27:33,620
PAUL KINLAN: Yeah, two or
three minutes left.

634
00:27:33,620 --> 00:27:35,230
So we can answer a couple
more questions.

635
00:27:35,230 --> 00:27:38,200
Matt, I know you were looking
at the media JS or

636
00:27:38,200 --> 00:27:40,120
MediaElement.js question.

637
00:27:40,120 --> 00:27:43,790
MATT GAUNT: Yeah, so this was
just a really simple question,

638
00:27:43,790 --> 00:27:47,690
which was essentially, if I
open up the website for

639
00:27:47,690 --> 00:27:49,260
MediaElement.

640
00:27:49,260 --> 00:27:52,950
What happened was someone had
noticed that when the load up

641
00:27:52,950 --> 00:27:56,440
the video, there was a button
that was basically going to

642
00:27:56,440 --> 00:27:58,600
the wrong part of the screen.

643
00:27:58,600 --> 00:28:02,580
It was basically wrapping
onto another line.

644
00:28:02,580 --> 00:28:05,070
And it's one of those things
of, it could be perhaps

645
00:28:05,070 --> 00:28:06,290
something in the layout's
gone wrong.

646
00:28:06,290 --> 00:28:08,296
It could be a hard-coded
value.

647
00:28:08,296 --> 00:28:12,795
And essentially, all it was was
if you go and look into

648
00:28:12,795 --> 00:28:17,430
Chrome Inspect again, so I'll
share my screen and inspect my

649
00:28:17,430 --> 00:28:21,400
mobile device, where I've got
the website up, we can

650
00:28:21,400 --> 00:28:24,730
actually dig into the source
code for this site.

651
00:28:24,730 --> 00:28:31,002
And if I start driving down
through all these things,

652
00:28:31,002 --> 00:28:32,010
where are we?

653
00:28:32,010 --> 00:28:33,260
This one.

654
00:28:33,260 --> 00:28:35,980

655
00:28:35,980 --> 00:28:38,410
Down here.

656
00:28:38,410 --> 00:28:40,865
We start drilling down to the
actual control, I believe.

657
00:28:40,865 --> 00:28:43,782

658
00:28:43,782 --> 00:28:45,610
There we go.

659
00:28:45,610 --> 00:28:47,710
And what you'll see here is we
got a couple of buttons.

660
00:28:47,710 --> 00:28:54,200
So if I switch you guys over to
my mobile device, you'll be

661
00:28:54,200 --> 00:28:58,320
able to see what I'm actually
getting up on my screen.

662
00:28:58,320 --> 00:28:59,570
[INAUDIBLE].

663
00:28:59,570 --> 00:29:03,250

664
00:29:03,250 --> 00:29:08,310
What you should be able to see
is that little white speck in

665
00:29:08,310 --> 00:29:09,950
the middle of the blue.

666
00:29:09,950 --> 00:29:12,290
That's the full screen button
that should actually be just

667
00:29:12,290 --> 00:29:15,390
up here on the right
hand side.

668
00:29:15,390 --> 00:29:19,835
And if I start digging around in
the DevTools, what you can

669
00:29:19,835 --> 00:29:21,270
start seeing is, I
actually start

670
00:29:21,270 --> 00:29:23,370
highlighting certain elements.

671
00:29:23,370 --> 00:29:25,950

672
00:29:25,950 --> 00:29:27,540
So right there is the
full screen button.

673
00:29:27,540 --> 00:29:31,930
But if I actually move the width
of this in DevTools,

674
00:29:31,930 --> 00:29:34,000
it'd just be one
pixel smaller.

675
00:29:34,000 --> 00:29:35,830
You'll see that the actual full
screen button has just

676
00:29:35,830 --> 00:29:38,070
shifted over.

677
00:29:38,070 --> 00:29:44,020
And basically, this is dead
simple to do using DevTools.

678
00:29:44,020 --> 00:29:45,760
Because all I had to do
was just play around

679
00:29:45,760 --> 00:29:46,910
with a value here.

680
00:29:46,910 --> 00:29:50,510
And that's actually just
shifting the pixel off by one.

681
00:29:50,510 --> 00:29:53,960
So it sounds like the problem
that they're getting is just

682
00:29:53,960 --> 00:29:56,180
the library's just doing
an off by one error.

683
00:29:56,180 --> 00:29:59,570
So it's a case where maybe they
can commit a patch or

684
00:29:59,570 --> 00:30:00,370
something like that.

685
00:30:00,370 --> 00:30:01,870
But it's simple enough
to do, when

686
00:30:01,870 --> 00:30:05,090
you've got Chrome Inspect.

687
00:30:05,090 --> 00:30:06,710
Nice and simple to diagnose.

688
00:30:06,710 --> 00:30:07,710
PAUL KINLAN: That's
pretty cool.

689
00:30:07,710 --> 00:30:09,670
I know we had some conversation
as well today

690
00:30:09,670 --> 00:30:12,990
about whether this was a Chrome
issue or a Chrome for

691
00:30:12,990 --> 00:30:14,530
Android issue or not.

692
00:30:14,530 --> 00:30:17,070
Because I've seen a bug as well
in the past where, on a

693
00:30:17,070 --> 00:30:22,130
new viewported page, the Full
Screen button is minuscule.

694
00:30:22,130 --> 00:30:25,010
So that's where my confusion was
originally when I saw this

695
00:30:25,010 --> 00:30:27,310
was, it's a Chrome for
Android issue.

696
00:30:27,310 --> 00:30:29,900
But as you've seen,
it's actually a

697
00:30:29,900 --> 00:30:32,790
MediaElement.js issue.

698
00:30:32,790 --> 00:30:34,560
I suppose we could probably
raise the bug.

699
00:30:34,560 --> 00:30:37,490
We just have to make a decision
about what's going to

700
00:30:37,490 --> 00:30:40,203
get the best level of support
for developers in the end.

701
00:30:40,203 --> 00:30:41,590
MATT GAUNT: Yeah, thanks,
[INAUDIBLE].

702
00:30:41,590 --> 00:30:42,840
PAUL KINLAN: I mean, Matt,
you could fix it.

703
00:30:42,840 --> 00:30:46,363

704
00:30:46,363 --> 00:30:47,690
Cool.

705
00:30:47,690 --> 00:30:49,350
MATT GAUNT: But yeah, this is
generally our flow, isn't it,

706
00:30:49,350 --> 00:30:50,445
when it comes to fixing bugs?

707
00:30:50,445 --> 00:30:54,810
It's a case of taking the code
and assessing what's wrong.

708
00:30:54,810 --> 00:30:58,850
But it's also whether it
is something else.

709
00:30:58,850 --> 00:30:59,880
PAUL KINLAN: At the moment--

710
00:30:59,880 --> 00:31:03,300
I'm supposed to wrap
up, in a way.

711
00:31:03,300 --> 00:31:06,160
This, Stack Overflow has become
one of our primary

712
00:31:06,160 --> 00:31:08,700
mechanisms for supporting
developers.

713
00:31:08,700 --> 00:31:12,100
And we have to make a decision
like, Chrome for mobile, or--

714
00:31:12,100 --> 00:31:13,670
Chrome for mobile hasn't
got its own tag.

715
00:31:13,670 --> 00:31:17,110
And what we find is that
developers will have Google

716
00:31:17,110 --> 00:31:19,200
Chrome as one tag and then
Android as another.

717
00:31:19,200 --> 00:31:23,380
And we found that there's a
good intersection of those

718
00:31:23,380 --> 00:31:25,720
questions that we can actually
support directly for

719
00:31:25,720 --> 00:31:27,670
developers, in that sense.

720
00:31:27,670 --> 00:31:30,370
So we have a team of our
developer advocates and

721
00:31:30,370 --> 00:31:33,560
engineers, who we take it on a
rotation to actually start

722
00:31:33,560 --> 00:31:35,350
answering and making sure that
we're trying to get as much

723
00:31:35,350 --> 00:31:38,500
support as possible for the
developers out there on it.

724
00:31:38,500 --> 00:31:42,100
Because we're not like dedicated
completely to

725
00:31:42,100 --> 00:31:43,260
support, if that make sense.

726
00:31:43,260 --> 00:31:44,830
We've got a lot of
other issues.

727
00:31:44,830 --> 00:31:46,900
But we want to make sure that
all the developers who

728
00:31:46,900 --> 00:31:49,890
actually have questions we can
answer in a reasonable time.

729
00:31:49,890 --> 00:31:52,620
So the Chrome for Android
platform is the best one that

730
00:31:52,620 --> 00:31:54,820
you can develop on.

731
00:31:54,820 --> 00:31:56,900
Yeah, so if you do have any
questions that you want to get

732
00:31:56,900 --> 00:31:59,970
answered, we're trying to
bootstrap the community on

733
00:31:59,970 --> 00:32:01,890
Stack Overflow to get
more and more people

734
00:32:01,890 --> 00:32:02,900
answering those questions.

735
00:32:02,900 --> 00:32:06,070
But I think for the foreseeable
future, it'll be

736
00:32:06,070 --> 00:32:08,970
me, Matt, Jake, Chris Wilson,
and Pete, and a couple of

737
00:32:08,970 --> 00:32:12,000
other people as well, just kind
of providing the support

738
00:32:12,000 --> 00:32:12,800
to make sure it's there.

739
00:32:12,800 --> 00:32:14,630
Because Chrome for Android
is a new product.

740
00:32:14,630 --> 00:32:16,350
It probably has got some bugs.

741
00:32:16,350 --> 00:32:19,720
And we want to help you work
around them or work--

742
00:32:19,720 --> 00:32:22,130
fix your products in case
it isn't a bug and

743
00:32:22,130 --> 00:32:23,135
it's a fix in logic.

744
00:32:23,135 --> 00:32:26,960
But right now, today, there's
been three bugs raised to the

745
00:32:26,960 --> 00:32:28,820
Chrome team because of the
questions that came through

746
00:32:28,820 --> 00:32:29,990
Stack Overflow.

747
00:32:29,990 --> 00:32:31,180
So yeah.

748
00:32:31,180 --> 00:32:32,900
I think that's it.

749
00:32:32,900 --> 00:32:35,020
Matt, do you have anything
else before we finish?

750
00:32:35,020 --> 00:32:37,040
MATT GAUNT: No, I'd just say
it's just ridiculously useful

751
00:32:37,040 --> 00:32:39,450
for us also to kind of find
these weird quirks that you

752
00:32:39,450 --> 00:32:41,560
guys are experiencing, becaues
it means that we can find ways

753
00:32:41,560 --> 00:32:43,730
to fix them and then also
feed them back.

754
00:32:43,730 --> 00:32:44,960
PAUL KINLAN: Yeah, exactly.

755
00:32:44,960 --> 00:32:50,590
And if you can, if you can help
us help you, more code

756
00:32:50,590 --> 00:32:52,095
and samples, if you can.

757
00:32:52,095 --> 00:32:53,910
But if not, we'll just
delve down and dig

758
00:32:53,910 --> 00:32:56,590
down into the problem.

759
00:32:56,590 --> 00:32:57,190
So thank you.

760
00:32:57,190 --> 00:32:59,330
And see you again soon.

761
00:32:59,330 --> 00:32:59,930
MATT GAUNT: Cheers, everyone.

762
00:32:59,930 --> 00:33:01,180
Bye.

763
00:33:01,180 --> 00:34:25,483

