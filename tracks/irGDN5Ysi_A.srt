1
00:00:00,000 --> 00:00:10,059

2
00:00:10,059 --> 00:00:11,600
ERIC BIDELMAN: So
hey, everybody.

3
00:00:11,600 --> 00:00:12,100
Welcome.

4
00:00:12,100 --> 00:00:13,150
Thanks for joining us today.

5
00:00:13,150 --> 00:00:15,380
We're going to talk a little
bit about Polymer, a new

6
00:00:15,380 --> 00:00:17,410
framework that Google is
building based off of Web

7
00:00:17,410 --> 00:00:17,820
Components.

8
00:00:17,820 --> 00:00:21,070
We're really excited about Web
Components on the Chrome team.

9
00:00:21,070 --> 00:00:21,830
We're here in London.

10
00:00:21,830 --> 00:00:23,840
We sort of took a special trip
and wanted to introduce you

11
00:00:23,840 --> 00:00:25,900
guys to a few members
of the team.

12
00:00:25,900 --> 00:00:26,810
My name is Eric.

13
00:00:26,810 --> 00:00:28,660
I work on our Chrome developer
relations team.

14
00:00:28,660 --> 00:00:30,915
And my focus right now as is
Polymer and Web Components.

15
00:00:30,915 --> 00:00:32,835
Do you guys want to introduce
yourself?

16
00:00:32,835 --> 00:00:34,560
MATT MCNULTY: Sure
I'm Matt McNulty.

17
00:00:34,560 --> 00:00:36,682
I lead the engineering team
that works on Polymer.

18
00:00:36,682 --> 00:00:37,650
ALEX KOMOROSKE: And I'm
Alex Komoroske.

19
00:00:37,650 --> 00:00:40,700
I work on Chrome's Open Web
Platform team, but I'm also

20
00:00:40,700 --> 00:00:42,410
really interested in
Polymer stuff.

21
00:00:42,410 --> 00:00:43,040
ERIC BIDELMAN: Cool.

22
00:00:43,040 --> 00:00:45,630
And so Polymer is something we
originally talked about at

23
00:00:45,630 --> 00:00:47,720
I/O. And so we're here today
to answer some of your

24
00:00:47,720 --> 00:00:50,940
questions and obviously start to
have more of these sessions

25
00:00:50,940 --> 00:00:53,240
that we can talk to you guys and
cover the different topics

26
00:00:53,240 --> 00:00:53,760
in Web Components.

27
00:00:53,760 --> 00:00:54,760
ALEX KOMOROSKE: It's definitely
the beginning.

28
00:00:54,760 --> 00:00:55,720
ERIC BIDELMAN: Definitely
the beginning.

29
00:00:55,720 --> 00:00:57,550
There's a lot of stuff coming
out in web platform.

30
00:00:57,550 --> 00:01:00,540
I would say more so than it
ever has in the past.

31
00:01:00,540 --> 00:01:01,190
It's really exciting.

32
00:01:01,190 --> 00:01:03,030
But today let's talk a little
bit about Polymer, give you a

33
00:01:03,030 --> 00:01:04,881
brief, brief introduction,
and then answer

34
00:01:04,881 --> 00:01:06,600
some of your questions.

35
00:01:06,600 --> 00:01:09,010
So what the heck is Polymer?

36
00:01:09,010 --> 00:01:10,880
One of you guys want to start?

37
00:01:10,880 --> 00:01:11,570
What's the goal of Polymer?

38
00:01:11,570 --> 00:01:12,862
What is it?

39
00:01:12,862 --> 00:01:15,220
ALEX KOMOROSKE: So Polymer
is a new type of

40
00:01:15,220 --> 00:01:16,540
library for the web.

41
00:01:16,540 --> 00:01:20,080
And the idea is to help use
some of the new, emerging

42
00:01:20,080 --> 00:01:22,750
standards and provide feedback
to them to make sure that they

43
00:01:22,750 --> 00:01:23,740
are useful standards.

44
00:01:23,740 --> 00:01:25,750
That they're going to
be really powerful.

45
00:01:25,750 --> 00:01:28,720
And also help build a community,
an ecosystem around

46
00:01:28,720 --> 00:01:29,800
Web Components, really.

47
00:01:29,800 --> 00:01:30,260
ERIC BIDELMAN: That's right.

48
00:01:30,260 --> 00:01:32,750
And we're doing that through
a set of polyfills.

49
00:01:32,750 --> 00:01:35,830
A polyfill library is
essentially polyfilling the

50
00:01:35,830 --> 00:01:36,990
native API before it's

51
00:01:36,990 --> 00:01:39,320
available in a lot of browsers.

52
00:01:39,320 --> 00:01:41,470
And so this is great because you
can use this awesomeness

53
00:01:41,470 --> 00:01:44,610
of Web Components today
in modern browsers.

54
00:01:44,610 --> 00:01:45,740
ALEX KOMOROSKE: So one thing
people don't realize,

55
00:01:45,740 --> 00:01:48,530
actually, is speccing out new
web platform features is

56
00:01:48,530 --> 00:01:49,660
really hard to do correctly.

57
00:01:49,660 --> 00:01:51,800
So if you just do it in a closed
room with very smart

58
00:01:51,800 --> 00:01:55,040
people discussing it, if you
don't use it, it's very hard

59
00:01:55,040 --> 00:01:56,770
to see how it's going to
feel in real life.

60
00:01:56,770 --> 00:01:59,720
And so this polyfill approach
actually allows you to use it

61
00:01:59,720 --> 00:02:01,770
and go, oh, feels weird,
and provide

62
00:02:01,770 --> 00:02:02,630
feedback back to the specs.

63
00:02:02,630 --> 00:02:04,700
In fact, we're seeing
a lot with Polymer.

64
00:02:04,700 --> 00:02:07,560
A bunch of people are using
Polymer, providing feedback,

65
00:02:07,560 --> 00:02:08,610
people on the team.

66
00:02:08,610 --> 00:02:10,759
And then we're bringing that
back to the standards bodies.

67
00:02:10,759 --> 00:02:13,390
And using that as examples
of this one felt weird.

68
00:02:13,390 --> 00:02:13,580
ERIC BIDELMAN: Absolutely.

69
00:02:13,580 --> 00:02:15,630
MATT MCNULTY: That's actually
one of the great things about

70
00:02:15,630 --> 00:02:19,320
this team and the entire project
is that we're on the

71
00:02:19,320 --> 00:02:21,850
Chrome team, but we interact
with the standards bodies.

72
00:02:21,850 --> 00:02:23,950
And we come from a web
development background.

73
00:02:23,950 --> 00:02:25,910
Being at that intersection
is really exciting.

74
00:02:25,910 --> 00:02:27,380
ALEX KOMOROSKE: And with Blink
engineers as well.

75
00:02:27,380 --> 00:02:30,900
So we're talking all time with
the guys who were implementing

76
00:02:30,900 --> 00:02:33,650
this within Blink.

77
00:02:33,650 --> 00:02:36,550
ERIC BIDELMAN: And I'm super
happy to see a lot of awesome

78
00:02:36,550 --> 00:02:38,650
developers are coming on
our developer forum.

79
00:02:38,650 --> 00:02:42,330
So we have a Google group, at
polymer-dev googlegroups.com.

80
00:02:42,330 --> 00:02:43,480
And framework authors, right?

81
00:02:43,480 --> 00:02:45,780
People that actually build
frameworks in their own widget

82
00:02:45,780 --> 00:02:46,600
libraries, or whatever.

83
00:02:46,600 --> 00:02:49,420
And they're coming with their
expertise helping us flesh out

84
00:02:49,420 --> 00:02:50,925
some of the stuff as we're
developing Polymer.

85
00:02:50,925 --> 00:02:52,730
ALEX KOMOROSKE: Yeah, it's
really exciting to see this,

86
00:02:52,730 --> 00:02:54,920
because you can tell it's the
beginning of what's going to

87
00:02:54,920 --> 00:02:56,970
be really thriving ecosystem,
a bunch of different

88
00:02:56,970 --> 00:02:59,080
frameworks and developers
and standards.

89
00:02:59,080 --> 00:02:59,660
It's really cool.

90
00:02:59,660 --> 00:03:01,400
ERIC BIDELMAN: So it's
a set of polyfills.

91
00:03:01,400 --> 00:03:02,470
That's the foundation.

92
00:03:02,470 --> 00:03:04,270
Maybe it's more showing.

93
00:03:04,270 --> 00:03:06,060
We have an architecture
diagram of &mdash;

94
00:03:06,060 --> 00:03:07,280
ALEX KOMOROSKE: I want to
clarify that, though, because

95
00:03:07,280 --> 00:03:08,010
it's not just polyfills.

96
00:03:08,010 --> 00:03:09,450
I think that's something that
a lot of people think.

97
00:03:09,450 --> 00:03:11,500
They see Polymer, polyfills,
it's the same.

98
00:03:11,500 --> 00:03:13,330
It's actually quite a
bit more than that.

99
00:03:13,330 --> 00:03:17,150
And so here on this diagram that
we have on project site,

100
00:03:17,150 --> 00:03:18,560
the red is the polyfills.

101
00:03:18,560 --> 00:03:21,470
The idea is that it allows you
to pretend it creates a stable

102
00:03:21,470 --> 00:03:23,260
foundation that allows you to
pretend like you're living in

103
00:03:23,260 --> 00:03:23,870
the future.

104
00:03:23,870 --> 00:03:25,630
So you can just use
these technologies

105
00:03:25,630 --> 00:03:26,520
as though they existed.

106
00:03:26,520 --> 00:03:28,910
Now, of course, because they're
Polyfills, over time,

107
00:03:28,910 --> 00:03:31,590
as browsers implement those,
you don't need the

108
00:03:31,590 --> 00:03:32,790
polyfills as much.

109
00:03:32,790 --> 00:03:34,810
And so, ultimately, in
theory, that layer

110
00:03:34,810 --> 00:03:37,680
will entirely go away.

111
00:03:37,680 --> 00:03:39,530
ERIC BIDELMAN: There's a lot of
nuance to this chart here.

112
00:03:39,530 --> 00:03:41,902
And that's why this red areas
is sort of staggered, is

113
00:03:41,902 --> 00:03:44,180
because at different points in
time over the next couple of

114
00:03:44,180 --> 00:03:45,770
years the browsers will
have implemented

115
00:03:45,770 --> 00:03:46,700
these different API.

116
00:03:46,700 --> 00:03:48,140
And so, again, these go away.

117
00:03:48,140 --> 00:03:48,660
Which is great.

118
00:03:48,660 --> 00:03:50,560
ALEX KOMOROSKE: So a great
example is mutation observers

119
00:03:50,560 --> 00:03:53,310
is actually something that we
have as a polyfill support in

120
00:03:53,310 --> 00:03:54,620
there for browsers that
don't have it.

121
00:03:54,620 --> 00:03:56,050
But most browsers do.

122
00:03:56,050 --> 00:03:57,050
And so that's a great example.

123
00:03:57,050 --> 00:03:58,450
That's why it's a little bit
shorter in this diagram.

124
00:03:58,450 --> 00:04:00,840
Because it's already well
on its long way to being

125
00:04:00,840 --> 00:04:01,710
[INAUDIBLE] deployed.

126
00:04:01,710 --> 00:04:03,940
ERIC BIDELMAN: And so as a
developer, like Alex said, you

127
00:04:03,940 --> 00:04:06,540
can use these different pieces,
sort of a la carte.

128
00:04:06,540 --> 00:04:08,640
You can use just the platform
polyfills if you want.

129
00:04:08,640 --> 00:04:10,110
That's part of Polymer.

130
00:04:10,110 --> 00:04:11,880
But then we add, we go
one layer up, right?

131
00:04:11,880 --> 00:04:13,360
And that's polymer.js.

132
00:04:13,360 --> 00:04:16,089
That's what we call the core,
Colonel, what have you.

133
00:04:16,089 --> 00:04:18,350
ALEX KOMOROSKE: That's where
opinion starts coming in.

134
00:04:18,350 --> 00:04:20,870
The red part is really
just the specs.

135
00:04:20,870 --> 00:04:23,870
It's just the things that
are being standardized.

136
00:04:23,870 --> 00:04:26,180
The yellow is where opinion
starts coming about how you

137
00:04:26,180 --> 00:04:27,110
should be using these
together.

138
00:04:27,110 --> 00:04:30,330
So conveniences, things that
allow you to reduce

139
00:04:30,330 --> 00:04:33,110
boilerplate and to really just
be as productive as possible

140
00:04:33,110 --> 00:04:33,970
on top of this.

141
00:04:33,970 --> 00:04:35,270
But it's a very light opinion.

142
00:04:35,270 --> 00:04:36,700
It's somewhat behind
the scenes.

143
00:04:36,700 --> 00:04:39,560
ERIC BIDELMAN: I think the way
I really see it is Web

144
00:04:39,560 --> 00:04:41,410
Components in general, all these
specs that they see the

145
00:04:41,410 --> 00:04:44,090
red layer here are coming
together, but it's really the

146
00:04:44,090 --> 00:04:46,790
Polymer core that we've
identified as necessary in

147
00:04:46,790 --> 00:04:48,460
order to build a full-fledged
application.

148
00:04:48,460 --> 00:04:52,420
We need to sort of work these
custom APIs together and use

149
00:04:52,420 --> 00:04:55,960
them in a way, things like
MDV, and data binding and

150
00:04:55,960 --> 00:04:56,780
event listeners and what not.

151
00:04:56,780 --> 00:04:58,650
ALEX KOMOROSKE: Specifications
are generally designed to not

152
00:04:58,650 --> 00:05:00,280
have much of an opinion.

153
00:05:00,280 --> 00:05:02,170
And so this is where sometimes
you do need a little bit of

154
00:05:02,170 --> 00:05:04,890
opinion to wire it together in
the way that works best for

155
00:05:04,890 --> 00:05:05,525
end web developers.

156
00:05:05,525 --> 00:05:06,680
ERIC BIDELMAN: That's right.

157
00:05:06,680 --> 00:05:07,830
And then what's the
green, Alex?

158
00:05:07,830 --> 00:05:08,940
You want to explain the
green a little bit?

159
00:05:08,940 --> 00:05:09,694
ALEX KOMOROSKE: So the
green, we've actually

160
00:05:09,694 --> 00:05:10,860
got two boxes there.

161
00:05:10,860 --> 00:05:12,750
Again, this is a very rich
diagram with a lot

162
00:05:12,750 --> 00:05:13,500
of stuff going on.

163
00:05:13,500 --> 00:05:16,020
The first one there is
Polymer elements.

164
00:05:16,020 --> 00:05:18,010
And that's just basically,
they're Web Components that

165
00:05:18,010 --> 00:05:20,120
are built on top of
this the stack.

166
00:05:20,120 --> 00:05:21,960
And they don't necessarily
actually print

167
00:05:21,960 --> 00:05:22,600
anything to the screen.

168
00:05:22,600 --> 00:05:26,280
So these are using one of core
tenants, actually, of Polymer,

169
00:05:26,280 --> 00:05:29,790
one of our parts of opinion, is
this notion of everything

170
00:05:29,790 --> 00:05:30,750
is an element.

171
00:05:30,750 --> 00:05:33,030
And this is the one that we
say it again and again.

172
00:05:33,030 --> 00:05:34,790
And it's a mantra.

173
00:05:34,790 --> 00:05:36,340
At the beginning people
are like, oh I get it.

174
00:05:36,340 --> 00:05:37,100
You probably don't get it.

175
00:05:37,100 --> 00:05:37,790
Think about it harder.

176
00:05:37,790 --> 00:05:39,856
Because it really changed
the way you think.

177
00:05:39,856 --> 00:05:40,230
ERIC BIDELMAN: I didn't
get it at first.

178
00:05:40,230 --> 00:05:42,490
It takes awhile to wrap your
head around this new way to

179
00:05:42,490 --> 00:05:43,215
develop applications.

180
00:05:43,215 --> 00:05:45,560
ALEX KOMOROSKE: When you see,
one of the custom elements

181
00:05:45,560 --> 00:05:48,640
that we've got there now
is in the Polymer Ajax.

182
00:05:48,640 --> 00:05:50,890
ERIC BIDELMAN: I'll bring
up the [INAUDIBLE].

183
00:05:50,890 --> 00:05:53,000
MATT MCNULTY: Polymer is, at
its core, I don't think we

184
00:05:53,000 --> 00:05:55,460
really, completely
introduced it.

185
00:05:55,460 --> 00:05:57,000
We were just talking about
all the nuances of it.

186
00:05:57,000 --> 00:05:58,480
ERIC BIDELMAN: There's a lot
of stuff to introduce.

187
00:05:58,480 --> 00:06:00,260
MATT MCNULTY: A lot of what it
does is it uses all these new

188
00:06:00,260 --> 00:06:02,590
standards to create
custom elements.

189
00:06:02,590 --> 00:06:07,120
And really it's a custom element
building framework.

190
00:06:07,120 --> 00:06:08,860
And you can make custom elements
that are really,

191
00:06:08,860 --> 00:06:12,010
really, really complicated up
into including an entire app,

192
00:06:12,010 --> 00:06:13,870
or just very simple ones.

193
00:06:13,870 --> 00:06:15,910
And one of the great things
about custom elements in these

194
00:06:15,910 --> 00:06:17,750
new standards is you can
sprinkle these things

195
00:06:17,750 --> 00:06:20,370
throughout an existing page or
you can create something new

196
00:06:20,370 --> 00:06:21,325
that is just Polymer.

197
00:06:21,325 --> 00:06:22,100
ALEX KOMOROSKE: Absolutely.

198
00:06:22,100 --> 00:06:25,190
And one thing too, is the way
I think of it is these new

199
00:06:25,190 --> 00:06:28,380
technologies of Web Components
are so powerful that people

200
00:06:28,380 --> 00:06:30,780
don't know yet how to
use these right.

201
00:06:30,780 --> 00:06:32,950
And so we're trying to help,
along with the rest of the

202
00:06:32,950 --> 00:06:34,150
ecosystem, discover this.

203
00:06:34,150 --> 00:06:35,720
Be pioneers and try
things out.

204
00:06:35,720 --> 00:06:36,960
See what works, what doesn't.

205
00:06:36,960 --> 00:06:38,060
What things should
be in Element.

206
00:06:38,060 --> 00:06:39,010
What things shouldn't.

207
00:06:39,010 --> 00:06:40,360
Our opinion, so far,
is that everything

208
00:06:40,360 --> 00:06:41,640
should be in Element.

209
00:06:41,640 --> 00:06:43,550
So that's what we got
there at the bottom,

210
00:06:43,550 --> 00:06:44,950
that lower green box.

211
00:06:44,950 --> 00:06:48,040
It's things that are elements
that you can use to do useful

212
00:06:48,040 --> 00:06:49,110
functions, useful [INAUDIBLE].

213
00:06:49,110 --> 00:06:50,830
ERIC BIDELMAN: And just pointing
out, we already have

214
00:06:50,830 --> 00:06:52,770
a base set of what Alex
is describing.

215
00:06:52,770 --> 00:06:54,590
It's things like doing
Ajax, right?

216
00:06:54,590 --> 00:06:56,490
Making an element that actually
just performs Ajax

217
00:06:56,490 --> 00:06:56,950
under the hood.

218
00:06:56,950 --> 00:06:58,900
And then you can do really
interesting things with data

219
00:06:58,900 --> 00:07:00,160
binding to that element.

220
00:07:00,160 --> 00:07:02,440
And it's a totally different
way to think about it, and

221
00:07:02,440 --> 00:07:04,720
we're going to say this again
and again and again, but it's

222
00:07:04,720 --> 00:07:06,540
very, very powerful when you
combine this stuff together,

223
00:07:06,540 --> 00:07:07,340
declaratively.

224
00:07:07,340 --> 00:07:10,275
ALEX KOMOROSKE: Everyone has the
moment where they go, oh.

225
00:07:10,275 --> 00:07:11,500
And that's when they get it.

226
00:07:11,500 --> 00:07:12,400
When their eyes go like that.

227
00:07:12,400 --> 00:07:13,910
MATT MCNULTY: Then they'll
understand why we say

228
00:07:13,910 --> 00:07:15,332
everything is in Element.

229
00:07:15,332 --> 00:07:16,520
ERIC BIDELMAN: I mean,
you can imagine.

230
00:07:16,520 --> 00:07:18,420
If all this stuff here that
you're seeing in this page was

231
00:07:18,420 --> 00:07:20,060
built into HTML natively,
right?

232
00:07:20,060 --> 00:07:21,830
Look at this functionality
you could possibly have.

233
00:07:21,830 --> 00:07:24,400
Now we're giving developers
that opportunity to build

234
00:07:24,400 --> 00:07:25,320
whatever they want.

235
00:07:25,320 --> 00:07:27,330
Whatever functionality they
need, whether it's wrapping a

236
00:07:27,330 --> 00:07:28,350
library, right?

237
00:07:28,350 --> 00:07:32,680
I've seen people do things like
wrap the Google Maps API.

238
00:07:32,680 --> 00:07:34,260
Make tags out of G Maps.

239
00:07:34,260 --> 00:07:35,020
Which is really cool.

240
00:07:35,020 --> 00:07:35,970
ALEX KOMOROSKE: It's a
really useful way to

241
00:07:35,970 --> 00:07:36,930
repackage that stuff.

242
00:07:36,930 --> 00:07:37,820
ERIC BIDELMAN: Just
things like that.

243
00:07:37,820 --> 00:07:39,380
We're really excited about
the possibilities of

244
00:07:39,380 --> 00:07:40,800
where this takes you.

245
00:07:40,800 --> 00:07:42,240
ALEX KOMOROSKE: So the last one
last is the one actually

246
00:07:42,240 --> 00:07:43,340
I'm most excited about.

247
00:07:43,340 --> 00:07:45,690
And that's polymer UI elements,
which I said in an

248
00:07:45,690 --> 00:07:47,455
email, I think, last week.

249
00:07:47,455 --> 00:07:48,565
The name is a mouthful.

250
00:07:48,565 --> 00:07:50,410
I'm sure we'll change
it at some point.

251
00:07:50,410 --> 00:07:52,120
But the idea of this is
actually, this is the one

252
00:07:52,120 --> 00:07:53,430
that's really starting
to come together.

253
00:07:53,430 --> 00:07:54,800
It's really early stages.

254
00:07:54,800 --> 00:07:57,767
We talked a little bit about
I/O and Linus Upson talked

255
00:07:57,767 --> 00:08:00,040
about it in the keynote,
as well.

256
00:08:00,040 --> 00:08:02,070
We want to build a comprehensive
set of

257
00:08:02,070 --> 00:08:03,760
opinionated UI elements.

258
00:08:03,760 --> 00:08:05,730
So these are just web components
that can be used

259
00:08:05,730 --> 00:08:07,200
with other web components
and their arrival.

260
00:08:07,200 --> 00:08:09,070
In fact, you see here
other green boxes.

261
00:08:09,070 --> 00:08:11,240
Those represent other
frameworks, other sorts of

262
00:08:11,240 --> 00:08:12,240
components.

263
00:08:12,240 --> 00:08:15,200
But we want to help people so
that when you start off you

264
00:08:15,200 --> 00:08:17,210
don't have to go start from
scratch to put a web app.

265
00:08:17,210 --> 00:08:19,140
You just say, I want this kind
of thing, this kind of thing.

266
00:08:19,140 --> 00:08:20,650
Here's my app.

267
00:08:20,650 --> 00:08:22,810
We can automatically do
that app try style on

268
00:08:22,810 --> 00:08:23,370
the left for you.

269
00:08:23,370 --> 00:08:24,530
That kind of thing.

270
00:08:24,530 --> 00:08:27,220
So this is the area I'm most
excited about because we've

271
00:08:27,220 --> 00:08:31,130
got a bunch of people who are
excited to help take this

272
00:08:31,130 --> 00:08:36,770
Google design skill that's been
growing for all kinds of

273
00:08:36,770 --> 00:08:39,750
new apps, like the Maps apps
on the Android and iOS, and

274
00:08:39,750 --> 00:08:41,280
really bring that to a
library and let other

275
00:08:41,280 --> 00:08:42,159
developers use it too.

276
00:08:42,159 --> 00:08:43,270
ERIC BIDELMAN: And bring that
sort of thing to the web.

277
00:08:43,270 --> 00:08:45,610
Where it's really easy to
drop that in your app.

278
00:08:45,610 --> 00:08:47,240
You don't have to, like
Alex said, reinvent

279
00:08:47,240 --> 00:08:48,340
the wheel every time.

280
00:08:48,340 --> 00:08:50,290
And you can pick and choose
different elements from

281
00:08:50,290 --> 00:08:52,270
different UI vendors.

282
00:08:52,270 --> 00:08:55,030
And if they're all using this
web components, these

283
00:08:55,030 --> 00:08:57,200
standards-based APIs under the
hood, it's very easy, as a

284
00:08:57,200 --> 00:08:59,920
developer, to then interopt
with those between the

285
00:08:59,920 --> 00:09:00,610
different elements.

286
00:09:00,610 --> 00:09:04,940
So I think that's the exhaustive
explanation of this

287
00:09:04,940 --> 00:09:05,920
diagram here.

288
00:09:05,920 --> 00:09:08,810
But really, again, our
philosophy is to really

289
00:09:08,810 --> 00:09:09,700
embrace HTML.

290
00:09:09,700 --> 00:09:10,420
Love it.

291
00:09:10,420 --> 00:09:11,140
Declarative first.

292
00:09:11,140 --> 00:09:12,280
Everything's a custom element.

293
00:09:12,280 --> 00:09:14,910
And if you're checking out
Polymer for the first time or

294
00:09:14,910 --> 00:09:17,650
if you've seen it before, it
takes a while to wrap your

295
00:09:17,650 --> 00:09:18,290
head around that.

296
00:09:18,290 --> 00:09:20,980
But it really is making custom
elements in HTML.

297
00:09:20,980 --> 00:09:24,310
Telling HTML about new things
and building those.

298
00:09:24,310 --> 00:09:25,910
I think we sort of
alluded to it.

299
00:09:25,910 --> 00:09:28,780
But another thing that we're
very interested in is evolving

300
00:09:28,780 --> 00:09:29,490
with the web platform.

301
00:09:29,490 --> 00:09:30,010
ALEX KOMOROSKE: Right.

302
00:09:30,010 --> 00:09:32,180
ERIC BIDELMAN: So I think
I saw a question.

303
00:09:32,180 --> 00:09:35,550
And feel free to ask any
questions on our Google

304
00:09:35,550 --> 00:09:38,030
Moderator page that we
have set up for you.

305
00:09:38,030 --> 00:09:40,270
But it's really about evolving
with the web platforms.

306
00:09:40,270 --> 00:09:44,250
So staying on the cutting edge
as these standards evolve.

307
00:09:44,250 --> 00:09:45,100
Staying up to date.

308
00:09:45,100 --> 00:09:48,020
And so we actually made an
explicit goal to try to only

309
00:09:48,020 --> 00:09:49,070
support the [INAUDIBLE]

310
00:09:49,070 --> 00:09:50,555
of each browser.

311
00:09:50,555 --> 00:09:52,960
ALEX KOMOROSKE: That's
very deliberate.

312
00:09:52,960 --> 00:09:54,890
Was it you that said,
someone said.

313
00:09:54,890 --> 00:09:58,850
A wise man once said, maybe
Eric, said if all you're doing

314
00:09:58,850 --> 00:10:00,905
is watching in the rear view
mirror, you're going to run

315
00:10:00,905 --> 00:10:01,645
into something.

316
00:10:01,645 --> 00:10:03,140
You're going to crash.

317
00:10:03,140 --> 00:10:05,755
And so we're trying to make
sure that this future that

318
00:10:05,755 --> 00:10:08,670
we're all going to get to,
soon, in the near future.

319
00:10:08,670 --> 00:10:11,480
That when we get there we don't
go, oh, it's pretty much

320
00:10:11,480 --> 00:10:11,980
like the past.

321
00:10:11,980 --> 00:10:14,400
We want to get, we think this
is actually a much bigger, a

322
00:10:14,400 --> 00:10:17,330
revolution where
we're going to.

323
00:10:17,330 --> 00:10:21,560
I really want to emphasize, too,
the Polymer team, we work

324
00:10:21,560 --> 00:10:22,400
with Blink guys.

325
00:10:22,400 --> 00:10:24,560
We're active on all the
standards lists.

326
00:10:24,560 --> 00:10:28,740
Our goal as a team is if the
standard that's developing,

327
00:10:28,740 --> 00:10:30,490
that's evolving, we don't think
it's the right thing

328
00:10:30,490 --> 00:10:32,620
based on our experience and
the feedback we're getting

329
00:10:32,620 --> 00:10:35,270
from polymer-dev and other
people who are using this,

330
00:10:35,270 --> 00:10:37,720
then we should help make those
arguments in the standards

331
00:10:37,720 --> 00:10:39,320
bodies to change that.

332
00:10:39,320 --> 00:10:40,910
This is a feedback thing.

333
00:10:40,910 --> 00:10:42,820
It's not like, oh, we do what
the standards body says, no,

334
00:10:42,820 --> 00:10:44,460
we're actually involved
in this.

335
00:10:44,460 --> 00:10:46,230
MATT MCNULTY: That's something
we've done a lot in the last

336
00:10:46,230 --> 00:10:46,680
year or so.

337
00:10:46,680 --> 00:10:47,410
ALEX KOMOROSKE: Absolutely.

338
00:10:47,410 --> 00:10:49,290
And a lot of it comes, too,
from feedback we get in

339
00:10:49,290 --> 00:10:50,100
polymer-dev.

340
00:10:50,100 --> 00:10:52,050
Some people saying, well,
this feels weird to me.

341
00:10:52,050 --> 00:10:54,690
It's like, well, the reason
that's in the standard is for

342
00:10:54,690 --> 00:10:55,220
this reason.

343
00:10:55,220 --> 00:10:57,200
They go, I really don't think
that makes a lot of sense.

344
00:10:57,200 --> 00:10:59,910
And we can take that feedback
back and point to that and

345
00:10:59,910 --> 00:11:01,800
say, hey, developers don't
understand this.

346
00:11:01,800 --> 00:11:03,520
ERIC BIDELMAN: It turns out
there's a lot of really smart

347
00:11:03,520 --> 00:11:04,270
developers out there.

348
00:11:04,270 --> 00:11:05,590
They all don't work at Google.

349
00:11:05,590 --> 00:11:06,700
They all work at these
big companies.

350
00:11:06,700 --> 00:11:09,300
And we absolutely value
their expertise when

351
00:11:09,300 --> 00:11:09,980
building and stuff.

352
00:11:09,980 --> 00:11:11,360
ALEX KOMOROSKE: I've been
thrilled with the amount of

353
00:11:11,360 --> 00:11:12,560
stuff we've gotten
in polymer-dev.

354
00:11:12,560 --> 00:11:14,410
Really great questions
and feedback.

355
00:11:14,410 --> 00:11:17,460
And smart people coming up with
new ways of using this

356
00:11:17,460 --> 00:11:18,995
stuff and asking really
hard questions.

357
00:11:18,995 --> 00:11:20,761
It's really good.

358
00:11:20,761 --> 00:11:22,320
ERIC BIDELMAN: And to this
next point here, but

359
00:11:22,320 --> 00:11:23,390
boilerplate code.

360
00:11:23,390 --> 00:11:25,383
This is something that no
developer likes is to write a

361
00:11:25,383 --> 00:11:26,880
lot of boilerplate over
and over again.

362
00:11:26,880 --> 00:11:29,940
And it turns out just with these
platform APIs there is a

363
00:11:29,940 --> 00:11:32,070
lot of code that you have to
write over and over again.

364
00:11:32,070 --> 00:11:34,030
And that's something Polymer
is sort of addressing and

365
00:11:34,030 --> 00:11:36,810
that's part of our opinion
is to minimize that.

366
00:11:36,810 --> 00:11:38,380
Some of the tedious app things
that you're going to have to

367
00:11:38,380 --> 00:11:40,640
do when creating a
custom element.

368
00:11:40,640 --> 00:11:43,860
And then we've alluded to it, as
well, salt to taste is the

369
00:11:43,860 --> 00:11:45,390
terminology we used
on the team a lot.

370
00:11:45,390 --> 00:11:47,400
And that's really that you
could pick and choose the

371
00:11:47,400 --> 00:11:49,030
different layers
of that stack.

372
00:11:49,030 --> 00:11:50,300
ALEX KOMOROSKE: This is
really important.

373
00:11:50,300 --> 00:11:52,260
And I said this in the email
again last week.

374
00:11:52,260 --> 00:11:55,770
But the primary goal of this
project, we're really excited

375
00:11:55,770 --> 00:11:56,790
about Web Components.

376
00:11:56,790 --> 00:11:57,950
We've been excited about
them for years.

377
00:11:57,950 --> 00:12:03,115
I remember, two, three, years
ago I talked with Alex Russell

378
00:12:03,115 --> 00:12:06,510
at I/O about Web Components
and how excited we were.

379
00:12:06,510 --> 00:12:09,970
The goal, for us, is to help
kick off and bootstrap what we

380
00:12:09,970 --> 00:12:11,940
ultimately hope to be a thriving
ecosystem built

381
00:12:11,940 --> 00:12:13,110
around Web Components.

382
00:12:13,110 --> 00:12:14,770
And that's not specifically
about Polymer.

383
00:12:14,770 --> 00:12:17,830
Polymer is something that's
trying to lead the way here.

384
00:12:17,830 --> 00:12:19,960
But we want this to be a
thriving [INAUDIBLE] with

385
00:12:19,960 --> 00:12:20,880
other people too.

386
00:12:20,880 --> 00:12:24,990
And that's what we have a clear
layering of the stack.

387
00:12:24,990 --> 00:12:27,080
And we've talked to other
people who are using

388
00:12:27,080 --> 00:12:29,900
individual polyfills or a bunch
of them to do their own

389
00:12:29,900 --> 00:12:30,340
frameworks.

390
00:12:30,340 --> 00:12:31,220
And that is awesome.

391
00:12:31,220 --> 00:12:31,880
That is great.

392
00:12:31,880 --> 00:12:35,360
That's exactly why we're
doing it this way.

393
00:12:35,360 --> 00:12:37,610
ERIC BIDELMAN: So with that, do
you want to switch to demos

394
00:12:37,610 --> 00:12:39,640
and actually show a little bit
what we're talking about here?

395
00:12:39,640 --> 00:12:40,130
MATT MCNULTY: Sure.

396
00:12:40,130 --> 00:12:40,920
ERIC BIDELMAN: Inspire
us, sir.

397
00:12:40,920 --> 00:12:43,350
MATT MCNULTY: All right.

398
00:12:43,350 --> 00:12:45,710
So we have a screen here
is just a text editor.

399
00:12:45,710 --> 00:12:50,620
And it contains a blank polymer
elements definition.

400
00:12:50,620 --> 00:12:52,160
So this is the declarative
API.

401
00:12:52,160 --> 00:12:54,360
There's an imperative
API as well.

402
00:12:54,360 --> 00:12:56,270
So this one we're just creating
an element called

403
00:12:56,270 --> 00:12:58,690
my-element.

404
00:12:58,690 --> 00:13:01,440
And we can put tags inside of
other tags so we can start out

405
00:13:01,440 --> 00:13:03,460
just putting in g-ratings,
which is

406
00:13:03,460 --> 00:13:06,640
another one we created.

407
00:13:06,640 --> 00:13:09,200
So if we do that, I
can preview this.

408
00:13:09,200 --> 00:13:12,375
And you'll see that our little
rating stars pops up.

409
00:13:12,375 --> 00:13:14,560
And you can play with it.

410
00:13:14,560 --> 00:13:15,370
Cool.

411
00:13:15,370 --> 00:13:15,910
It's a Web Component.

412
00:13:15,910 --> 00:13:17,820
ERIC BIDELMAN: So just to
clarify, you're creating a new

413
00:13:17,820 --> 00:13:20,390
element and you're using
somebody else's element that

414
00:13:20,390 --> 00:13:21,220
they've already created.

415
00:13:21,220 --> 00:13:23,030
Another custom element within
a custom element themself.

416
00:13:23,030 --> 00:13:23,790
MATT MCNULTY: Yeah.

417
00:13:23,790 --> 00:13:24,170
ALEX KOMOROSKE: That's cool.

418
00:13:24,170 --> 00:13:26,390
MATT MCNULTY: So if you inspect
this in the web

419
00:13:26,390 --> 00:13:29,870
inspector, you'll see that it's
hidden inside this grayed

420
00:13:29,870 --> 00:13:32,550
out document fragment in
the developer tools.

421
00:13:32,550 --> 00:13:34,530
What that means is it's
in the Shadow DOM.

422
00:13:34,530 --> 00:13:38,860
So unless you have this little
check box showing Shadow DOM,

423
00:13:38,860 --> 00:13:40,222
you won't see it.

424
00:13:40,222 --> 00:13:41,750
ALEX KOMOROSKE: That's one
of the key notions of

425
00:13:41,750 --> 00:13:42,640
encapsulation.

426
00:13:42,640 --> 00:13:44,876
That's core to Shadow DOM.

427
00:13:44,876 --> 00:13:46,710
MATT MCNULTY: So if you come
back here, one of the other

428
00:13:46,710 --> 00:13:48,840
things we decided to do, it's
a little boring to just do

429
00:13:48,840 --> 00:13:49,690
this with text.

430
00:13:49,690 --> 00:13:52,490
So we built a little
GUI builder.

431
00:13:52,490 --> 00:13:54,910
And this is just for demos.

432
00:13:54,910 --> 00:13:56,710
You can't actually
save anything.

433
00:13:56,710 --> 00:14:00,150
It's really just meant as
a playground to drag out

434
00:14:00,150 --> 00:14:02,750
elements and see what's
exposed and make other

435
00:14:02,750 --> 00:14:04,730
elements out of them, and
that kind of thing.

436
00:14:04,730 --> 00:14:05,580
ALEX KOMOROSKE: It's a great
place to play around with

437
00:14:05,580 --> 00:14:06,850
these things, get
a sense of them.

438
00:14:06,850 --> 00:14:09,440
But one thing to note, and
you'll see it throughout this,

439
00:14:09,440 --> 00:14:12,670
is that inspector, the panel on
the right, is just one to

440
00:14:12,670 --> 00:14:14,070
one correspondence
with the markup.

441
00:14:14,070 --> 00:14:16,300
It just saves you a little
bit typing, basically.

442
00:14:16,300 --> 00:14:18,430
MATT MCNULTY: Yeah so the tool
has a canvas in the middle.

443
00:14:18,430 --> 00:14:20,065
You can see this little
graph paper.

444
00:14:20,065 --> 00:14:22,280
It's got a palette down the
left-hand side and has this

445
00:14:22,280 --> 00:14:24,210
property inspector down
the right-hand side.

446
00:14:24,210 --> 00:14:27,900
And the property inspector, as
Alex said, is just exposing

447
00:14:27,900 --> 00:14:30,140
the properties of the
polymer element that

448
00:14:30,140 --> 00:14:31,940
you're dealing with.

449
00:14:31,940 --> 00:14:34,170
So you can see we have a whole
lot of things down here down

450
00:14:34,170 --> 00:14:34,890
the left-hand side.

451
00:14:34,890 --> 00:14:36,650
I'm going to play with
a couple of them.

452
00:14:36,650 --> 00:14:38,430
I can bring out a menu.

453
00:14:38,430 --> 00:14:40,290
I can bring out a toolbar.

454
00:14:40,290 --> 00:14:42,020
And you can see, you can
place these things and

455
00:14:42,020 --> 00:14:43,180
play around with them.

456
00:14:43,180 --> 00:14:45,640
And it's actually, this isn't
doing anything special.

457
00:14:45,640 --> 00:14:47,750
All it's doing is creating these
custom elements for you.

458
00:14:47,750 --> 00:14:50,700
It's not generating any code
or doing anything special

459
00:14:50,700 --> 00:14:51,530
behind the scenes.

460
00:14:51,530 --> 00:14:55,800
This is the actual code that
runs when you preview this.

461
00:14:55,800 --> 00:14:57,780
I can bring out tabs.

462
00:14:57,780 --> 00:14:58,890
You see these things
are interactive.

463
00:14:58,890 --> 00:15:02,060
You can play with them.

464
00:15:02,060 --> 00:15:03,990
So one of the cool things we
mentioned, one of the little

465
00:15:03,990 --> 00:15:06,590
red boxes in that diagram
was called MDV.

466
00:15:06,590 --> 00:15:09,370
And that's short for
Model Driven Views.

467
00:15:09,370 --> 00:15:10,890
And what that does is
really interesting.

468
00:15:10,890 --> 00:15:14,160
It brings data binding
to the platform.

469
00:15:14,160 --> 00:15:18,790
So in this case, in our little
polymer constructor here, I

470
00:15:18,790 --> 00:15:22,390
can say, just make
up a variable.

471
00:15:22,390 --> 00:15:27,060
So let's try and tie the
menu to the tabs.

472
00:15:27,060 --> 00:15:30,840
So I created a variable
and I gave it a

473
00:15:30,840 --> 00:15:32,440
default value of zero.

474
00:15:32,440 --> 00:15:42,440
So now if I come up here into
the actual text, there we go.

475
00:15:42,440 --> 00:15:44,910
That should be easier
for everyone to see.

476
00:15:44,910 --> 00:15:49,870
If I come up here to
the actual toolbar,

477
00:15:49,870 --> 00:15:51,270
sorry, not the toolbar.

478
00:15:51,270 --> 00:15:54,850
The menu, the tab.s this says
selected equals one.

479
00:15:54,850 --> 00:15:56,460
Instead I can replace
that with this

480
00:15:56,460 --> 00:15:57,430
double mustache syntax.

481
00:15:57,430 --> 00:15:59,010
ALEX KOMOROSKE: Which is
familiar from lots of other

482
00:15:59,010 --> 00:16:00,650
data binding earmarks as well.

483
00:16:00,650 --> 00:16:02,320
MATT MCNULTY: And use the same
variable that I used down

484
00:16:02,320 --> 00:16:03,335
there before.

485
00:16:03,335 --> 00:16:07,760
And I come back into the
viewable side we can actually

486
00:16:07,760 --> 00:16:10,590
do that in the tool itself.

487
00:16:10,590 --> 00:16:12,200
So if I come into the
tabs, you could see

488
00:16:12,200 --> 00:16:13,790
it's selected as well.

489
00:16:13,790 --> 00:16:20,630
And if I come to the menu and
I bind it to the same thing,

490
00:16:20,630 --> 00:16:22,470
now they're actually
bound together.

491
00:16:22,470 --> 00:16:24,425
ALEX KOMOROSKE: So you bound one
of those just directly in

492
00:16:24,425 --> 00:16:25,640
code and one of them
using a tool.

493
00:16:25,640 --> 00:16:28,390
Which, of course, was just doing
exactly the same thing.

494
00:16:28,390 --> 00:16:29,650
ERIC BIDELMAN: Essentially
you added a

495
00:16:29,650 --> 00:16:30,780
property to your element.

496
00:16:30,780 --> 00:16:32,160
You define an element
in Mark Up.

497
00:16:32,160 --> 00:16:36,035
You created whatever properties
and APIs on that,

498
00:16:36,035 --> 00:16:37,510
as public methods
and properties.

499
00:16:37,510 --> 00:16:40,710
And then you've data bound two
elements together using MDB.

500
00:16:40,710 --> 00:16:41,660
Pretty powerful stuff.

501
00:16:41,660 --> 00:16:42,750
ALEX KOMOROSKE: Not even
a line a code, really.

502
00:16:42,750 --> 00:16:43,775
I mean just &mdash;

503
00:16:43,775 --> 00:16:44,350
MATT MCNULTY: Yeah.

504
00:16:44,350 --> 00:16:45,580
We can take this entire thing.

505
00:16:45,580 --> 00:16:47,480
And we can publish it
onto the palette.

506
00:16:47,480 --> 00:16:48,620
And this is just temporary.

507
00:16:48,620 --> 00:16:50,220
If you refresh it goes away.

508
00:16:50,220 --> 00:16:51,900
And then the whole thing comes
out and you can see that

509
00:16:51,900 --> 00:16:54,380
selected property that I added
just shows up here in the

510
00:16:54,380 --> 00:16:54,980
property inspector.

511
00:16:54,980 --> 00:16:56,555
ALEX KOMOROSKE: So it's
being exposed out now.

512
00:16:56,555 --> 00:16:58,850
MATT MCNULTY: And if you change
it you can see both of

513
00:16:58,850 --> 00:17:00,630
the widgets change.

514
00:17:00,630 --> 00:17:02,400
ALEX KOMOROSKE: One of the
things that you see in this

515
00:17:02,400 --> 00:17:05,420
world where everything is an
element is you're just using

516
00:17:05,420 --> 00:17:08,490
these building blocks to build
up larger and larger elements.

517
00:17:08,490 --> 00:17:09,940
And then before you know it,
you've got actually whole

518
00:17:09,940 --> 00:17:11,115
applications.

519
00:17:11,115 --> 00:17:14,089
MATT MCNULTY: Yeah, you can do
interesting things with this.

520
00:17:14,089 --> 00:17:16,530
We've got a YouTube widget.

521
00:17:16,530 --> 00:17:19,200
Our YouTube widget has got an
I'm feeling lucky property.

522
00:17:19,200 --> 00:17:20,630
Which is reasonably risky.

523
00:17:20,630 --> 00:17:22,740
It's a voice-activated
YouTube widget.

524
00:17:22,740 --> 00:17:25,490
It returns the very first thing
that it searches for,

525
00:17:25,490 --> 00:17:28,300
which is what makes
it kind of risky.

526
00:17:28,300 --> 00:17:30,640
For demos you can put a
speech input up there.

527
00:17:30,640 --> 00:17:32,390
And we can actually bind the
two things together.

528
00:17:32,390 --> 00:17:33,070
So if I go &mdash;

529
00:17:33,070 --> 00:17:35,300
ALEX KOMOROSKE: So that's just
a regular Joe input with a

530
00:17:35,300 --> 00:17:36,455
little speech attribute on it.

531
00:17:36,455 --> 00:17:39,160
MATT MCNULTY: Yeah, this is
the default Chrome HTML5

532
00:17:39,160 --> 00:17:39,750
speech input.

533
00:17:39,750 --> 00:17:43,390
ERIC BIDELMAN: So native HTML
talking to custom elements

534
00:17:43,390 --> 00:17:43,960
HTML, if you will.

535
00:17:43,960 --> 00:17:45,190
ALEX KOMOROSKE: Because
effectively a lot of the time,

536
00:17:45,190 --> 00:17:47,190
actually, use elements,
they feel just

537
00:17:47,190 --> 00:17:48,510
like any other elements.

538
00:17:48,510 --> 00:17:51,370
Ones that are baked into the
platform with the inputs.

539
00:17:51,370 --> 00:17:53,220
MATT MCNULTY: So if I go into
the little binding thing here

540
00:17:53,220 --> 00:17:55,790
and I say, input.value is equal
to this I'm feeling

541
00:17:55,790 --> 00:17:58,880
lucky property, and if you can
even look it up in the code.

542
00:17:58,880 --> 00:18:00,590
And you'll see this
is dollars, I

543
00:18:00,590 --> 00:18:01,180
didn't put that value.

544
00:18:01,180 --> 00:18:03,720
It's still the same thing I
was showing you before.

545
00:18:03,720 --> 00:18:07,950
Now if I come in here,
grumpy cat.

546
00:18:07,950 --> 00:18:12,240

547
00:18:12,240 --> 00:18:13,380
In a second.

548
00:18:13,380 --> 00:18:14,740
Aha, there we go.

549
00:18:14,740 --> 00:18:16,660
It shows it.

550
00:18:16,660 --> 00:18:18,490
So you can see how you can
combine these things together.

551
00:18:18,490 --> 00:18:20,760
And if you imagine you can
actually combine it into a

552
00:18:20,760 --> 00:18:22,130
really large application.

553
00:18:22,130 --> 00:18:24,800
Like this sandbox itself is
actually all built in polymer.

554
00:18:24,800 --> 00:18:27,350

555
00:18:27,350 --> 00:18:30,090
So one of the ways we can prove
that, we have it on the

556
00:18:30,090 --> 00:18:30,680
palette here.

557
00:18:30,680 --> 00:18:31,570
ALEX KOMOROSKE: I don't
believe you, man.

558
00:18:31,570 --> 00:18:32,190
Show us.

559
00:18:32,190 --> 00:18:32,480
MATT MCNULTY: Exactly.

560
00:18:32,480 --> 00:18:33,630
I'm lying.

561
00:18:33,630 --> 00:18:34,930
We actually have the
whole sandbox

562
00:18:34,930 --> 00:18:35,820
app here on the pallet.

563
00:18:35,820 --> 00:18:38,360
So you can drag it
off as a widget.

564
00:18:38,360 --> 00:18:40,450
And then drag it off
inside of itself.

565
00:18:40,450 --> 00:18:42,570
ERIC BIDELMAN: The whole app
is an element, it's a tag.

566
00:18:42,570 --> 00:18:43,440
It's an HTML tag.

567
00:18:43,440 --> 00:18:45,140
And because of encapsulation,
right?

568
00:18:45,140 --> 00:18:46,770
Because of Shadown DOM, because
of custom elements you

569
00:18:46,770 --> 00:18:48,630
can then do things like this.

570
00:18:48,630 --> 00:18:50,105
Which would actually be
crazy hard to do.

571
00:18:50,105 --> 00:18:52,800
ALEX KOMOROSKE: Yeah, it would
require a lot of work to do if

572
00:18:52,800 --> 00:18:53,820
you're doing it by hand.

573
00:18:53,820 --> 00:18:55,890
But here you sort of get
it for free, almost.

574
00:18:55,890 --> 00:18:57,133
MATT MCNULTY: And encapsulation
ensures that

575
00:18:57,133 --> 00:18:59,200
none of the semantics
leak at all.

576
00:18:59,200 --> 00:19:01,610
So you can actually get things
inside of things.

577
00:19:01,610 --> 00:19:03,920
And you can combine different
frameworks together.

578
00:19:03,920 --> 00:19:06,350
ERIC BIDELMAN: That's
really awesome.

579
00:19:06,350 --> 00:19:07,810
Very cool.

580
00:19:07,810 --> 00:19:08,280
Any other demos?

581
00:19:08,280 --> 00:19:09,800
MATT MCNULTY: No, that's it.

582
00:19:09,800 --> 00:19:10,485
ERIC BIDELMAN: With that.

583
00:19:10,485 --> 00:19:11,000
That's great.

584
00:19:11,000 --> 00:19:12,860
We learned a little
bit about Polymer.

585
00:19:12,860 --> 00:19:17,690
Let's switch to do some Q&A and
to address some burning

586
00:19:17,690 --> 00:19:18,990
issues here.

587
00:19:18,990 --> 00:19:20,312
So first question,
what is your end

588
00:19:20,312 --> 00:19:21,460
goal in building Polymer?

589
00:19:21,460 --> 00:19:22,790
What's it's purpose?

590
00:19:22,790 --> 00:19:24,480
Where does it fit in the
ecosystem of content

591
00:19:24,480 --> 00:19:26,590
management systems, frameworks,
and libraries.

592
00:19:26,590 --> 00:19:28,070
ALEX KOMOROSKE: I will
take that one.

593
00:19:28,070 --> 00:19:29,540
So I think I already, actually,
kind of answered

594
00:19:29,540 --> 00:19:31,640
this going through it.

595
00:19:31,640 --> 00:19:33,770
But our primary goal, I said
this in an email in

596
00:19:33,770 --> 00:19:35,950
polymer-dev I think last
Friday or something.

597
00:19:35,950 --> 00:19:39,930
Our primary goal in Polymer
is to bootstrap a thriving

598
00:19:39,930 --> 00:19:41,055
ecosystem around
Web Components.

599
00:19:41,055 --> 00:19:44,320
We think Web Components are
an amazing new technology,

600
00:19:44,320 --> 00:19:46,390
emerging technology on
the web platform.

601
00:19:46,390 --> 00:19:48,590
And we want to make sure that
the community, the ecosystem,

602
00:19:48,590 --> 00:19:50,990
can use them productively and
really get started thinking

603
00:19:50,990 --> 00:19:53,000
about these in the right way.

604
00:19:53,000 --> 00:19:54,820
That's our primary goal.

605
00:19:54,820 --> 00:19:58,800
We also, of course, as a
secondary goal to that, is to

606
00:19:58,800 --> 00:20:01,170
have instead of amazing
[INAUDIBLE]

607
00:20:01,170 --> 00:20:01,950
UI widgets.

608
00:20:01,950 --> 00:20:03,690
So these are just web components
that can be used

609
00:20:03,690 --> 00:20:05,720
like any other set.

610
00:20:05,720 --> 00:20:07,400
And, of course, Polymer is
designed to be layered.

611
00:20:07,400 --> 00:20:09,500
So you can take what you want
and don't take the parts you

612
00:20:09,500 --> 00:20:09,920
don't want.

613
00:20:09,920 --> 00:20:11,530
So if you want to use
a different sort of

614
00:20:11,530 --> 00:20:12,810
widgets, it's A-OK.

615
00:20:12,810 --> 00:20:15,180
ERIC BIDELMAN: I think
especially important to show,

616
00:20:15,180 --> 00:20:16,650
with all these new standards
coming out, right?

617
00:20:16,650 --> 00:20:20,030
Under on the web components
umbrella, MDV, Shadow DOM, all

618
00:20:20,030 --> 00:20:20,850
this new stuff.

619
00:20:20,850 --> 00:20:23,160
It's important to show people
how to use this in an

620
00:20:23,160 --> 00:20:23,900
interesting way.

621
00:20:23,900 --> 00:20:24,860
ALEX KOMOROSKE: And to discover
how to use it too.

622
00:20:24,860 --> 00:20:25,730
ERIC BIDELMAN: Discover
how to use it.

623
00:20:25,730 --> 00:20:27,780
I think that's really what
Polymer is trying do with the

624
00:20:27,780 --> 00:20:28,350
whole layer.

625
00:20:28,350 --> 00:20:32,060
The UI elements, the regular
elements, and down to the core

626
00:20:32,060 --> 00:20:32,880
foundational layer.

627
00:20:32,880 --> 00:20:34,545
ALEX KOMOROSKE: And there's
still great questions going on

628
00:20:34,545 --> 00:20:36,590
in polymer-dev about, well
why'd you do it this way?

629
00:20:36,590 --> 00:20:38,355
Is this really the right way?

630
00:20:38,355 --> 00:20:39,000
We don't know.

631
00:20:39,000 --> 00:20:41,470
We need to discover this as a
community and figure this out.

632
00:20:41,470 --> 00:20:43,590
MATT MCNULTY: This is still very
much a work in progress.

633
00:20:43,590 --> 00:20:44,530
It's changing constantly.

634
00:20:44,530 --> 00:20:45,860
ALEX KOMOROSKE: And because
this is such an

635
00:20:45,860 --> 00:20:47,280
exciting and new area.

636
00:20:47,280 --> 00:20:48,910
The team that's been working on
this has worked on, what,

637
00:20:48,910 --> 00:20:50,330
like five or six different
frameworks before.

638
00:20:50,330 --> 00:20:52,190
And this is not new.

639
00:20:52,190 --> 00:20:53,970
Working on frameworks is not
new, but working with web

640
00:20:53,970 --> 00:20:56,510
components just is a
total mind shift.

641
00:20:56,510 --> 00:20:58,650
MATT MCNULTY: And embracing
the platform again.

642
00:20:58,650 --> 00:20:59,540
It's kind of old school.

643
00:20:59,540 --> 00:21:02,040
You're going back to using
DOM again, right?

644
00:21:02,040 --> 00:21:04,950
Everyone always asks us like,
well, how do you actually make

645
00:21:04,950 --> 00:21:05,670
these things happen?

646
00:21:05,670 --> 00:21:06,970
It's like DOM is
the framework.

647
00:21:06,970 --> 00:21:08,020
That's all you have.

648
00:21:08,020 --> 00:21:10,846
Outside of an element, you're
just using DOM.

649
00:21:10,846 --> 00:21:12,570
ALEX KOMOROSKE: So the second
part of this question then is

650
00:21:12,570 --> 00:21:14,250
how does it fit within the
ecosystem of content

651
00:21:14,250 --> 00:21:15,050
management systems,

652
00:21:15,050 --> 00:21:17,000
frameworks, and other libraries.

653
00:21:17,000 --> 00:21:19,680
So the existing stuff
really allows you to

654
00:21:19,680 --> 00:21:20,610
be productive today.

655
00:21:20,610 --> 00:21:24,260
And Polymer, again, we support
the modern browsers &mdash;

656
00:21:24,260 --> 00:21:25,140
ERIC BIDELMAN: Evergreen
browsers.

657
00:21:25,140 --> 00:21:26,400
ALEX KOMOROSKE: Evergreen
browsers is the way that we

658
00:21:26,400 --> 00:21:27,780
describe it.

659
00:21:27,780 --> 00:21:29,780
A lot of things today that are
deployed that people are using

660
00:21:29,780 --> 00:21:32,810
very successfully are targeted
to the web of today.

661
00:21:32,810 --> 00:21:35,040
And we are trying
to help build a

662
00:21:35,040 --> 00:21:36,740
better web of tomorrow.

663
00:21:36,740 --> 00:21:39,880
And so it's fundamentally a
different kind of a framework

664
00:21:39,880 --> 00:21:42,980
because it's one of our goals is
to take this feedback back

665
00:21:42,980 --> 00:21:44,880
into the standardization
process.

666
00:21:44,880 --> 00:21:46,970
To not play fast and loose and
say, oh this doesn't work.

667
00:21:46,970 --> 00:21:47,780
We'll just do this
other thing.

668
00:21:47,780 --> 00:21:50,010
No, no, no, let's fix
that thing, right?

669
00:21:50,010 --> 00:21:52,000
So that everyone else
can benefit from it.

670
00:21:52,000 --> 00:21:53,870
ERIC BIDELMAN: And like we
said before, there's been

671
00:21:53,870 --> 00:21:56,230
numerous framework authors that
have come on our mailings

672
00:21:56,230 --> 00:21:58,980
and said they're fully
supportive of where things are

673
00:21:58,980 --> 00:22:01,240
headed with the platform
stuff, Shadow DOM, Web

674
00:22:01,240 --> 00:22:02,030
Components, custom elements.

675
00:22:02,030 --> 00:22:04,300
They can embrace some of these
lower level technologies and

676
00:22:04,300 --> 00:22:06,070
then use that within their
own framework.

677
00:22:06,070 --> 00:22:08,170
So I think it fits
in really well.

678
00:22:08,170 --> 00:22:10,410
If you think of web development
as a holistic

679
00:22:10,410 --> 00:22:12,330
approach with all this stuff
that's happening.

680
00:22:12,330 --> 00:22:14,210
ALEX KOMOROSKE: I think there's
definitely, the use of

681
00:22:14,210 --> 00:22:15,940
the polymer-dev mailing list
has become sort of the de

682
00:22:15,940 --> 00:22:20,520
facto place where people talk
about web components concepts.

683
00:22:20,520 --> 00:22:22,960
So Polymer is bigger than
just Polymer, per se.

684
00:22:22,960 --> 00:22:25,680
It's Web Components that we're
talking about a lot here.

685
00:22:25,680 --> 00:22:27,270
MATT MCNULTY: This is one of the
first things that actually

686
00:22:27,270 --> 00:22:29,340
puts all of these things
together and shows you how to

687
00:22:29,340 --> 00:22:31,880
build and what you can do.

688
00:22:31,880 --> 00:22:33,250
ERIC BIDELMAN: Cool.

689
00:22:33,250 --> 00:22:35,715
Is Polymer already being used
in some Google projects?

690
00:22:35,715 --> 00:22:38,620
ALEX KOMOROSKE: So Polymer
is in pre alpha.

691
00:22:38,620 --> 00:22:43,150
Which means that if you aren't
OK with it breaking without

692
00:22:43,150 --> 00:22:45,640
warning, it's not ready
for you yet.

693
00:22:45,640 --> 00:22:50,025
MATT MCNULTY: If there was a
Greek letter that was before A

694
00:22:50,025 --> 00:22:51,230
we would be calling it that.

695
00:22:51,230 --> 00:22:52,530
ALEX KOMOROSKE: And then
the thing is, it's

696
00:22:52,530 --> 00:22:53,650
actually pretty solid.

697
00:22:53,650 --> 00:22:55,740
You should definitely
play around with it.

698
00:22:55,740 --> 00:22:57,790
And if you're using it for
production stuff, let us know.

699
00:22:57,790 --> 00:22:59,630
Let us know what breaks,
what doesn't work.

700
00:22:59,630 --> 00:23:01,310
Where it's not working
for you.

701
00:23:01,310 --> 00:23:03,940
But at this point it's
definitely too early for major

702
00:23:03,940 --> 00:23:05,490
Google projects to
be using this.

703
00:23:05,490 --> 00:23:08,520
But I will say, I've been
interested to see all the

704
00:23:08,520 --> 00:23:10,590
excitement coming from
teams internally too.

705
00:23:10,590 --> 00:23:12,410
So we're seeing a lot of the
excitement externally.

706
00:23:12,410 --> 00:23:14,740
People are interested in this
stuff and following along.

707
00:23:14,740 --> 00:23:16,140
ERIC BIDELMAN: I was just going
to point out that when

708
00:23:16,140 --> 00:23:19,530
we first talked about I/O, one
of the Google engineers,

709
00:23:19,530 --> 00:23:21,690
actually, was building a
performance dash for Chrome.

710
00:23:21,690 --> 00:23:23,040
And ended up using Polymer.

711
00:23:23,040 --> 00:23:26,090
Wanted to get nitty gritty
with custom elements.

712
00:23:26,090 --> 00:23:29,010
And so she ended up building
a dashboard in Polymer.

713
00:23:29,010 --> 00:23:31,060
And using custom elements,
eliminating a lot of

714
00:23:31,060 --> 00:23:33,660
boilerplate code, fixing bugs
she always had issues with.

715
00:23:33,660 --> 00:23:34,650
It's really cool stuff.

716
00:23:34,650 --> 00:23:36,720
And I think we've seen a lot
of internal interest from

717
00:23:36,720 --> 00:23:39,480
different teams and engineers at
Google really excited about

718
00:23:39,480 --> 00:23:41,390
where this web platform
stuff is going.

719
00:23:41,390 --> 00:23:43,330
MATT MCNULTY: Yeah, she did it
actually without any help.

720
00:23:43,330 --> 00:23:45,360
ERIC BIDELMAN: Very cool.

721
00:23:45,360 --> 00:23:48,150
MATT MCNULTY: Where is
the file for this?

722
00:23:48,150 --> 00:23:49,450
A couple week later it was like,
hey, here's the thing.

723
00:23:49,450 --> 00:23:51,780
ALEX KOMOROSKE: Annie's also
an amazing engineer, too.

724
00:23:51,780 --> 00:23:54,560
But we're seeing, already,
interest in smaller projects

725
00:23:54,560 --> 00:23:56,130
like this are using it.

726
00:23:56,130 --> 00:23:58,470
And I think, over time,
naturally, as smaller projects

727
00:23:58,470 --> 00:24:01,350
had success, that means it
allows larger products to take

728
00:24:01,350 --> 00:24:03,250
it seriously and really use
it for real things.

729
00:24:03,250 --> 00:24:04,920
And it works up from there.

730
00:24:04,920 --> 00:24:07,240
So not yet.

731
00:24:07,240 --> 00:24:09,860
But that's because it's very,
very, very early days.

732
00:24:09,860 --> 00:24:11,800
And we wouldn't encourage them
to use it at this point.

733
00:24:11,800 --> 00:24:13,216
ERIC BIDELMAN: Cool.

734
00:24:13,216 --> 00:24:16,170
What browsers does Polymer
support in its polyfills?

735
00:24:16,170 --> 00:24:17,550
Are there any plans
to support all the

736
00:24:17,550 --> 00:24:18,360
versions of this browser?

737
00:24:18,360 --> 00:24:20,860
I actually ask this because
this comes up a lot.

738
00:24:20,860 --> 00:24:22,224
ALEX KOMOROSKE: See I
recognize that name.

739
00:24:22,224 --> 00:24:24,120
ERIC BIDELMAN: Weird.

740
00:24:24,120 --> 00:24:26,150
And so I just want to touch
up on the point.

741
00:24:26,150 --> 00:24:28,660
We're trying to support the
latest and greatest of every

742
00:24:28,660 --> 00:24:29,310
bottom browser.

743
00:24:29,310 --> 00:24:31,360
And that includes the Evergreen
browsers, the latest

744
00:24:31,360 --> 00:24:33,510
version of IE, the latest
version of Chrome.

745
00:24:33,510 --> 00:24:36,240
And it's really because we want
to evolve this as the web

746
00:24:36,240 --> 00:24:38,180
platform evolves, as well.

747
00:24:38,180 --> 00:24:41,270
You can't do that you if you are
looking back in the rear

748
00:24:41,270 --> 00:24:42,880
view mirror as Alex
said before.

749
00:24:42,880 --> 00:24:45,310
ALEX KOMOROSKE: So there's
definitely, this isn't like a

750
00:24:45,310 --> 00:24:48,210
hard line stance of older
browsers are terrible.

751
00:24:48,210 --> 00:24:50,080
We need to make sure that we're
focusing on the future.

752
00:24:50,080 --> 00:24:52,600
So if it's possible in some
cases, every so often, oh, it

753
00:24:52,600 --> 00:24:55,410
just basically works in older
versions of IE or whatever, in

754
00:24:55,410 --> 00:24:56,060
some cases.

755
00:24:56,060 --> 00:24:57,250
And it's fine.

756
00:24:57,250 --> 00:24:58,230
ERIC BIDELMAN: And sometimes,
too, it's

757
00:24:58,230 --> 00:24:59,170
an engineering problem.

758
00:24:59,170 --> 00:25:02,100
Sometimes you just can't
polyfill Shadow DOM and the

759
00:25:02,100 --> 00:25:05,150
beast that it is browsers like
older versions of IE.

760
00:25:05,150 --> 00:25:06,670
It's impossible.

761
00:25:06,670 --> 00:25:09,190
ALEX KOMOROSKE: Shadow DOM
polyfill is already an amazing

762
00:25:09,190 --> 00:25:12,550
work of engineering from Erik
Arvidsson, who's an amazing

763
00:25:12,550 --> 00:25:13,220
engineer as well.

764
00:25:13,220 --> 00:25:16,050
MATT MCNULTY: And we're saying
too that you can't actually

765
00:25:16,050 --> 00:25:17,380
polyfill everything.

766
00:25:17,380 --> 00:25:19,180
So there are certain features,
there are certain aspects of

767
00:25:19,180 --> 00:25:20,200
things that aren't there yet.

768
00:25:20,200 --> 00:25:21,660
ERIC BIDELMAN: That's
a really good point.

769
00:25:21,660 --> 00:25:22,570
MATT MCNULTY: We try
and do our best to

770
00:25:22,570 --> 00:25:23,510
highlight what those are.

771
00:25:23,510 --> 00:25:23,840
ERIC BIDELMAN: Right.

772
00:25:23,840 --> 00:25:26,210
So we have, some are polyfills
and some are, I would call

773
00:25:26,210 --> 00:25:27,040
more of a shim, right?

774
00:25:27,040 --> 00:25:29,520
It tries to mimic as much
as possible the need of

775
00:25:29,520 --> 00:25:30,900
functionality.

776
00:25:30,900 --> 00:25:35,060
Things like CSS scoping
is very hard to do.

777
00:25:35,060 --> 00:25:36,730
Is there a trade off when
using a Polymer element?

778
00:25:36,730 --> 00:25:39,200
We gain the benefits of the
Polymer framework, but with

779
00:25:39,200 --> 00:25:40,490
the added dependency.

780
00:25:40,490 --> 00:25:42,835
Alternatively you could build
a custom element, just a raw

781
00:25:42,835 --> 00:25:44,350
straight custom element
in CSS JavaScript.

782
00:25:44,350 --> 00:25:46,270
ALEX KOMOROSKE: So one thing I
want to clarify really quickly

783
00:25:46,270 --> 00:25:49,220
is, again we're using these
standards and we're feeding

784
00:25:49,220 --> 00:25:50,230
back into them.

785
00:25:50,230 --> 00:25:52,720
And they're evolving as we
speak in response to some

786
00:25:52,720 --> 00:25:54,580
other things that we and others
are saying in these

787
00:25:54,580 --> 00:25:55,870
standards list.

788
00:25:55,870 --> 00:25:58,850
And so custom elements,
actually, as of right now, I

789
00:25:58,850 --> 00:26:02,280
believe it doesn't have the
eclarative syntax that we were

790
00:26:02,280 --> 00:26:06,260
using in early versions of
Polymer is temporarily on hold

791
00:26:06,260 --> 00:26:08,190
while they figure out the
imperative bits and get that

792
00:26:08,190 --> 00:26:10,120
really lined up and
solidified.

793
00:26:10,120 --> 00:26:13,950
And so we didn't want to use
these semantics that may

794
00:26:13,950 --> 00:26:15,130
change in the future.

795
00:26:15,130 --> 00:26:18,490
And so Polymer element allows
us to experiment and provide

796
00:26:18,490 --> 00:26:19,880
something that was like,
we think this is a good

797
00:26:19,880 --> 00:26:21,070
way of doing it.

798
00:26:21,070 --> 00:26:23,110
And that will feedback into the
standardization process.

799
00:26:23,110 --> 00:26:25,310
And we'll see ultimately,
hopefully, you just use

800
00:26:25,310 --> 00:26:26,300
roughly element.

801
00:26:26,300 --> 00:26:28,920
MATT MCNULTY: So obviously we're
biased, I think Polymer

802
00:26:28,920 --> 00:26:30,070
is totally worth it.

803
00:26:30,070 --> 00:26:33,610
But on thing to point out is
it's a very, very thin layer.

804
00:26:33,610 --> 00:26:36,030
Actually it's the thinnest layer
we can possibly make it.

805
00:26:36,030 --> 00:26:39,040
And the goal is as these
standards evolve and as more

806
00:26:39,040 --> 00:26:42,370
of what we consider best
practices turn into the

807
00:26:42,370 --> 00:26:45,400
platform, it gets even
thinner over time.

808
00:26:45,400 --> 00:26:47,440
Dom is the framework, that means
we don't have to create

809
00:26:47,440 --> 00:26:48,640
one in JavaScript.

810
00:26:48,640 --> 00:26:50,110
ALEX KOMOROSKE: So, again,
we've talked about this

811
00:26:50,110 --> 00:26:52,660
multiple times throughout this,
but our goal is when we

812
00:26:52,660 --> 00:26:55,080
see something in the emerging
standards that, we're going to

813
00:26:55,080 --> 00:26:55,730
work around that.

814
00:26:55,730 --> 00:26:56,270
No, no, no.

815
00:26:56,270 --> 00:26:58,640
We go back and we bring this
feedback back to the standards

816
00:26:58,640 --> 00:27:01,730
guys and work collaboratively
to solve that.

817
00:27:01,730 --> 00:27:04,020
This is just an example of you
watching it in motion.

818
00:27:04,020 --> 00:27:07,140
MATT MCNULTY: And there are some
people working with the

819
00:27:07,140 --> 00:27:10,240
polyfills directly that are on
the mailing list as well.

820
00:27:10,240 --> 00:27:11,940
And a lot of times they find
themselves looking at the

821
00:27:11,940 --> 00:27:13,985
Polymer file just
for a reference.

822
00:27:13,985 --> 00:27:16,140
ERIC BIDELMAN: And part of the
change, actually, I will say

823
00:27:16,140 --> 00:27:18,660
with the Polymer element, is
that we took some feedback,

824
00:27:18,660 --> 00:27:20,650
actually, from developers
on the mailing list.

825
00:27:20,650 --> 00:27:22,960
They want to do things
like render CSP,

826
00:27:22,960 --> 00:27:24,720
Context Security Policy.

827
00:27:24,720 --> 00:27:26,490
And they wanted to separate
their script from the actual

828
00:27:26,490 --> 00:27:27,990
element declarative
definition.

829
00:27:27,990 --> 00:27:30,240
And so that is part of the
Polymer element change as well

830
00:27:30,240 --> 00:27:33,980
is to bootstrap that a little
easier now before the native

831
00:27:33,980 --> 00:27:35,540
stuff is ready.

832
00:27:35,540 --> 00:27:36,712
Cool.

833
00:27:36,712 --> 00:27:39,910
Where are we guys?

834
00:27:39,910 --> 00:27:42,595
Why must custom element
names have a dash?

835
00:27:42,595 --> 00:27:44,530
ALEX KOMOROSKE: So this
is a spec requirement.

836
00:27:44,530 --> 00:27:47,400
And the reason that it's in
there, and I hope I don't

837
00:27:47,400 --> 00:27:47,690
butcher this.

838
00:27:47,690 --> 00:27:51,310
But the reason it's in there
is because when you're

839
00:27:51,310 --> 00:27:54,800
developing new specs you want
to make sure that you don't

840
00:27:54,800 --> 00:27:56,480
accidentally break
existing content.

841
00:27:56,480 --> 00:27:58,190
So you don't want to stomp on
people's feet what they've

842
00:27:58,190 --> 00:27:59,170
already done.

843
00:27:59,170 --> 00:28:01,940
And so we're giving people
a very powerful new

844
00:28:01,940 --> 00:28:02,530
functionality.

845
00:28:02,530 --> 00:28:04,700
And say we, the web component
standards.

846
00:28:04,700 --> 00:28:06,420
A very powerful functionality.

847
00:28:06,420 --> 00:28:10,790
So say everyone starts going off
and creating tags one and

848
00:28:10,790 --> 00:28:13,660
then later we want to formally
standardize that.

849
00:28:13,660 --> 00:28:15,130
We ship it with slightly
different semantics.

850
00:28:15,130 --> 00:28:16,550
Well now we've just
broken content.

851
00:28:16,550 --> 00:28:19,950
And so the idea of having a
dash is that basically new

852
00:28:19,950 --> 00:28:22,290
things that are built into the
platform won't have a dash.

853
00:28:22,290 --> 00:28:25,310
And so we guarantee that the
user LAN components won't ever

854
00:28:25,310 --> 00:28:27,210
conflict with [INAUDIBLE].

855
00:28:27,210 --> 00:28:30,380
MATT MCNULTY: It's a really good
example of the feedback

856
00:28:30,380 --> 00:28:31,380
to the spec process.

857
00:28:31,380 --> 00:28:33,780
Because originally about a year
ago you had to have an x

858
00:28:33,780 --> 00:28:35,690
dash every single tag.

859
00:28:35,690 --> 00:28:37,600
And the first time we started
actually using that we have

860
00:28:37,600 --> 00:28:39,480
all of these tags and every
single one of them had an x

861
00:28:39,480 --> 00:28:40,300
tag in them.

862
00:28:40,300 --> 00:28:42,840
It was like, OK, this
is not ideal.

863
00:28:42,840 --> 00:28:44,840
If there's something we can do
to actually make that easier,

864
00:28:44,840 --> 00:28:45,690
that would be great.

865
00:28:45,690 --> 00:28:49,340
So we switched to just has a
dash as the minimum we could

866
00:28:49,340 --> 00:28:52,130
come up with.

867
00:28:52,130 --> 00:28:56,460
ERIC BIDELMAN: Why do you use
the ng-app tag at Google I/O.

868
00:28:56,460 --> 00:28:59,706
Something to do with
AngularJS?

869
00:28:59,706 --> 00:29:01,185
MATT MCNULTY: I don't
believe we did.

870
00:29:01,185 --> 00:29:03,400
ERIC BIDELMAN: There was a video
but it had the g dash

871
00:29:03,400 --> 00:29:04,210
app, right?

872
00:29:04,210 --> 00:29:04,950
ALEX KOMOROSKE: Oh yes.

873
00:29:04,950 --> 00:29:06,260
That's the confusing.

874
00:29:06,260 --> 00:29:09,780
So that video that we showed is
kind of like our vision of

875
00:29:09,780 --> 00:29:10,460
where we want to go.

876
00:29:10,460 --> 00:29:11,570
MATT MCNULTY: Halo video.

877
00:29:11,570 --> 00:29:14,790
ALEX KOMOROSKE: And so that
actually is a g dash app.

878
00:29:14,790 --> 00:29:19,050
And the idea there was just
showing off components in the

879
00:29:19,050 --> 00:29:22,870
way how Web Components work to
set a future picture of how it

880
00:29:22,870 --> 00:29:25,870
could work in the future
when you build apps.

881
00:29:25,870 --> 00:29:28,030
So actually, gs app
is a real thing.

882
00:29:28,030 --> 00:29:28,820
It's not ngApp.

883
00:29:28,820 --> 00:29:30,560
It's not really to the
angular concept.

884
00:29:30,560 --> 00:29:32,680
It's just we needed a name
to put in that video.

885
00:29:32,680 --> 00:29:33,810
ERIC BIDELMAN: It
is confusing.

886
00:29:33,810 --> 00:29:35,020
Like Linus was up on stage.

887
00:29:35,020 --> 00:29:36,080
There was an awesome
video, right?

888
00:29:36,080 --> 00:29:37,200
It was very inspirational
and everything.

889
00:29:37,200 --> 00:29:40,290
But people like think
Google is building

890
00:29:40,290 --> 00:29:41,690
new elements in HTML.

891
00:29:41,690 --> 00:29:41,720
No.

892
00:29:41,720 --> 00:29:43,410
It was to show the custom
elements stuff.

893
00:29:43,410 --> 00:29:45,602
And we just happened to have the
dash as the first part of

894
00:29:45,602 --> 00:29:45,940
that phrase.

895
00:29:45,940 --> 00:29:46,660
ALEX KOMOROSKE: That's funny, I
haven't heard that confusion

896
00:29:46,660 --> 00:29:48,040
before, but I can see why.

897
00:29:48,040 --> 00:29:49,063
That makes total sense.

898
00:29:49,063 --> 00:29:52,270
ERIC BIDELMAN: How does Polymer
work with AngularJS

899
00:29:52,270 --> 00:29:52,850
That's interesting.

900
00:29:52,850 --> 00:29:53,570
ALEX KOMOROSKE: That is
an interesting one.

901
00:29:53,570 --> 00:29:56,370
So first of all, Angular
is amazing framework.

902
00:29:56,370 --> 00:29:59,890
What's so cool about what
Angular has done is they've

903
00:29:59,890 --> 00:30:02,410
helped people think
declaratively.

904
00:30:02,410 --> 00:30:04,100
Lots of other framers
haven't done that.

905
00:30:04,100 --> 00:30:06,370
So that's really cool.

906
00:30:06,370 --> 00:30:09,150
Polymer and web components, the
idea is that when you get

907
00:30:09,150 --> 00:30:11,380
a reference to this component,
it's just a component.

908
00:30:11,380 --> 00:30:12,210
It emits events.

909
00:30:12,210 --> 00:30:13,010
It takes attributes.

910
00:30:13,010 --> 00:30:14,820
It has imperative
methods on it.

911
00:30:14,820 --> 00:30:18,220
And so when you're using these
things, your other framework

912
00:30:18,220 --> 00:30:19,250
shouldn't have to
know about them.

913
00:30:19,250 --> 00:30:20,490
They're just elements, right?

914
00:30:20,490 --> 00:30:22,180
They're just like
any other ones.

915
00:30:22,180 --> 00:30:25,450
It's when you want to use some
of the extra sugaring features

916
00:30:25,450 --> 00:30:28,650
or extra capabilities built into
Polymer and Angular that

917
00:30:28,650 --> 00:30:30,610
it doesn't really work perfectly
right now, I think.

918
00:30:30,610 --> 00:30:33,300
ERIC BIDELMAN: Yeah, so you can
absolutely today build an

919
00:30:33,300 --> 00:30:35,130
app that uses parts
of Angular.

920
00:30:35,130 --> 00:30:36,600
One thing that's nice about
Angular, you can pick and

921
00:30:36,600 --> 00:30:37,800
choose in Angular as well.

922
00:30:37,800 --> 00:30:38,760
Part of your app
can be Angular.

923
00:30:38,760 --> 00:30:39,930
The whole thing can
be Angular.

924
00:30:39,930 --> 00:30:41,890
And it's sort of the same
with Polymer as well.

925
00:30:41,890 --> 00:30:43,800
You can make, like Matt
just showed, right?

926
00:30:43,800 --> 00:30:45,395
You can make an entire
sandbox that's a tag.

927
00:30:45,395 --> 00:30:46,235
That's a Polymer app.

928
00:30:46,235 --> 00:30:48,640
And with inside of it, there's
other Polymer elements.

929
00:30:48,640 --> 00:30:50,840
So by itself, these
two frameworks can

930
00:30:50,840 --> 00:30:51,850
work absolutely together.

931
00:30:51,850 --> 00:30:52,830
You can create a component
here in Angular.

932
00:30:52,830 --> 00:30:54,210
Component here in Polymer.

933
00:30:54,210 --> 00:30:54,860
Custom elements.

934
00:30:54,860 --> 00:30:56,120
And they work really
well together.

935
00:30:56,120 --> 00:30:59,300
I think one thing I've seen is
people trying to use like a

936
00:30:59,300 --> 00:31:01,180
framework inside of Polymer and
that's where it starts to

937
00:31:01,180 --> 00:31:02,000
get challenging.

938
00:31:02,000 --> 00:31:04,730
And that's really due to the
complications of Shadow DOM

939
00:31:04,730 --> 00:31:07,200
Because a lot these frameworks,
jQuery, et cetera.

940
00:31:07,200 --> 00:31:10,050
And APIs, actually service
APIs, expect to be in the

941
00:31:10,050 --> 00:31:11,300
global name space.

942
00:31:11,300 --> 00:31:13,850
They expect to have a window
object, for instance.

943
00:31:13,850 --> 00:31:16,810
And so now we're switching this
paradigm of encapsulation

944
00:31:16,810 --> 00:31:18,350
where there's Shadow DOM
in other things.

945
00:31:18,350 --> 00:31:20,185
And you're not in that
same global context.

946
00:31:20,185 --> 00:31:21,790
So you have to compartmentalize

947
00:31:21,790 --> 00:31:22,140
functionality.

948
00:31:22,140 --> 00:31:24,370
MATT MCNULTY: We like thinking
about there's a barrier at the

949
00:31:24,370 --> 00:31:26,910
inside of an element versus the
outside of the element.

950
00:31:26,910 --> 00:31:28,530
And if you have two different
things on the inside of the

951
00:31:28,530 --> 00:31:30,040
element, that's going
to be a problem.

952
00:31:30,040 --> 00:31:31,640
But if you have a different
thing on the outside of the

953
00:31:31,640 --> 00:31:33,900
element than inside the
element, you're fine.

954
00:31:33,900 --> 00:31:36,010
ERIC BIDELMAN: It's like who
understands the mustache

955
00:31:36,010 --> 00:31:37,700
syntax when you're inside
of a [INAUDIBLE].

956
00:31:37,700 --> 00:31:39,120
Polymer or Angular, it's hard.

957
00:31:39,120 --> 00:31:40,650
ALEX KOMOROSKE: So outside
doesn't matter who you're

958
00:31:40,650 --> 00:31:40,960
using it with.

959
00:31:40,960 --> 00:31:44,030
It's inside where you pick
one to work with.

960
00:31:44,030 --> 00:31:45,990
ERIC BIDELMAN: Right.

961
00:31:45,990 --> 00:31:46,970
Cool.

962
00:31:46,970 --> 00:31:48,530
Did I lose my place again?

963
00:31:48,530 --> 00:31:51,330
Are there any Polymer Web
Components build tools for

964
00:31:51,330 --> 00:31:54,640
concatenating and minifying
Web Components?

965
00:31:54,640 --> 00:31:56,530
I'll just take a stab at
this real quickly.

966
00:31:56,530 --> 00:31:58,800
I think it's very early days
for tooling for Web

967
00:31:58,800 --> 00:31:59,750
Components.

968
00:31:59,750 --> 00:32:02,190
I'm particularly excited about
where things can go for this

969
00:32:02,190 --> 00:32:03,300
sort of thing.

970
00:32:03,300 --> 00:32:05,740
A lot of people have asked us
really great questions on our

971
00:32:05,740 --> 00:32:07,970
mailing lists and
RFC channels.

972
00:32:07,970 --> 00:32:09,960
It's going to be important, when
you have a slew of these

973
00:32:09,960 --> 00:32:12,200
custom elements that you're
building, you want to then

974
00:32:12,200 --> 00:32:13,310
have your normal bill process.

975
00:32:13,310 --> 00:32:14,420
You went to concatenate
things.

976
00:32:14,420 --> 00:32:14,960
You want to [INAUDIBLE]

977
00:32:14,960 --> 00:32:17,400
JavaScript, combine everything,
and have those

978
00:32:17,400 --> 00:32:18,940
good best practices.

979
00:32:18,940 --> 00:32:20,860
Again, really early, we've
already started experimenting

980
00:32:20,860 --> 00:32:23,680
with some of this becomes it's
come up enough that we should

981
00:32:23,680 --> 00:32:24,930
obviously start thinking
about it now.

982
00:32:24,930 --> 00:32:27,570
So Daniel on the team has
actually written a little node

983
00:32:27,570 --> 00:32:30,310
tool that can sort of compress
and concatenate all your

984
00:32:30,310 --> 00:32:31,520
elements into one.

985
00:32:31,520 --> 00:32:32,570
MATT MCNULTY: It's called
Vulcanizer.

986
00:32:32,570 --> 00:32:34,040
ERIC BIDELMAN: Vulcaniler.

987
00:32:34,040 --> 00:32:34,920
Pretty gnarly name.

988
00:32:34,920 --> 00:32:36,790
ALEX KOMOROSKE: But I think that
one thing to emphasize as

989
00:32:36,790 --> 00:32:41,400
well is HTML imports allows you
to package up components

990
00:32:41,400 --> 00:32:42,720
as an HTML file.

991
00:32:42,720 --> 00:32:43,950
We don't yet know what the best

992
00:32:43,950 --> 00:32:45,190
practices are to use that.

993
00:32:45,190 --> 00:32:46,440
And so I think it's
really early.

994
00:32:46,440 --> 00:32:50,330
We're still trying to explore
what that looks like.

995
00:32:50,330 --> 00:32:52,320
We're talking to various
networking experts in the

996
00:32:52,320 --> 00:32:54,580
specification process to really
figure out what are the

997
00:32:54,580 --> 00:32:55,570
best practices.

998
00:32:55,570 --> 00:32:57,550
And so we don't yet know.

999
00:32:57,550 --> 00:33:00,380
It will probably have some
sort of concatenation and

1000
00:33:00,380 --> 00:33:03,260
minifying, but we don't exactly
know what it's going

1001
00:33:03,260 --> 00:33:04,370
to look like.

1002
00:33:04,370 --> 00:33:04,685
Because it's early.

1003
00:33:04,685 --> 00:33:05,935
ERIC BIDELMAN: It is early.

1004
00:33:05,935 --> 00:33:08,310

1005
00:33:08,310 --> 00:33:09,570
Cool.

1006
00:33:09,570 --> 00:33:12,500
Will you be aiming and making
the transition from Polymer to

1007
00:33:12,500 --> 00:33:14,500
real web components when
they are ready?

1008
00:33:14,500 --> 00:33:15,600
ALEX KOMOROSKE: Switch
back to the diagram.

1009
00:33:15,600 --> 00:33:17,330
This is a common
misconception.

1010
00:33:17,330 --> 00:33:20,710
So Polymer, actually, when we
say Polymer we mean a bunch of

1011
00:33:20,710 --> 00:33:21,350
different things.

1012
00:33:21,350 --> 00:33:24,540
And in this diagram, the brown
on the left shows what Polymer

1013
00:33:24,540 --> 00:33:26,090
means when we talk about it.

1014
00:33:26,090 --> 00:33:27,180
ERIC BIDELMAN: Alex is
right over here.

1015
00:33:27,180 --> 00:33:29,020
ALEX KOMOROSKE: Thank you thank
you for pointing to that

1016
00:33:29,020 --> 00:33:29,880
with your pointing device.

1017
00:33:29,880 --> 00:33:31,272
ERIC BIDELMAN: I don't know how
well the brown shows up on

1018
00:33:31,272 --> 00:33:31,932
the screen.

1019
00:33:31,932 --> 00:33:34,730
ALEX KOMOROSKE: So
the red later,

1020
00:33:34,730 --> 00:33:36,640
ultimately, is just the standards.

1021
00:33:36,640 --> 00:33:37,830
It's just polyfills.

1022
00:33:37,830 --> 00:33:40,340
And when those are implemented
natively across all the

1023
00:33:40,340 --> 00:33:42,320
different browsers,
it just goes away.

1024
00:33:42,320 --> 00:33:43,870
These are Web Components.

1025
00:33:43,870 --> 00:33:47,410
And so the layer of the yellow
and the green, those are sort

1026
00:33:47,410 --> 00:33:49,700
of sugar an opinion that
Polymer adds on.

1027
00:33:49,700 --> 00:33:51,740
But they are web components.

1028
00:33:51,740 --> 00:33:54,630
These are not some special,
crazy other world.

1029
00:33:54,630 --> 00:33:56,565
And so this might be referring
to the Polymer

1030
00:33:56,565 --> 00:33:57,680
element versus element.

1031
00:33:57,680 --> 00:34:00,490
And, again, we answer that
earlier a few minutes ago.

1032
00:34:00,490 --> 00:34:01,910
MATT MCNULTY: It could also
be the transition

1033
00:34:01,910 --> 00:34:02,980
to Native as well.

1034
00:34:02,980 --> 00:34:06,580
So right now in Chrome Canary,
Polymer is using native

1035
00:34:06,580 --> 00:34:09,199
Shadown DOM optionally.

1036
00:34:09,199 --> 00:34:11,699
And very soon, hopefully, we'll
have some of the other

1037
00:34:11,699 --> 00:34:13,870
pieces in Native as well.

1038
00:34:13,870 --> 00:34:16,840
So as those things transition,
you'll see different browsers

1039
00:34:16,840 --> 00:34:20,010
move to Native as we go along.

1040
00:34:20,010 --> 00:34:21,679
And, again, Polymer is going
to try and be that

1041
00:34:21,679 --> 00:34:23,140
thin layer on top.

1042
00:34:23,140 --> 00:34:25,940
ERIC BIDELMAN: So the
answer is yes.

1043
00:34:25,940 --> 00:34:27,575
ALEX KOMOROSKE: We're
already there.

1044
00:34:27,575 --> 00:34:29,510
ERIC BIDELMAN: So I think
we're out of questions.

1045
00:34:29,510 --> 00:34:31,179
We really appreciate
you guys tuning in.

1046
00:34:31,179 --> 00:34:33,500
And definitely we would like
to have more of these.

1047
00:34:33,500 --> 00:34:37,000
If you're interested in checking
out Polymer, the URL

1048
00:34:37,000 --> 00:34:41,270
for documentation in the site
is polymer-project.org.

1049
00:34:41,270 --> 00:34:44,179
So you can download Polymer
there and all the goodness

1050
00:34:44,179 --> 00:34:45,570
that we talked about today.

1051
00:34:45,570 --> 00:34:46,084
And learn some of
the features.

1052
00:34:46,084 --> 00:34:47,920
ALEX KOMOROSKE: One thing I will
say too, if you have any

1053
00:34:47,920 --> 00:34:49,739
ideas for things you want
to hear talk about.

1054
00:34:49,739 --> 00:34:52,020
You want to talk to Dimitri
about Web Components specs.

1055
00:34:52,020 --> 00:34:54,179
You want to talk to
Dominic about

1056
00:34:54,179 --> 00:34:55,170
implementing these in Blink.

1057
00:34:55,170 --> 00:34:57,040
You want to talk to Scott
about some of the

1058
00:34:57,040 --> 00:34:58,070
architecture decisions.

1059
00:34:58,070 --> 00:35:00,840
Or Steve about some of the
specifics of how this whole.

1060
00:35:00,840 --> 00:35:02,330
Let us know.

1061
00:35:02,330 --> 00:35:05,670
We're looking for ideas
of other things

1062
00:35:05,670 --> 00:35:06,480
that we talk about.

1063
00:35:06,480 --> 00:35:06,740
[INAUDIBLE]

1064
00:35:06,740 --> 00:35:08,510
polymer-dev or whatever
you want to do.

1065
00:35:08,510 --> 00:35:09,570
ERIC BIDELMAN: Totally.

1066
00:35:09,570 --> 00:35:12,870
Polymer-dev at Google Groups is
our mailing list if you're

1067
00:35:12,870 --> 00:35:13,630
interested in talking with us.

1068
00:35:13,630 --> 00:35:14,600
ALEX KOMOROSKE: A lot
of really good

1069
00:35:14,600 --> 00:35:15,410
conversation there.

1070
00:35:15,410 --> 00:35:16,300
ERIC BIDELMAN: Good stuff.

1071
00:35:16,300 --> 00:35:16,890
Cool.

1072
00:35:16,890 --> 00:35:17,760
We're signing off online.

1073
00:35:17,760 --> 00:35:18,690
We really appreciate
you guys's time.

1074
00:35:18,690 --> 00:35:19,940
Thanks for joining us.

1075
00:35:19,940 --> 00:35:20,933

