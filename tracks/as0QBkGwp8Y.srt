1
00:00:00,000 --> 00:00:00,482

2
00:00:00,482 --> 00:00:02,930
JONATHAN BERI: So this session,
we're going to

3
00:00:02,930 --> 00:00:05,780
introduce you all to the
Google+ Sign-In and the

4
00:00:05,780 --> 00:00:07,580
Google+ platform.

5
00:00:07,580 --> 00:00:09,700
You may have seen the Google+
Sign-In for the very first

6
00:00:09,700 --> 00:00:11,710
time this morning, during
the keynote.

7
00:00:11,710 --> 00:00:14,230
Or you browsed the Docs and
want to get started.

8
00:00:14,230 --> 00:00:15,740
So this session is for you.

9
00:00:15,740 --> 00:00:17,860
We're going to go over the core
features of the Google+

10
00:00:17,860 --> 00:00:21,670
platform and the Google+ Sign-In
button and show you

11
00:00:21,670 --> 00:00:25,250
just enough code to give you
the right set of context.

12
00:00:25,250 --> 00:00:28,830
Before we get too far into it,
allow me to introduce myself.

13
00:00:28,830 --> 00:00:30,240
My name is Jonathan Beri.

14
00:00:30,240 --> 00:00:33,310
I'm a developer advocate on
the Google+ platform.

15
00:00:33,310 --> 00:00:35,770
If you have questions about
this session afterwards or

16
00:00:35,770 --> 00:00:38,510
want to learn more about the
Google+ platform and just

17
00:00:38,510 --> 00:00:41,105
generally talk to somebody on
the Google+ team, add me to

18
00:00:41,105 --> 00:00:41,550
your Circles.

19
00:00:41,550 --> 00:00:42,900
That's a link to my profile.

20
00:00:42,900 --> 00:00:44,650
That's the best way to
get a hold of me.

21
00:00:44,650 --> 00:00:46,560
And yeah, I'm responsive.

22
00:00:46,560 --> 00:00:49,440
And you can ask me technical
questions or anything else.

23
00:00:49,440 --> 00:00:51,512
I'm also joined by my colleague
from Google+.

24
00:00:51,512 --> 00:00:53,730
RIDHIMA KEDIA: Hi, I'm Ridhima
Kedia, a technical leader in

25
00:00:53,730 --> 00:00:55,950
Google+ platform.

26
00:00:55,950 --> 00:00:58,440
JONATHAN BERI: Awesome,
thank you, Ridhima.

27
00:00:58,440 --> 00:00:59,430
So today's agenda &mdash;

28
00:00:59,430 --> 00:01:03,790
we're going to cover four main
areas of the Google+ platform.

29
00:01:03,790 --> 00:01:06,870
The first and most important is
the Google+ Sign-In button.

30
00:01:06,870 --> 00:01:10,250
This is a widget, a plug-in, a
snippet of code that you can

31
00:01:10,250 --> 00:01:12,830
add to your applications to
enable users to connect their

32
00:01:12,830 --> 00:01:15,330
Google accounts to
your services.

33
00:01:15,330 --> 00:01:17,980
And with it, we add a little bit
of Google magic that we're

34
00:01:17,980 --> 00:01:20,400
going to show you a
little bit later.

35
00:01:20,400 --> 00:01:23,090
Once the user is signed in,
they've granted access to

36
00:01:23,090 --> 00:01:24,140
their Google profile.

37
00:01:24,140 --> 00:01:26,540
So you can start integrating
that profile, making a

38
00:01:26,540 --> 00:01:28,720
personalized and engaging
experience

39
00:01:28,720 --> 00:01:32,240
and a returning user.

40
00:01:32,240 --> 00:01:34,980
With Google+ Sign-In, we also
introduced a new form of

41
00:01:34,980 --> 00:01:38,840
sharing, a type of targeted
sharing that enables users to

42
00:01:38,840 --> 00:01:41,240
reach out to their friends on
Google and then bring them

43
00:01:41,240 --> 00:01:43,590
back to your app in
an engaged way.

44
00:01:43,590 --> 00:01:46,810
So they can start using your
application in a social way,

45
00:01:46,810 --> 00:01:48,660
instantaneously.

46
00:01:48,660 --> 00:01:51,120
And the last piece we're going
to cover is what we call App

47
00:01:51,120 --> 00:01:51,720
Activities.

48
00:01:51,720 --> 00:01:55,930
This is a way to enable you to
write activities to Google

49
00:01:55,930 --> 00:01:57,950
that users are doing
within your app.

50
00:01:57,950 --> 00:02:01,210
And then Google will surface
those activities in meaningful

51
00:02:01,210 --> 00:02:03,280
times across Google, at
the right moment,

52
00:02:03,280 --> 00:02:05,110
for the right user.

53
00:02:05,110 --> 00:02:06,060
Great.

54
00:02:06,060 --> 00:02:08,530
So let's start thinking
social.

55
00:02:08,530 --> 00:02:10,639
I work with a lot of developers,
and they tell me

56
00:02:10,639 --> 00:02:12,180
the same thing.

57
00:02:12,180 --> 00:02:14,140
I want to use social
platforms.

58
00:02:14,140 --> 00:02:16,320
I want to integrate social into
my applications, but I

59
00:02:16,320 --> 00:02:18,330
don't know where to begin.

60
00:02:18,330 --> 00:02:20,620
Let's pause for a minute and
think about what does it mean

61
00:02:20,620 --> 00:02:23,140
to be social in our
daily lives?

62
00:02:23,140 --> 00:02:24,620
It's really about two things &mdash;

63
00:02:24,620 --> 00:02:26,920
people and connections.

64
00:02:26,920 --> 00:02:30,890
So similarly, to enable social
within your applications, it's

65
00:02:30,890 --> 00:02:35,010
about bringing people and
connections into your apps.

66
00:02:35,010 --> 00:02:37,800
And the reason why you want to
do that as a developer is to

67
00:02:37,800 --> 00:02:40,760
acquire new users and
increase engagement.

68
00:02:40,760 --> 00:02:44,230
And in fact, with the Google+
platform and Google+ Sign-In,

69
00:02:44,230 --> 00:02:47,120
the features we built were
targeted to make sure that we

70
00:02:47,120 --> 00:02:50,280
can help you get new users
and increase engagement.

71
00:02:50,280 --> 00:02:52,260
And throughout this talk, we'll
mention those features,

72
00:02:52,260 --> 00:02:55,170
where they help you get users
and increase engagement.

73
00:02:55,170 --> 00:02:56,380
And a bit of a spoiler &mdash;

74
00:02:56,380 --> 00:02:58,190
it's all the features.

75
00:02:58,190 --> 00:03:00,110
All right?

76
00:03:00,110 --> 00:03:01,040
Great.

77
00:03:01,040 --> 00:03:03,450
So let's talk about the
Google+ Sign-In.

78
00:03:03,450 --> 00:03:07,310
And where it starts, it
starts with a button.

79
00:03:07,310 --> 00:03:10,530
The Google+ Sign-In is a button
you can add to your web

80
00:03:10,530 --> 00:03:13,570
apps, to your mobile
apps, and your iOS.

81
00:03:13,570 --> 00:03:17,160
It's a plug-in, it's a widget,
it's a piece of HTML that

82
00:03:17,160 --> 00:03:19,160
enables users to connect
their Google

83
00:03:19,160 --> 00:03:21,580
account with your service.

84
00:03:21,580 --> 00:03:24,350
It's a seamless experience to
allow them to authorize you to

85
00:03:24,350 --> 00:03:27,820
start accessing their
profile information.

86
00:03:27,820 --> 00:03:30,930
And when you add the Google+
Sign-In button to your apps,

87
00:03:30,930 --> 00:03:32,790
you can be confident that users
are going to start to

88
00:03:32,790 --> 00:03:35,030
use it as a way to log in.

89
00:03:35,030 --> 00:03:38,320
That's because Google
is a trusted brand &mdash;

90
00:03:38,320 --> 00:03:41,320
a brand built on privacy
and security.

91
00:03:41,320 --> 00:03:45,840
We have things like two-factor
authentication, multi-login,

92
00:03:45,840 --> 00:03:49,510
and the controlled sharing of
Circles that gets carried over

93
00:03:49,510 --> 00:03:52,010
with the Google+ Sign-In
product.

94
00:03:52,010 --> 00:03:55,610
And as developer, Google handles
the authorization for

95
00:03:55,610 --> 00:03:58,990
you, which is a very complicated
problem that we

96
00:03:58,990 --> 00:04:01,030
help you solve.

97
00:04:01,030 --> 00:04:03,830
So a user clicks that button,
and we take them through the

98
00:04:03,830 --> 00:04:04,980
authorization flow.

99
00:04:04,980 --> 00:04:07,210
Here's the authorization screen
that a user might see

100
00:04:07,210 --> 00:04:09,430
if they're using Jolicloud.

101
00:04:09,430 --> 00:04:11,400
And there's three
major sections.

102
00:04:11,400 --> 00:04:14,120
There's the branding at the top,
the set of permissions

103
00:04:14,120 --> 00:04:16,839
you're asking the users to
confirm, and the ability for

104
00:04:16,839 --> 00:04:19,860
them to accept or deny
your request.

105
00:04:19,860 --> 00:04:21,959
Let's walk through each part.

106
00:04:21,959 --> 00:04:23,490
So the top is the branding.

107
00:04:23,490 --> 00:04:25,870
This is controlled by you, as
a developer, to let the user

108
00:04:25,870 --> 00:04:27,880
know who they are about
to sign into.

109
00:04:27,880 --> 00:04:30,460

110
00:04:30,460 --> 00:04:31,690
Now let's walk through
those permissions.

111
00:04:31,690 --> 00:04:36,990
The very first line is the basic
Google+ API permissions.

112
00:04:36,990 --> 00:04:39,210
This enables you, as a
developer, to access the

113
00:04:39,210 --> 00:04:41,530
user's public profile
information &mdash;

114
00:04:41,530 --> 00:04:43,820
things like their first and
last name, their profile

115
00:04:43,820 --> 00:04:47,210
picture, their Google ID, and
anything else they might have

116
00:04:47,210 --> 00:04:49,460
enabled on their profile
to be public.

117
00:04:49,460 --> 00:04:52,430
But it also includes the people
that they follow in

118
00:04:52,430 --> 00:04:53,130
their Circles.

119
00:04:53,130 --> 00:04:56,040
This is a flat list of the
people and the pages that

120
00:04:56,040 --> 00:04:56,740
they've added on Google+.

121
00:04:56,740 --> 00:05:00,800
And you'll notice there is
an Edit List option.

122
00:05:00,800 --> 00:05:04,170
This is the very first place
that we provide control and

123
00:05:04,170 --> 00:05:08,450
trust to the user, so they can
say who you, as a developer,

124
00:05:08,450 --> 00:05:10,310
know about in their Circles.

125
00:05:10,310 --> 00:05:11,580
This creates confidence
for the Google+

126
00:05:11,580 --> 00:05:15,600
Sign-In as a login solution.

127
00:05:15,600 --> 00:05:17,190
The next line is another
permission.

128
00:05:17,190 --> 00:05:19,880
This is actually the Google
Drive permission.

129
00:05:19,880 --> 00:05:23,940
So with Google+ Sign-In, we
enable you to use multiple

130
00:05:23,940 --> 00:05:26,980
Google APIs in a single
authorization flow.

131
00:05:26,980 --> 00:05:29,400
This is very powerful, because
Google provides a lot of great

132
00:05:29,400 --> 00:05:31,700
services that could benefit
you as a developer.

133
00:05:31,700 --> 00:05:34,600
And the user only has to
authorize those services in a

134
00:05:34,600 --> 00:05:37,690
single dialogue.

135
00:05:37,690 --> 00:05:40,460
The next line is their
Google email.

136
00:05:40,460 --> 00:05:43,980
This is their official email
they use to log in every

137
00:05:43,980 --> 00:05:45,000
single day.

138
00:05:45,000 --> 00:05:48,040
There's not a form field they
might mistype that email or a

139
00:05:48,040 --> 00:05:50,870
spam account they might want
to not deal with, if they

140
00:05:50,870 --> 00:05:51,920
register for your service.

141
00:05:51,920 --> 00:05:55,520
So you can trust that this is
their real Google email.

142
00:05:55,520 --> 00:05:57,930
So if you have existing user
accounts, and you see this

143
00:05:57,930 --> 00:06:00,400
email, this is most
likely that user.

144
00:06:00,400 --> 00:06:03,130
And if you get emails from other
networks, you can use

145
00:06:03,130 --> 00:06:06,510
that as a join to combine
user accounts.

146
00:06:06,510 --> 00:06:09,547
And the last bit is the
permission to write App

147
00:06:09,547 --> 00:06:11,430
Activities on behalf
of that user.

148
00:06:11,430 --> 00:06:16,780
And like the List field, the
user can control just exactly

149
00:06:16,780 --> 00:06:19,450
who can see their activities and
which activities are being

150
00:06:19,450 --> 00:06:20,700
written on their behalf.

151
00:06:20,700 --> 00:06:23,210

152
00:06:23,210 --> 00:06:24,890
So now for that magic &mdash;

153
00:06:24,890 --> 00:06:26,390
a little bit of the
Google magic.

154
00:06:26,390 --> 00:06:30,040
When a user signs in the Google+
Sign-In button, and

155
00:06:30,040 --> 00:06:33,730
you have an App in the Google
Play Store, if that user has

156
00:06:33,730 --> 00:06:37,376
an Android device, when they
click that button, in that

157
00:06:37,376 --> 00:06:40,980
flow, we will ask them, would
you like to install this

158
00:06:40,980 --> 00:06:43,090
Android app, as well?

159
00:06:43,090 --> 00:06:45,330
And Google handles
that for you.

160
00:06:45,330 --> 00:06:49,470
So we're pushing your Android
app directly to engaged users,

161
00:06:49,470 --> 00:06:51,890
who already have connected with
your service, directly to

162
00:06:51,890 --> 00:06:53,990
the phone in their pocket.

163
00:06:53,990 --> 00:06:55,090
They don't even have
to take it out.

164
00:06:55,090 --> 00:06:58,420
This is the number one easiest
way for Android developers to

165
00:06:58,420 --> 00:07:00,890
acquire Android users.

166
00:07:00,890 --> 00:07:02,250
And this is one of
those features

167
00:07:02,250 --> 00:07:03,620
that seeing is believing.

168
00:07:03,620 --> 00:07:05,070
So let's watch a short
clip from one of

169
00:07:05,070 --> 00:07:07,240
our integration partners.

170
00:07:07,240 --> 00:07:09,520
PETE MOLETIERRE: The main driver
behind our success is

171
00:07:09,520 --> 00:07:12,030
having a product that's
easy to use and

172
00:07:12,030 --> 00:07:13,420
delights our customers.

173
00:07:13,420 --> 00:07:16,120
Over-the-air install provides
users with a seamless

174
00:07:16,120 --> 00:07:17,150
experience.

175
00:07:17,150 --> 00:07:19,640
They create their account or
log into it for the first

176
00:07:19,640 --> 00:07:22,690
time, and our Android
application is automatically

177
00:07:22,690 --> 00:07:25,270
installed on the user's
smartphone, so that they can

178
00:07:25,270 --> 00:07:27,270
have a delightful first
time experience.

179
00:07:27,270 --> 00:07:37,020
[MUSIC PLAYING]

180
00:07:37,020 --> 00:07:38,870
JONATHAN BERI: Awesome, huh?

181
00:07:38,870 --> 00:07:41,340
And as we saw in the keynote
today, if they've logged in

182
00:07:41,340 --> 00:07:43,740
already on the web, they have
that Android app on their

183
00:07:43,740 --> 00:07:47,690
phone, they're seamlessly signed
in with seamless sign

184
00:07:47,690 --> 00:07:49,950
on across platforms.

185
00:07:49,950 --> 00:07:52,650
Now we've been out for about
two months now, and we're

186
00:07:52,650 --> 00:07:55,440
seeing fantastic conversion
rates for users.

187
00:07:55,440 --> 00:07:59,210
So we announced just yesterday
that 40% of users who see this

188
00:07:59,210 --> 00:08:01,290
dialogue say yes.

189
00:08:01,290 --> 00:08:04,560
And that doesn't include the
users who already have your

190
00:08:04,560 --> 00:08:05,390
Android app installed.

191
00:08:05,390 --> 00:08:09,390
So this is a number one way
to get new Android users.

192
00:08:09,390 --> 00:08:11,260
So now, I'm going to turn it
over to Ridhima to show us

193
00:08:11,260 --> 00:08:13,600
some that code to add the
Google+ Sign-In button to your

194
00:08:13,600 --> 00:08:14,850
applications.

195
00:08:14,850 --> 00:08:17,440

196
00:08:17,440 --> 00:08:18,880
RIDHIMA KEDIA: Thank
you, Jonathan.

197
00:08:18,880 --> 00:08:22,130
When we designed Google+
Sign-In, one of our key goals

198
00:08:22,130 --> 00:08:25,800
was to reduce integration
complexity for developers.

199
00:08:25,800 --> 00:08:28,730
It really is amazingly simple
to integrate this into your

200
00:08:28,730 --> 00:08:29,930
application.

201
00:08:29,930 --> 00:08:32,950
For example, we use OAuth
2.0 to allow the user to

202
00:08:32,950 --> 00:08:34,200
authorize your app.

203
00:08:34,200 --> 00:08:36,530
But all the implementation
details are completely hidden

204
00:08:36,530 --> 00:08:37,240
away from you.

205
00:08:37,240 --> 00:08:39,820
You don't have to worry about
any implementation details

206
00:08:39,820 --> 00:08:41,539
regarding OAuth 2.0.

207
00:08:41,539 --> 00:08:44,520
This integration simplicity has
been extended across all

208
00:08:44,520 --> 00:08:47,050
the different platforms that
we support, be it web,

209
00:08:47,050 --> 00:08:48,300
Android, or iOS.

210
00:08:48,300 --> 00:08:51,040

211
00:08:51,040 --> 00:08:53,370
If you remember nothing else
from this talk, please

212
00:08:53,370 --> 00:08:57,830
remember our developer site,
developers.google.com/+.

213
00:08:57,830 --> 00:09:00,670
We have quick start, sample
code, reference material to

214
00:09:00,670 --> 00:09:04,000
guide you through your
development.

215
00:09:04,000 --> 00:09:06,860
Let's quickly talk through all
the integration steps.

216
00:09:06,860 --> 00:09:10,010
The very first step is to go
to the API console and

217
00:09:10,010 --> 00:09:11,790
register your application.

218
00:09:11,790 --> 00:09:13,990
On doing that, you will
receive a client ID.

219
00:09:13,990 --> 00:09:15,640
Please make note of
this client ID.

220
00:09:15,640 --> 00:09:18,090
We will use it in the sign up
process to identify your

221
00:09:18,090 --> 00:09:19,340
application.

222
00:09:19,340 --> 00:09:21,510

223
00:09:21,510 --> 00:09:23,130
Now let's take the
web JavaScript

224
00:09:23,130 --> 00:09:24,770
library for an example.

225
00:09:24,770 --> 00:09:27,820
What does it take to put that
button on your web page?

226
00:09:27,820 --> 00:09:30,270
You need to load a single
JavaScript library from

227
00:09:30,270 --> 00:09:33,326
Google, and you need to add
markup on your page where you

228
00:09:33,326 --> 00:09:34,900
want us to render the button &mdash;

229
00:09:34,900 --> 00:09:35,780
that's it.

230
00:09:35,780 --> 00:09:36,390
We take it from there.

231
00:09:36,390 --> 00:09:39,170
We will parse your page and
render the button, based on

232
00:09:39,170 --> 00:09:41,730
the configuration options
that you specify.

233
00:09:41,730 --> 00:09:44,210
The button will be rendered,
localized in the language of

234
00:09:44,210 --> 00:09:46,230
the currently logged
in Google user.

235
00:09:46,230 --> 00:09:49,050
And we also allow you to use
custom styling to tweak the

236
00:09:49,050 --> 00:09:50,070
look of the button.

237
00:09:50,070 --> 00:09:52,790
All we ask is that you respect
our branding guidelines.

238
00:09:52,790 --> 00:09:54,430
These are posted on the
developer site that I

239
00:09:54,430 --> 00:09:57,680
mentioned earlier.

240
00:09:57,680 --> 00:09:58,550
Let's talk through
the different

241
00:09:58,550 --> 00:10:00,620
options that are available.

242
00:10:00,620 --> 00:10:03,520
By specifying the g-signin
class, you tell us where in

243
00:10:03,520 --> 00:10:07,320
your DOM you want us to
render the button.

244
00:10:07,320 --> 00:10:10,700
Remember the client ID we just
fetched from the API console.

245
00:10:10,700 --> 00:10:13,080
You need to specify that here,
so that we can identify your

246
00:10:13,080 --> 00:10:14,330
application.

247
00:10:14,330 --> 00:10:16,050

248
00:10:16,050 --> 00:10:18,160
So when you walk through the
content dialogue, we saw that

249
00:10:18,160 --> 00:10:20,830
your app can ask the user
for certain permissions.

250
00:10:20,830 --> 00:10:24,680
Plus.login is the very basic
scope for Google+ platform

251
00:10:24,680 --> 00:10:27,460
integration, which allows you
to fetch the user's profile

252
00:10:27,460 --> 00:10:29,450
data, meaning their
name, profile

253
00:10:29,450 --> 00:10:32,030
URL, age range, gender.

254
00:10:32,030 --> 00:10:33,840
It also allows you to
fetch the people

255
00:10:33,840 --> 00:10:35,250
in the user's Circles.

256
00:10:35,250 --> 00:10:37,820
In addition, it allows you
to write back different

257
00:10:37,820 --> 00:10:40,970
activities that the user is
taking within your app back to

258
00:10:40,970 --> 00:10:43,650
Google, so that we can surface
it in interesting

259
00:10:43,650 --> 00:10:46,030
and relevant contexts.

260
00:10:46,030 --> 00:10:47,840
Your app may require additional
permissions.

261
00:10:47,840 --> 00:10:51,060
So for example, if you need to
access the user's files, you

262
00:10:51,060 --> 00:10:52,790
would ask for the Drive
scope here.

263
00:10:52,790 --> 00:10:55,610
Suppose you use Wallet as part
of your payment solution.

264
00:10:55,610 --> 00:10:56,640
You would also ask for the

265
00:10:56,640 --> 00:10:58,410
payments.makepayment scope here.

266
00:10:58,410 --> 00:11:01,680

267
00:11:01,680 --> 00:11:04,690
By specifying a cookie policy,
you allow us to optimize

268
00:11:04,690 --> 00:11:08,230
performance by caching OAuth 2.0
tokens by storing cookies

269
00:11:08,230 --> 00:11:09,360
on your site.

270
00:11:09,360 --> 00:11:11,670
The complete documentation for
this is available on our

271
00:11:11,670 --> 00:11:12,920
developer site.

272
00:11:12,920 --> 00:11:15,040

273
00:11:15,040 --> 00:11:17,475
Remember these App Activities we
keep talking about that you

274
00:11:17,475 --> 00:11:19,060
can write back to Google?

275
00:11:19,060 --> 00:11:21,930
Using request visible actions,
you specify what are the

276
00:11:21,930 --> 00:11:25,110
different activity types that
you would like to write back.

277
00:11:25,110 --> 00:11:27,300
There are over 10 different
activity types to choose from,

278
00:11:27,300 --> 00:11:30,240
and you can specify more than
one activity type here.

279
00:11:30,240 --> 00:11:32,890
For example, if you wanted to
write back user purchase

280
00:11:32,890 --> 00:11:35,430
events, you would specify
the buy activity here.

281
00:11:35,430 --> 00:11:38,470

282
00:11:38,470 --> 00:11:41,580
You can specify a JavaScript
callback that will be called

283
00:11:41,580 --> 00:11:43,350
on a successful auth result.

284
00:11:43,350 --> 00:11:46,085
This could be as a result of
the user clicking Accept on

285
00:11:46,085 --> 00:11:48,930
the consent dialogue or as the
result of auto-approval, in

286
00:11:48,930 --> 00:11:51,760
case the user has ever
authorized your app before on

287
00:11:51,760 --> 00:11:53,280
Android or web.

288
00:11:53,280 --> 00:11:56,120
In any case, in this callback,
we recommend that you hide the

289
00:11:56,120 --> 00:11:59,220
Sign-In button, and you can go
ahead and personalize your app

290
00:11:59,220 --> 00:12:00,590
to give the user a better
experience.

291
00:12:00,590 --> 00:12:03,940

292
00:12:03,940 --> 00:12:06,360
So here is the code snippet that
you would need to add to

293
00:12:06,360 --> 00:12:09,010
your page to load the JavaScript
library we talked

294
00:12:09,010 --> 00:12:10,440
about earlier.

295
00:12:10,440 --> 00:12:14,660
This is the same plusone.js that
we use for all Google+

296
00:12:14,660 --> 00:12:17,440
plug-ins, including
the +1 button.

297
00:12:17,440 --> 00:12:20,330
So if you have integrated +1
already on your site, you

298
00:12:20,330 --> 00:12:22,280
would already have this code
snippet, and you don't need to

299
00:12:22,280 --> 00:12:23,440
add it again.

300
00:12:23,440 --> 00:12:26,710
plusone.js parses the page and
renders the button, based on

301
00:12:26,710 --> 00:12:27,960
your configuration options.

302
00:12:27,960 --> 00:12:30,550

303
00:12:30,550 --> 00:12:33,840
As Jonathan just showed you,
one of the most amazing

304
00:12:33,840 --> 00:12:37,050
features of Google+ Sign-In is
driving over-the-air installs

305
00:12:37,050 --> 00:12:39,980
of your Android app right
from the Sign-In flow.

306
00:12:39,980 --> 00:12:42,190
It's completely trivial
for you to set up.

307
00:12:42,190 --> 00:12:45,170
All you do is specify the app
package name, and we will take

308
00:12:45,170 --> 00:12:46,060
it from there.

309
00:12:46,060 --> 00:12:48,470
We will decide how and when to
show the dialogue and all the

310
00:12:48,470 --> 00:12:51,500
different error conditions.

311
00:12:51,500 --> 00:12:54,650
As I mentioned earlier, this
integration simplicity extends

312
00:12:54,650 --> 00:12:56,730
across mobile platforms,
as well.

313
00:12:56,730 --> 00:12:59,580
On Android, we provide
Google Play services.

314
00:12:59,580 --> 00:13:02,260
This is a background service
already running on most

315
00:13:02,260 --> 00:13:05,920
Android devices that lets you
easily make Google API calls.

316
00:13:05,920 --> 00:13:09,150
This means that to invoke the
Sign-In flow, you call connect

317
00:13:09,150 --> 00:13:14,590
on the PlusClient library, and
the Sign-In flow initiates.

318
00:13:14,590 --> 00:13:17,390
Similarly, we have a
native SDK for iOS.

319
00:13:17,390 --> 00:13:19,760
To start the Sign-In flow, you
would need to configure the

320
00:13:19,760 --> 00:13:23,080
GPPSignIn shared singleton
instance.

321
00:13:23,080 --> 00:13:25,950
Then you can go ahead and make
authenticated calls, once the

322
00:13:25,950 --> 00:13:28,070
user authorizes your app.

323
00:13:28,070 --> 00:13:30,880
So now that we have an
authenticated user, Jonathan

324
00:13:30,880 --> 00:13:33,300
will tell you more about how you
can personalize your site

325
00:13:33,300 --> 00:13:36,440
to give the user a
good experience.

326
00:13:36,440 --> 00:13:37,690
JONATHAN BERI: Thank
you, Ridhima.

327
00:13:37,690 --> 00:13:39,840

328
00:13:39,840 --> 00:13:42,370
So the user's connected with
your service and has allowed

329
00:13:42,370 --> 00:13:44,610
to access their Google
account.

330
00:13:44,610 --> 00:13:47,290
So at this point, you want to
start personalizing that

331
00:13:47,290 --> 00:13:50,150
experience, integrating their
Google information to make

332
00:13:50,150 --> 00:13:53,450
their login view personal
to them.

333
00:13:53,450 --> 00:13:55,180
You can start integrating their
profile to make it an

334
00:13:55,180 --> 00:13:57,110
engaging new user experience.

335
00:13:57,110 --> 00:13:59,505
You can streamline registration,
or you can even

336
00:13:59,505 --> 00:14:01,660
forego registration all together
and start pulling

337
00:14:01,660 --> 00:14:05,790
their profile and making
them that new user.

338
00:14:05,790 --> 00:14:08,800
You can also start using their
Circles, the people in their

339
00:14:08,800 --> 00:14:11,360
Circles, and suggest content
and connections,

340
00:14:11,360 --> 00:14:12,990
based on that data.

341
00:14:12,990 --> 00:14:14,760
So let's take a look
at two examples.

342
00:14:14,760 --> 00:14:16,720
So this is Flixster.com,
who has already

343
00:14:16,720 --> 00:14:18,590
integrated Google+ Sign-In.

344
00:14:18,590 --> 00:14:20,780
And this is one of
my real accounts.

345
00:14:20,780 --> 00:14:23,410
You can see they've pulled in
my profile information, so I

346
00:14:23,410 --> 00:14:25,440
know which account
I'm logged into.

347
00:14:25,440 --> 00:14:27,930
They have my first and
last name that

348
00:14:27,930 --> 00:14:28,800
they've pulled in directly &mdash;

349
00:14:28,800 --> 00:14:30,420
I've never typed that in.

350
00:14:30,420 --> 00:14:32,450
And behind the scenes, they are
doing a few other things

351
00:14:32,450 --> 00:14:33,800
which are not clear here.

352
00:14:33,800 --> 00:14:35,600
But they have my Google email.

353
00:14:35,600 --> 00:14:39,930
So they're actually sending me
email notifications when

354
00:14:39,930 --> 00:14:42,200
videos and films that I'm
tracking are now in theaters

355
00:14:42,200 --> 00:14:44,840
or available to purchase.

356
00:14:44,840 --> 00:14:48,500
On the side, they actually pull
in my Google Circles.

357
00:14:48,500 --> 00:14:52,000
These are friends of mine who
are using Google+ Sign-In and

358
00:14:52,000 --> 00:14:53,320
are using Flixster.

359
00:14:53,320 --> 00:14:55,560
So this way, I can start
tracking their activity and

360
00:14:55,560 --> 00:14:58,430
see what they're doing
right on Flixster.

361
00:14:58,430 --> 00:15:01,050
And this is a pretty powerful
integration, integrating

362
00:15:01,050 --> 00:15:03,900
Circles to help me discover
my friends.

363
00:15:03,900 --> 00:15:06,750
But using that same data, you
could have a more meaningful

364
00:15:06,750 --> 00:15:08,860
experience.

365
00:15:08,860 --> 00:15:10,160
Let's take a look at Banjo.

366
00:15:10,160 --> 00:15:13,490
Banjo is another integration
partner of Google+ Sign-In.

367
00:15:13,490 --> 00:15:15,480
And they do something
very powerful here.

368
00:15:15,480 --> 00:15:17,830
What they do is they take a
bunch of different social

369
00:15:17,830 --> 00:15:20,860
networks, and they do joins
across those networks.

370
00:15:20,860 --> 00:15:23,412
And they help me discover people
I might be interested

371
00:15:23,412 --> 00:15:27,030
in, based off of my social
connections.

372
00:15:27,030 --> 00:15:30,025
So by taking the people in my
circle, these connections that

373
00:15:30,025 --> 00:15:33,340
I talked about earlier, you can
make for a more meaningful

374
00:15:33,340 --> 00:15:34,320
experience.

375
00:15:34,320 --> 00:15:36,840
This is an engagement tool.

376
00:15:36,840 --> 00:15:39,950
You can use social connections
to help users discover new

377
00:15:39,950 --> 00:15:44,120
content, whether that be new
people to follow or maybe a

378
00:15:44,120 --> 00:15:45,820
new interesting video that
their friends are

379
00:15:45,820 --> 00:15:47,790
watching right now.

380
00:15:47,790 --> 00:15:52,350
Again, this is helping those
users stay longer and interact

381
00:15:52,350 --> 00:15:54,070
more deeply.

382
00:15:54,070 --> 00:15:57,470
Now Ridhima, to see some code.

383
00:15:57,470 --> 00:15:58,830
RIDHIMA KEDIA: Thank
you, Jonathan.

384
00:15:58,830 --> 00:16:01,440
So now that we have an
authenticated user, we can

385
00:16:01,440 --> 00:16:04,590
start making authenticated API
requests to fetch their social

386
00:16:04,590 --> 00:16:08,050
data, like their profile
data or their friends.

387
00:16:08,050 --> 00:16:10,890
We have client libraries in all
major languages and native

388
00:16:10,890 --> 00:16:12,430
SDKs for mobile.

389
00:16:12,430 --> 00:16:14,530
Once again, let's look at
web for an example.

390
00:16:14,530 --> 00:16:17,260

391
00:16:17,260 --> 00:16:19,810
So for our client libraries,
we have built a common

392
00:16:19,810 --> 00:16:22,710
infrastructure that we call
the Discovery Service.

393
00:16:22,710 --> 00:16:25,500
Using metadata, we dynamically
build native

394
00:16:25,500 --> 00:16:27,050
methods for an API.

395
00:16:27,050 --> 00:16:30,520
This means that you only have to
use a single client library

396
00:16:30,520 --> 00:16:32,380
for any Google API call.

397
00:16:32,380 --> 00:16:35,330
So if you're making any Google
API calls in your application,

398
00:16:35,330 --> 00:16:40,200
you would already be familiar
with these client libraries.

399
00:16:40,200 --> 00:16:43,460
Loading the plusone.js
code snippet defines

400
00:16:43,460 --> 00:16:45,510
the gapi local object.

401
00:16:45,510 --> 00:16:48,680
We can use this now to load
different client modules.

402
00:16:48,680 --> 00:16:51,712
In order to make social API
calls, we would load the plus

403
00:16:51,712 --> 00:16:52,980
v1 module here.

404
00:16:52,980 --> 00:16:55,780
If we had wanted to make
calender API calls, we would

405
00:16:55,780 --> 00:17:00,470
have loaded the calendar
v3 module here.

406
00:17:00,470 --> 00:17:02,840
Loading the plus v1
module defines the

407
00:17:02,840 --> 00:17:04,740
gapi client plus object.

408
00:17:04,740 --> 00:17:07,579
Now if you want to fetch the
user's profile data, you would

409
00:17:07,579 --> 00:17:09,859
call people.get on
this object.

410
00:17:09,859 --> 00:17:12,150
You would need to specify the
user ID which you want to

411
00:17:12,150 --> 00:17:13,510
fetch data for.

412
00:17:13,510 --> 00:17:15,970
If you want to fetch data for
the currently logged in Google

413
00:17:15,970 --> 00:17:19,829
user, we provide you
a shortcut &mdash; me.

414
00:17:19,829 --> 00:17:22,730
Similarly, if you had wanted to
fetch the user's friends,

415
00:17:22,730 --> 00:17:25,930
we would call people.list on
the same object, again

416
00:17:25,930 --> 00:17:29,700
specifying the same user ID
parameter for which you again

417
00:17:29,700 --> 00:17:31,090
have the shortcut, me.

418
00:17:31,090 --> 00:17:33,990
In addition, you would need to
specify the collection visible

419
00:17:33,990 --> 00:17:36,580
parameter to fetch those friends
that are visible to

420
00:17:36,580 --> 00:17:39,830
your app, as selected
by the user.

421
00:17:39,830 --> 00:17:42,970
Now that we have defined the
function, we can execute it,

422
00:17:42,970 --> 00:17:45,480
providing a JavaScript function
that will receive

423
00:17:45,480 --> 00:17:50,780
this profile data and actually
personalize your app.

424
00:17:50,780 --> 00:17:53,160
Now that we understand how
personalization works,

425
00:17:53,160 --> 00:17:55,470
Jonathan will tell you how
Google+ platform provides

426
00:17:55,470 --> 00:17:58,400
interactive sharing.

427
00:17:58,400 --> 00:17:59,830
JONATHAN BERI: Thank
you, Ridhima.

428
00:17:59,830 --> 00:18:02,670
So if your application
has content, users

429
00:18:02,670 --> 00:18:03,890
want to share that.

430
00:18:03,890 --> 00:18:06,430
And as a developer or content
creator, you want them to be

431
00:18:06,430 --> 00:18:09,220
sharing that content, so
you get more users.

432
00:18:09,220 --> 00:18:12,730
But we've noticed a problem
with social sharing today.

433
00:18:12,730 --> 00:18:14,830
Let's say you convince somebody
that this is worth

434
00:18:14,830 --> 00:18:17,070
sharing, and they'll share
it out to their networks.

435
00:18:17,070 --> 00:18:20,840
Their friends may see that on
their already busy stream.

436
00:18:20,840 --> 00:18:23,300
If something really catches
their eye, they may click on

437
00:18:23,300 --> 00:18:25,690
that link and go to your site.

438
00:18:25,690 --> 00:18:28,200
If it's a video, they might
watch it, they might drop out,

439
00:18:28,200 --> 00:18:29,690
and you'll have a
balanced rate.

440
00:18:29,690 --> 00:18:31,920
But you really are not getting
the kind of engagement that

441
00:18:31,920 --> 00:18:33,270
you're really looking for.

442
00:18:33,270 --> 00:18:35,880
So we set out to do a new
type of sharing &mdash;

443
00:18:35,880 --> 00:18:39,470
a form of targeted sharing that
enables users to reach

444
00:18:39,470 --> 00:18:41,710
out to their friends on Google
and then bring them to your

445
00:18:41,710 --> 00:18:45,190
app with the mindset to already
start engaging.

446
00:18:45,190 --> 00:18:48,240
And we call this interactive
posts.

447
00:18:48,240 --> 00:18:50,420
Let's walk through an
interactive post.

448
00:18:50,420 --> 00:18:52,500
So the first thing you'll
notice, this looks like a

449
00:18:52,500 --> 00:18:53,610
social share.

450
00:18:53,610 --> 00:18:54,880
It has a Share button.

451
00:18:54,880 --> 00:18:57,820
There's a link associated with
it, and it's very similar to

452
00:18:57,820 --> 00:19:01,260
the other types of shares
we do on Google today.

453
00:19:01,260 --> 00:19:04,500
But the most obvious difference
is a big button &mdash;

454
00:19:04,500 --> 00:19:06,580
a call to action button.

455
00:19:06,580 --> 00:19:08,650
This is a button that when
it shows up in the

456
00:19:08,650 --> 00:19:10,630
stream will stand out.

457
00:19:10,630 --> 00:19:12,190
And it's clickable.

458
00:19:12,190 --> 00:19:15,090
So if a user sees that and is
interested in the description

459
00:19:15,090 --> 00:19:18,260
and the copy, they will click
on that button, and it will

460
00:19:18,260 --> 00:19:19,790
take them somewhere.

461
00:19:19,790 --> 00:19:23,130
Where you take them is a deep
link that you provide.

462
00:19:23,130 --> 00:19:26,600
Whether they're on mobile or
web, we will route them to the

463
00:19:26,600 --> 00:19:28,460
context that you specify.

464
00:19:28,460 --> 00:19:31,510
And that should be the context
that I originally shared out

465
00:19:31,510 --> 00:19:33,320
the interactive post.

466
00:19:33,320 --> 00:19:36,910
That deep link will also take
them directly to your app.

467
00:19:36,910 --> 00:19:40,630
And if you don't have the
app, we'll help that

468
00:19:40,630 --> 00:19:42,200
user get your app.

469
00:19:42,200 --> 00:19:44,760
So interactive post is not only
a great way to increase

470
00:19:44,760 --> 00:19:47,750
engagement to a targeted sharer,
but it's also a way to

471
00:19:47,750 --> 00:19:49,290
capture new users.

472
00:19:49,290 --> 00:19:51,950
So a few more things about
the interactive post.

473
00:19:51,950 --> 00:19:54,800
As a developer, you can
pre-fill the text.

474
00:19:54,800 --> 00:19:57,950
So you can set up the context
over the share.

475
00:19:57,950 --> 00:19:59,740
And if a user likes what
they see, they can go

476
00:19:59,740 --> 00:20:00,610
ahead and share it.

477
00:20:00,610 --> 00:20:02,080
Or they can edit it.

478
00:20:02,080 --> 00:20:04,490
What's really important about
interactive post, besides

479
00:20:04,490 --> 00:20:07,310
being targeted and interactive,
is that it is

480
00:20:07,310 --> 00:20:08,700
user-generated.

481
00:20:08,700 --> 00:20:11,500
So when one of your friends
receives an interactive post

482
00:20:11,500 --> 00:20:14,490
notification, they know it
actually came from you.

483
00:20:14,490 --> 00:20:17,230
So that helps with conversion
and making this share a more

484
00:20:17,230 --> 00:20:21,160
meaningful share for both the
sender and the recipient.

485
00:20:21,160 --> 00:20:22,780
The last thing I want
to highlight is the

486
00:20:22,780 --> 00:20:23,930
names at the top.

487
00:20:23,930 --> 00:20:25,560
So when you share, you have
a target, you set the

488
00:20:25,560 --> 00:20:26,440
recipients.

489
00:20:26,440 --> 00:20:28,580
But as a developer,
you can pre-fill

490
00:20:28,580 --> 00:20:30,200
the recipient targets.

491
00:20:30,200 --> 00:20:32,850
And this includes email.

492
00:20:32,850 --> 00:20:36,070
So if you already have users in
your system with email from

493
00:20:36,070 --> 00:20:39,820
a username password or through
another social network, you

494
00:20:39,820 --> 00:20:44,630
can target and pre-fill across
networks via email.

495
00:20:44,630 --> 00:20:47,500
Extremely powerful, especially
for marketing, especially for

496
00:20:47,500 --> 00:20:51,530
growing your cross-network
user base.

497
00:20:51,530 --> 00:20:53,740
So let's walk through
a scenario of

498
00:20:53,740 --> 00:20:54,640
an interactive post.

499
00:20:54,640 --> 00:20:56,740
And we're going to use OpenTable
as an example.

500
00:20:56,740 --> 00:20:59,330
And OpenTable has integrated
Google+ Sign-In.

501
00:20:59,330 --> 00:21:02,550
And we'll do just a little
bit of role play here.

502
00:21:02,550 --> 00:21:05,880
So fast forward three days,
we're all done with I/O, and

503
00:21:05,880 --> 00:21:08,220
the team wants to go out for a
delicious dinner to celebrate

504
00:21:08,220 --> 00:21:09,760
a successful event.

505
00:21:09,760 --> 00:21:12,150
There's a fantastic ceviche
place just down on the

506
00:21:12,150 --> 00:21:13,650
Embarcadero.

507
00:21:13,650 --> 00:21:15,330
But I want to make sure
that the restaurant

508
00:21:15,330 --> 00:21:16,870
has options for everybody.

509
00:21:16,870 --> 00:21:19,140
So I start reviewing the menu.

510
00:21:19,140 --> 00:21:19,420
It looks good.

511
00:21:19,420 --> 00:21:22,290
There's vegetarian options, of
course, ceviche, and a little

512
00:21:22,290 --> 00:21:26,110
Pisco Sour for those of us
who need to relax a bit.

513
00:21:26,110 --> 00:21:28,260
And I want to share this out
with the rest of the team, so

514
00:21:28,260 --> 00:21:30,600
they can decide if they
want to join.

515
00:21:30,600 --> 00:21:33,990
So OpenTable has integrated an
interactive post button.

516
00:21:33,990 --> 00:21:37,940
This is a customizable button
that looks right in their UI.

517
00:21:37,940 --> 00:21:41,260
When I click that button, I get
that familiar dialogue we

518
00:21:41,260 --> 00:21:43,030
just saw a moment ago.

519
00:21:43,030 --> 00:21:45,880
They have that view menu that
when my friends see it and my

520
00:21:45,880 --> 00:21:47,800
colleagues see it, they'll know
that there's a menu on

521
00:21:47,800 --> 00:21:49,490
the other side.

522
00:21:49,490 --> 00:21:51,960
So I go ahead and share
it with Ridhima.

523
00:21:51,960 --> 00:21:53,810
Ridhima has her Android phone in
her pocket, and she gets a

524
00:21:53,810 --> 00:21:55,410
little buzz.

525
00:21:55,410 --> 00:21:58,660
That buzz has a notification
that somebody has directly

526
00:21:58,660 --> 00:22:02,420
shared something with her, which
is an interactive post.

527
00:22:02,420 --> 00:22:04,950
It's a notification that
actually stands out above

528
00:22:04,950 --> 00:22:07,635
others, so that she knows that
there's something waiting for

529
00:22:07,635 --> 00:22:09,990
her, like a direct message.

530
00:22:09,990 --> 00:22:12,050
She clicks on that notification,
and she's taken

531
00:22:12,050 --> 00:22:16,280
to the stream where she can
see that full share with

532
00:22:16,280 --> 00:22:19,570
pre-filled text that OpenTable
provided, the image, and that

533
00:22:19,570 --> 00:22:20,810
call to action button.

534
00:22:20,810 --> 00:22:24,080
When she clicks on that call
to action button, there's a

535
00:22:24,080 --> 00:22:25,510
deep link behind it.

536
00:22:25,510 --> 00:22:28,820
And we take her directly to
the context that OpenTable

537
00:22:28,820 --> 00:22:30,350
wanted her to, which
is the menu that I

538
00:22:30,350 --> 00:22:31,700
was originally sharing.

539
00:22:31,700 --> 00:22:35,300
So now she's in OpenTable,
engaging directly, reviewing

540
00:22:35,300 --> 00:22:38,066
the menu, and can confirm
that reservation at a

541
00:22:38,066 --> 00:22:40,280
later point in time.

542
00:22:40,280 --> 00:22:42,300
We have over 100 different
labels

543
00:22:42,300 --> 00:22:43,320
for our call to actions.

544
00:22:43,320 --> 00:22:44,720
These are configurable labels.

545
00:22:44,720 --> 00:22:47,180
And we're seeing developers
adding multiple types.

546
00:22:47,180 --> 00:22:50,440
Because this goes beyond a
standard social share.

547
00:22:50,440 --> 00:22:52,310
There's an action associated
with it.

548
00:22:52,310 --> 00:22:53,940
So let's say you're a publisher
site, and you have

549
00:22:53,940 --> 00:22:55,010
video content.

550
00:22:55,010 --> 00:22:57,670
You might want to have a Watch
button, where users click that

551
00:22:57,670 --> 00:22:59,840
button, and they're taken
to a video that starts

552
00:22:59,840 --> 00:23:01,090
automatically.

553
00:23:01,090 --> 00:23:03,410

554
00:23:03,410 --> 00:23:05,030
Sorry, that was a Podcast one.

555
00:23:05,030 --> 00:23:07,820
We also have Listen and Watch.

556
00:23:07,820 --> 00:23:09,990
Let's say you're an educational
site, and you want

557
00:23:09,990 --> 00:23:13,380
to take users straight to the
content to avoid registration.

558
00:23:13,380 --> 00:23:16,540
You might have a Learn button.

559
00:23:16,540 --> 00:23:20,070
And if you have your own
commenting system, you would

560
00:23:20,070 --> 00:23:22,350
have a Comment and Reply.

561
00:23:22,350 --> 00:23:25,330
Of course, there's e-commerce
solutions, where you want to

562
00:23:25,330 --> 00:23:27,480
have a user, see that
Buy button, see

563
00:23:27,480 --> 00:23:28,080
something they like.

564
00:23:28,080 --> 00:23:30,150
And when they click it, they're
taken directly to the

565
00:23:30,150 --> 00:23:34,050
checkout page with that
item pre-filled.

566
00:23:34,050 --> 00:23:35,830
We're also seeing partners
combining it in multiple

567
00:23:35,830 --> 00:23:37,810
different ways and intelligent
ways to make it

568
00:23:37,810 --> 00:23:39,100
part of your app &mdash;

569
00:23:39,100 --> 00:23:41,260
not just a little share
icon off the center.

570
00:23:41,260 --> 00:23:43,980
Because they want to drive
users to share more

571
00:23:43,980 --> 00:23:45,450
targetedly.

572
00:23:45,450 --> 00:23:47,240
And just like the rest
of the platform, it's

573
00:23:47,240 --> 00:23:48,250
very easy to integrate.

574
00:23:48,250 --> 00:23:51,020
So back to Ridhima to
show us that code.

575
00:23:51,020 --> 00:23:52,330
RIDHIMA KEDIA: Thank
you, Jonathan.

576
00:23:52,330 --> 00:23:55,260
For interactive posts, we've
built on existing Google

577
00:23:55,260 --> 00:23:57,250
sharing plug-ins and APIs.

578
00:23:57,250 --> 00:24:00,230
And all of our client libraries
and mobile SDKs

579
00:24:00,230 --> 00:24:02,550
package it up for easy
integration.

580
00:24:02,550 --> 00:24:04,170
We have built in deep links.

581
00:24:04,170 --> 00:24:07,680
This means that no matter which
device a user views an

582
00:24:07,680 --> 00:24:10,220
interactive post in, on clicking
it, they will be

583
00:24:10,220 --> 00:24:12,415
taken to the right context
within your application.

584
00:24:12,415 --> 00:24:16,790

585
00:24:16,790 --> 00:24:19,480
Once again, let's take the
web as an example.

586
00:24:19,480 --> 00:24:22,680
Just like the Sign-In flow,
the interactive post flow

587
00:24:22,680 --> 00:24:24,200
starts with a rendered
button that you can

588
00:24:24,200 --> 00:24:25,820
configure through markup.

589
00:24:25,820 --> 00:24:28,420
Now we've omitted some of the
fields here, but if you look

590
00:24:28,420 --> 00:24:32,360
at the important bits, the call
to action label can be

591
00:24:32,360 --> 00:24:36,040
specified by an enum, and the
compete list is documented in

592
00:24:36,040 --> 00:24:37,060
a developer site.

593
00:24:37,060 --> 00:24:39,280
We just saw a preview off all
the different actions

594
00:24:39,280 --> 00:24:39,990
that you can take.

595
00:24:39,990 --> 00:24:42,450
It could be Buy, Comment,
View, Watch,

596
00:24:42,450 --> 00:24:44,750
Listen, you name it.

597
00:24:44,750 --> 00:24:48,180
The call to action URL is the
URL which the users will be

598
00:24:48,180 --> 00:24:50,980
taken to if they click on
the interactive post on

599
00:24:50,980 --> 00:24:53,450
plus.gooogle.com.

600
00:24:53,450 --> 00:24:56,280
The deep link ID takes the user
directly to the right

601
00:24:56,280 --> 00:24:58,790
context within your application,
if they click on

602
00:24:58,790 --> 00:25:00,630
the post in one of the mobile
versions of Google+.

603
00:25:00,630 --> 00:25:03,760

604
00:25:03,760 --> 00:25:06,930
You can pre-define a pre-filled
text that will be

605
00:25:06,930 --> 00:25:09,160
populated in the share, which
of course, can be

606
00:25:09,160 --> 00:25:10,640
edited by the user.

607
00:25:10,640 --> 00:25:13,810
You can pre-define a list of
recipients, up to 10 users.

608
00:25:13,810 --> 00:25:17,030
It can be specified in the form
of Google user IDs or any

609
00:25:17,030 --> 00:25:20,210
email addresses.

610
00:25:20,210 --> 00:25:23,130
Do you notice some familiar
fields here like client ID,

611
00:25:23,130 --> 00:25:25,660
scope, request visible
actions?

612
00:25:25,660 --> 00:25:27,620
These are all similar
to the Sign-In flow.

613
00:25:27,620 --> 00:25:30,440
That is because the interactive
post also takes

614
00:25:30,440 --> 00:25:32,650
the user through the Sign-In
flow if they have not

615
00:25:32,650 --> 00:25:34,030
already signed in.

616
00:25:34,030 --> 00:25:36,700
This is especially useful for
the use case in which you want

617
00:25:36,700 --> 00:25:39,590
the user to sign in only when
they want to share.

618
00:25:39,590 --> 00:25:41,420
So this is yet another
way we help you get

619
00:25:41,420 --> 00:25:44,360
more signed in users.

620
00:25:44,360 --> 00:25:47,510
For comparison, here is a
snippet of the interactive

621
00:25:47,510 --> 00:25:50,050
post integration on iOS.

622
00:25:50,050 --> 00:25:52,740
As you can see, the syntax may
be different, but the code

623
00:25:52,740 --> 00:25:54,580
pieces are exactly the same.

624
00:25:54,580 --> 00:25:55,690
So this is amazing
for developers.

625
00:25:55,690 --> 00:25:58,480
Since if you understand how
interactive posts work on one

626
00:25:58,480 --> 00:26:00,410
platform, you can easily
integrate it

627
00:26:00,410 --> 00:26:02,180
into any other platform.

628
00:26:02,180 --> 00:26:04,440
Now that we've talked about
sharing, Jonathan will tell

629
00:26:04,440 --> 00:26:07,040
you how you can write back
different App Activities that

630
00:26:07,040 --> 00:26:11,360
the user takes within your
site, back to Google.

631
00:26:11,360 --> 00:26:14,150
JONATHAN BERI: Thank you.

632
00:26:14,150 --> 00:26:16,700
So you have a logged in
user, and they're

633
00:26:16,700 --> 00:26:17,830
taking all these actions.

634
00:26:17,830 --> 00:26:19,750
They might be uploading
content, they might be

635
00:26:19,750 --> 00:26:22,220
reading, they might be
creating new things.

636
00:26:22,220 --> 00:26:24,100
And all these actions are
happening within your

637
00:26:24,100 --> 00:26:26,820
application, but other users
don't know about this.

638
00:26:26,820 --> 00:26:28,590
They're not discoverable.

639
00:26:28,590 --> 00:26:31,400
So with Google+ Sign-In, we
enabled something we call App

640
00:26:31,400 --> 00:26:32,050
Activities.

641
00:26:32,050 --> 00:26:35,310
It's a way for you, as a
developer, to write to Google,

642
00:26:35,310 --> 00:26:38,430
so that we can surface those
activities to other users,

643
00:26:38,430 --> 00:26:41,620
across Google, at
the right time.

644
00:26:41,620 --> 00:26:44,100
We actually demoed this
integration just the other

645
00:26:44,100 --> 00:26:46,220
week at TechCrunch Disrupt.

646
00:26:46,220 --> 00:26:49,330
So here's how one such
integration would look like.

647
00:26:49,330 --> 00:26:50,840
So let's say a user's searching
for Fandango &mdash;

648
00:26:50,840 --> 00:26:53,890
Fandango has integrated
Google+ Sign-In.

649
00:26:53,890 --> 00:26:56,340
All those activities that users
are taking with their

650
00:26:56,340 --> 00:26:58,330
app, they're sending
to Google.

651
00:26:58,330 --> 00:27:01,860
And Google is aggregating those
activities, anonymizing

652
00:27:01,860 --> 00:27:06,020
them, to show other users what
is trending on Fandango.

653
00:27:06,020 --> 00:27:09,750
This way, other Fandango users
might discover new and

654
00:27:09,750 --> 00:27:12,980
interesting content based off
of Google users, as a whole,

655
00:27:12,980 --> 00:27:15,260
or even help Fandango
get new users by

656
00:27:15,260 --> 00:27:17,700
discovering their brand.

657
00:27:17,700 --> 00:27:21,160
These are clickable links in the
knowledge cart that, like

658
00:27:21,160 --> 00:27:23,760
we saw before, are a deep link,
which would take the

659
00:27:23,760 --> 00:27:27,320
user directly to Fandango, to
the right context, to the

660
00:27:27,320 --> 00:27:30,920
video, where they can start
seeing the trailer or even

661
00:27:30,920 --> 00:27:32,920
purchasing tickets.

662
00:27:32,920 --> 00:27:34,800
This is the direction we want
to go with this product.

663
00:27:34,800 --> 00:27:37,230
We want to help you to surface
your apps in more meaningful

664
00:27:37,230 --> 00:27:40,340
ways across Google by making
those activities users are

665
00:27:40,340 --> 00:27:43,900
taking in a social context
useful for others.

666
00:27:43,900 --> 00:27:46,565
And this is the very first place
that we're integrating

667
00:27:46,565 --> 00:27:48,340
App Activities.

668
00:27:48,340 --> 00:27:49,850
And just like the rest
of the APIs, it's

669
00:27:49,850 --> 00:27:52,260
very easy to integrate.

670
00:27:52,260 --> 00:27:54,330
RIDHIMA KEDIA: Thank
you, Jonathan.

671
00:27:54,330 --> 00:27:57,110
So now that you have a signed
in user, you can write back

672
00:27:57,110 --> 00:27:59,480
different App Activities that
the user takes within your

673
00:27:59,480 --> 00:28:01,010
site back to Google.

674
00:28:01,010 --> 00:28:04,460
And as Jonathan just showed,
we can surface them in

675
00:28:04,460 --> 00:28:06,590
interesting and relevant
contexts.

676
00:28:06,590 --> 00:28:09,860
We have already seen that we
have client libraries in most

677
00:28:09,860 --> 00:28:12,410
popular languages and native
SDKs for mobile.

678
00:28:12,410 --> 00:28:15,810
All we do now is use one of
those client libraries and

679
00:28:15,810 --> 00:28:20,010
call an API to write these
moments back to Google.

680
00:28:20,010 --> 00:28:22,730
So here's a sample of our
Python client library.

681
00:28:22,730 --> 00:28:25,650
To write an activity back, you
would need to specify the

682
00:28:25,650 --> 00:28:26,880
activity type.

683
00:28:26,880 --> 00:28:29,210
Again, for example, if you
wanted to write back user

684
00:28:29,210 --> 00:28:31,370
purchase events, you would
specify the Buy

685
00:28:31,370 --> 00:28:32,920
activity type here.

686
00:28:32,920 --> 00:28:35,010
This should be an activity type
that you have already

687
00:28:35,010 --> 00:28:37,020
configured in your
Sign-In markup.

688
00:28:37,020 --> 00:28:39,450
And the user would have
explicitly granted access to

689
00:28:39,450 --> 00:28:42,130
this type when they see
the consent dialogue.

690
00:28:42,130 --> 00:28:45,250
In addition, you would specify
a target URL, which should

691
00:28:45,250 --> 00:28:48,000
contain the schema dot markup
for the activity type you have

692
00:28:48,000 --> 00:28:49,850
just specified.

693
00:28:49,850 --> 00:28:52,620
Now that we understand how the
different pieces of the

694
00:28:52,620 --> 00:28:55,140
Sign-In flow come together,
Jonathan will summarize all

695
00:28:55,140 --> 00:28:56,390
that we have learned today.

696
00:28:56,390 --> 00:28:58,580

697
00:28:58,580 --> 00:28:59,760
JONATHAN BERI: Great.

698
00:28:59,760 --> 00:29:01,880
So let's do a little
bit of review.

699
00:29:01,880 --> 00:29:03,770
We saw the Google+
Sign-In button &mdash;

700
00:29:03,770 --> 00:29:07,310
the easiest way for you to
acquire new users by enabling

701
00:29:07,310 --> 00:29:10,020
them to connect their Google
account with your app.

702
00:29:10,020 --> 00:29:12,610
We saw how you can take that
user and create a personalized

703
00:29:12,610 --> 00:29:15,110
experience with their Google
profile and their

704
00:29:15,110 --> 00:29:17,030
connections on Google.

705
00:29:17,030 --> 00:29:20,300
We talked about how you can
increase engagement by using

706
00:29:20,300 --> 00:29:23,510
interactive posts to get users
to bring their friends back

707
00:29:23,510 --> 00:29:26,660
into your app and interacting
immediately.

708
00:29:26,660 --> 00:29:28,665
And the last bit we just
talked about, our App

709
00:29:28,665 --> 00:29:32,010
Activities that we can use to
surface relevant information

710
00:29:32,010 --> 00:29:34,400
across Google.

711
00:29:34,400 --> 00:29:37,770
Now today, I went through
everything very quickly and

712
00:29:37,770 --> 00:29:39,240
very briefly.

713
00:29:39,240 --> 00:29:42,030
There's a ton of detail to
make this an awesome

714
00:29:42,030 --> 00:29:45,950
integration, depending on your
platform and your type of

715
00:29:45,950 --> 00:29:47,080
integration.

716
00:29:47,080 --> 00:29:50,330
Throughout the rest of Google
I/O, we have sessions on every

717
00:29:50,330 --> 00:29:54,460
feature, in great detail, from
beginning with Android to best

718
00:29:54,460 --> 00:29:58,070
practices across the web
and boot camps &mdash;

719
00:29:58,070 --> 00:29:59,180
sorry &mdash;

720
00:29:59,180 --> 00:30:02,190
code labs that get you started
and get you finished.

721
00:30:02,190 --> 00:30:03,700
So I suggest if you're
interested in any of these

722
00:30:03,700 --> 00:30:05,580
topics that you attend
one of these.

723
00:30:05,580 --> 00:30:07,490
And if you're in the live
stream, a lot of them will be

724
00:30:07,490 --> 00:30:10,340
available to watch, as well.

725
00:30:10,340 --> 00:30:13,640
A quick credit to the images I
used earlier, and I want to

726
00:30:13,640 --> 00:30:16,730
thank you for getting interested
in Google+ Sign-In.

727
00:30:16,730 --> 00:30:19,160
Three important links before
we take questions &mdash;

728
00:30:19,160 --> 00:30:21,043
one is our developer site, which
you've seen already.

729
00:30:21,043 --> 00:30:24,470
It's developers.google.com/+.

730
00:30:24,470 --> 00:30:27,550
That's the overall
developer site.

731
00:30:27,550 --> 00:30:30,240
We use our Google+ page and
our Google+ community to

732
00:30:30,240 --> 00:30:33,720
engage with conversation and
answer questions about

733
00:30:33,720 --> 00:30:37,090
different topics, so I suggest
you add the Google+ Developers

734
00:30:37,090 --> 00:30:38,730
page to your Circles.

735
00:30:38,730 --> 00:30:40,400
And the last is our Stack
Overflow page.

736
00:30:40,400 --> 00:30:42,520
This is where we do a
lot of our support.

737
00:30:42,520 --> 00:30:44,070
So if you have technical
questions that you can't

738
00:30:44,070 --> 00:30:47,040
figure out through the
documentation, this is a great

739
00:30:47,040 --> 00:30:48,040
place to go.

740
00:30:48,040 --> 00:30:51,320
Again, my name is Jonathan Beri,
joined by Ridhima Kedia.

741
00:30:51,320 --> 00:30:53,286
And we thank you.

742
00:30:53,286 --> 00:30:58,440
[APPLAUSE]

743
00:30:58,440 --> 00:30:58,650
JONATHAN BERI: Awesome.

744
00:30:58,650 --> 00:30:59,890
So we have plenty of
time for questions.

745
00:30:59,890 --> 00:31:02,810
So for those who are here,
come up to the mic.

746
00:31:02,810 --> 00:31:04,335
And we're going to try to figure
out how I can do the

747
00:31:04,335 --> 00:31:06,280
online thing in a second.

748
00:31:06,280 --> 00:31:08,190
And let's start, left first.

749
00:31:08,190 --> 00:31:11,040
AUDIENCE: One puzzlement that
I've had is the sign

750
00:31:11,040 --> 00:31:13,810
out from the app.

751
00:31:13,810 --> 00:31:16,190
I don't know whether it's
best practice &mdash;

752
00:31:16,190 --> 00:31:18,870
because you can have them sign
out completely out of Google

753
00:31:18,870 --> 00:31:20,290
or just sign out of your app.

754
00:31:20,290 --> 00:31:22,670
And how do you serve that
to the customer, so they

755
00:31:22,670 --> 00:31:25,150
understand if they're going to
sign out of their Google

756
00:31:25,150 --> 00:31:27,270
account or just out
of the account?

757
00:31:27,270 --> 00:31:31,360
And what's your recommended
best practice for that?

758
00:31:31,360 --> 00:31:33,870
JONATHAN BERI: So that's
a great question.

759
00:31:33,870 --> 00:31:35,620
It's about sign out.

760
00:31:35,620 --> 00:31:38,910
We've seen a few different
implementations of sign out.

761
00:31:38,910 --> 00:31:41,500
A lot of you developers just
want to keep it logged in.

762
00:31:41,500 --> 00:31:43,070
As long as they're logged into
Google, they want to keep them

763
00:31:43,070 --> 00:31:44,190
logged into your service.

764
00:31:44,190 --> 00:31:46,640
But some users expect
sign out.

765
00:31:46,640 --> 00:31:48,160
We made it really easy
to disconnect.

766
00:31:48,160 --> 00:31:49,900
So when they want to
disassociate their Google

767
00:31:49,900 --> 00:31:51,110
account with your service,
we have an API

768
00:31:51,110 --> 00:31:52,320
that makes that easy.

769
00:31:52,320 --> 00:31:54,290
And we've seen already
developers implement their own

770
00:31:54,290 --> 00:31:55,300
form of sign out.

771
00:31:55,300 --> 00:31:57,150
It really depends
on their logic &mdash;

772
00:31:57,150 --> 00:31:59,470
how they treat a user, what the
need is to be signed in.

773
00:31:59,470 --> 00:32:00,590
Is it in the browser?

774
00:32:00,590 --> 00:32:01,880
Is it in the server?

775
00:32:01,880 --> 00:32:03,950
And we actually have a session
on best practices where we

776
00:32:03,950 --> 00:32:06,490
talk about it, as well as
authorization, where we talk a

777
00:32:06,490 --> 00:32:08,180
little bit more about
sign out.

778
00:32:08,180 --> 00:32:11,570
But it entirely depends
on your integration.

779
00:32:11,570 --> 00:32:13,615
AUDIENCE: Well, I guess, let's
say a person's traveling &mdash;

780
00:32:13,615 --> 00:32:15,920
they're at a hotel.

781
00:32:15,920 --> 00:32:17,980
Maybe they just signed out of
your app, but they're still

782
00:32:17,980 --> 00:32:18,990
logged into their Gmail.

783
00:32:18,990 --> 00:32:20,290
Someone could go access
their mail.

784
00:32:20,290 --> 00:32:23,960
Or they're at home, and they're
doing their daily

785
00:32:23,960 --> 00:32:25,390
activities, and they sign out.

786
00:32:25,390 --> 00:32:29,870
You just signed them out of
their Google account, so how

787
00:32:29,870 --> 00:32:31,620
do you deal with that?

788
00:32:31,620 --> 00:32:32,760
It seems like it's confusing
to the customer.

789
00:32:32,760 --> 00:32:35,050
JONATHAN BERI: Typically,
especially the services that

790
00:32:35,050 --> 00:32:37,850
do really care about sign out,
is they track it themselves.

791
00:32:37,850 --> 00:32:41,025
So they'll use their own cache,
whether that be a

792
00:32:41,025 --> 00:32:43,820
cookie or local storage, to
say this user signed out.

793
00:32:43,820 --> 00:32:46,550
Or if that user is in the
server, then they're going to

794
00:32:46,550 --> 00:32:48,630
basically disassociate that
server with that currently

795
00:32:48,630 --> 00:32:50,250
logged in session.

796
00:32:50,250 --> 00:32:52,770
So we can talk about that more
after, depending on how your

797
00:32:52,770 --> 00:32:53,420
app is built.

798
00:32:53,420 --> 00:32:54,195
AUDIENCE: All right,
thank you.

799
00:32:54,195 --> 00:32:55,504
JONATHAN BERI: Sure thing.

800
00:32:55,504 --> 00:32:55,886
Let's go &mdash;

801
00:32:55,886 --> 00:32:56,670
[INAUDIBLE].

802
00:32:56,670 --> 00:32:59,230
AUDIENCE: I have a question
about Android, but I guess it

803
00:32:59,230 --> 00:33:01,580
applies to any application.

804
00:33:01,580 --> 00:33:06,040
Let's say I want to use other
Google APIs like Tasks or

805
00:33:06,040 --> 00:33:09,790
Google URL Shortening
and stuff like that.

806
00:33:09,790 --> 00:33:12,770
Can I use this, and then add
another scope, and then ask

807
00:33:12,770 --> 00:33:14,590
only one set of permissions
to the user?

808
00:33:14,590 --> 00:33:17,480
Or it's something different and
then I need to ask user

809
00:33:17,480 --> 00:33:19,920
multiple things, like give you
access to your Google+

810
00:33:19,920 --> 00:33:25,090
profile, let me put Tasks
or stuff like that?

811
00:33:25,090 --> 00:33:26,020
JONATHAN BERI: Yeah,
great question.

812
00:33:26,020 --> 00:33:27,780
The question is, can I use
multiple scopes at one time?

813
00:33:27,780 --> 00:33:28,530
AUDIENCE: Yep.

814
00:33:28,530 --> 00:33:30,140
JONATHAN BERI: And the answer
is absolutely, yes.

815
00:33:30,140 --> 00:33:31,740
We showed some snippet
of code.

816
00:33:31,740 --> 00:33:34,570
Basically, when you set up the
Sign-In button, if it's

817
00:33:34,570 --> 00:33:38,370
Android, if it's iOS, web, you
pass in multiple scopes.

818
00:33:38,370 --> 00:33:41,730
So we show the user an
expandable dialogue with each

819
00:33:41,730 --> 00:33:43,610
line representing a scope.

820
00:33:43,610 --> 00:33:45,712
And also for the mobile
context, especially on

821
00:33:45,712 --> 00:33:48,540
Android, they also approve the
hardware permissions as well,

822
00:33:48,540 --> 00:33:50,260
in that same single dialogue.

823
00:33:50,260 --> 00:33:53,710
AUDIENCE: So is there any reason
to use the other Google

824
00:33:53,710 --> 00:33:59,330
account authentication process
from the services?

825
00:33:59,330 --> 00:34:01,970
It seems like it's better
to use Google+, right?

826
00:34:01,970 --> 00:34:04,250
JONATHAN BERI: So you mean the
local account manager?

827
00:34:04,250 --> 00:34:07,070
AUDIENCE: Yeah.

828
00:34:07,070 --> 00:34:08,250
JONATHAN BERI: That's the
current way, right?

829
00:34:08,250 --> 00:34:08,400
AUDIENCE: Mm-hmm.

830
00:34:08,400 --> 00:34:09,550
JONATHAN BERI: And now the
Google+ way gets you a lot

831
00:34:09,550 --> 00:34:10,880
more user information &mdash;

832
00:34:10,880 --> 00:34:13,190
so more about their profile,
more about their connections.

833
00:34:13,190 --> 00:34:15,830
So you can make a lot more
meaningful social app, versus

834
00:34:15,830 --> 00:34:17,550
just knowing their email.

835
00:34:17,550 --> 00:34:19,380
So with Google+ Sign-In, we
provide you access to all

836
00:34:19,380 --> 00:34:22,499
those additional pieces of
information about the user.

837
00:34:22,499 --> 00:34:22,840
AUDIENCE: OK.

838
00:34:22,840 --> 00:34:24,650
JONATHAN BERI: So we would
recommend you use Google+

839
00:34:24,650 --> 00:34:25,636
Sign-In for that.

840
00:34:25,636 --> 00:34:27,115
AUDIENCE: Cool, thank you.

841
00:34:27,115 --> 00:34:27,610
JONATHAN BERI: This one.

842
00:34:27,610 --> 00:34:28,980
AUDIENCE: Great presentation,
really

843
00:34:28,980 --> 00:34:29,699
exciting what you're doing.

844
00:34:29,699 --> 00:34:30,020
JONATHAN BERI: Thank you.

845
00:34:30,020 --> 00:34:31,659
AUDIENCE: My question is
basically the same as what he

846
00:34:31,659 --> 00:34:34,030
had, just want to make sure
to clarify though.

847
00:34:34,030 --> 00:34:37,510
So my question is, if I start
with a certain set of scopes,

848
00:34:37,510 --> 00:34:40,030
and then I want to escalate the
user later, like I want to

849
00:34:40,030 --> 00:34:42,340
start with a certain set of
scopes that are very limited,

850
00:34:42,340 --> 00:34:44,860
and I escalate, do I
have then two OAuth

851
00:34:44,860 --> 00:34:45,870
tokens that I'm managing?

852
00:34:45,870 --> 00:34:47,110
Or is it a single OAuth token?

853
00:34:47,110 --> 00:34:49,750
Because I could see that if I'm
having to manage multiple

854
00:34:49,750 --> 00:34:52,420
tokens on my app side &mdash;

855
00:34:52,420 --> 00:34:55,340
so is it a single OAuth
token that will be

856
00:34:55,340 --> 00:34:56,239
resolved at the end?

857
00:34:56,239 --> 00:34:58,730
Or is it multiple, and
do I have to do work?

858
00:34:58,730 --> 00:35:00,900
Can you just talk a little
bit about that?

859
00:35:00,900 --> 00:35:02,710
RIDHIMA KEDIA: So you will
get two OAuth tokens.

860
00:35:02,710 --> 00:35:04,820
We'd recommend you keep the
later one, because it will

861
00:35:04,820 --> 00:35:06,480
have the greater set
of permissions, and

862
00:35:06,480 --> 00:35:07,830
revoke the older one.

863
00:35:07,830 --> 00:35:09,790
And then go ahead and
use the later one.

864
00:35:09,790 --> 00:35:10,190
AUDIENCE: OK.

865
00:35:10,190 --> 00:35:11,790
JONATHAN BERI: And we're also
looking at how to make that a

866
00:35:11,790 --> 00:35:12,415
better experience.

867
00:35:12,415 --> 00:35:12,800
RIDHIMA KEDIA: Yeah.

868
00:35:12,800 --> 00:35:14,550
JONATHAN BERI: So keeping
following our blog and our

869
00:35:14,550 --> 00:35:16,840
Google+ page to learn more
about how we're improving

870
00:35:16,840 --> 00:35:18,340
authorization and APIs.

871
00:35:18,340 --> 00:35:19,910
AUDIENCE: Yeah, I built
an app for GitHub.

872
00:35:19,910 --> 00:35:22,890
And I have like 400 OAuth tokens
in there, and I didn't

873
00:35:22,890 --> 00:35:23,300
realize I was doing that.

874
00:35:23,300 --> 00:35:24,845
So that's something that &mdash;

875
00:35:24,845 --> 00:35:26,580
yeah, great.

876
00:35:26,580 --> 00:35:26,885
Thanks.

877
00:35:26,885 --> 00:35:27,190
JONATHAN BERI: Cool.

878
00:35:27,190 --> 00:35:30,520
I like your app.

879
00:35:30,520 --> 00:35:31,000
This way.

880
00:35:31,000 --> 00:35:35,810
AUDIENCE: So what about a
progressive enhancement.

881
00:35:35,810 --> 00:35:40,140
I want to allow people to log
in with any OAuth provider

882
00:35:40,140 --> 00:35:43,680
but, if they have a G+ account,
get the additional

883
00:35:43,680 --> 00:35:44,750
capabilities.

884
00:35:44,750 --> 00:35:46,510
How would that work?

885
00:35:46,510 --> 00:35:47,980
JONATHAN BERI: So when you mean
any OAuth provider, do

886
00:35:47,980 --> 00:35:49,450
you mean outside of Google?

887
00:35:49,450 --> 00:35:50,920
AUDIENCE: Yes.

888
00:35:50,920 --> 00:35:52,410
JONATHAN BERI: So we've seen
a few solutions in the

889
00:35:52,410 --> 00:35:53,180
marketplace.

890
00:35:53,180 --> 00:35:56,960
Typically, it depends on which
type of networks you're trying

891
00:35:56,960 --> 00:35:58,420
to target &mdash;

892
00:35:58,420 --> 00:36:00,330
if it's a business oriented
product, if it's a consumer

893
00:36:00,330 --> 00:36:03,240
oriented product, if you have
your own OAuth provider.

894
00:36:03,240 --> 00:36:05,740
But we think options is a good
thing, but not too many.

895
00:36:05,740 --> 00:36:08,910
Because that creates the
paralysis of choice.

896
00:36:08,910 --> 00:36:11,580
So we're seeing usually maybe
two providers in a single

897
00:36:11,580 --> 00:36:13,845
dialogue, depending
on which are your

898
00:36:13,845 --> 00:36:14,710
two greatest networks.

899
00:36:14,710 --> 00:36:18,500
And then you just can provide
them as options.

900
00:36:18,500 --> 00:36:20,630
And then on your back end,
you basically have

901
00:36:20,630 --> 00:36:21,950
a table of a user.

902
00:36:21,950 --> 00:36:25,330
And it's this social login
versus Google social login,

903
00:36:25,330 --> 00:36:26,640
maybe username and password.

904
00:36:26,640 --> 00:36:29,400
And you can just keep it
as a unified record.

905
00:36:29,400 --> 00:36:33,050
AUDIENCE: So I would have to
have a Sign-In with G+ and a

906
00:36:33,050 --> 00:36:38,030
Sign-In with Gmail if they just
had a Google account.

907
00:36:38,030 --> 00:36:39,280
JONATHAN BERI: Oh, I see.

908
00:36:39,280 --> 00:36:41,610

909
00:36:41,610 --> 00:36:46,880
So one thing that I hope I can
convey is Google+ Sign-In is

910
00:36:46,880 --> 00:36:49,510
the way we want developers to
allow users to connect their

911
00:36:49,510 --> 00:36:51,330
Google account with
your service.

912
00:36:51,330 --> 00:36:54,730
So think of Google as
a Google Sign-In.

913
00:36:54,730 --> 00:36:56,640
It's a Google+ Sign-In,
but it's Sign-In

914
00:36:56,640 --> 00:36:57,310
with your Google account.

915
00:36:57,310 --> 00:36:59,720
So you should use Google+
Sign-In as your Google way to

916
00:36:59,720 --> 00:37:00,940
authenticate.

917
00:37:00,940 --> 00:37:03,850
If you want to, let's say,
support GitHub, then you could

918
00:37:03,850 --> 00:37:06,290
provide that as a secondary
Sign-In option, and combine

919
00:37:06,290 --> 00:37:08,560
the user accounts that way.

920
00:37:08,560 --> 00:37:08,850
Cool?

921
00:37:08,850 --> 00:37:11,210
Good question.

922
00:37:11,210 --> 00:37:14,180
AUDIENCE: Hello, I think you
might have mentioned this, but

923
00:37:14,180 --> 00:37:15,600
a really simple question.

924
00:37:15,600 --> 00:37:19,430
When you mentioned that for deep
links, if you don't have

925
00:37:19,430 --> 00:37:23,130
the app, does Google Play do
anything to carry that

926
00:37:23,130 --> 00:37:26,896
referring source through the
installation process?

927
00:37:26,896 --> 00:37:27,730
RIDHIMA KEDIA: Yes.

928
00:37:27,730 --> 00:37:28,310
JONATHAN BERI: Absolutely.

929
00:37:28,310 --> 00:37:31,480
So on Android, if I'm on the
Android app, the new beautiful

930
00:37:31,480 --> 00:37:33,580
Android app, I click
that deep link.

931
00:37:33,580 --> 00:37:35,760
If the user doesn't have your
app installed, we'll take them

932
00:37:35,760 --> 00:37:38,020
to the Play Store, we'll prompt
them to install it.

933
00:37:38,020 --> 00:37:40,780
When they're done, they'll get
a notification saying, do you

934
00:37:40,780 --> 00:37:42,250
want to continue to
that deep link?

935
00:37:42,250 --> 00:37:44,210
So they'll actually go exactly
to the right deep link, and

936
00:37:44,210 --> 00:37:45,990
we'll pass the deep
link to your app.

937
00:37:45,990 --> 00:37:48,880
Even on iOS, we help the user
go to the app store.

938
00:37:48,880 --> 00:37:52,060
And we help them get to the
final deep link, as well.

939
00:37:52,060 --> 00:37:53,320
AUDIENCE: OK, how does
it work on iOS?

940
00:37:53,320 --> 00:37:54,900
Did you &mdash;

941
00:37:54,900 --> 00:37:56,210
JONATHAN BERI: We can talk
more about the specifics.

942
00:37:56,210 --> 00:38:01,190
But essentially, we take them
to the app store, and we use

943
00:38:01,190 --> 00:38:02,100
the [? pay span ?]

944
00:38:02,100 --> 00:38:04,420
to get them as a saved link.

945
00:38:04,420 --> 00:38:05,650
And they can go all
the way through.

946
00:38:05,650 --> 00:38:07,050
So mostly, they get there.

947
00:38:07,050 --> 00:38:08,862
AUDIENCE: OK, thanks.

948
00:38:08,862 --> 00:38:10,590
JONATHAN BERI: Cool.

949
00:38:10,590 --> 00:38:11,620
AUDIENCE: I was wondering,
how flexible are

950
00:38:11,620 --> 00:38:14,380
the actions or contexts?

951
00:38:14,380 --> 00:38:15,910
I know there's probably
a standard set.

952
00:38:15,910 --> 00:38:18,030
But is there a way to
extend that set?

953
00:38:18,030 --> 00:38:19,350
JONATHAN BERI: So start from
the beginning again.

954
00:38:19,350 --> 00:38:20,910
Sorry.

955
00:38:20,910 --> 00:38:23,700
AUDIENCE: I guess, how flexible
are the actions or

956
00:38:23,700 --> 00:38:25,790
the deep links, the contexts?

957
00:38:25,790 --> 00:38:28,140
JONATHAN BERI: OK, so the
interactive posts, the call to

958
00:38:28,140 --> 00:38:28,765
action labels.

959
00:38:28,765 --> 00:38:29,150
AUDIENCE: Yeah.

960
00:38:29,150 --> 00:38:30,490
JONATHAN BERI: It
is a thick set.

961
00:38:30,490 --> 00:38:33,990
We have over 100 of what we've
heard are the most common.

962
00:38:33,990 --> 00:38:36,460
And we're always up to add some
more ones that you think

963
00:38:36,460 --> 00:38:39,080
would help a larger
population.

964
00:38:39,080 --> 00:38:39,880
AUDIENCE: Thanks.

965
00:38:39,880 --> 00:38:41,130
JONATHAN BERI: Cool.

966
00:38:41,130 --> 00:38:42,440

967
00:38:42,440 --> 00:38:45,530
AUDIENCE: Basically, it's very
exciting to see the Sign-In

968
00:38:45,530 --> 00:38:47,730
process to give access
to developers

969
00:38:47,730 --> 00:38:49,100
for actual user data.

970
00:38:49,100 --> 00:38:51,750
When would you think that we'd
be able to get access for

971
00:38:51,750 --> 00:38:53,960
friend data, so we could build
smarter algorithms for finding

972
00:38:53,960 --> 00:38:56,925
out friend affinity or content
analysis and things like that

973
00:38:56,925 --> 00:38:59,620
off of say, the pages
that your friends

974
00:38:59,620 --> 00:39:01,130
actually like on Google+.

975
00:39:01,130 --> 00:39:03,250
JONATHAN BERI: So in the
beginning, I talked about

976
00:39:03,250 --> 00:39:04,005
security and privacy.

977
00:39:04,005 --> 00:39:04,360
AUDIENCE: Mm-hmm.

978
00:39:04,360 --> 00:39:07,210
JONATHAN BERI: And the model
we're building right now is

979
00:39:07,210 --> 00:39:08,380
the user has to authenticate.

980
00:39:08,380 --> 00:39:10,480
And we're being very
conservative on what

981
00:39:10,480 --> 00:39:11,390
user data you get.

982
00:39:11,390 --> 00:39:14,300
So when a user does sign in,
we allow them to give you

983
00:39:14,300 --> 00:39:15,980
access to their flat Circles.

984
00:39:15,980 --> 00:39:20,230
And that includes the public
Google ID, first name, last

985
00:39:20,230 --> 00:39:22,240
name, and profile picture.

986
00:39:22,240 --> 00:39:24,740
I don't know if we're ever going
to go to that direction,

987
00:39:24,740 --> 00:39:28,450
but we'd love to hear your use
cases and see how we can make

988
00:39:28,450 --> 00:39:29,380
them happen.

989
00:39:29,380 --> 00:39:31,020
AUDIENCE: Sure.

990
00:39:31,020 --> 00:39:32,830
JONATHAN BERI: Cool, and I think
we're done for time.

991
00:39:32,830 --> 00:39:34,730
I'll be around here
after the talk.

992
00:39:34,730 --> 00:39:36,810
And of course, we have our
sandbox, where you can ask me

993
00:39:36,810 --> 00:39:38,480
and the rest of the team
more questions.

994
00:39:38,480 --> 00:39:39,320
Thank you, everybody.

995
00:39:39,320 --> 00:39:39,620
RIDHIMA KEDIA: Thank you.

996
00:39:39,620 --> 00:39:42,620
[APPLAUSE]

997
00:39:42,620 --> 00:39:43,870

