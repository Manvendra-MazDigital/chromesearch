1
00:00:00,000 --> 00:00:00,498

2
00:00:00,498 --> 00:01:31,620
[ELECTRONIC MUSIC PLAYING]

3
00:01:31,620 --> 00:01:39,967
[SWISHING]

4
00:01:39,967 --> 00:01:42,020
LOUIS GRAY: Welcome back to
Google Developers Live.

5
00:01:42,020 --> 00:01:44,910
I'm Louis Gray, here from the
GDL studio, in Mountain View,

6
00:01:44,910 --> 00:01:48,020
for what I think is going to
be an exceptional event.

7
00:01:48,020 --> 00:01:50,990
We are talking with the team
from Codenvy, who has created

8
00:01:50,990 --> 00:01:53,230
a cloud-based IDE which
runs exceptionally

9
00:01:53,230 --> 00:01:54,960
well on Chrome OS.

10
00:01:54,960 --> 00:01:56,740
For many of you who know me
online, we've talked a lot

11
00:01:56,740 --> 00:01:59,540
about Chrome and the development
of a web platform

12
00:01:59,540 --> 00:02:00,940
for a long time.

13
00:02:00,940 --> 00:02:02,940
Often, when I talk about Chrome
OS, people are really

14
00:02:02,940 --> 00:02:05,880
excited about its promise, but
there's still a few questions.

15
00:02:05,880 --> 00:02:07,640
What can't it do?

16
00:02:07,640 --> 00:02:09,830
And one of those questions
that often comes up is

17
00:02:09,830 --> 00:02:10,470
development.

18
00:02:10,470 --> 00:02:11,760
Hey, I'm an engineer.

19
00:02:11,760 --> 00:02:13,050
I've got to use my IDE.

20
00:02:13,050 --> 00:02:16,720
I have my standard tools that
I always use, but what about

21
00:02:16,720 --> 00:02:18,390
running these IDEs on Chrome?

22
00:02:18,390 --> 00:02:20,570
And so today, we're going to
talk about precisely that with

23
00:02:20,570 --> 00:02:21,860
the Codenvy team.

24
00:02:21,860 --> 00:02:24,280
I'm joined in studio
with two guests--

25
00:02:24,280 --> 00:02:26,570
Tyler and Steven.

26
00:02:26,570 --> 00:02:29,470
Welcome, and thank you for
joining us at GDL.

27
00:02:29,470 --> 00:02:30,630
TYLER JEWELL: Thank you
for having us, Louis.

28
00:02:30,630 --> 00:02:32,075
LOUIS GRAY: I appreciate
all the work that

29
00:02:32,075 --> 00:02:32,970
you've done so far.

30
00:02:32,970 --> 00:02:35,140
And we're going to deep dive
into that product.

31
00:02:35,140 --> 00:02:39,180
We also have an avid
user of Codenvy.

32
00:02:39,180 --> 00:02:42,740
Joining us from London, from
our Hangout room in Studio

33
00:02:42,740 --> 00:02:45,170
Campus is Addy Osmani.

34
00:02:45,170 --> 00:02:47,120
Good day, Addy.

35
00:02:47,120 --> 00:02:47,510
ADDY OSMANI: Hey.

36
00:02:47,510 --> 00:02:48,320
LOUIS GRAY: Thanks
for joining us.

37
00:02:48,320 --> 00:02:51,710
And I remember we came across
the idea of bringing Codenvy

38
00:02:51,710 --> 00:02:55,480
in studio from the enthusiasm
that you showed around using

39
00:02:55,480 --> 00:02:55,940
it yourself.

40
00:02:55,940 --> 00:02:57,290
Is that right?

41
00:02:57,290 --> 00:02:58,360
ADDY OSMANI: Yeah,
that's right.

42
00:02:58,360 --> 00:03:00,360
I absolutely love using
[? Codenvy. ?]

43
00:03:00,360 --> 00:03:03,395
It's one of those really
great tools, a fit.

44
00:03:03,395 --> 00:03:05,900
Something that's been missing
in my workflow on Chrome OS

45
00:03:05,900 --> 00:03:08,340
for quite some time.

46
00:03:08,340 --> 00:03:10,570
And I've been using it for a
few months, and it's been

47
00:03:10,570 --> 00:03:12,080
really great.

48
00:03:12,080 --> 00:03:12,610
LOUIS GRAY: That's cool.

49
00:03:12,610 --> 00:03:14,650
So thanks for joining
us, Addy.

50
00:03:14,650 --> 00:03:16,800
So obviously we have the people
behind the product, we

51
00:03:16,800 --> 00:03:18,750
have an exceptional user
of the product,

52
00:03:18,750 --> 00:03:19,410
then you've got me.

53
00:03:19,410 --> 00:03:21,590
So you got three out of
four-- really solid.

54
00:03:21,590 --> 00:03:22,080
[LAUGHTER]

55
00:03:22,080 --> 00:03:23,130
LOUIS GRAY: So I want
to just talk, real

56
00:03:23,130 --> 00:03:25,100
quick, about Codenvy.

57
00:03:25,100 --> 00:03:28,030
As someone who's not an
engineer, I read about these

58
00:03:28,030 --> 00:03:28,970
things like IDE.

59
00:03:28,970 --> 00:03:31,610
I read about Eclipse, and I read
about Xcode, and I read

60
00:03:31,610 --> 00:03:33,180
about other platforms.

61
00:03:33,180 --> 00:03:35,990
And I really want to understand
when it came to

62
00:03:35,990 --> 00:03:38,030
developing your product,
first, how did

63
00:03:38,030 --> 00:03:39,640
you have the idea?

64
00:03:39,640 --> 00:03:41,790
And what is it that
sets you apart?

65
00:03:41,790 --> 00:03:44,850
How have you looked at the
opportunity that is there

66
00:03:44,850 --> 00:03:48,470
today with Chrome and the web
to start what you've done?

67
00:03:48,470 --> 00:03:50,640
I'm sure you have a presentation
as well.

68
00:03:50,640 --> 00:03:52,660
TYLER JEWELL: Well, first of
all, thank you for having us

69
00:03:52,660 --> 00:03:53,050
here today.

70
00:03:53,050 --> 00:03:56,890
We're just absolutely excited
about sharing what we're doing

71
00:03:56,890 --> 00:03:59,250
with the entire Google
community.

72
00:03:59,250 --> 00:04:02,610
The actual first bits
for Codenvy started

73
00:04:02,610 --> 00:04:05,220
about four years ago.

74
00:04:05,220 --> 00:04:08,790
And it was part of a French
company called eXo Platform.

75
00:04:08,790 --> 00:04:11,660
And they make a collaboration
solution that competes with

76
00:04:11,660 --> 00:04:14,080
Yammer, Podio, and some
other companies.

77
00:04:14,080 --> 00:04:18,570
And they needed to build some
IP that was multi-tenant IP

78
00:04:18,570 --> 00:04:21,079
inside of a Java virtual
machine.

79
00:04:21,079 --> 00:04:24,107
And they had invented this IP,
and they were looking for a

80
00:04:24,107 --> 00:04:26,760
way to test it at scale.

81
00:04:26,760 --> 00:04:31,160
And they had never had 50, let
alone 100 developers, come to

82
00:04:31,160 --> 00:04:33,140
use this system all at once.

83
00:04:33,140 --> 00:04:34,690
And so they were kicking
around some ideas.

84
00:04:34,690 --> 00:04:38,000
And they said, well, hey, what
if we were to build a widget

85
00:04:38,000 --> 00:04:40,540
factory for our platform,
and we did it as

86
00:04:40,540 --> 00:04:43,130
a cloud-based IDE?

87
00:04:43,130 --> 00:04:45,740
And they did it, and they got
about 50 to 100 users.

88
00:04:45,740 --> 00:04:48,330
And these users were really
excited, and they proved out

89
00:04:48,330 --> 00:04:50,330
the IP that was there.

90
00:04:50,330 --> 00:04:53,260
And the users were so excited
about what they experienced

91
00:04:53,260 --> 00:04:57,770
that the engineering team just
kept moving forward with it.

92
00:04:57,770 --> 00:05:00,050
They said, well, what if we
could do this for Java, and

93
00:05:00,050 --> 00:05:01,730
what if we could do
this for Python?

94
00:05:01,730 --> 00:05:03,390
What if we could
do it for Ruby?

95
00:05:03,390 --> 00:05:06,780
And they kept improving it, and
the traffic kept growing.

96
00:05:06,780 --> 00:05:10,130
And in 2011, they said, well
jeez, what if we could take

97
00:05:10,130 --> 00:05:12,310
the code and deploy
it directly onto a

98
00:05:12,310 --> 00:05:13,430
platform as a service?

99
00:05:13,430 --> 00:05:16,290
And they added support for
originally OpenShift.

100
00:05:16,290 --> 00:05:19,630
But quickly after that, it was
Google App Engine, on that.

101
00:05:19,630 --> 00:05:21,810
And the product took off.

102
00:05:21,810 --> 00:05:25,360
So this is one of those
situations where when we first

103
00:05:25,360 --> 00:05:28,370
started with it, it
was meant to be a

104
00:05:28,370 --> 00:05:31,180
technology garage project.

105
00:05:31,180 --> 00:05:33,940
But it turned into something
that was incredibly popular

106
00:05:33,940 --> 00:05:36,240
and useful along the away.

107
00:05:36,240 --> 00:05:39,710
And the traffic took off so
much so that we decided to

108
00:05:39,710 --> 00:05:42,640
take it away from the French
company, create our own

109
00:05:42,640 --> 00:05:46,200
company with it, and that
happened in January.

110
00:05:46,200 --> 00:05:48,434
And we raised some capital--
$9 million.

111
00:05:48,434 --> 00:05:50,480
And we're now a legitimate
business.

112
00:05:50,480 --> 00:05:50,820
LOUIS GRAY: Excellent.

113
00:05:50,820 --> 00:05:52,950
And we often have people come on
Google Developers Live and

114
00:05:52,950 --> 00:05:55,190
talk about how they started
their startup.

115
00:05:55,190 --> 00:05:58,400
How they came out of one idea,
and it morphed into something

116
00:05:58,400 --> 00:06:00,270
else, based on customer
demand.

117
00:06:00,270 --> 00:06:01,600
And it sounds like you
ran into that.

118
00:06:01,600 --> 00:06:04,180
The more features you poured
into this product, it really

119
00:06:04,180 --> 00:06:06,810
became an extensible platform.

120
00:06:06,810 --> 00:06:10,410
Maybe you can take me back to
this idea four years ago about

121
00:06:10,410 --> 00:06:13,040
working on the cloud platform,
as it was.

122
00:06:13,040 --> 00:06:15,230
As we know, just in the last
several years-- you mentioned

123
00:06:15,230 --> 00:06:15,750
App Engine.

124
00:06:15,750 --> 00:06:18,400
App Engine has gotten
exceptionally stronger and

125
00:06:18,400 --> 00:06:21,930
more powerful than it was
just a few years ago.

126
00:06:21,930 --> 00:06:24,580
And now we have new tools all
the time, new pieces of the

127
00:06:24,580 --> 00:06:27,890
web, that enable you to become
more like a standard

128
00:06:27,890 --> 00:06:28,840
application.

129
00:06:28,840 --> 00:06:31,050
Can you help us understand
that-- how the web has grown

130
00:06:31,050 --> 00:06:34,160
underneath your feet
and let you grow?

131
00:06:34,160 --> 00:06:36,200
TYLER JEWELL: Yeah, well, I
think what the web offers to

132
00:06:36,200 --> 00:06:39,580
us is that it's an environment
for instant provisioning

133
00:06:39,580 --> 00:06:40,410
that's there.

134
00:06:40,410 --> 00:06:43,630
And we didn't realize this when
we started building the

135
00:06:43,630 --> 00:06:47,600
product, but we figured it out
at scale, that the problem we

136
00:06:47,600 --> 00:06:50,400
were solving was not that we
were giving developers tools.

137
00:06:50,400 --> 00:06:52,940
But the problem we were solving
is that we were saving

138
00:06:52,940 --> 00:06:56,510
them the desktop administration
pains.

139
00:06:56,510 --> 00:07:02,370
So when developers work with a
traditional IDE like Eclipse,

140
00:07:02,370 --> 00:07:05,370
you're looking at minimum of
time of hours to get to,

141
00:07:05,370 --> 00:07:08,160
"Hello World." And it's not just
because they have to set

142
00:07:08,160 --> 00:07:09,160
up the IDE.

143
00:07:09,160 --> 00:07:12,470
It's also the build system, the
runtime, all the plug-ins

144
00:07:12,470 --> 00:07:14,250
that they've got to
manage on that.

145
00:07:14,250 --> 00:07:18,610
And with web technologies, web
allows us to set up the entire

146
00:07:18,610 --> 00:07:21,500
same environment instantaneously
and

147
00:07:21,500 --> 00:07:22,660
automatically.

148
00:07:22,660 --> 00:07:25,150
So what used to take hours for
"Hello World," we can take

149
00:07:25,150 --> 00:07:27,400
down to seconds with
a cloud-based IDE.

150
00:07:27,400 --> 00:07:31,460
And so when developers start
seeing that instant access

151
00:07:31,460 --> 00:07:34,500
benefit, and it's still inside
of an industrial strength

152
00:07:34,500 --> 00:07:37,410
tool, that affinity actually
wants them

153
00:07:37,410 --> 00:07:38,530
to use more of that.

154
00:07:38,530 --> 00:07:40,390
And that's where the stickiness
comes in.

155
00:07:40,390 --> 00:07:40,930
LOUIS GRAY: Absolutely.

156
00:07:40,930 --> 00:07:43,550
And as somebody who uses Chrome
OS as just a boring old

157
00:07:43,550 --> 00:07:46,340
consumer, one of the things I
really like about it is I feel

158
00:07:46,340 --> 00:07:48,720
like every computer
is my computer.

159
00:07:48,720 --> 00:07:50,100
It really doesn't matter.

160
00:07:50,100 --> 00:07:53,160
I love my Pixel to death, but
if it broke tomorrow, I can

161
00:07:53,160 --> 00:07:56,460
just jump on any machine that
has access to Chrome and get

162
00:07:56,460 --> 00:07:58,310
all of my content
back with Sync.

163
00:07:58,310 --> 00:07:58,810
TYLER JEWELL: Sure.

164
00:07:58,810 --> 00:08:00,620
LOUIS GRAY: Is there something
to that, in terms of that

165
00:08:00,620 --> 00:08:05,660
instant on and portability, that
your users have liked?

166
00:08:05,660 --> 00:08:08,860
TYLER JEWELL: I think that the
users like the fact that you

167
00:08:08,860 --> 00:08:11,350
can use almost any browser to
gain access to it, whether

168
00:08:11,350 --> 00:08:15,150
it's a mobile browser or a web
browser that's out there.

169
00:08:15,150 --> 00:08:17,880
It certainly gives them
device portability.

170
00:08:17,880 --> 00:08:20,380
It also gives them team
portability in that they can

171
00:08:20,380 --> 00:08:22,850
bring other members into the
system right away without

172
00:08:22,850 --> 00:08:23,620
having to go through a

173
00:08:23,620 --> 00:08:25,640
configuration exercise of that.

174
00:08:25,640 --> 00:08:28,790
And what we're starting to
discover is that there's a new

175
00:08:28,790 --> 00:08:31,820
class, or a new category, of
developers that are emerging

176
00:08:31,820 --> 00:08:33,460
because of cloud IDEs.

177
00:08:33,460 --> 00:08:36,039
Previously, you had those
people who were primary

178
00:08:36,039 --> 00:08:37,600
adopters of a workbench.

179
00:08:37,600 --> 00:08:39,900
And then you had people who
were kicking the tires,

180
00:08:39,900 --> 00:08:41,309
looking for new tools.

181
00:08:41,309 --> 00:08:42,900
Now there's a new
middle category.

182
00:08:42,900 --> 00:08:44,830
We call them auxiliary
developers.

183
00:08:44,830 --> 00:08:47,610
These are people who are
commuting to work, and maybe

184
00:08:47,610 --> 00:08:48,630
they have a Chromebook.

185
00:08:48,630 --> 00:08:50,910
And they just need something
that's instant access.

186
00:08:50,910 --> 00:08:52,490
It's the hackathon.

187
00:08:52,490 --> 00:08:54,720
I've got two, three, four of my
buddies, and we're going to

188
00:08:54,720 --> 00:08:57,080
spend two or three hours, and
we just want to start coding

189
00:08:57,080 --> 00:08:59,900
and not deal with the set
up of the environment.

190
00:08:59,900 --> 00:09:02,340
There are some large
organizations who separate

191
00:09:02,340 --> 00:09:04,820
work between the back end
and the front end.

192
00:09:04,820 --> 00:09:07,420
And this is a way for the back
end developers to say, here's

193
00:09:07,420 --> 00:09:10,280
an environment for you to start
working on the front end

194
00:09:10,280 --> 00:09:11,670
that's there.

195
00:09:11,670 --> 00:09:13,460
Vacationers, as well.

196
00:09:13,460 --> 00:09:16,340
And so there's all these
auxiliary groups who need an

197
00:09:16,340 --> 00:09:20,820
occasional workbench for certain
types of projects.

198
00:09:20,820 --> 00:09:23,620
But then they also have their
primary workbench for their

199
00:09:23,620 --> 00:09:25,460
permanent projects, as well.

200
00:09:25,460 --> 00:09:26,270
LOUIS GRAY: Sure, and I
understand you brought an

201
00:09:26,270 --> 00:09:27,830
overview of the product.

202
00:09:27,830 --> 00:09:29,820
And maybe you can go through
that now and give us a little

203
00:09:29,820 --> 00:09:31,390
bit more detail on Codenvy.

204
00:09:31,390 --> 00:09:34,540
TYLER JEWELL: OK, we're going
to give a demo here on it.

205
00:09:34,540 --> 00:09:36,770
Why don't I just run through
just a couple of slides to set

206
00:09:36,770 --> 00:09:37,690
context on it.

207
00:09:37,690 --> 00:09:37,800
LOUIS GRAY: Sure.

208
00:09:37,800 --> 00:09:39,640
TYLER JEWELL: And then
we'll do the demo.

209
00:09:39,640 --> 00:09:41,210
So thank you, everyone.

210
00:09:41,210 --> 00:09:44,300
Obviously, we are a cloud IDE.

211
00:09:44,300 --> 00:09:47,240
We think of ourselves as an
industrial strength tool for

212
00:09:47,240 --> 00:09:48,400
developers.

213
00:09:48,400 --> 00:09:52,750
And the problem we're solving
is that there was a LinkedIn

214
00:09:52,750 --> 00:09:55,180
survey done of 1,200 engineers,
and they asked how

215
00:09:55,180 --> 00:09:57,470
do you spend your time
during the week?

216
00:09:57,470 --> 00:10:00,900
And those engineers reported
back that they invest 13 hours

217
00:10:00,900 --> 00:10:03,870
a week just in administering
their desktop.

218
00:10:03,870 --> 00:10:05,320
It's a third of their time.

219
00:10:05,320 --> 00:10:07,590
And we were really surprised
by that.

220
00:10:07,590 --> 00:10:09,770
But these studies actually
hold true.

221
00:10:09,770 --> 00:10:11,690
There's a lot of cost
to managing that.

222
00:10:11,690 --> 00:10:13,690
And depending upon the tool
that you've got, it can

223
00:10:13,690 --> 00:10:16,180
actually be more costly.

224
00:10:16,180 --> 00:10:19,660
And so we thought, hey, there's
actually a better way

225
00:10:19,660 --> 00:10:20,710
to do things.

226
00:10:20,710 --> 00:10:24,040
If you could have the ability
to create any type of

227
00:10:24,040 --> 00:10:28,050
application, anywhere in the
world, off of any device, and

228
00:10:28,050 --> 00:10:33,430
then have your work shared in a
global community, where you

229
00:10:33,430 --> 00:10:36,180
could increase collaboration
on that, then what would

230
00:10:36,180 --> 00:10:39,210
happen is that developers would
spend their time coding,

231
00:10:39,210 --> 00:10:41,850
administrators would spend their
time configuring, and

232
00:10:41,850 --> 00:10:44,930
managers could spend their
time monitoring, there.

233
00:10:44,930 --> 00:10:47,620
And that is why we
built Codenvy.

234
00:10:47,620 --> 00:10:50,330
So Codenvy is a centralized
environment.

235
00:10:50,330 --> 00:10:55,990
And what we did is we took the
logical workspace that was on

236
00:10:55,990 --> 00:10:59,450
the desktop, and then we
decoupled it from its hardware

237
00:10:59,450 --> 00:11:03,060
dependencies and moved it
entirely into the cloud.

238
00:11:03,060 --> 00:11:05,940
Inside of that workspace
is a bunch of things.

239
00:11:05,940 --> 00:11:09,240
It's not just an IDE, but
there's an entire build system

240
00:11:09,240 --> 00:11:13,820
for compiling, testing,
packaging your code.

241
00:11:13,820 --> 00:11:17,010
And there's actually a runtime
inside of your workspace as

242
00:11:17,010 --> 00:11:21,230
well so that you can execute
the code, debug it, and

243
00:11:21,230 --> 00:11:23,060
prepare it for the
[? actual ?]

244
00:11:23,060 --> 00:11:26,310
deployment into a
PaaS as well.

245
00:11:26,310 --> 00:11:27,970
Obviously, the workspace
is entirely

246
00:11:27,970 --> 00:11:30,350
accessible by browser.

247
00:11:30,350 --> 00:11:35,370
And then your project type is
automatically configured,

248
00:11:35,370 --> 00:11:38,480
based upon either the language
that you select or the

249
00:11:38,480 --> 00:11:40,210
production environment
that it's going

250
00:11:40,210 --> 00:11:41,390
to be deployed into.

251
00:11:41,390 --> 00:11:45,390
So the more we can learn about
the type of application that

252
00:11:45,390 --> 00:11:48,340
is being built, the more we
can restrict the system to

253
00:11:48,340 --> 00:11:50,280
prevent failures and
error rates from

254
00:11:50,280 --> 00:11:52,670
configuration down the way.

255
00:11:52,670 --> 00:11:54,400
We're toolchain compatible.

256
00:11:54,400 --> 00:11:57,620
So from within the IDE, you can
deploy directly to a PaaS,

257
00:11:57,620 --> 00:12:00,870
kick off a continuous
integration build, or commit

258
00:12:00,870 --> 00:12:05,120
your code to a code repository
like GitHub or Bitbucket.

259
00:12:05,120 --> 00:12:08,010
And then once the workspace is
there, you then have three

260
00:12:08,010 --> 00:12:09,290
modes of collaboration.

261
00:12:09,290 --> 00:12:11,640
You can do it like WebEx,
which is popular with

262
00:12:11,640 --> 00:12:13,640
instructors and classrooms.

263
00:12:13,640 --> 00:12:16,280
There's a collaborative mode
like Google Docs, that we're

264
00:12:16,280 --> 00:12:18,260
about to demonstrate here,
where you have multiple

265
00:12:18,260 --> 00:12:20,830
cursors in the IDE, itself.

266
00:12:20,830 --> 00:12:24,140
And then there is a factory
concept that allows you to

267
00:12:24,140 --> 00:12:26,850
clone entire work
spaces as well.

268
00:12:26,850 --> 00:12:31,760
And then you can create replicas
that reflect the same

269
00:12:31,760 --> 00:12:34,420
exact configuration and runtime
environment that you

270
00:12:34,420 --> 00:12:35,500
had before.

271
00:12:35,500 --> 00:12:38,510
And that's very popular
for support scenarios.

272
00:12:38,510 --> 00:12:41,600
A developer who is coding,
they have some sort of

273
00:12:41,600 --> 00:12:44,530
syntactical error, they
want some help.

274
00:12:44,530 --> 00:12:47,680
They can take a snapshot of the
entire workspace, post it

275
00:12:47,680 --> 00:12:51,250
on Stack Overflow, and then the
readers of that thread can

276
00:12:51,250 --> 00:12:54,550
click on that and see exactly
what the previous developer

277
00:12:54,550 --> 00:12:57,150
was having at that
point in time.

278
00:12:57,150 --> 00:13:00,210
So with that, we've got
a lot of users.

279
00:13:00,210 --> 00:13:02,400
We're about 75,000 users.

280
00:13:02,400 --> 00:13:05,160
We represent a lot
of Fortune 500

281
00:13:05,160 --> 00:13:07,600
companies on a global basis.

282
00:13:07,600 --> 00:13:10,760
Our users come from all
over the world.

283
00:13:10,760 --> 00:13:14,440
We see people frequently from
China, India, Brazil,

284
00:13:14,440 --> 00:13:19,040
Venezuela, Russia, all the
Nordic countries as well, all

285
00:13:19,040 --> 00:13:22,430
through Europe, and obviously,
the United States, too.

286
00:13:22,430 --> 00:13:25,300
It's possible to build
APIs, web apps,

287
00:13:25,300 --> 00:13:27,460
mobile apps, and SDKs.

288
00:13:27,460 --> 00:13:31,980
Even at Google I/O, we betaed an
Android framework as well,

289
00:13:31,980 --> 00:13:36,210
where you could actually create
an Android app, compile

290
00:13:36,210 --> 00:13:38,830
it, create the Android
packaging, and then actually

291
00:13:38,830 --> 00:13:41,620
run it in a hosted
emulator as well.

292
00:13:41,620 --> 00:13:44,110
LOUIS GRAY: I have started to
see people talk about taking a

293
00:13:44,110 --> 00:13:46,710
complete mobile only approach
to development.

294
00:13:46,710 --> 00:13:49,800
Can I make a mobile app just
on an Android tablet or an

295
00:13:49,800 --> 00:13:50,570
Android phone?

296
00:13:50,570 --> 00:13:53,550
It really seems today almost
like a science experiment.

297
00:13:53,550 --> 00:13:57,120
But it's probable that not too
long from now that that will

298
00:13:57,120 --> 00:13:59,520
be just as standard as a
desktop, with mobile

299
00:13:59,520 --> 00:14:01,300
penetration being as
strong as it is.

300
00:14:01,300 --> 00:14:02,140
TYLER JEWELL: Yeah,
that's right.

301
00:14:02,140 --> 00:14:05,470
I think that when you see this,
the technology that

302
00:14:05,470 --> 00:14:08,320
allows for emulation or any sort
of broadcasting to the

303
00:14:08,320 --> 00:14:11,260
browser is strong enough where
you have as good performance

304
00:14:11,260 --> 00:14:13,720
through that as you would on
your desktop that's there.

305
00:14:13,720 --> 00:14:17,570
So now that that performance
threshold has been crossed,

306
00:14:17,570 --> 00:14:21,030
it's really just a function of
taking all those technologies

307
00:14:21,030 --> 00:14:23,580
that were on a desktop and
providing them in this shared,

308
00:14:23,580 --> 00:14:25,260
instant access environment
here.

309
00:14:25,260 --> 00:14:25,620
LOUIS GRAY: Absolutely.

310
00:14:25,620 --> 00:14:28,250
TYLER JEWELL: So I think we're
passed that one threshold.

311
00:14:28,250 --> 00:14:32,490
And we're just moving to the
delivery side of it now.

312
00:14:32,490 --> 00:14:34,670
So I'm going to pause there.

313
00:14:34,670 --> 00:14:36,020
Let's go into the demo.

314
00:14:36,020 --> 00:14:38,210
After we do a demo, later on,
I'm sure we're going to get

315
00:14:38,210 --> 00:14:39,590
questions about our
architecture

316
00:14:39,590 --> 00:14:40,360
and stuff like that.

317
00:14:40,360 --> 00:14:41,950
We come back to that as well.

318
00:14:41,950 --> 00:14:42,270
LOUIS GRAY: Absolutely.

319
00:14:42,270 --> 00:14:44,360
We do have a lot of questions
on Moderator.

320
00:14:44,360 --> 00:14:46,420
So we have a number of those
that we will get to, as well

321
00:14:46,420 --> 00:14:50,000
as talking through Addy's own
experience with your product

322
00:14:50,000 --> 00:14:51,650
that really got us excited
about Codenvy

323
00:14:51,650 --> 00:14:52,530
in the first place.

324
00:14:52,530 --> 00:14:52,960
TYLER JEWELL: Cool.

325
00:14:52,960 --> 00:14:55,150
LOUIS GRAY: One thing that you
mentioned, you talked about

326
00:14:55,150 --> 00:14:58,630
the capability of these
machines and the

327
00:14:58,630 --> 00:14:59,940
enhancement to it.

328
00:14:59,940 --> 00:15:02,650
Being on Chrome OS, and I see
Steven, you have a Chromebook

329
00:15:02,650 --> 00:15:06,060
Pixel with you as well, what
is it about Chrome OS that

330
00:15:06,060 --> 00:15:10,540
makes it a compelling machine
and platform for Codenvy?

331
00:15:10,540 --> 00:15:12,680
Is this the realization
of cloud plus cloud,

332
00:15:12,680 --> 00:15:14,880
or what's the story?

333
00:15:14,880 --> 00:15:15,010
[CLEARS THROAT]

334
00:15:15,010 --> 00:15:19,950
STEVEN LE MEUR: I think you can
use the ability to be able

335
00:15:19,950 --> 00:15:25,160
to work from everywhere with
your Chromebook is something

336
00:15:25,160 --> 00:15:27,830
very interesting with Codenvy.

337
00:15:27,830 --> 00:15:36,730
So we should jump to
the demo, probably.

338
00:15:36,730 --> 00:15:37,680
LOUIS GRAY: Cool.

339
00:15:37,680 --> 00:15:40,170
Let's go ahead and
pull up the demo.

340
00:15:40,170 --> 00:15:40,440
TYLER JEWELL: OK, great.

341
00:15:40,440 --> 00:15:44,990
STEVEN LE MEUR:We will
demonstrate the power of being

342
00:15:44,990 --> 00:15:49,690
able to work with your teams
from everywhere you are.

343
00:15:49,690 --> 00:15:50,410
TYLER JEWELL: Cool.

344
00:15:50,410 --> 00:15:52,670
All right.

345
00:15:52,670 --> 00:15:55,090
Steven has just joined
Codenvy.

346
00:15:55,090 --> 00:15:57,110
He's been a lot of the
brains behind the

347
00:15:57,110 --> 00:15:58,180
future product designs.

348
00:15:58,180 --> 00:16:00,750
And we saw that there were
questions already about

349
00:16:00,750 --> 00:16:02,380
where's the future direction
of that?

350
00:16:02,380 --> 00:16:04,790
And he's the man behind
all that stuff.

351
00:16:04,790 --> 00:16:05,040
LOUIS GRAY: Excellent.

352
00:16:05,040 --> 00:16:07,350
So if I want him to talk about
the next generation that you

353
00:16:07,350 --> 00:16:09,190
don't want to talk about yet,
I'll just keep asking

354
00:16:09,190 --> 00:16:09,910
until he tells us.

355
00:16:09,910 --> 00:16:10,700
TYLER JEWELL: That's right,
that's exactly it.

356
00:16:10,700 --> 00:16:12,300
And he will tell you,
by the way.

357
00:16:12,300 --> 00:16:13,160
LOUIS GRAY: All right, so we'll
look for that in about

358
00:16:13,160 --> 00:16:13,740
20 minutes, then.

359
00:16:13,740 --> 00:16:15,140
TYLER JEWELL: You ply him with
another Pixel, and he's going

360
00:16:15,140 --> 00:16:17,010
to just splurge everything
you've got.

361
00:16:17,010 --> 00:16:18,448
LOUIS GRAY: You came
to the right place.

362
00:16:18,448 --> 00:16:21,910
[LAUGHTER]

363
00:16:21,910 --> 00:16:23,600
TYLER JEWELL: So great.

364
00:16:23,600 --> 00:16:24,700
Here's our home page.

365
00:16:24,700 --> 00:16:25,770
It's pretty straightforward.

366
00:16:25,770 --> 00:16:27,790
I'm just going to log in.

367
00:16:27,790 --> 00:16:30,260
You don't have to create an
account through forms.

368
00:16:30,260 --> 00:16:32,390
You can obviously create an
account through OAuth.

369
00:16:32,390 --> 00:16:36,430
And we support the Google
OAuth technology there.

370
00:16:36,430 --> 00:16:40,460
But I want to log into a
particular account here.

371
00:16:40,460 --> 00:16:43,590
And when you log in behind
the scenes, we're

372
00:16:43,590 --> 00:16:45,530
actually loading an IDE.

373
00:16:45,530 --> 00:16:49,360
Your IDE is going
into a cluster.

374
00:16:49,360 --> 00:16:54,000
We actually run up to about 250
IDEs per process there.

375
00:16:54,000 --> 00:16:56,580
So we actually have a
really high density.

376
00:16:56,580 --> 00:16:58,590
But it's going into
a system, and now

377
00:16:58,590 --> 00:17:00,190
I'm part of the community.

378
00:17:00,190 --> 00:17:04,270
At any given point in time,
there is approximately 1,000

379
00:17:04,270 --> 00:17:07,310
developers who are coding,
building, and testing in here.

380
00:17:07,310 --> 00:17:10,490
Your environment is isolated
apart from all the others,

381
00:17:10,490 --> 00:17:13,240
even though we've got a
multi-tenant architecture

382
00:17:13,240 --> 00:17:14,480
behind the scenes.

383
00:17:14,480 --> 00:17:20,170
And the IDE pops up here,
and its design is very

384
00:17:20,170 --> 00:17:21,230
Eclipse-like.

385
00:17:21,230 --> 00:17:24,560
It is meant to be an industrial
strength tool.

386
00:17:24,560 --> 00:17:27,560
There is the concept of
projects in here.

387
00:17:27,560 --> 00:17:30,650
We can either create a new
project or import a project

388
00:17:30,650 --> 00:17:33,100
from GitHub from this.

389
00:17:33,100 --> 00:17:39,170
You can create projects of
many different types, and

390
00:17:39,170 --> 00:17:41,300
we'll just go ahead and Create
New Create Project.

391
00:17:41,300 --> 00:17:44,610
And what we do is we ask you a
couple of details about the

392
00:17:44,610 --> 00:17:46,740
project that you're
going to create.

393
00:17:46,740 --> 00:17:48,530
What language is it?

394
00:17:48,530 --> 00:17:51,250
What environment are you
going to deploy to?

395
00:17:51,250 --> 00:17:53,430
And depending upon the language
that you select, like

396
00:17:53,430 --> 00:17:57,530
if I wanted to do a Rails App,
it certainly selects the

397
00:17:57,530 --> 00:18:00,710
different PaaS providers that
are available for Rails.

398
00:18:00,710 --> 00:18:02,130
And so there's certainly
some matching

399
00:18:02,130 --> 00:18:04,180
that's going on there.

400
00:18:04,180 --> 00:18:06,730
Just to demonstrate a couple of
the capabilities, I'm going

401
00:18:06,730 --> 00:18:09,700
to do a Java Spring app.

402
00:18:09,700 --> 00:18:11,600
And I'm not going to deploy
it to a PaaS.

403
00:18:11,600 --> 00:18:12,750
I'm going to say None.

404
00:18:12,750 --> 00:18:15,430
And that means it's only
going to run in our

405
00:18:15,430 --> 00:18:17,960
runtime here as well.

406
00:18:17,960 --> 00:18:23,210
And just give it a name,
Google Demo, here.

407
00:18:23,210 --> 00:18:25,870
I'm going to just do a very
simple Spring application with

408
00:18:25,870 --> 00:18:26,830
a template.

409
00:18:26,830 --> 00:18:30,540
And now it's loading
the project.

410
00:18:30,540 --> 00:18:35,000
The IDE, itself, has multiple
panes, as you would expect an

411
00:18:35,000 --> 00:18:35,980
IDE to have.

412
00:18:35,980 --> 00:18:38,610
We can give you different
views of your project.

413
00:18:38,610 --> 00:18:42,770
We can certainly give you
different views of the windows

414
00:18:42,770 --> 00:18:43,950
that are available.

415
00:18:43,950 --> 00:18:47,650
And what I'm doing here is I've
got a Project Explorer.

416
00:18:47,650 --> 00:18:49,370
This is a Java application.

417
00:18:49,370 --> 00:18:51,240
And I'm just going to
open that Java app.

418
00:18:51,240 --> 00:18:53,910
And in the lower right
corner, you can see

419
00:18:53,910 --> 00:18:55,240
we're working hard.

420
00:18:55,240 --> 00:18:58,890
And what's going on over here
is that we're parsing the

421
00:18:58,890 --> 00:19:00,320
source code trees.

422
00:19:00,320 --> 00:19:04,080
We're figuring out all the
dependencies across the

423
00:19:04,080 --> 00:19:05,780
different libraries
that are there.

424
00:19:05,780 --> 00:19:08,850
And eventually, the editor is
going to clean itself up.

425
00:19:08,850 --> 00:19:11,620
Right now, when it opened up,
it's giving me all sorts of

426
00:19:11,620 --> 00:19:16,140
red squigglies, all sorts of
error conditions here, because

427
00:19:16,140 --> 00:19:19,080
it hasn't parsed all the files
in the project that's there.

428
00:19:19,080 --> 00:19:21,580
But after it gets initialized,
this stuff will get cleaned

429
00:19:21,580 --> 00:19:23,700
up, and it's all ready to go.

430
00:19:23,700 --> 00:19:26,620
And this is a completely
workable application.

431
00:19:26,620 --> 00:19:27,790
We can compile it.

432
00:19:27,790 --> 00:19:28,870
We can run it.

433
00:19:28,870 --> 00:19:32,750
And so we'll just go
ahead and do that.

434
00:19:32,750 --> 00:19:33,740
And I'm going to say Build.

435
00:19:33,740 --> 00:19:37,500
And we've got a whole variety
of windows that will show up

436
00:19:37,500 --> 00:19:39,520
on the bottom here.

437
00:19:39,520 --> 00:19:41,330
And so you've got
output windows.

438
00:19:41,330 --> 00:19:44,750

439
00:19:44,750 --> 00:19:47,170
It's going to have a debugger
window that we can show up.

440
00:19:47,170 --> 00:19:51,670
If there's any error codes,
it'll come up here as well.

441
00:19:51,670 --> 00:19:54,890
So you can see that the
build is successful.

442
00:19:54,890 --> 00:19:59,450
Now for the build, we have an
integrated, Maven-based build

443
00:19:59,450 --> 00:20:01,230
system in here.

444
00:20:01,230 --> 00:20:06,700
Maven uses pom.xml as its,
basically, recipe for how the

445
00:20:06,700 --> 00:20:09,580
build should work, with what
dependencies, and where those

446
00:20:09,580 --> 00:20:11,930
dependencies are going
to come from.

447
00:20:11,930 --> 00:20:17,490
We have both a private Maven
repository inside of Codenvy

448
00:20:17,490 --> 00:20:21,070
for all of your local libraries,
but it also can an

449
00:20:21,070 --> 00:20:23,400
access any library that's
available in

450
00:20:23,400 --> 00:20:24,640
Maven Central, as well.

451
00:20:24,640 --> 00:20:28,440
So you can create an
application, reference jars,

452
00:20:28,440 --> 00:20:30,240
SDKs, or other types
of libraries.

453
00:20:30,240 --> 00:20:32,260
And we'll automatically
synchronize with that and

454
00:20:32,260 --> 00:20:34,710
bring them into your workspace
based upon the codes that

455
00:20:34,710 --> 00:20:37,030
you've gotten in here.

456
00:20:37,030 --> 00:20:38,960
Things are fine.

457
00:20:38,960 --> 00:20:40,010
So it's no big deal.

458
00:20:40,010 --> 00:20:42,640
So I'm just going to go ahead
and run, and I'm going to run

459
00:20:42,640 --> 00:20:43,830
the application.

460
00:20:43,830 --> 00:20:48,410
And when it's running, what
actually happens is that the

461
00:20:48,410 --> 00:20:51,340
files are getting synchronized
on the different clusters.

462
00:20:51,340 --> 00:20:54,280
So when we say build, what
happens is all your project

463
00:20:54,280 --> 00:20:56,820
files were synchronized onto a
completely different cluster.

464
00:20:56,820 --> 00:20:59,310
And we've got a series of nodes
that are processing

465
00:20:59,310 --> 00:21:02,100
those builds, even though it
appeared that it was all

466
00:21:02,100 --> 00:21:04,140
happening on one
interface here.

467
00:21:04,140 --> 00:21:06,910
And then the same thing has
happened on the run.

468
00:21:06,910 --> 00:21:11,560
So we've taken the artifacts
that were built, and we've put

469
00:21:11,560 --> 00:21:15,390
them onto a run cluster, and
we've started up a server.

470
00:21:15,390 --> 00:21:18,150
I think in this case, it's
Tomcat running Spring.

471
00:21:18,150 --> 00:21:20,310
And there's a URL here.

472
00:21:20,310 --> 00:21:23,040
And I can click that URL.

473
00:21:23,040 --> 00:21:27,320
I can click that URL, and the
app is now running, and it's

474
00:21:27,320 --> 00:21:27,980
going to load here.

475
00:21:27,980 --> 00:21:28,920
And you'll see that
it's a completely

476
00:21:28,920 --> 00:21:30,110
functioning Spring app.

477
00:21:30,110 --> 00:21:32,400
LOUIS GRAY: And so for some of
that, you literally took the

478
00:21:32,400 --> 00:21:34,380
abstraction, and you virtualized
some of the

479
00:21:34,380 --> 00:21:35,310
complexity.

480
00:21:35,310 --> 00:21:37,570
So what you're showing is the
tip of the iceberg in terms of

481
00:21:37,570 --> 00:21:39,600
all the technology that's
running behind it.

482
00:21:39,600 --> 00:21:41,960
And for the engineer and the
coder who's making the

483
00:21:41,960 --> 00:21:44,250
content, it looks like
any other interface.

484
00:21:44,250 --> 00:21:45,580
But on the back end, you're
doing all of this

485
00:21:45,580 --> 00:21:47,755
synchronization, making sure all
of cluster management is

486
00:21:47,755 --> 00:21:48,350
there, as well.

487
00:21:48,350 --> 00:21:49,800
TYLER JEWELL: That's right.

488
00:21:49,800 --> 00:21:55,830
Yeah, we're trying to give a
desktop-like experience.

489
00:21:55,830 --> 00:21:58,430
But it's actually highly
distributed behind the scenes.

490
00:21:58,430 --> 00:22:01,180
LOUIS GRAY: Well actually, what
it is is many desktops.

491
00:22:01,180 --> 00:22:03,250
It's many different desktops
with only one single monitor.

492
00:22:03,250 --> 00:22:05,470
And that monitor happens
to be a web browser.

493
00:22:05,470 --> 00:22:06,700
TYLER JEWELL: That's
right, yeah.

494
00:22:06,700 --> 00:22:09,490
And if you think about it, when
you're running on your

495
00:22:09,490 --> 00:22:12,670
desktop, you're running many
processes all at once.

496
00:22:12,670 --> 00:22:16,440
So even though it's all on one
node, there's the build

497
00:22:16,440 --> 00:22:19,400
process, the run process, the
IDE process, and we distribute

498
00:22:19,400 --> 00:22:22,540
those processes onto, actually,
separate clusters.

499
00:22:22,540 --> 00:22:25,300
And it actually ends up having,
in many cases, some

500
00:22:25,300 --> 00:22:27,900
users talk about it being faster
than their desktop.

501
00:22:27,900 --> 00:22:31,280
Because if you think about
development, it's highly

502
00:22:31,280 --> 00:22:34,280
sporadic, but very intense
bursts of activity.

503
00:22:34,280 --> 00:22:38,670
And so when you're building on
your desktop, you almost never

504
00:22:38,670 --> 00:22:41,500
use all of the resources that
are available to you.

505
00:22:41,500 --> 00:22:44,210
So when you're working in the
IDE portion, that's a ton of

506
00:22:44,210 --> 00:22:45,430
file manipulation.

507
00:22:45,430 --> 00:22:48,740
And so that's I/O intensive.

508
00:22:48,740 --> 00:22:52,920
But when you're doing that,
the CPU is idle.

509
00:22:52,920 --> 00:22:55,270
But when you say, hey, let's
build my application, it's

510
00:22:55,270 --> 00:22:58,560
very CPU intensive, and now
the I/O is idle, and the

511
00:22:58,560 --> 00:22:59,740
memory is idle.

512
00:22:59,740 --> 00:23:01,950
And obviously, the runs
are memory intensive.

513
00:23:01,950 --> 00:23:04,640
So by separating those onto
separate clusters, you can

514
00:23:04,640 --> 00:23:07,460
actually still use the IDE while
the build is going at

515
00:23:07,460 --> 00:23:08,330
full throttle.

516
00:23:08,330 --> 00:23:10,470
And even though the run is
there, you can use the other

517
00:23:10,470 --> 00:23:11,630
functions as well.

518
00:23:11,630 --> 00:23:14,090
So you can get overall better
performance, and we can throw

519
00:23:14,090 --> 00:23:16,020
a lot more horsepower at each
one of those functions.

520
00:23:16,020 --> 00:23:16,480
LOUIS GRAY: Absolutely.

521
00:23:16,480 --> 00:23:17,770
And I think there's always
been this trade off,

522
00:23:17,770 --> 00:23:20,380
especially the last 10 years,
with the capability of

523
00:23:20,380 --> 00:23:23,220
networks increasing so much
further than CPU.

524
00:23:23,220 --> 00:23:24,870
You have this interesting
trade off of it being

525
00:23:24,870 --> 00:23:27,070
CPU-bound versus network
latency.

526
00:23:27,070 --> 00:23:27,340
TYLER JEWELL: Yeah.

527
00:23:27,340 --> 00:23:29,250
LOUIS GRAY: And now that you
were able to abstract all that

528
00:23:29,250 --> 00:23:31,920
on the back end with the
massive clustering, and

529
00:23:31,920 --> 00:23:35,400
hopefully, on the internet
side that the pipe is big

530
00:23:35,400 --> 00:23:37,470
enough for the user, everything

531
00:23:37,470 --> 00:23:38,700
works well in the cloud.

532
00:23:38,700 --> 00:23:40,280
And what are the kind of
questions you get around

533
00:23:40,280 --> 00:23:41,150
connectivity?

534
00:23:41,150 --> 00:23:42,730
We often get that
for Chrome OS.

535
00:23:42,730 --> 00:23:43,750
What apps are online?

536
00:23:43,750 --> 00:23:45,360
What's not online?

537
00:23:45,360 --> 00:23:48,590
How do you handle either
intermittent connection, slow

538
00:23:48,590 --> 00:23:51,760
connection, or no connection?

539
00:23:51,760 --> 00:23:54,720
TYLER JEWELL: So yeah, we get
a lot of questions about the

540
00:23:54,720 --> 00:23:57,040
connectivity element.

541
00:23:57,040 --> 00:24:00,000
The most common question we get
is, is there some sort of

542
00:24:00,000 --> 00:24:01,220
offline support?

543
00:24:01,220 --> 00:24:03,910
And we don't have offline
support today.

544
00:24:03,910 --> 00:24:07,240
But we're working at what would
an offline model be?

545
00:24:07,240 --> 00:24:09,050
Because for a lot of people,
just being able to edit the

546
00:24:09,050 --> 00:24:11,050
files offline is
not sufficient.

547
00:24:11,050 --> 00:24:12,710
They want to be able to compile
them, and they want to

548
00:24:12,710 --> 00:24:13,660
be able to run them.

549
00:24:13,660 --> 00:24:18,190
So offline support for us means
many shades of gray.

550
00:24:18,190 --> 00:24:19,620
So we don't provide
that today.

551
00:24:19,620 --> 00:24:24,630
But in terms of intermittent
connectivity or slow pipes, it

552
00:24:24,630 --> 00:24:26,850
actually is quite good at
the end of the day.

553
00:24:26,850 --> 00:24:29,850
Because if you actually put a
sniffer on it, the amount of

554
00:24:29,850 --> 00:24:32,200
traffic that goes between
the browser and the

555
00:24:32,200 --> 00:24:33,940
server is very limited.

556
00:24:33,940 --> 00:24:37,020
The only time that that sort of
conversation even needs to

557
00:24:37,020 --> 00:24:40,470
take place is when there's
actually a server side

558
00:24:40,470 --> 00:24:44,410
activity, which is essentially
file manipulation, which is

559
00:24:44,410 --> 00:24:47,590
like a refactoring command,
or a build, or a run.

560
00:24:47,590 --> 00:24:49,750
And that's actually very
few and far between.

561
00:24:49,750 --> 00:24:53,840
So we actually do quite well
on slow or intermittent

562
00:24:53,840 --> 00:24:56,140
connections that are there.

563
00:24:56,140 --> 00:24:58,070
And that's how we've
managed it so far.

564
00:24:58,070 --> 00:25:01,360
And we hope that we're about
to year away from having an

565
00:25:01,360 --> 00:25:03,030
offline capability.

566
00:25:03,030 --> 00:25:05,940
And we'll actually use this
Google Packaged Apps

567
00:25:05,940 --> 00:25:07,190
technology to do that.

568
00:25:07,190 --> 00:25:09,410
LOUIS GRAY: Sure, so I don't
want to hijack it and get

569
00:25:09,410 --> 00:25:09,850
interrupting of your demo.

570
00:25:09,850 --> 00:25:12,270
So I want to go through this,
and then I want to transfer

571
00:25:12,270 --> 00:25:14,750
over to Addy to have him talk
more about his experience as

572
00:25:14,750 --> 00:25:18,340
well as possibly JavaScript,
HTML, CSS-- a lot of what the

573
00:25:18,340 --> 00:25:19,540
Chrome fans are looking for.

574
00:25:19,540 --> 00:25:20,650
TYLER JEWELL: No problem.

575
00:25:20,650 --> 00:25:22,920
So here, we ran the app.

576
00:25:22,920 --> 00:25:25,660
Inside the Editor, itself, after
the app run, you can see

577
00:25:25,660 --> 00:25:27,710
that you've got all the things
that you would expect.

578
00:25:27,710 --> 00:25:32,220
You can do code completion
in here.

579
00:25:32,220 --> 00:25:33,520
We can set break points.

580
00:25:33,520 --> 00:25:35,780
We can actually run
a full debugger.

581
00:25:35,780 --> 00:25:38,050
I'm not going to go through
that right now.

582
00:25:38,050 --> 00:25:41,520
You can see that there are
Help on the right.

583
00:25:41,520 --> 00:25:43,910
We've also got Help
on the left.

584
00:25:43,910 --> 00:25:48,030
We can do a lot of interesting
things, like we can refactor

585
00:25:48,030 --> 00:25:49,220
the code if we wanted to.

586
00:25:49,220 --> 00:25:50,020
I could go up here to Edit.

587
00:25:50,020 --> 00:25:52,250
We could refactor that variable
or the method name,

588
00:25:52,250 --> 00:25:55,330
and it'll propagate across
all the factors.

589
00:25:55,330 --> 00:25:57,380
You can generate getters
and setters.

590
00:25:57,380 --> 00:25:59,010
You can send code pointers.

591
00:25:59,010 --> 00:26:01,010
There's a lot of things
you can do.

592
00:26:01,010 --> 00:26:06,720
If I wanted to commit this code
to a GitHub repository,

593
00:26:06,720 --> 00:26:09,870
we've got a full set of
capabilities in here.

594
00:26:09,870 --> 00:26:12,090
The code is running
inside of Codenvy.

595
00:26:12,090 --> 00:26:15,100
It's a local repository
that we've created.

596
00:26:15,100 --> 00:26:19,710
So you could either clone a
remote repository in, or we

597
00:26:19,710 --> 00:26:22,510
could initialize this repository
and then push it

598
00:26:22,510 --> 00:26:24,130
off to GitHub.

599
00:26:24,130 --> 00:26:26,770
And we support all your GitHub
credentials in both public and

600
00:26:26,770 --> 00:26:29,260
private projects in
here as well.

601
00:26:29,260 --> 00:26:32,140
On the PaaS front, we obviously
have a huge number

602
00:26:32,140 --> 00:26:34,270
of PaaS providers
that we support.

603
00:26:34,270 --> 00:26:38,460
Our most popular one, by over
50%, is Google App Engine.

604
00:26:38,460 --> 00:26:41,430
And so when you're done working
with the bits in here,

605
00:26:41,430 --> 00:26:42,610
I could log in.

606
00:26:42,610 --> 00:26:45,520
I could then create a Google
App Engine account--

607
00:26:45,520 --> 00:26:47,920
I have to create a unique
identifier off that.

608
00:26:47,920 --> 00:26:50,690
And then I take all these bits
and push it on there, and

609
00:26:50,690 --> 00:26:53,130
we'll ensure that it actually
is going to run accurately,

610
00:26:53,130 --> 00:26:56,290
because we've restricted our
own environment on that.

611
00:26:56,290 --> 00:27:00,390
We're actually running the
Google Cloud SDK in our local

612
00:27:00,390 --> 00:27:01,140
environment.

613
00:27:01,140 --> 00:27:03,930
So you can make use of all the
APIs that you would have

614
00:27:03,930 --> 00:27:08,130
access to in the Google Cloud
environment here as well.

615
00:27:08,130 --> 00:27:11,327
The last demo we'll get, and
then we can get into Addy, is

616
00:27:11,327 --> 00:27:15,440
Steven, I think, he's going to
log in at some point in time.

617
00:27:15,440 --> 00:27:17,430
And he's going to be able
to join the account.

618
00:27:17,430 --> 00:27:21,030
And so what I would typically
do is I could come in here,

619
00:27:21,030 --> 00:27:23,180
and I could share and
invite developers.

620
00:27:23,180 --> 00:27:27,770
And previous to this call, I
invited him on his email

621
00:27:27,770 --> 00:27:30,030
address into my workspace
here.

622
00:27:30,030 --> 00:27:32,570
And so this is now a shared
work space on that.

623
00:27:32,570 --> 00:27:34,500
So he can join, and I think he's
going to come into the

624
00:27:34,500 --> 00:27:36,110
Google demo here.

625
00:27:36,110 --> 00:27:37,850
And at some point in time,
on the right, he's

626
00:27:37,850 --> 00:27:39,490
going to show up.

627
00:27:39,490 --> 00:27:40,630
And there he is.

628
00:27:40,630 --> 00:27:41,690
He's shown up.

629
00:27:41,690 --> 00:27:44,630
He's got a little red signal
there, meaning that he's not

630
00:27:44,630 --> 00:27:46,830
in the file up, but now
he's in the file.

631
00:27:46,830 --> 00:27:50,170
And somewhere, he's going to
come into the code, and he's

632
00:27:50,170 --> 00:27:51,790
going to start typing.

633
00:27:51,790 --> 00:27:53,550
And oh, he's going to say hi.

634
00:27:53,550 --> 00:27:55,700
Hello, Steven.

635
00:27:55,700 --> 00:27:56,950
Very friendly of you.

636
00:27:56,950 --> 00:28:01,720

637
00:28:01,720 --> 00:28:04,860
Would you like to
code together?

638
00:28:04,860 --> 00:28:08,510
And he's going to just type
some code here or

639
00:28:08,510 --> 00:28:09,760
right after that line.

640
00:28:09,760 --> 00:28:12,270

641
00:28:12,270 --> 00:28:15,440
Put some code in the
[INAUDIBLE].

642
00:28:15,440 --> 00:28:16,210
There we go.

643
00:28:16,210 --> 00:28:19,500
And you can see his cursor
right in the middle.

644
00:28:19,500 --> 00:28:21,150
I could put my [? cursor ?]
over it.

645
00:28:21,150 --> 00:28:22,890
He's going to start typing.

646
00:28:22,890 --> 00:28:24,750
And so we're actually
working on the same

647
00:28:24,750 --> 00:28:26,950
file at the same time.

648
00:28:26,950 --> 00:28:27,200
LOUIS GRAY: Mm-hmm.

649
00:28:27,200 --> 00:28:29,440
TYLER JEWELL: If I were to go
and issue the build, it would

650
00:28:29,440 --> 00:28:32,380
be a simultaneous build
at the same time.

651
00:28:32,380 --> 00:28:35,250
If I were to issue the run, it
would be a simultaneous run.

652
00:28:35,250 --> 00:28:37,130
LOUIS GRAY: And this type of
collaboration is very familiar

653
00:28:37,130 --> 00:28:39,240
to those people who have used
Google Docs as a suite.

654
00:28:39,240 --> 00:28:40,480
You see who's logged in.

655
00:28:40,480 --> 00:28:42,620
You see exactly where
their cursors are.

656
00:28:42,620 --> 00:28:45,960
It's cloud computing
in a new approach.

657
00:28:45,960 --> 00:28:46,320
TYLER JEWELL: That's right.

658
00:28:46,320 --> 00:28:48,000
That's exactly right.

659
00:28:48,000 --> 00:28:51,380
And this is a highly
flexible sort of

660
00:28:51,380 --> 00:28:52,840
collaboration system here.

661
00:28:52,840 --> 00:28:55,600
What we're actually doing behind
the scenes is we're

662
00:28:55,600 --> 00:28:57,610
caching all the files that
are in the project

663
00:28:57,610 --> 00:28:58,870
into a cache server.

664
00:28:58,870 --> 00:29:01,050
And so he's actually running
on a separate

665
00:29:01,050 --> 00:29:02,720
cluster than I am.

666
00:29:02,720 --> 00:29:04,990
And so we're on two
separate IDEs.

667
00:29:04,990 --> 00:29:07,860
And so the cache server is

668
00:29:07,860 --> 00:29:10,730
synchronizing all of our changes.

669
00:29:10,730 --> 00:29:13,430
And then when we do certain
actions, it then synchronizes

670
00:29:13,430 --> 00:29:16,570
the saves back to the
synchronization server across

671
00:29:16,570 --> 00:29:18,110
the different environments
that's there.

672
00:29:18,110 --> 00:29:20,350
So there's actually a lot of
technology that goes into just

673
00:29:20,350 --> 00:29:21,785
making this work at this pace.

674
00:29:21,785 --> 00:29:27,220

675
00:29:27,220 --> 00:29:29,390
And this is what we
provide today.

676
00:29:29,390 --> 00:29:34,310
So we have a large range of
languages that we support.

677
00:29:34,310 --> 00:29:38,050
We have a large range of
platforms that we support.

678
00:29:38,050 --> 00:29:41,070
You're going to see us get a
lot more aggressive in our

679
00:29:41,070 --> 00:29:41,830
expansion--

680
00:29:41,830 --> 00:29:44,460
we've been slowly trickling
things out--

681
00:29:44,460 --> 00:29:45,760
from here on out.

682
00:29:45,760 --> 00:29:48,330
But going forward, we're
just on the verge

683
00:29:48,330 --> 00:29:49,930
of shipping an SDK.

684
00:29:49,930 --> 00:29:53,030
And that SDK is actually going
to allow the community to add

685
00:29:53,030 --> 00:29:55,810
their own languages, add their
own frameworks, add their own

686
00:29:55,810 --> 00:29:58,300
platform as a service providers,
add their own

687
00:29:58,300 --> 00:30:00,030
continuous integration
servers.

688
00:30:00,030 --> 00:30:03,480
And so you can change the entire
system through the SDK.

689
00:30:03,480 --> 00:30:07,500
So we've found that we can
only add one framework or

690
00:30:07,500 --> 00:30:09,050
language a month ourself.

691
00:30:09,050 --> 00:30:11,510
And we can hope to bring
others into it.

692
00:30:11,510 --> 00:30:14,680
And we can make this a system
that's usable by all.

693
00:30:14,680 --> 00:30:15,310
LOUIS GRAY: Excellent.

694
00:30:15,310 --> 00:30:17,000
I really like the expansion when
you talk about using the

695
00:30:17,000 --> 00:30:19,640
SDK as a platform and all these
platforms as a service

696
00:30:19,640 --> 00:30:21,400
that you're supporting.

697
00:30:21,400 --> 00:30:24,040
It almost becomes that your
platform is a new platform.

698
00:30:24,040 --> 00:30:24,400
[LAUGHTER]

699
00:30:24,400 --> 00:30:24,700
TYLER JEWELL: Yeah.

700
00:30:24,700 --> 00:30:26,140
LOUIS GRAY: We must go deeper.

701
00:30:26,140 --> 00:30:28,030
So Addy, I definitely thank
you for being so

702
00:30:28,030 --> 00:30:28,870
patient with us.

703
00:30:28,870 --> 00:30:30,260
ADDY OSMANI: Not at all.

704
00:30:30,260 --> 00:30:31,980
LOUIS GRAY: You got us excited
about Codenvy in the first

705
00:30:31,980 --> 00:30:32,970
place, at least you
did for me.

706
00:30:32,970 --> 00:30:35,950
These guys have been excited
about it for years.

707
00:30:35,950 --> 00:30:39,170
I wanted to have your input,
not just from a user

708
00:30:39,170 --> 00:30:42,080
perspective, which would be
awesome, but really thinking

709
00:30:42,080 --> 00:30:44,590
from the world of Chrome where
you live every day, when you

710
00:30:44,590 --> 00:30:47,720
take a look at the web platform
and HTML development,

711
00:30:47,720 --> 00:30:51,700
CSS, JavaScript, really talk
about how Codenvy has enabled

712
00:30:51,700 --> 00:30:54,890
that for you and for
others like you.

713
00:30:54,890 --> 00:30:55,350
ADDY OSMANI: Sure thing.

714
00:30:55,350 --> 00:30:57,490
So I think there's something
really magical about being

715
00:30:57,490 --> 00:31:00,900
able to build web apps, mobile
web apps, all sorts of

716
00:31:00,900 --> 00:31:04,260
applications and sites on the
web using tools built on web

717
00:31:04,260 --> 00:31:05,360
technologies.

718
00:31:05,360 --> 00:31:07,890
It's sort of Inception-y
in a way.

719
00:31:07,890 --> 00:31:09,930
And I thought that
was really neat.

720
00:31:09,930 --> 00:31:14,710
But I spend a lot of time in
using Git and GitHub every day

721
00:31:14,710 --> 00:31:15,930
in my workflow.

722
00:31:15,930 --> 00:31:18,235
And that's been something that's
been missing for me

723
00:31:18,235 --> 00:31:19,900
when working on Chrome OS.

724
00:31:19,900 --> 00:31:23,600
I've been missing the ability to
be able to open up a Repo,

725
00:31:23,600 --> 00:31:26,330
call on something someone else
has worked on, just being able

726
00:31:26,330 --> 00:31:29,820
to file patches and easily
preview them and maybe push

727
00:31:29,820 --> 00:31:33,670
them off to a different PaaS,
or Heroku or somewhere else

728
00:31:33,670 --> 00:31:36,190
with App Engine and so on.

729
00:31:36,190 --> 00:31:39,100
And Codenvy has really enabled
me to do that.

730
00:31:39,100 --> 00:31:42,330
And it hasn't taken me that long
to actually learn how to

731
00:31:42,330 --> 00:31:45,110
use this and integrate
it into my workflow.

732
00:31:45,110 --> 00:31:48,110
If I happen to be using a Pixel
and if I perhaps don't

733
00:31:48,110 --> 00:31:51,610
have my [INAUDIBLE], or I don't
need it, I can just

734
00:31:51,610 --> 00:31:54,370
easily hop on this and continue
working on whatever

735
00:31:54,370 --> 00:31:56,950
project it was that I was
working on other machines

736
00:31:56,950 --> 00:31:58,430
very, very easily.

737
00:31:58,430 --> 00:32:00,430
The workspace is
already there.

738
00:32:00,430 --> 00:32:04,000
Any commits that I've made are
just instantly accessible.

739
00:32:04,000 --> 00:32:07,030
And the same collaborative
workflow that the guys were

740
00:32:07,030 --> 00:32:10,470
showing a little bit earlier
actually works with GitHub

741
00:32:10,470 --> 00:32:13,390
projects as well as
Repos as well.

742
00:32:13,390 --> 00:32:18,000
So if I happen to import in a
GitHub project where a few of

743
00:32:18,000 --> 00:32:20,310
my friends have been
contributing, and I want to be

744
00:32:20,310 --> 00:32:23,360
able to collaborate with those
friends, it can instantly let

745
00:32:23,360 --> 00:32:25,920
me invite those people, all
the techs who's been

746
00:32:25,920 --> 00:32:27,200
contributing.

747
00:32:27,200 --> 00:32:29,630
I can just send them out a
Codenvy invite and get them

748
00:32:29,630 --> 00:32:30,910
into the project as well.

749
00:32:30,910 --> 00:32:33,305
So we're all collaborating
inside the same workspace.

750
00:32:33,305 --> 00:32:34,840
And I think there's something
really, really

751
00:32:34,840 --> 00:32:37,420
powerful about that.

752
00:32:37,420 --> 00:32:39,740
So I actually wanted
to show two really,

753
00:32:39,740 --> 00:32:40,880
really quick demos.

754
00:32:40,880 --> 00:32:42,080
Is that cool?

755
00:32:42,080 --> 00:32:42,880
LOUIS GRAY: Yeah, absolutely.

756
00:32:42,880 --> 00:32:44,720
We can definitely shift
over to your screen.

757
00:32:44,720 --> 00:32:47,580
And we'll ask Peter in Studio
to make sure that happens.

758
00:32:47,580 --> 00:32:48,100
ADDY OSMANI: Awesome.

759
00:32:48,100 --> 00:32:49,760
Let me know as soon as you
can see my screen.

760
00:32:49,760 --> 00:32:50,950
LOUIS GRAY: We've got
it right now.

761
00:32:50,950 --> 00:32:52,740
ADDY OSMANI: You've
got it, awesome.

762
00:32:52,740 --> 00:32:56,320
So as a modern web app
developer, you probably spent

763
00:32:56,320 --> 00:32:59,450
a lot of time working with
JavaScript, maybe GitHub,

764
00:32:59,450 --> 00:33:02,430
maybe things like App
Engine, or Heroku.

765
00:33:02,430 --> 00:33:04,160
So I'm going to talk a little
bit about Heroku really

766
00:33:04,160 --> 00:33:06,570
quickly, and then I'll talk
a little bit more about my

767
00:33:06,570 --> 00:33:08,450
GitHub workflow with Codenvy.

768
00:33:08,450 --> 00:33:11,050
So one of the nice things about
the templates that they

769
00:33:11,050 --> 00:33:13,646
were talking about earlier is
that I can just go and create

770
00:33:13,646 --> 00:33:14,500
a new project.

771
00:33:14,500 --> 00:33:17,860
And if I wanted to, say, start
work on a Ruby on Rails

772
00:33:17,860 --> 00:33:21,110
project, I can go and I can
select the template here.

773
00:33:21,110 --> 00:33:22,820
And in the PaaS section
down below, I

774
00:33:22,820 --> 00:33:24,990
can just select Heroku.

775
00:33:24,990 --> 00:33:26,160
Give this project a name.

776
00:33:26,160 --> 00:33:30,574
Let's call it Unicorn
App or something.

777
00:33:30,574 --> 00:33:32,360
And you can go and click Next.

778
00:33:32,360 --> 00:33:33,960
I can select a template.

779
00:33:33,960 --> 00:33:35,525
I'm hoping that they're going
to expand the templates or

780
00:33:35,525 --> 00:33:37,670
something in the future, but
this works right now.

781
00:33:37,670 --> 00:33:38,730
It's actually pretty neat.

782
00:33:38,730 --> 00:33:40,440
So I can just click on next.

783
00:33:40,440 --> 00:33:42,255
It'll optionally ask me
about my application

784
00:33:42,255 --> 00:33:43,400
name and remote name.

785
00:33:43,400 --> 00:33:44,720
I'm just going to skip those.

786
00:33:44,720 --> 00:33:46,390
And then I can click Finish.

787
00:33:46,390 --> 00:33:49,010
And what this normally scaffolds
you out is actually

788
00:33:49,010 --> 00:33:51,760
a complete small Rails
app that you can go

789
00:33:51,760 --> 00:33:53,420
start hacking on.

790
00:33:53,420 --> 00:33:55,510
All of these are files
you can actually go

791
00:33:55,510 --> 00:33:56,500
in and start editing.

792
00:33:56,500 --> 00:33:58,890
So I've got my Index
file here.

793
00:33:58,890 --> 00:34:01,730

794
00:34:01,730 --> 00:34:03,170
And if I wanted to go
into [INAUDIBLE]

795
00:34:03,170 --> 00:34:03,520
Heroku.

796
00:34:03,520 --> 00:34:06,740
So because Heroku was selected
as the PaaS service, it's

797
00:34:06,740 --> 00:34:09,310
actually gone and created
me a new Heroku app.

798
00:34:09,310 --> 00:34:11,820
So if I went over to my Heroku
account, I would actually

799
00:34:11,820 --> 00:34:14,610
already see the app in there.

800
00:34:14,610 --> 00:34:17,139
And I'd be able to preview
what that looks like.

801
00:34:17,139 --> 00:34:19,659
So this is just a very
empty Heroku app.

802
00:34:19,659 --> 00:34:23,050
If I wanted to push this current
code base and scaffold

803
00:34:23,050 --> 00:34:25,929
it out over to Heroku, it's
really, really simple.

804
00:34:25,929 --> 00:34:30,400
I just go to Get,
Remote, Push.

805
00:34:30,400 --> 00:34:32,960
And when that's loaded up,
I just click on Push.

806
00:34:32,960 --> 00:34:35,270
And what normally happens is
it opens up this little

807
00:34:35,270 --> 00:34:37,380
Progress box at the
very bottom.

808
00:34:37,380 --> 00:34:40,139
It just tells me that it's
successfully pushed to my

809
00:34:40,139 --> 00:34:44,460
Heroku app, and I then have the
updated version of what

810
00:34:44,460 --> 00:34:47,449
was scaffolded out ready
and previewed for me.

811
00:34:47,449 --> 00:34:49,969
Now if I went in and I was to
actually make any changes to

812
00:34:49,969 --> 00:34:52,850
this, I can easily go back
into the Git menu.

813
00:34:52,850 --> 00:34:54,159
I can commit any
of my changes.

814
00:34:54,159 --> 00:34:55,100
I can reset.

815
00:34:55,100 --> 00:34:58,050
I can add, and do most of the
things that I'm going to be

816
00:34:58,050 --> 00:35:00,270
using on a daily
basis in here.

817
00:35:00,270 --> 00:35:03,776
Now moving on to talking a
little bit more about Git and

818
00:35:03,776 --> 00:35:08,215
GitHub, if you happen to love
working within your shell and

819
00:35:08,215 --> 00:35:10,580
you need access to
that, Codenvy

820
00:35:10,580 --> 00:35:11,960
actually has its own shell.

821
00:35:11,960 --> 00:35:14,980
So you can click on Shell
inside the IDE.

822
00:35:14,980 --> 00:35:16,880
So I'm just waiting
for it to load up.

823
00:35:16,880 --> 00:35:18,390
Can you guys see the shell?

824
00:35:18,390 --> 00:35:20,050
It's this black screen.

825
00:35:20,050 --> 00:35:23,020
LOUIS GRAY: It's a five second
delay on the screen.

826
00:35:23,020 --> 00:35:24,270
ADDY OSMANI: OK.

827
00:35:24,270 --> 00:35:26,360

828
00:35:26,360 --> 00:35:26,710
LOUIS GRAY: There we go.

829
00:35:26,710 --> 00:35:27,480
We see it now.

830
00:35:27,480 --> 00:35:28,610
ADDY OSMANI: Anyway, while I'm
waiting for the shell to load

831
00:35:28,610 --> 00:35:32,226
up, basically, what it lets you
do is get access to a ton

832
00:35:32,226 --> 00:35:35,760
of commands that you can use
on your local workspace.

833
00:35:35,760 --> 00:35:39,380
So I'm just going to type
in Help on this.

834
00:35:39,380 --> 00:35:40,630
Can you guys see it yet?

835
00:35:40,630 --> 00:35:42,310

836
00:35:42,310 --> 00:35:43,550
LOUIS GRAY: Yeah, we do see
the shell terminal,

837
00:35:43,550 --> 00:35:44,280
absolutely.

838
00:35:44,280 --> 00:35:45,760
ADDY OSMANI: Awesome, great.

839
00:35:45,760 --> 00:35:48,410
So if you type in the Help
command, you can actually see

840
00:35:48,410 --> 00:35:50,780
what's supported inside
this shell.

841
00:35:50,780 --> 00:35:52,620
And you'll see that there are
a number of Git commands.

842
00:35:52,620 --> 00:35:54,490
There are some other commands
that can help you work with

843
00:35:54,490 --> 00:35:58,290
specific back ends and your
general workflow inside a

844
00:35:58,290 --> 00:35:58,520
Codenvy app.

845
00:35:58,520 --> 00:36:00,700
And I just felt that
was really neat.

846
00:36:00,700 --> 00:36:04,850
I hope that someday you'll be
able to do things like maybe

847
00:36:04,850 --> 00:36:07,490
use NPM and all sorts of
other stuff in here.

848
00:36:07,490 --> 00:36:10,980
But I'll ask them about that
a little bit later.

849
00:36:10,980 --> 00:36:14,730
Another thing that I found
really awesome was the ability

850
00:36:14,730 --> 00:36:18,280
to work with GitHub projects
very, very simply.

851
00:36:18,280 --> 00:36:24,250
So if I go back inside my IDE
window, and I go to Projects,

852
00:36:24,250 --> 00:36:28,860
New, and then Import
from GitHub--

853
00:36:28,860 --> 00:36:31,170
now what this is going to do
is it's going to go and

854
00:36:31,170 --> 00:36:33,675
basically fetch all the
different organizations that

855
00:36:33,675 --> 00:36:37,810
I'm a part of on GitHub and all
the different Repos that I

856
00:36:37,810 --> 00:36:38,770
might be a part of.

857
00:36:38,770 --> 00:36:40,290
Just a list.

858
00:36:40,290 --> 00:36:44,210
And I'm then able to actually
select a specific organization

859
00:36:44,210 --> 00:36:45,160
or account.

860
00:36:45,160 --> 00:36:47,860
So what I'm going to do
is I'm going to select

861
00:36:47,860 --> 00:36:49,570
my own GitHub account.

862
00:36:49,570 --> 00:36:51,840
And there's a little application
that I wanted to

863
00:36:51,840 --> 00:36:56,700
play around with in Codenvy
called Angular Shopping Demo.

864
00:36:56,700 --> 00:37:01,430
So I'm going to select Angular
Shopping Demo and just Finish.

865
00:37:01,430 --> 00:37:05,540
I think it's going to ask me to
close the current project.

866
00:37:05,540 --> 00:37:06,250
One second.

867
00:37:06,250 --> 00:37:08,620
It's going, and it's
cloning this.

868
00:37:08,620 --> 00:37:12,170
It's going to ask me what
type of project this is.

869
00:37:12,170 --> 00:37:13,650
So it's a JavaScript project.

870
00:37:13,650 --> 00:37:15,710
I'm just going to
click OK, here.

871
00:37:15,710 --> 00:37:18,680

872
00:37:18,680 --> 00:37:19,360
It's then going to go.

873
00:37:19,360 --> 00:37:21,090
And it's going to ask me if I
want to close the existing

874
00:37:21,090 --> 00:37:25,310
project and open up the new
one that I just cloned.

875
00:37:25,310 --> 00:37:29,130
And I can now go and actually
start working on this app.

876
00:37:29,130 --> 00:37:32,040
So one nice thing I noticed
when I first used this was

877
00:37:32,040 --> 00:37:35,220
when you open up a mark up file,
you can actually go to

878
00:37:35,220 --> 00:37:39,640
the Run menu and Show Preview
to get a preview of your

879
00:37:39,640 --> 00:37:41,260
application without
even having to

880
00:37:41,260 --> 00:37:42,710
go deploy it anywhere.

881
00:37:42,710 --> 00:37:43,620
And I thought this
was really neat.

882
00:37:43,620 --> 00:37:46,850
So I can actually make changes
and see them live on my screen

883
00:37:46,850 --> 00:37:49,650
without having to go
really do anything.

884
00:37:49,650 --> 00:37:51,580
So this is a preview
of my application.

885
00:37:51,580 --> 00:37:55,060
Just to show you that it's
working, I'm going to make a

886
00:37:55,060 --> 00:37:57,400
few, very minor [INAUDIBLE]

887
00:37:57,400 --> 00:37:58,110
[? reactions ?]

888
00:37:58,110 --> 00:37:59,360
in here.

889
00:37:59,360 --> 00:38:03,930

890
00:38:03,930 --> 00:38:07,580
But one problem I've got is this
is actually just hosted

891
00:38:07,580 --> 00:38:11,860
on my master branch of
my GitHub repository.

892
00:38:11,860 --> 00:38:14,500
And I'd love to actually be able
to share the URL for this

893
00:38:14,500 --> 00:38:15,990
with other people.

894
00:38:15,990 --> 00:38:17,780
And so I want to be able
to push this project

895
00:38:17,780 --> 00:38:20,170
up to GitHub pages.

896
00:38:20,170 --> 00:38:24,860
Now if we go to another tab that
I have open, this is a

897
00:38:24,860 --> 00:38:28,330
tab that's got 404 in it,
if you go over to it.

898
00:38:28,330 --> 00:38:30,950
This is where I hope my
GH pages version of

899
00:38:30,950 --> 00:38:32,120
this app would be.

900
00:38:32,120 --> 00:38:33,360
But it's not, because I haven't

901
00:38:33,360 --> 00:38:35,730
actually pushed it there.

902
00:38:35,730 --> 00:38:37,340
So what we're going to do is
we're going to fix this.

903
00:38:37,340 --> 00:38:40,700
We're actually going to push
the application into there.

904
00:38:40,700 --> 00:38:43,130
And just for kicks, we're
also going to

905
00:38:43,130 --> 00:38:44,745
make some minor changes.

906
00:38:44,745 --> 00:38:49,130
We're going to change the H1
on this page to say Unicorn

907
00:38:49,130 --> 00:38:51,300
Shopping, instead.

908
00:38:51,300 --> 00:38:53,540
And I'm going to then
save that change.

909
00:38:53,540 --> 00:38:56,680
It'll show me a little dialogue
that says, "Updating

910
00:38:56,680 --> 00:38:58,750
Content."

911
00:38:58,750 --> 00:39:01,480
And then I go to the Git menu.

912
00:39:01,480 --> 00:39:04,080
I'm just going to commit this
change, just so I've got a

913
00:39:04,080 --> 00:39:04,700
record of it.

914
00:39:04,700 --> 00:39:07,195
So made it more awesome.

915
00:39:07,195 --> 00:39:09,740

916
00:39:09,740 --> 00:39:11,965
I'm going to commit
this change.

917
00:39:11,965 --> 00:39:15,080

918
00:39:15,080 --> 00:39:17,840
And I get a little status
update about it.

919
00:39:17,840 --> 00:39:19,360
And then what I'm going
to do is I'm actually

920
00:39:19,360 --> 00:39:21,680
going to go to Git.

921
00:39:21,680 --> 00:39:24,130
I'm going to click on Branches
just take to take a look at

922
00:39:24,130 --> 00:39:26,030
what branches I've
got available.

923
00:39:26,030 --> 00:39:29,690
And I see that I do have a
GitHub Pages branch available

924
00:39:29,690 --> 00:39:32,220
on my repository's origin.

925
00:39:32,220 --> 00:39:36,210
So what I'm going to do is I'm
just going to go to Git,

926
00:39:36,210 --> 00:39:39,730
Remote, Push.

927
00:39:39,730 --> 00:39:43,540
And I'm actually going
to push from Master

928
00:39:43,540 --> 00:39:45,770
to my GItHub Pages.

929
00:39:45,770 --> 00:39:48,104
Now what this is basically going
to do is it's going to

930
00:39:48,104 --> 00:39:49,952
take all the files that I'm
working on at the moment in

931
00:39:49,952 --> 00:39:52,440
Master, and it's just going to
push them up to GitHub Pages.

932
00:39:52,440 --> 00:39:55,740
There may be a little bit of
latency when it comes to how

933
00:39:55,740 --> 00:39:58,130
soon that's active, but
I'm hopeful it's not

934
00:39:58,130 --> 00:39:59,620
going to take too long.

935
00:39:59,620 --> 00:40:03,960
So I'm just going to
press Push on that.

936
00:40:03,960 --> 00:40:06,770
And it says that it successfully
pushed it there.

937
00:40:06,770 --> 00:40:11,400
Let's see if the GitHub gods
are with us today.

938
00:40:11,400 --> 00:40:14,420
And what you should hopefully
see, if there's not too much

939
00:40:14,420 --> 00:40:17,480
latency on this call, is that
my app has actually been

940
00:40:17,480 --> 00:40:21,740
pushed to GitHub Pages,
and it's working fine.

941
00:40:21,740 --> 00:40:25,010
I'm going to buy myself some
pants and some shirts and

942
00:40:25,010 --> 00:40:25,550
other things.

943
00:40:25,550 --> 00:40:28,260
I can start interacting
with this application

944
00:40:28,260 --> 00:40:29,740
a little bit more.

945
00:40:29,740 --> 00:40:32,580
And everything works.

946
00:40:32,580 --> 00:40:36,770
Now you might be wondering, what
if I want to start using

947
00:40:36,770 --> 00:40:39,340
things like NPM modules in here,
and I want to be able to

948
00:40:39,340 --> 00:40:41,100
interact with that?

949
00:40:41,100 --> 00:40:44,410
I haven't really been able to
figure out how to do that in

950
00:40:44,410 --> 00:40:46,300
the Codenvy workflow just yet.

951
00:40:46,300 --> 00:40:49,670
I'm hoping that it's something
that may come sometime in the

952
00:40:49,670 --> 00:40:52,970
future, if it's something, I
guess, that's popular enough

953
00:40:52,970 --> 00:40:54,490
or is a priority for the team.

954
00:40:54,490 --> 00:40:57,920
But other than that, I've
actually been able to work on

955
00:40:57,920 --> 00:41:01,460
a lot of different GitHub
projects directly inside of

956
00:41:01,460 --> 00:41:05,907
Codenvy without having to go
back to the command line or

957
00:41:05,907 --> 00:41:09,960
worry that I'm not in a complete
environment where

958
00:41:09,960 --> 00:41:12,860
I've got access to the
command line and all

959
00:41:12,860 --> 00:41:14,270
of that other stuff.

960
00:41:14,270 --> 00:41:17,810
So I'm really happy with
Codenvy, so far.

961
00:41:17,810 --> 00:41:22,730
I know that they've put a lot of
work into it over the past

962
00:41:22,730 --> 00:41:25,730
few years, and it's only just
going to get better over time.

963
00:41:25,730 --> 00:41:27,760
So yeah, please check it out.

964
00:41:27,760 --> 00:41:28,970
That's my recommendation.

965
00:41:28,970 --> 00:41:30,540
I think it's amazing.

966
00:41:30,540 --> 00:41:32,110
LOUIS GRAY: Well, thanks
very much, Addy, for

967
00:41:32,110 --> 00:41:33,260
going through that.

968
00:41:33,260 --> 00:41:35,850
Hopefully, you got a lot of
feedback in terms of Codenvy--

969
00:41:35,850 --> 00:41:38,540
what he likes and some future
enhancements it sounded like

970
00:41:38,540 --> 00:41:39,310
he was asking for.

971
00:41:39,310 --> 00:41:40,600
TYLER JEWELL: We need
to hire him.

972
00:41:40,600 --> 00:41:41,320
[LAUGHTER]

973
00:41:41,320 --> 00:41:42,445
LOUIS GRAY: Well, he's
not available.

974
00:41:42,445 --> 00:41:44,390
[LAUGHTER]

975
00:41:44,390 --> 00:41:45,390
LOUIS GRAY: We have
a non-poaching

976
00:41:45,390 --> 00:41:46,695
clause here on GDL.

977
00:41:46,695 --> 00:41:47,000
TYLER JEWELL: Ugh.

978
00:41:47,000 --> 00:41:49,130
LOUIS GRAY: You can't get any
of the GDL employees.

979
00:41:49,130 --> 00:41:50,550
But we might have you
guys fill out a

980
00:41:50,550 --> 00:41:51,490
form on the way out.

981
00:41:51,490 --> 00:41:54,020
That's how it works.

982
00:41:54,020 --> 00:41:55,100
As long as you want
to work together,

983
00:41:55,100 --> 00:41:56,100
why not work at Google?

984
00:41:56,100 --> 00:41:56,820
TYLER JEWELL: Wow.

985
00:41:56,820 --> 00:41:58,210
LOUIS GRAY: So we'll talk about
that after the show.

986
00:41:58,210 --> 00:41:59,200
TYLER JEWELL: That's awesome.

987
00:41:59,200 --> 00:42:00,020
That was a great demo.

988
00:42:00,020 --> 00:42:01,140
Thank you, Addy.

989
00:42:01,140 --> 00:42:01,500
ADDY OSMANI: Thank you.

990
00:42:01,500 --> 00:42:03,810
LOUIS GRAY: Yeah, Addy's one
of the real big experts in

991
00:42:03,810 --> 00:42:05,600
terms of the web platform
and Chrome.

992
00:42:05,600 --> 00:42:07,220
We always go to him for any
of the tough questions.

993
00:42:07,220 --> 00:42:09,800
So I'm glad he's really
found your program

994
00:42:09,800 --> 00:42:12,200
and platform valuable.

995
00:42:12,200 --> 00:42:14,670
So we have a number of questions
in Moderator.

996
00:42:14,670 --> 00:42:17,340
And I know both you and Steven
are going to go through those

997
00:42:17,340 --> 00:42:20,800
and really talk about not only
what Codenvy can already do,

998
00:42:20,800 --> 00:42:23,580
but possible directions
that it can go.

999
00:42:23,580 --> 00:42:25,260
And I know many different people
have their own favorite

1000
00:42:25,260 --> 00:42:27,550
coding environment, their own
languages that they need for

1001
00:42:27,550 --> 00:42:28,790
their platforms.

1002
00:42:28,790 --> 00:42:31,250
And so, not surprisingly, that's
where a lot of these

1003
00:42:31,250 --> 00:42:32,890
questions come from.

1004
00:42:32,890 --> 00:42:36,490
So we'll start at the top with
one of the more exciting

1005
00:42:36,490 --> 00:42:39,760
languages to come out of late,
which is the Dart platform.

1006
00:42:39,760 --> 00:42:42,750
And the first question comes
from a guy named Chill Fox, in

1007
00:42:42,750 --> 00:42:46,330
Australia, if that is his real
name, and he asks, will

1008
00:42:46,330 --> 00:42:48,290
Codenvy get support for Dart?

1009
00:42:48,290 --> 00:42:49,130
[LAUGHTER]

1010
00:42:49,130 --> 00:42:53,420
TYLER JEWELL: Well first, inside
of Codenvy, we've got a

1011
00:42:53,420 --> 00:42:54,300
lot of people there.

1012
00:42:54,300 --> 00:42:57,500
And I've made the proclamation
that I believe in five years

1013
00:42:57,500 --> 00:42:59,965
that Dart will actually
supplant JavaScript.

1014
00:42:59,965 --> 00:43:02,580

1015
00:43:02,580 --> 00:43:05,630
I think it's the modularity
of it.

1016
00:43:05,630 --> 00:43:09,755
I think the fact that you can
have a compile phase that runs

1017
00:43:09,755 --> 00:43:12,150
inside of a VM-- there's just
a lot of enterprise benefits

1018
00:43:12,150 --> 00:43:14,020
that come from that.

1019
00:43:14,020 --> 00:43:15,850
So we believe that.

1020
00:43:15,850 --> 00:43:18,090
We will get Dart support.

1021
00:43:18,090 --> 00:43:20,870
Now, the way that we're going to
add Dart, and this is also

1022
00:43:20,870 --> 00:43:25,600
the same that goes true for Go
support as well, is we're

1023
00:43:25,600 --> 00:43:27,470
going to publish the SDK.

1024
00:43:27,470 --> 00:43:30,990
We're also going to publish with
that all of our examples.

1025
00:43:30,990 --> 00:43:34,130
We will have ported PHP, Python,
Ruby, and all of the

1026
00:43:34,130 --> 00:43:36,130
Java components to that.

1027
00:43:36,130 --> 00:43:39,460
And we're going to then rally
the community around making

1028
00:43:39,460 --> 00:43:40,830
use of that SDK.

1029
00:43:40,830 --> 00:43:44,260
And we'll then come up with some
sort of governance model

1030
00:43:44,260 --> 00:43:47,370
where we can then bring those
languages and frameworks in.

1031
00:43:47,370 --> 00:43:49,920
And I actually think Dart is one
of the earlier ones that

1032
00:43:49,920 --> 00:43:50,570
needs to happen.

1033
00:43:50,570 --> 00:43:53,760
Because it would be exploitable
with this type of

1034
00:43:53,760 --> 00:43:56,180
architecture, partly because
it's not just Dart, the

1035
00:43:56,180 --> 00:43:58,260
language, but there's
also Dart to JS.

1036
00:43:58,260 --> 00:44:00,970
So there's a compilation phase,
which makes it really

1037
00:44:00,970 --> 00:44:04,310
suitable for a build-based
system that's there, whether

1038
00:44:04,310 --> 00:44:06,560
it's Maven or we go with a
different sort of system.

1039
00:44:06,560 --> 00:44:07,670
Who knows on that?

1040
00:44:07,670 --> 00:44:10,390
But then on the runtime,
we can take a Chromium

1041
00:44:10,390 --> 00:44:14,400
environment, actually run that
local, execute your Dart app,

1042
00:44:14,400 --> 00:44:16,120
so that you don't have to
leave the browser all

1043
00:44:16,120 --> 00:44:21,520
together, even though it's a
full, enterprise-oriented

1044
00:44:21,520 --> 00:44:24,620
mulit-dependency Dart
application, if you will.

1045
00:44:24,620 --> 00:44:26,040
So that's going to be
our path to that.

1046
00:44:26,040 --> 00:44:30,610
In terms of time frames on this,
the SDK is going into

1047
00:44:30,610 --> 00:44:31,890
beta next month.

1048
00:44:31,890 --> 00:44:33,440
We're going to have that
be a controlled beta.

1049
00:44:33,440 --> 00:44:37,040
We've got about a dozenish
partners who are working with

1050
00:44:37,040 --> 00:44:37,880
us on that.

1051
00:44:37,880 --> 00:44:40,700
And then it will definitely
be published before

1052
00:44:40,700 --> 00:44:41,760
the end of this year.

1053
00:44:41,760 --> 00:44:43,800
So I think we need a couple more
months, and then we can

1054
00:44:43,800 --> 00:44:46,410
get optics on exactly when
some of these important

1055
00:44:46,410 --> 00:44:48,010
languages are going
to show up.

1056
00:44:48,010 --> 00:44:48,320
LOUIS GRAY: Cool.

1057
00:44:48,320 --> 00:44:50,070
So you say next month.

1058
00:44:50,070 --> 00:44:52,007
Next month is actually
pretty quick.

1059
00:44:52,007 --> 00:44:53,500
TYLER JEWELL: What's
today's date?

1060
00:44:53,500 --> 00:44:54,040
[LAUGHTER]

1061
00:44:54,040 --> 00:44:55,590
LOUIS GRAY: We're
still in June.

1062
00:44:55,590 --> 00:44:56,870
TYLER JEWELL: Oh, OK.

1063
00:44:56,870 --> 00:44:58,470
LOUIS GRAY: So sometime in
July is what I'm hearing.

1064
00:44:58,470 --> 00:44:58,890
TYLER JEWELL: Yeah.

1065
00:44:58,890 --> 00:45:00,850
LOUIS GRAY: Even with
the July 4 holiday?

1066
00:45:00,850 --> 00:45:06,610
TYLER JEWELL: Well, we do our
engineering in Europe.

1067
00:45:06,610 --> 00:45:07,600
LOUIS GRAY: So they don't
celebrate our

1068
00:45:07,600 --> 00:45:08,220
independence much?

1069
00:45:08,220 --> 00:45:09,170
TYLER JEWELL: They
don't understand.

1070
00:45:09,170 --> 00:45:10,520
LOUIS GRAY: OK.

1071
00:45:10,520 --> 00:45:12,230
Because I know often here at
Google, things start to slow

1072
00:45:12,230 --> 00:45:12,960
down next week.

1073
00:45:12,960 --> 00:45:15,120
And we'll keep track of that.

1074
00:45:15,120 --> 00:45:15,650
Very cool.

1075
00:45:15,650 --> 00:45:17,470
So you talked about Dart.

1076
00:45:17,470 --> 00:45:18,560
You talked about Go.

1077
00:45:18,560 --> 00:45:19,950
Obviously, those are two
languages we talk a

1078
00:45:19,950 --> 00:45:21,070
lot about on GDL.

1079
00:45:21,070 --> 00:45:24,110
The Dartisans community is
exceptionally passionate.

1080
00:45:24,110 --> 00:45:28,060
And I like your projection
of Dart taking over where

1081
00:45:28,060 --> 00:45:30,020
JavaScript is in not too long.

1082
00:45:30,020 --> 00:45:32,570
I know a lot of people here
will be happy about that.

1083
00:45:32,570 --> 00:45:33,940
And we really hear the
advantages of that every day.

1084
00:45:33,940 --> 00:45:36,170
So it's good to hear you're
talking about it.

1085
00:45:36,170 --> 00:45:39,440
There's another question around
your actual design.

1086
00:45:39,440 --> 00:45:40,960
Some people like the IDE.

1087
00:45:40,960 --> 00:45:43,660
Some think it needs a little
bit of a bump up.

1088
00:45:43,660 --> 00:45:46,740
What can you talk about in terms
of the look and feel of

1089
00:45:46,740 --> 00:45:48,900
the IDE for Codenvy today?

1090
00:45:48,900 --> 00:45:51,170
STEVEN LE MEUR: Maybe the first
point is that it's a

1091
00:45:51,170 --> 00:45:52,410
tool for developers.

1092
00:45:52,410 --> 00:45:57,200
So it must feel something
like robust, solid.

1093
00:45:57,200 --> 00:46:01,020
And I think it's delivered
this message.

1094
00:46:01,020 --> 00:46:06,800
And maybe the point is that
we should make it

1095
00:46:06,800 --> 00:46:08,420
a little more modern.

1096
00:46:08,420 --> 00:46:15,010
So that's definitely something
that we will work on.

1097
00:46:15,010 --> 00:46:23,460
But we should take the time
to deliver something

1098
00:46:23,460 --> 00:46:25,980
great to our users.

1099
00:46:25,980 --> 00:46:30,830
And for sure, we will work with
all our communities to

1100
00:46:30,830 --> 00:46:33,500
get their feedback on what they
like, what they don't

1101
00:46:33,500 --> 00:46:36,060
like, and what we can improve.

1102
00:46:36,060 --> 00:46:40,060
So I think it will be a
collaborative way to do the

1103
00:46:40,060 --> 00:46:44,830
work on the next version of
the design for Codenvy.

1104
00:46:44,830 --> 00:46:46,470
LOUIS GRAY: So you mentioned
where the

1105
00:46:46,470 --> 00:46:47,580
development takes place.

1106
00:46:47,580 --> 00:46:49,860
But there's another type of ware
that I'm curious about

1107
00:46:49,860 --> 00:46:50,990
with Codenvy.

1108
00:46:50,990 --> 00:46:53,460
Do you make Codenvy
with Codenvy?

1109
00:46:53,460 --> 00:46:54,970
TYLER JEWELL: We do.

1110
00:46:54,970 --> 00:46:55,530
LOUIS GRAY: You do?

1111
00:46:55,530 --> 00:46:56,050
TYLER JEWELL: Yes.

1112
00:46:56,050 --> 00:46:57,860
LOUIS GRAY: So how do you
compile to itself--

1113
00:46:57,860 --> 00:46:58,230
TYLER JEWELL: It's painful.

1114
00:46:58,230 --> 00:47:01,070
LOUIS GRAY: --withouth going
into an infinite loop?

1115
00:47:01,070 --> 00:47:04,070
TYLER JEWELL: OK, now you're
just geeking out, all right?

1116
00:47:04,070 --> 00:47:06,740
So it's painful, because
Codenvy is

1117
00:47:06,740 --> 00:47:08,485
actually built with GWT.

1118
00:47:08,485 --> 00:47:08,870
LOUIS GRAY: Mm-hmm.

1119
00:47:08,870 --> 00:47:12,910
TYLER JEWELL: And for those of
you who's used GWT, there is

1120
00:47:12,910 --> 00:47:15,660
dev mode and there's non-dev
mode with GWT.

1121
00:47:15,660 --> 00:47:19,340
And if you're in non-dev mode
with GWT, it's about 11

1122
00:47:19,340 --> 00:47:21,890
minutes to compile
your application.

1123
00:47:21,890 --> 00:47:24,030
And that's certainly
not a workable

1124
00:47:24,030 --> 00:47:25,120
fashion that was there.

1125
00:47:25,120 --> 00:47:29,430
So if you're in dev mode, you
get incremental compilation,

1126
00:47:29,430 --> 00:47:30,990
which is a workable answer.

1127
00:47:30,990 --> 00:47:34,140
And so we had to do a lot of
work to basically take the dev

1128
00:47:34,140 --> 00:47:36,790
mode, which only works in
Eclipse, and make that

1129
00:47:36,790 --> 00:47:39,550
workable in our environment
there.

1130
00:47:39,550 --> 00:47:41,640
And so it's Maven-based.

1131
00:47:41,640 --> 00:47:44,230
We actually support Maven
multi-module, so that you can

1132
00:47:44,230 --> 00:47:47,080
decompose all the work to
different team members.

1133
00:47:47,080 --> 00:47:49,690
So we've got that work
decomposed in that.

1134
00:47:49,690 --> 00:47:53,190
We use a Maven multi-module
project.

1135
00:47:53,190 --> 00:47:56,430
The builds run on a local
Codenvy instance that the

1136
00:47:56,430 --> 00:47:57,880
public doesn't have access to.

1137
00:47:57,880 --> 00:48:00,010
It's in our environment
that's there.

1138
00:48:00,010 --> 00:48:01,590
And then the output--

1139
00:48:01,590 --> 00:48:03,940
and we have the ability to
route output to different

1140
00:48:03,940 --> 00:48:07,490
acceptance servers, staging
servers, and whatnot, there.

1141
00:48:07,490 --> 00:48:10,540
But we recognized, when we
decided that we were going to

1142
00:48:10,540 --> 00:48:13,330
make this into a commercial
entity and that it was going

1143
00:48:13,330 --> 00:48:16,090
to stop being a garage project,
that we were never

1144
00:48:16,090 --> 00:48:19,390
going to get real global
adoption unless we could go

1145
00:48:19,390 --> 00:48:22,280
out and tell the world that
we were using it--

1146
00:48:22,280 --> 00:48:24,410
eating our own dog food, as
well, or drinking our own

1147
00:48:24,410 --> 00:48:26,490
champagne, as the French
like to say it.

1148
00:48:26,490 --> 00:48:27,330
LOUIS GRAY: Uh-huh,
much better.

1149
00:48:27,330 --> 00:48:30,350
TYLER JEWELL: Yeah, and so
last fall, we told the

1150
00:48:30,350 --> 00:48:34,310
engineers, well, come summer,
you've got to use it.

1151
00:48:34,310 --> 00:48:36,020
So they put the things
in there that they

1152
00:48:36,020 --> 00:48:37,760
needed to make it work.

1153
00:48:37,760 --> 00:48:39,820
LOUIS GRAY: Godd, I hoped
that was the answer.

1154
00:48:39,820 --> 00:48:43,270
So there are some questions
around the mobile presence.

1155
00:48:43,270 --> 00:48:46,220
I think we talked about coding
on mobile, and we addressed

1156
00:48:46,220 --> 00:48:46,800
that somewhat earlier.

1157
00:48:46,800 --> 00:48:48,260
Is there anything else you
want to say, in terms of

1158
00:48:48,260 --> 00:48:51,530
mobile presence, for Codenvy?

1159
00:48:51,530 --> 00:48:53,040
TYLER JEWELL: When they say
mobile presence, are they

1160
00:48:53,040 --> 00:48:56,150
talking about accessibility
through a mobile device or

1161
00:48:56,150 --> 00:48:57,560
development of mobile apps?

1162
00:48:57,560 --> 00:48:59,300
LOUIS GRAY: You'll have to
ask Daniel from Tacoma.

1163
00:48:59,300 --> 00:49:02,120
All he says is, what mobile
presence will Codenvy have?

1164
00:49:02,120 --> 00:49:05,440
TYLER JEWELL: OK, well I'll talk
about the accessibility

1165
00:49:05,440 --> 00:49:06,030
over mobile.

1166
00:49:06,030 --> 00:49:08,180
And then I'm going to let
Steven talk about using

1167
00:49:08,180 --> 00:49:10,900
Codenvy to build mobile
applications.

1168
00:49:10,900 --> 00:49:11,340
LOUIS GRAY: Excellent.

1169
00:49:11,340 --> 00:49:14,540
TYLER JEWELL: So in terms of
accessibility, because the

1170
00:49:14,540 --> 00:49:17,560
product there's two things-- we
do a lot of right clicking

1171
00:49:17,560 --> 00:49:19,850
inside the product, and the
product is structured a

1172
00:49:19,850 --> 00:49:20,530
certain way.

1173
00:49:20,530 --> 00:49:22,580
It's not really touch ready.

1174
00:49:22,580 --> 00:49:26,560
So we need to have a
special browser.

1175
00:49:26,560 --> 00:49:28,250
So we use Puffin web
browser on that.

1176
00:49:28,250 --> 00:49:29,560
We're certified on that.

1177
00:49:29,560 --> 00:49:31,990
And that gives you a simulated
right click that

1178
00:49:31,990 --> 00:49:33,670
you can use on that.

1179
00:49:33,670 --> 00:49:35,020
And so we have a lot
of apps who are

1180
00:49:35,020 --> 00:49:37,400
built that way on that.

1181
00:49:37,400 --> 00:49:41,520
Also, you can actually access
and create apps on an iPhone.

1182
00:49:41,520 --> 00:49:43,660
It's not the best experience
in the world.

1183
00:49:43,660 --> 00:49:45,430
But there is that
accessibility.

1184
00:49:45,430 --> 00:49:48,950
It's not shaped for the iPhone
screen resolution, but it is

1185
00:49:48,950 --> 00:49:50,860
navigatable in that regard.

1186
00:49:50,860 --> 00:49:52,770
So that's on the accessibility
front, and I think we'll just

1187
00:49:52,770 --> 00:49:56,280
incrementally improve that for
different screen shapes and

1188
00:49:56,280 --> 00:49:58,180
different input devices
over time.

1189
00:49:58,180 --> 00:50:01,590
In terms of using Codenvy to
build mobile apps, we've got

1190
00:50:01,590 --> 00:50:03,200
two things that we're
working on--

1191
00:50:03,200 --> 00:50:06,360
Trigger and the Google
project.

1192
00:50:06,360 --> 00:50:07,740
STEVEN LE MEUR: Yeah.

1193
00:50:07,740 --> 00:50:12,530
So we have some few things in
our roadmaps on making it

1194
00:50:12,530 --> 00:50:17,270
possible to build an application
on a [? formal ?]

1195
00:50:17,270 --> 00:50:18,100
[INAUDIBLE]

1196
00:50:18,100 --> 00:50:20,000
directly from Codenvy.

1197
00:50:20,000 --> 00:50:21,830
So we will do that.

1198
00:50:21,830 --> 00:50:25,040
We will add some cool
stuff to demo later.

1199
00:50:25,040 --> 00:50:28,080
We already demoed during
Google I/O.

1200
00:50:28,080 --> 00:50:33,530
But in fact, the idea is for
an Android application, for

1201
00:50:33,530 --> 00:50:38,000
example, you will be able to
develop, to get access to the

1202
00:50:38,000 --> 00:50:42,250
Android SDK directly
from Codenvy.

1203
00:50:42,250 --> 00:50:49,127
And you will be able to deploy
on the emulator directly on

1204
00:50:49,127 --> 00:50:53,395
the web, and also directly
on the device.

1205
00:50:53,395 --> 00:50:57,400
And we will put something, a
QR code that you will scan,

1206
00:50:57,400 --> 00:51:03,230
and it will install the
APK on your device.

1207
00:51:03,230 --> 00:51:07,930
So there's a few things that
are coming and that are

1208
00:51:07,930 --> 00:51:10,750
already in our roadmaps.

1209
00:51:10,750 --> 00:51:11,200
LOUIS GRAY: Great, fantastic.

1210
00:51:11,200 --> 00:51:12,960
Now, we actually talked about
a couple of the questions,

1211
00:51:12,960 --> 00:51:13,360
already here.

1212
00:51:13,360 --> 00:51:16,570
One of the questions is around
running as an offline IDE.

1213
00:51:16,570 --> 00:51:18,080
I believe we addressed that.

1214
00:51:18,080 --> 00:51:20,360
There's another question around
the limitations and

1215
00:51:20,360 --> 00:51:23,870
stipulations applying to Open
Source Premium Account, and

1216
00:51:23,870 --> 00:51:26,110
what languages and libraries
will be available at launch?

1217
00:51:26,110 --> 00:51:28,310
Additionally, what language and
library support will we

1218
00:51:28,310 --> 00:51:31,240
see in the future?

1219
00:51:31,240 --> 00:51:33,900
TYLER JEWELL: So the way our
pricing works on the public

1220
00:51:33,900 --> 00:51:37,390
cloud is that it's free for
unlimited number of

1221
00:51:37,390 --> 00:51:41,050
developers, as long as your
projects are public and you're

1222
00:51:41,050 --> 00:51:45,200
OK using shared build
and run queues.

1223
00:51:45,200 --> 00:51:49,470
If you need to have private
projects or a dedicated queue,

1224
00:51:49,470 --> 00:51:51,625
which gives you guaranteed
access, then you have to be on

1225
00:51:51,625 --> 00:51:53,460
a premium plan.

1226
00:51:53,460 --> 00:51:56,290
Our premium plans all have the
same functionality, but they

1227
00:51:56,290 --> 00:51:58,290
are different prices based
upon whether you're a

1228
00:51:58,290 --> 00:52:00,465
commercial entity,
an individual, or

1229
00:52:00,465 --> 00:52:02,800
an open source project.

1230
00:52:02,800 --> 00:52:05,780
We give it away for free to
open source projects.

1231
00:52:05,780 --> 00:52:08,620
And the conditions there are
that you've got at least three

1232
00:52:08,620 --> 00:52:11,290
committers and that the project
has been accessible

1233
00:52:11,290 --> 00:52:12,490
for at least six months there.

1234
00:52:12,490 --> 00:52:13,590
So we're looking for
that it's an

1235
00:52:13,590 --> 00:52:16,940
established project on that.

1236
00:52:16,940 --> 00:52:19,080
In terms of what sort of
libraries are available, any

1237
00:52:19,080 --> 00:52:22,380
library through Maven Central
is currently available.

1238
00:52:22,380 --> 00:52:24,570
You can also upload your
own libraries.

1239
00:52:24,570 --> 00:52:26,790
There's a technique that you
can use where you can

1240
00:52:26,790 --> 00:52:30,001
basically upload files into your
project space, and then

1241
00:52:30,001 --> 00:52:32,500
those files are locally
accessible as a library.

1242
00:52:32,500 --> 00:52:35,470
And that actually works for Java
type projects and other

1243
00:52:35,470 --> 00:52:37,340
projects as well on that.

1244
00:52:37,340 --> 00:52:39,500
And then did I capture
all that?

1245
00:52:39,500 --> 00:52:40,860
What's coming in the future?

1246
00:52:40,860 --> 00:52:42,410
LOUIS GRAY: Yes.

1247
00:52:42,410 --> 00:52:44,240
TYLER JEWELL: There's a lot
coming in the future.

1248
00:52:44,240 --> 00:52:46,920
There's some stuff that we're
going to ship very, very

1249
00:52:46,920 --> 00:52:50,360
shortly here, which is going
to allow onboarding of

1250
00:52:50,360 --> 00:52:53,100
projects and libraries of
many thousands of types.

1251
00:52:53,100 --> 00:52:54,210
And it's going to be
really interesting.

1252
00:52:54,210 --> 00:52:55,450
We should have that before
the end of summer.

1253
00:52:55,450 --> 00:52:55,700
LOUIS GRAY: Very cool.

1254
00:52:55,700 --> 00:52:57,130
And I think that would possibly

1255
00:52:57,130 --> 00:52:58,710
make the UI more complex.

1256
00:52:58,710 --> 00:53:00,190
So I'm looking forward to seeing
how you handle that.

1257
00:53:00,190 --> 00:53:01,350
TYLER JEWELL: It's going
to be less complex.

1258
00:53:01,350 --> 00:53:01,810
LOUIS GRAY: Less complex?

1259
00:53:01,810 --> 00:53:03,380
More virtualization.

1260
00:53:03,380 --> 00:53:04,720
TYLER JEWELL: No, not
more virtualization.

1261
00:53:04,720 --> 00:53:08,520
Actually, if you think about
it, the UI we have today

1262
00:53:08,520 --> 00:53:10,950
actually makes it more complex
than it needs to be.

1263
00:53:10,950 --> 00:53:13,390
LOUIS GRAY: Yeah, I think that
was some of the feedback.

1264
00:53:13,390 --> 00:53:15,260
TYLER JEWELL: Well, we have
to make it more modern.

1265
00:53:15,260 --> 00:53:20,160
But today, to get to this point,
you've got to log in.

1266
00:53:20,160 --> 00:53:21,930
You've got to have
credentials.

1267
00:53:21,930 --> 00:53:23,460
You've got to then
create a project.

1268
00:53:23,460 --> 00:53:25,460
You've got to know what kind of
project you want to create.

1269
00:53:25,460 --> 00:53:28,440
And if you think about it, most
people start off and say,

1270
00:53:28,440 --> 00:53:32,630
I want to do an AngularJS
app on Ruby on Rails.

1271
00:53:32,630 --> 00:53:35,450
So that should be their starting
point, and we'll make

1272
00:53:35,450 --> 00:53:38,550
that their starting point, as
opposed to the other stuff.

1273
00:53:38,550 --> 00:53:40,930
LOUIS GRAY: There was a question
here from London--

1274
00:53:40,930 --> 00:53:42,710
one of your counterparts,
Addy--

1275
00:53:42,710 --> 00:53:45,580
asking about deploying to
a local virtual machine.

1276
00:53:45,580 --> 00:53:48,090
Are they able to do that?

1277
00:53:48,090 --> 00:53:50,340
TYLER JEWELL: Deploying
to a local, virtual--

1278
00:53:50,340 --> 00:53:51,160
LOUIS GRAY: A local VM.

1279
00:53:51,160 --> 00:53:53,165
Am I able to deploy
to my local VM?

1280
00:53:53,165 --> 00:53:53,490
TYLER JEWELL: Oh, OK.

1281
00:53:53,490 --> 00:53:57,340
So I think the feature that
would allow for that is either

1282
00:53:57,340 --> 00:54:00,670
an FTP based deployment
mechanism or an SSH.

1283
00:54:00,670 --> 00:54:03,520
That's like a secure shell and
some sort of remote VM.

1284
00:54:03,520 --> 00:54:06,100
We don't have either those
capabilities today.

1285
00:54:06,100 --> 00:54:12,030
It's a very, very frequently and
commonly requested feature

1286
00:54:12,030 --> 00:54:12,470
that's there.

1287
00:54:12,470 --> 00:54:14,740
So I think that we've been
pretty good about adding

1288
00:54:14,740 --> 00:54:17,590
things that are commonly
requested, and I think we'll

1289
00:54:17,590 --> 00:54:19,040
get to that.

1290
00:54:19,040 --> 00:54:21,980
By the way, for those who are
interested, there is a user

1291
00:54:21,980 --> 00:54:23,940
voice site right off
of our Home page.

1292
00:54:23,940 --> 00:54:25,130
Click Feedback.

1293
00:54:25,130 --> 00:54:28,460
We religiously watch all
the features and the

1294
00:54:28,460 --> 00:54:29,340
votes that are there.

1295
00:54:29,340 --> 00:54:32,760
So click Add Your Own Request,
vote, vote, vote.

1296
00:54:32,760 --> 00:54:33,460
We love it.

1297
00:54:33,460 --> 00:54:34,440
We listen to it.

1298
00:54:34,440 --> 00:54:35,830
We obsess about it.

1299
00:54:35,830 --> 00:54:36,880
LOUIS GRAY: Well, it sounds like
listening to customers is

1300
00:54:36,880 --> 00:54:37,650
a good idea.

1301
00:54:37,650 --> 00:54:39,250
And it sounds like you're
doing that.

1302
00:54:39,250 --> 00:54:42,350
There's another comment over
on the YouTube side from G.

1303
00:54:42,350 --> 00:54:45,040
Hussain Chinoy Asking about
Gradle support.

1304
00:54:45,040 --> 00:54:47,060
Is there Gradle support
or only Maven?

1305
00:54:47,060 --> 00:54:48,955
TYLER JEWELL: There's only
Maven, but before the end of

1306
00:54:48,955 --> 00:54:51,480
the summer, we'll have both
Ant and Gradle as well.

1307
00:54:51,480 --> 00:54:53,910
Those will be both native
build support.

1308
00:54:53,910 --> 00:54:56,810
LOUIS GRAY: And Jorge, also on
YouTube, is asking, what is

1309
00:54:56,810 --> 00:55:00,650
the bandwidth recommended
to use the application?

1310
00:55:00,650 --> 00:55:01,190
TYLER JEWELL: Recommended?

1311
00:55:01,190 --> 00:55:04,550
I don't think we have actual
specs, but it's going to run

1312
00:55:04,550 --> 00:55:08,460
just fine on like a sub
megabit connection.

1313
00:55:08,460 --> 00:55:09,390
LOUIS GRAY: Submegabit?

1314
00:55:09,390 --> 00:55:10,190
TYLER JEWELL: Submegabit.

1315
00:55:10,190 --> 00:55:10,900
LOUIS GRAY: Excellent.

1316
00:55:10,900 --> 00:55:11,250
TYLER JEWELL: Yeah.

1317
00:55:11,250 --> 00:55:12,350
LOUIS GRAY: OK.

1318
00:55:12,350 --> 00:55:13,690
I don't want to try that out,
because I don't want to have

1319
00:55:13,690 --> 00:55:14,350
submegabit.

1320
00:55:14,350 --> 00:55:16,820
But I believe you.

1321
00:55:16,820 --> 00:55:20,120
TYLER JEWELL: I think the only
time you get into a couple of

1322
00:55:20,120 --> 00:55:23,270
issues is that we use WebSocket
technology to handle

1323
00:55:23,270 --> 00:55:24,770
communications back and forth.

1324
00:55:24,770 --> 00:55:28,590
And so if you have a very
intermittent connection, it's

1325
00:55:28,590 --> 00:55:31,290
possible that the editor loses
its connection to the server,

1326
00:55:31,290 --> 00:55:34,370
and the code is not
automatically saved.

1327
00:55:34,370 --> 00:55:38,370
So what we'll do to resolve that
is we'll allow people to

1328
00:55:38,370 --> 00:55:42,490
go back into a non-performant
mode, like a default mode,

1329
00:55:42,490 --> 00:55:44,370
where every time you have
to manually save.

1330
00:55:44,370 --> 00:55:47,350
And if it doesn't save, then you
know you've got a problem

1331
00:55:47,350 --> 00:55:47,980
sort of thing.

1332
00:55:47,980 --> 00:55:49,670
LOUIS GRAY: Now you brought up
your presentation at Google

1333
00:55:49,670 --> 00:55:52,710
I/O. Marlon Jones, over on the
YouTube side is asking about

1334
00:55:52,710 --> 00:55:55,890
another introduction that we
did a Google I/O, which was

1335
00:55:55,890 --> 00:55:58,090
the Google Play Games API.

1336
00:55:58,090 --> 00:56:00,500
He wants to know if it's
possible to use the new Google

1337
00:56:00,500 --> 00:56:03,590
Play Games API with Codenvy?

1338
00:56:03,590 --> 00:56:04,170
TYLER JEWELL: Do you know?

1339
00:56:04,170 --> 00:56:06,070
I don't even know anything
about the API.

1340
00:56:06,070 --> 00:56:13,270
STEVEN LE MEUR: Yeah, this is
an API for all games on the

1341
00:56:13,270 --> 00:56:15,972
[INAUDIBLE] and iOS
and [INAUDIBLE].

1342
00:56:15,972 --> 00:56:16,410
TYLER JEWELL: Oh.

1343
00:56:16,410 --> 00:56:21,890
STEVEN LE MEUR: So probably,
we will, after the features

1344
00:56:21,890 --> 00:56:25,780
that we will deliver next month,
we will be able to

1345
00:56:25,780 --> 00:56:30,120
leverage the power of these
APIs through our factory.

1346
00:56:30,120 --> 00:56:36,100
So you want to make your project
with these APIs, it

1347
00:56:36,100 --> 00:56:39,630
will be very easy for
the onboarding.

1348
00:56:39,630 --> 00:56:47,146
So it will be super easy to make
your mobile applications

1349
00:56:47,146 --> 00:56:50,460
based on these APIs.

1350
00:56:50,460 --> 00:56:52,370
TYLER JEWELL: Do you know what
the format of the API?

1351
00:56:52,370 --> 00:56:54,140
LOUIS GRAY: We have other GDL
events that talk about Google

1352
00:56:54,140 --> 00:56:55,550
Play Games API.

1353
00:56:55,550 --> 00:56:56,980
So definitely you'll want
to check those out.

1354
00:56:56,980 --> 00:56:57,280
TYLER JEWELL: OK.

1355
00:56:57,280 --> 00:56:58,210
LOUIS GRAY: It's
very, very new.

1356
00:56:58,210 --> 00:56:59,890
We're really excited about it.

1357
00:56:59,890 --> 00:57:03,360
There's a question on YouTube
about game development and

1358
00:57:03,360 --> 00:57:05,970
other development, so I think
a more broad question.

1359
00:57:05,970 --> 00:57:10,040
What type of applications do you
see users today building

1360
00:57:10,040 --> 00:57:10,480
on Codenvy?

1361
00:57:10,480 --> 00:57:13,160
What's the most typical type
of application people make?

1362
00:57:13,160 --> 00:57:16,760
TYLER JEWELL: Yeah, so I think
the most common things that

1363
00:57:16,760 --> 00:57:20,890
people are developing are web
apps that will ultimately

1364
00:57:20,890 --> 00:57:23,620
operate in an online PaaS.

1365
00:57:23,620 --> 00:57:24,650
That's the most common.

1366
00:57:24,650 --> 00:57:27,810
And then the second thing,
a lot of API development.

1367
00:57:27,810 --> 00:57:31,710
So people use it to create the
API, publish the API, and make

1368
00:57:31,710 --> 00:57:34,640
that API accessible
that's there.

1369
00:57:34,640 --> 00:57:38,550
Those are the two most commonly
requested mobile app.

1370
00:57:38,550 --> 00:57:40,275
A lot of people want to
use the browser to

1371
00:57:40,275 --> 00:57:41,420
create mobile apps.

1372
00:57:41,420 --> 00:57:42,350
LOUIS GRAY: Excellent.

1373
00:57:42,350 --> 00:57:44,990
Now Addy, I know we still have
you there, and we're coming

1374
00:57:44,990 --> 00:57:47,310
close to the end of
our allotted hour.

1375
00:57:47,310 --> 00:57:49,100
There's a little bit of
background noise, so I know we

1376
00:57:49,100 --> 00:57:51,250
had to turn down your
volume a little bit.

1377
00:57:51,250 --> 00:57:52,950
So we'll be sensitive to that.

1378
00:57:52,950 --> 00:57:54,860
Is there anything you wanted to
ask the team while they're

1379
00:57:54,860 --> 00:57:57,430
here, before we close?

1380
00:57:57,430 --> 00:57:59,880
ADDY OSMANI: Sure, so I had a
few questions that I know that

1381
00:57:59,880 --> 00:58:02,510
some web app developers are
going to be really interested

1382
00:58:02,510 --> 00:58:03,700
in [INAUDIBLE].

1383
00:58:03,700 --> 00:58:07,590
So I'm really excited about
things like AngularJS,

1384
00:58:07,590 --> 00:58:10,520
Polymer, Backbone,
Ember and so on.

1385
00:58:10,520 --> 00:58:13,170
Can developers in those
communities hope to see

1386
00:58:13,170 --> 00:58:16,280
templates that will help them
kick start off, in terms of

1387
00:58:16,280 --> 00:58:18,640
development of those types of
projects, inside Codenvy in

1388
00:58:18,640 --> 00:58:19,550
the future?

1389
00:58:19,550 --> 00:58:22,700
TYLER JEWELL: Yeah, I think we
just hired, essentially, a

1390
00:58:22,700 --> 00:58:26,450
program manager, much the way
that Google has their own

1391
00:58:26,450 --> 00:58:29,060
program managers for working
with the developer community.

1392
00:58:29,060 --> 00:58:32,400
And the biggest part of the job
of the program manager is

1393
00:58:32,400 --> 00:58:36,300
basically creating these little
miniature, let's call

1394
00:58:36,300 --> 00:58:38,720
them template communities that
are out there so that you can

1395
00:58:38,720 --> 00:58:41,360
quickly get started with
pretty much any type of

1396
00:58:41,360 --> 00:58:43,470
project that you want to get
started with on that.

1397
00:58:43,470 --> 00:58:46,940
I think we've done a very poor
job of delivering on the

1398
00:58:46,940 --> 00:58:50,240
popular technologies that are
out there, even though Codenvy

1399
00:58:50,240 --> 00:58:52,260
today is capable of
working with them.

1400
00:58:52,260 --> 00:58:54,650
We just make you go through
the laborious process of

1401
00:58:54,650 --> 00:58:55,560
getting it set up.

1402
00:58:55,560 --> 00:58:59,270
And we want to just remove
all that out of the way.

1403
00:58:59,270 --> 00:59:03,610
So in many ways, we think that
codenvy.com, the site, will

1404
00:59:03,610 --> 00:59:07,760
become a listing of all
the technologies that

1405
00:59:07,760 --> 00:59:08,720
developers are using.

1406
00:59:08,720 --> 00:59:10,210
Which one do you want
to get coding with?

1407
00:59:10,210 --> 00:59:12,846
Let's get coding
with that now.

1408
00:59:12,846 --> 00:59:13,940
LOUIS GRAY: Excellent.

1409
00:59:13,940 --> 00:59:16,190
ADDY OSMANI: That's awesome,
and I know that there are

1410
00:59:16,190 --> 00:59:19,160
probably developers out there
that'll be interested, or very

1411
00:59:19,160 --> 00:59:21,930
willing, at least, to create
some of these templates for

1412
00:59:21,930 --> 00:59:25,720
you, if you're open to community
submissions.

1413
00:59:25,720 --> 00:59:30,780
Another question that I had was
around cloud-based device

1414
00:59:30,780 --> 00:59:32,020
or browser testing.

1415
00:59:32,020 --> 00:59:35,980
So if I create a web app inside
Codenvy, and I want to

1416
00:59:35,980 --> 00:59:38,800
then be able to go and see
how it looks inside other

1417
00:59:38,800 --> 00:59:42,740
browsers, maybe using something
like BrowserStack or

1418
00:59:42,740 --> 00:59:45,820
[? SophosLabs ?] and so on, is
that something that you've

1419
00:59:45,820 --> 00:59:50,020
considered, just making it easy
to launch your current

1420
00:59:50,020 --> 00:59:51,460
app inside something else?

1421
00:59:51,460 --> 00:59:53,400
Or is it something
you'd consider?

1422
00:59:53,400 --> 00:59:55,405
TYLER JEWELL: How interesting
that you brought that up.

1423
00:59:55,405 --> 00:59:57,830
I think halfway through, we
talked about how we've got a

1424
00:59:57,830 --> 01:00:02,710
dozen partners who are signed up
to working in our beta SDK

1425
01:00:02,710 --> 01:00:04,870
[? SophosLabs ?]

1426
01:00:04,870 --> 01:00:06,050
is one.

1427
01:00:06,050 --> 01:00:11,650
So the vision there is that
very same sort of plug-in.

1428
01:00:11,650 --> 01:00:15,900
Plug-in, cross browser testing,
maybe possibly even

1429
01:00:15,900 --> 01:00:19,110
automatically generate the
Selenium script for that

1430
01:00:19,110 --> 01:00:21,710
automatic submission
that's there.

1431
01:00:21,710 --> 01:00:24,160
So today, it's code, build,
test for the individual.

1432
01:00:24,160 --> 01:00:26,800
But then there's some of these
broader workflows that you can

1433
01:00:26,800 --> 01:00:27,876
incorporate in.

1434
01:00:27,876 --> 01:00:28,550
ADDY OSMANI: That's fantastic.

1435
01:00:28,550 --> 01:00:30,520
TYLER JEWELL: We've got some
other great ones that are

1436
01:00:30,520 --> 01:00:31,200
coming, too.

1437
01:00:31,200 --> 01:00:32,940
LOUIS GRAY: It almost sounds
like we need to bring you back

1438
01:00:32,940 --> 01:00:36,180
in here not too long from
now for part two.

1439
01:00:36,180 --> 01:00:38,990
So what I want to do is thank
you guys for coming in.

1440
01:00:38,990 --> 01:00:39,960
It's been an excellent
session.

1441
01:00:39,960 --> 01:00:41,520
Really taught us a lot.

1442
01:00:41,520 --> 01:00:43,770
Hopefully, Addy, it wasn't
too late for you.

1443
01:00:43,770 --> 01:00:44,790
So I appreciate your
jumping in.

1444
01:00:44,790 --> 01:00:45,155
ADDY OSMANI: Not at all.

1445
01:00:45,155 --> 01:00:47,470
LOUIS GRAY:And joining us,
remotely, from the UK.

1446
01:00:47,470 --> 01:00:50,740
This really is the power
of being global in live

1447
01:00:50,740 --> 01:00:52,380
interaction with our users.

1448
01:00:52,380 --> 01:00:54,080
Thank you for all of you
who left comments

1449
01:00:54,080 --> 01:00:56,630
on YouTube and Moderator.

1450
01:00:56,630 --> 01:00:59,780
I would encourage everybody who
hasn't known enough about

1451
01:00:59,780 --> 01:01:03,860
Codenvy so far to go to
codenvy.com to find out more.

1452
01:01:03,860 --> 01:01:07,280
Sign up, give it a kick, and
I'd love to see more people

1453
01:01:07,280 --> 01:01:10,520
using Chrome OS and other strong
platforms to be coding

1454
01:01:10,520 --> 01:01:12,280
directly on the web.

1455
01:01:12,280 --> 01:01:15,310
So thanks again, both Tyler and
Steven, for joining me.

1456
01:01:15,310 --> 01:01:16,740
You can join us every
single day at

1457
01:01:16,740 --> 01:01:20,660
developers.google.com/live
for more GDL content.

1458
01:01:20,660 --> 01:01:23,150
And follow us on YouTube
at Google Developers.

1459
01:01:23,150 --> 01:01:25,850
See you soon.

1460
01:01:25,850 --> 01:01:30,950
[SWISHING]

1461
01:01:30,950 --> 01:02:28,883
[MUSIC PLAYING]

