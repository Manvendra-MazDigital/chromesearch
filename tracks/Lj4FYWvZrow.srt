1
00:00:00,000 --> 00:00:07,245

2
00:00:07,245 --> 00:00:11,060
IDO GREEN: Hello, and welcome to
another episode of GDL-IL,

3
00:00:11,060 --> 00:00:12,220
GDL Israel.

4
00:00:12,220 --> 00:00:17,400
Today we're going to have quite
a fun time with showing

5
00:00:17,400 --> 00:00:21,700
the power of both App Script
and Compute Engine.

6
00:00:21,700 --> 00:00:26,700
And in order to show the
flexibility and ability to run

7
00:00:26,700 --> 00:00:30,600
interesting test cases on both
platforms, I decided just to

8
00:00:30,600 --> 00:00:34,560
take this fun subject of Monte
Carlo simulation and see how

9
00:00:34,560 --> 00:00:39,100
we could utilize those two
different products in order to

10
00:00:39,100 --> 00:00:43,660
test it and see if we could get
some interesting results

11
00:00:43,660 --> 00:00:47,540
to real programs that we
have under our hands.

12
00:00:47,540 --> 00:00:52,670
So without further ado, let me
just share my screen, and

13
00:00:52,670 --> 00:00:54,200
we'll jump together
into the code.

14
00:00:54,200 --> 00:00:59,400
I find it very useful in most of
the cases just to talk less

15
00:00:59,400 --> 00:01:00,860
and see code.

16
00:01:00,860 --> 00:01:06,700
So let's move this one so we
won't have any problems, and

17
00:01:06,700 --> 00:01:12,150
we'll open this little doc.

18
00:01:12,150 --> 00:01:17,240
I guess the fonts are quite
large, but if we have a

19
00:01:17,240 --> 00:01:19,620
problem, just feel free to ping
me on the Hangout, and

20
00:01:19,620 --> 00:01:24,480
we'll be able to increase
the font size.

21
00:01:24,480 --> 00:01:26,990
Actually, I could
do it right now.

22
00:01:26,990 --> 00:01:28,000
So what are we having here?

23
00:01:28,000 --> 00:01:30,540
Basically, what we want to test
is to show the power of

24
00:01:30,540 --> 00:01:35,530
App Script, and we took the
fun world of Monte Carlo

25
00:01:35,530 --> 00:01:35,990
simulations.

26
00:01:35,990 --> 00:01:40,910
Because when we have problems
that are happening in the real

27
00:01:40,910 --> 00:01:45,070
world, usually there are quite
a lot of outcomes that could

28
00:01:45,070 --> 00:01:48,100
come for each and
every scenario.

29
00:01:48,100 --> 00:01:50,580
And what we're doing in those
simulations, basically we're

30
00:01:50,580 --> 00:01:54,630
trying to identify the different
variables that we

31
00:01:54,630 --> 00:01:57,610
have under our hands, and then
run it many times with some

32
00:01:57,610 --> 00:02:02,500
kind of random distribution that
allow us in end of the

33
00:02:02,500 --> 00:02:06,970
tests to come up with numbers
that harness us with the

34
00:02:06,970 --> 00:02:10,220
ability to fine tune and
to get an answer.

35
00:02:10,220 --> 00:02:15,150
And in our little case, we just
choose the option to help

36
00:02:15,150 --> 00:02:20,980
a good friend of mine who is a
real a rock star salesperson,

37
00:02:20,980 --> 00:02:23,910
and we'll try to find what
are the things that are

38
00:02:23,910 --> 00:02:27,280
constraining him and how
we could have been.

39
00:02:27,280 --> 00:02:28,560
How we'll do it?

40
00:02:28,560 --> 00:02:31,280
Well, we'll use first App Script
just to show the power

41
00:02:31,280 --> 00:02:33,710
of Google Sheets and App Script,
and how you could do

42
00:02:33,710 --> 00:02:36,550
things quickly and share
them with others.

43
00:02:36,550 --> 00:02:40,330
And then we'll take it for the
real world, and we'll show

44
00:02:40,330 --> 00:02:44,080
together how we could run it &mdash;
the same code, basically, the

45
00:02:44,080 --> 00:02:45,270
same JavaScript code &mdash;

46
00:02:45,270 --> 00:02:49,640
on Node.js, inside Compute
Engine, which is a very

47
00:02:49,640 --> 00:02:52,480
efficient way to do it.

48
00:02:52,480 --> 00:02:53,430
What is our problem?

49
00:02:53,430 --> 00:02:56,070
Well, basically we have this
brilliant salesperson, and

50
00:02:56,070 --> 00:03:00,050
they could get big deals that
pay, let's say, x amount of

51
00:03:00,050 --> 00:03:03,400
dollars or smaller deals that
pay y amount of dollars.

52
00:03:03,400 --> 00:03:06,500
And of course, the level of
effort for a bigger deal is

53
00:03:06,500 --> 00:03:07,990
much higher than
a smaller deal.

54
00:03:07,990 --> 00:03:11,980
So let's take the scenario of
the end of the quarter, and

55
00:03:11,980 --> 00:03:17,780
our salesperson got 30 days to
make the most out of her time.

56
00:03:17,780 --> 00:03:19,180
What she could do?

57
00:03:19,180 --> 00:03:22,200
She should choose just to
close big deals, or just

58
00:03:22,200 --> 00:03:25,850
smaller deals, or what
is the perfect plan?

59
00:03:25,850 --> 00:03:28,430
And this is basically what
we'll try to do here.

60
00:03:28,430 --> 00:03:31,760
I'll share all those links
at the end of the

61
00:03:31,760 --> 00:03:33,770
show, so feel free.

62
00:03:33,770 --> 00:03:37,730
A much better explanation than
the one that I gave you can

63
00:03:37,730 --> 00:03:41,330
find on Wikipedia, then if you
want to check out what it's

64
00:03:41,330 --> 00:03:44,030
all about with Node.js and how
cool it is to run your

65
00:03:44,030 --> 00:03:48,590
JavaScript code inside it very
efficiently, of course.

66
00:03:48,590 --> 00:03:52,390
Node.js, but you need some
machine to do it, so Compute

67
00:03:52,390 --> 00:03:56,260
Engine is here to help, and
we'll touch quickly on how you

68
00:03:56,260 --> 00:03:58,340
could set your own
Compute Engine.

69
00:03:58,340 --> 00:04:02,090
Since we did it last episode
of GDL-IL, I won't touch on

70
00:04:02,090 --> 00:04:05,010
all the basic boilerplate steps
that you need to do in

71
00:04:05,010 --> 00:04:07,585
order to have your own virtual
machines, but I'll just take

72
00:04:07,585 --> 00:04:08,850
it a step further.

73
00:04:08,850 --> 00:04:11,410
After you have the machine, you
installed the Node.js, now

74
00:04:11,410 --> 00:04:13,190
what you could do with it.

75
00:04:13,190 --> 00:04:16,420
And of course, App Script,
there's just a link to all the

76
00:04:16,420 --> 00:04:21,019
details and documentation that
you could enjoy there.

77
00:04:21,019 --> 00:04:24,330
Let's go to our case, and first

78
00:04:24,330 --> 00:04:25,370
let's define the problem.

79
00:04:25,370 --> 00:04:29,980
So in our world &mdash; let me just
open it so it will be a bit

80
00:04:29,980 --> 00:04:34,620
wider, and we'll try to squeeze
everything to the page

81
00:04:34,620 --> 00:04:38,530
so you'll be able to
see it nicely.

82
00:04:38,530 --> 00:04:39,570
Let's take it like this.

83
00:04:39,570 --> 00:04:40,610
That's much better.

84
00:04:40,610 --> 00:04:43,090
The chart here is just to give
us a sense of how the data

85
00:04:43,090 --> 00:04:45,850
look like, so don't focus
too much on it.

86
00:04:45,850 --> 00:04:50,780
Basically, what we have
here is a test case.

87
00:04:50,780 --> 00:04:53,700
Let's remove all the data that
we have right now and look at

88
00:04:53,700 --> 00:04:55,400
it together.

89
00:04:55,400 --> 00:05:00,240
If you noticed, I have this new
sheet that I created, and

90
00:05:00,240 --> 00:05:03,000
for this GDL show, I just
created a new menu that would

91
00:05:03,000 --> 00:05:05,780
allow us to choose
several things.

92
00:05:05,780 --> 00:05:10,210
Let's try with the most basic
way to just run simulations

93
00:05:10,210 --> 00:05:12,730
that basically you could see
are just filling now the

94
00:05:12,730 --> 00:05:16,260
details, and the chart is
updating in real time.

95
00:05:16,260 --> 00:05:19,030
And what we have here is
a very naive approach.

96
00:05:19,030 --> 00:05:23,090
We're just coming with x amount
of big deals and y

97
00:05:23,090 --> 00:05:24,120
amount of small deals.

98
00:05:24,120 --> 00:05:25,610
In our case, it's the
same amount &mdash;

99
00:05:25,610 --> 00:05:26,750
25.

100
00:05:26,750 --> 00:05:32,680
And we have a number of
percentage that we set in

101
00:05:32,680 --> 00:05:37,010
advance that says something like
in 30% of the deals that

102
00:05:37,010 --> 00:05:39,980
she will approach that are big
deals, she will be able to

103
00:05:39,980 --> 00:05:41,380
close them successfully.

104
00:05:41,380 --> 00:05:44,180
And let's say on smaller
deals, it's much easier

105
00:05:44,180 --> 00:05:47,360
because of lots of different
reasons, and their percentage

106
00:05:47,360 --> 00:05:49,990
there is 50%.

107
00:05:49,990 --> 00:05:54,800
You could see here on 10 cases,
more or less, those are

108
00:05:54,800 --> 00:05:55,590
the numbers.

109
00:05:55,590 --> 00:05:58,120
And we could have a slight feel
for the numbers here,

110
00:05:58,120 --> 00:06:01,670
what is the max, min, standard
deviation, and the median.

111
00:06:01,670 --> 00:06:05,590
And a nice aspect here will
be probably to take the

112
00:06:05,590 --> 00:06:07,390
conditional formatting.

113
00:06:07,390 --> 00:06:12,750
I'm going to the cells that I
want to apply this conditional

114
00:06:12,750 --> 00:06:13,770
formatting.

115
00:06:13,770 --> 00:06:16,650
In the conditional formatting,
we say something like, OK,

116
00:06:16,650 --> 00:06:22,270
everything that is above
$250,000, I just

117
00:06:22,270 --> 00:06:23,570
want to make bold.

118
00:06:23,570 --> 00:06:28,070
And in our case, the median is
265, so let's correct it.

119
00:06:28,070 --> 00:06:30,690

120
00:06:30,690 --> 00:06:32,330
We go here conditional
formatting.

121
00:06:32,330 --> 00:06:36,220

122
00:06:36,220 --> 00:06:39,990
And I could see now quite
quickly where more or less I'm

123
00:06:39,990 --> 00:06:41,490
getting the best results.

124
00:06:41,490 --> 00:06:44,510
But this is, of course, not
mimicking reality, because we

125
00:06:44,510 --> 00:06:48,710
won't be able to do the same
things, because probably a

126
00:06:48,710 --> 00:06:51,640
bigger deal is taking
more effort from us.

127
00:06:51,640 --> 00:06:56,240
So we'll got the next phase of
running more control deals.

128
00:06:56,240 --> 00:06:59,720
And what will happen here,
you'll see, is we enforce the

129
00:06:59,720 --> 00:07:04,160
assumption that a bigger deal
is taking actually twice the

130
00:07:04,160 --> 00:07:05,730
time of the smaller deal.

131
00:07:05,730 --> 00:07:06,970
So now the script is done.

132
00:07:06,970 --> 00:07:09,330
You could see that I got this
nice dialog box, telling me

133
00:07:09,330 --> 00:07:11,950
what was the max amount that
we are able to achieve.

134
00:07:11,950 --> 00:07:14,240
And I just confirm it.

135
00:07:14,240 --> 00:07:17,030
And here you could see quite
clearly that if we were able

136
00:07:17,030 --> 00:07:20,630
to do one big deal, then from
the 50 deals that we could

137
00:07:20,630 --> 00:07:24,020
achieve if we would focus just
on a smaller deal, now we

138
00:07:24,020 --> 00:07:27,060
could have only 48, and
then it's going down.

139
00:07:27,060 --> 00:07:31,376
And here it's much interesting
aspect because we know that in

140
00:07:31,376 --> 00:07:34,480
the real world, it will be
much closer to this.

141
00:07:34,480 --> 00:07:36,620
We'll spend more time
on the bigger deals.

142
00:07:36,620 --> 00:07:43,690
And here the case when the
median is around 180,000, and

143
00:07:43,690 --> 00:07:45,220
the average is 200.

144
00:07:45,220 --> 00:07:47,750
Let's see all the cells
that are above that

145
00:07:47,750 --> 00:07:49,790
average quite quickly.

146
00:07:49,790 --> 00:07:51,930
Conditional formatting,
and above,

147
00:07:51,930 --> 00:07:55,120
let's say, just 200,000.

148
00:07:55,120 --> 00:07:59,710
And you could see nicely that
it's more concentrated at the

149
00:07:59,710 --> 00:08:01,530
beginning of everything.

150
00:08:01,530 --> 00:08:05,270
Now, let's take it for the next
step to show what the

151
00:08:05,270 --> 00:08:07,580
code is doing.

152
00:08:07,580 --> 00:08:08,990
Here you could see this &mdash;

153
00:08:08,990 --> 00:08:11,150
let me make [AUDIO LOST]

154
00:08:11,150 --> 00:08:13,120
that actually running
everything.

155
00:08:13,120 --> 00:08:16,480
So basically, we just took the
assumption of how easy or how

156
00:08:16,480 --> 00:08:19,150
hard it will be to
close a big deal.

157
00:08:19,150 --> 00:08:22,350
And in our case, it was
20%, and then 50%

158
00:08:22,350 --> 00:08:24,710
for a smaller deal.

159
00:08:24,710 --> 00:08:28,560
The amount of executions that we
could allow ourselves to do

160
00:08:28,560 --> 00:08:32,100
on smaller deals and bigger
deals, and this is the returns

161
00:08:32,100 --> 00:08:32,860
on each deal.

162
00:08:32,860 --> 00:08:35,630
And of course, you could play
with those parameters, and

163
00:08:35,630 --> 00:08:39,570
those are the parameters that
will drive all the simulation.

164
00:08:39,570 --> 00:08:42,720
Later, what we're doing is just
running this scenario.

165
00:08:42,720 --> 00:08:46,570
And we're running this scenario
basically on all the

166
00:08:46,570 --> 00:08:49,460
amount of big deals because this
is what's driving us or

167
00:08:49,460 --> 00:08:52,490
constraining us from making
all the smaller ones.

168
00:08:52,490 --> 00:08:56,460
So what we will do, we'll call
this function of running

169
00:08:56,460 --> 00:08:59,130
"blending," and this
is that function.

170
00:08:59,130 --> 00:09:01,440
And we're passing the right
line, so we'll be able to

171
00:09:01,440 --> 00:09:03,580
update our sheet quite easily.

172
00:09:03,580 --> 00:09:06,550
And this is just bottom line for
all the parameters that we

173
00:09:06,550 --> 00:09:09,230
want, all the variables
that we want to keep.

174
00:09:09,230 --> 00:09:12,490
And now we're calling the
loop of the big deals.

175
00:09:12,490 --> 00:09:17,900
And we're calling this simple
function that's returning the

176
00:09:17,900 --> 00:09:22,200
randomization, or basically
the answer, if we were

177
00:09:22,200 --> 00:09:24,270
successful with approaching
the deal and

178
00:09:24,270 --> 00:09:25,530
closing it or not.

179
00:09:25,530 --> 00:09:28,390
And what this function does,
basically, it's very simple.

180
00:09:28,390 --> 00:09:32,480
We're just taking the random
function &mdash; it will be a number

181
00:09:32,480 --> 00:09:34,230
between 0 and 1 &mdash;

182
00:09:34,230 --> 00:09:36,660
and we're trying to
see if it was 20%.

183
00:09:36,660 --> 00:09:39,760
And if the number that we
got is lower, we were

184
00:09:39,760 --> 00:09:40,920
able to win the deal.

185
00:09:40,920 --> 00:09:42,970
And if not, it's just false.

186
00:09:42,970 --> 00:09:45,540
And of course, the same with
the smaller deal, so it's

187
00:09:45,540 --> 00:09:47,100
very, very simple.

188
00:09:47,100 --> 00:09:51,000
And when we're coming here, and
we want to test if we want

189
00:09:51,000 --> 00:09:54,570
the deal, we're just going on
the deals, and it will start

190
00:09:54,570 --> 00:09:56,910
with one deal, and
then increase it.

191
00:09:56,910 --> 00:10:00,120
And if we were successful and
it's true, we're just adding

192
00:10:00,120 --> 00:10:03,120
one to the deals that we were
able, and we're adding the

193
00:10:03,120 --> 00:10:08,250
money that this big deal will
put into our account.

194
00:10:08,250 --> 00:10:10,760
And of course, the same will be
done with the smaller deal,

195
00:10:10,760 --> 00:10:12,640
so the same simple code.

196
00:10:12,640 --> 00:10:16,310
The smaller deal, however,
the magic is here.

197
00:10:16,310 --> 00:10:18,010
We have two constraints here.

198
00:10:18,010 --> 00:10:22,110
One is that simple constraint
of smaller deal should be

199
00:10:22,110 --> 00:10:24,305
always lower than the max amount
of smaller deals that

200
00:10:24,305 --> 00:10:25,500
we could do.

201
00:10:25,500 --> 00:10:29,900
But then we want to enforce the
ability of, hey, a bigger

202
00:10:29,900 --> 00:10:32,700
deal is twice as hard &mdash; that's
why it's 2 here &mdash; than a

203
00:10:32,700 --> 00:10:33,830
smaller deal.

204
00:10:33,830 --> 00:10:36,720
And the combination of two can't
exceed the max amount of

205
00:10:36,720 --> 00:10:40,710
deals that we could allow
ourselves to small and big.

206
00:10:40,710 --> 00:10:44,820
After we do that, very easily,
we're just updating the lines

207
00:10:44,820 --> 00:10:47,000
with all these different data.

208
00:10:47,000 --> 00:10:50,790
And those are these lines,
basically here.

209
00:10:50,790 --> 00:10:54,710
And very nicely, we could get
some nice aspect of what's

210
00:10:54,710 --> 00:10:55,410
going on here.

211
00:10:55,410 --> 00:10:57,840
So you saw that with the
current parameters &mdash;

212
00:10:57,840 --> 00:11:00,010
and let's have a look
at them again &mdash;

213
00:11:00,010 --> 00:11:05,500
of 20% and 50%, and those are
the returns, it might be worth

214
00:11:05,500 --> 00:11:10,690
to just focus maybe on this
range of deals, so to focus

215
00:11:10,690 --> 00:11:17,980
on, let's say, something between
6 to 12, more or less.

216
00:11:17,980 --> 00:11:21,430
But if we're changing the odds
just a little bit, let's say

217
00:11:21,430 --> 00:11:23,670
that we are more successful
with a bigger

218
00:11:23,670 --> 00:11:26,370
deal, and it's 0.4.

219
00:11:26,370 --> 00:11:28,540
And we're coming again here.

220
00:11:28,540 --> 00:11:33,020
Let's remove all the data
so we start clean.

221
00:11:33,020 --> 00:11:37,860
And we're going again here and
running it, we'll get the

222
00:11:37,860 --> 00:11:39,820
results quite quickly.

223
00:11:39,820 --> 00:11:42,840
But as you can see here, we're
waiting a bit, and that's

224
00:11:42,840 --> 00:11:45,350
basically one of the things
that I wanted to note.

225
00:11:45,350 --> 00:11:47,800
If you need to run simulations,
especially for

226
00:11:47,800 --> 00:11:52,490
the real world, App Script might
not be the tool for you.

227
00:11:52,490 --> 00:11:55,220
Here we're playing with it, and
it's a nice way to have a

228
00:11:55,220 --> 00:11:59,980
feel for some aspects of the
data, but wait with me.

229
00:11:59,980 --> 00:12:02,170
Bear with me just two or three
minutes, and you'll see how

230
00:12:02,170 --> 00:12:06,080
you could do it for real with
utilizing Compute Engine.

231
00:12:06,080 --> 00:12:09,050
So here we got some different
results, and you could see

232
00:12:09,050 --> 00:12:12,190
here that the median
is higher &mdash;

233
00:12:12,190 --> 00:12:13,170
270.

234
00:12:13,170 --> 00:12:18,700
And if we'll go here
[AUDIO LOST]

235
00:12:18,700 --> 00:12:20,860
use the conditional formatting,

236
00:12:20,860 --> 00:12:23,360
and we'll drive here.

237
00:12:23,360 --> 00:12:26,940
Basically, it should be 270.

238
00:12:26,940 --> 00:12:30,510
You see that it's tending a big
more to here, but it's not

239
00:12:30,510 --> 00:12:32,640
very clear what's going on.

240
00:12:32,640 --> 00:12:36,100
And of course, if we'll play the
scenario again and again

241
00:12:36,100 --> 00:12:39,220
multiple times, we'll be able
to identify if it's driving

242
00:12:39,220 --> 00:12:45,770
more to this side and aspect
of the data or more to the

243
00:12:45,770 --> 00:12:47,760
lower number of deals.

244
00:12:47,760 --> 00:12:51,050
Now, of course, here you could
play and run it multiple

245
00:12:51,050 --> 00:12:58,050
times, and we could definitely
do that again if we want.

246
00:12:58,050 --> 00:13:02,912
One thing to note here is that
you have full ability to use,

247
00:13:02,912 --> 00:13:07,960
of course, the message box, but
also the logger itself.

248
00:13:07,960 --> 00:13:12,020
So you have the ability to go
to View, click on Logs, and

249
00:13:12,020 --> 00:13:13,970
getting the output here,
very useful when you

250
00:13:13,970 --> 00:13:15,290
want to debug things.

251
00:13:15,290 --> 00:13:18,860
But one of the even nicer thing
is just the ability to

252
00:13:18,860 --> 00:13:22,980
put a break point on each
function and each line that

253
00:13:22,980 --> 00:13:25,730
you wish, and then select
the right function

254
00:13:25,730 --> 00:13:26,560
that we want to run.

255
00:13:26,560 --> 00:13:29,000
In our case, it's Run
Scenario Blending.

256
00:13:29,000 --> 00:13:34,480
Click on the Debug, and you'll
see in a minute that I'm

257
00:13:34,480 --> 00:13:37,875
opening the debugger and getting
a full view of the all

258
00:13:37,875 --> 00:13:38,610
the variables.

259
00:13:38,610 --> 00:13:41,910
I have this object containing
all the

260
00:13:41,910 --> 00:13:43,190
variables that I have here.

261
00:13:43,190 --> 00:13:47,450
And now on this line, basically
I could see and go

262
00:13:47,450 --> 00:13:51,590
above or get into and stepping
into the functions.

263
00:13:51,590 --> 00:13:52,150
Let's close it.

264
00:13:52,150 --> 00:13:54,200
We don't need it anymore.

265
00:13:54,200 --> 00:13:56,280
We have the results back.

266
00:13:56,280 --> 00:14:03,770
Let me just refresh it so it
will be much quicker, and

267
00:14:03,770 --> 00:14:07,140
we'll get the results
in a second.

268
00:14:07,140 --> 00:14:11,050
And as you can see now, it's
maybe a bit clearer that we

269
00:14:11,050 --> 00:14:15,880
want or wish to end to this
range of the aspect.

270
00:14:15,880 --> 00:14:18,770
Now, all this is quite cool.

271
00:14:18,770 --> 00:14:22,750
But the ability to run it for
real is basically coming very

272
00:14:22,750 --> 00:14:29,610
handy when we're taking Compute
Engine into our hands.

273
00:14:29,610 --> 00:14:32,280
So I took the code
from App Script.

274
00:14:32,280 --> 00:14:34,782
Basically, you could
see it here.

275
00:14:34,782 --> 00:14:38,610
[AUDIO LOST]

276
00:14:38,610 --> 00:14:40,270
changes into it.

277
00:14:40,270 --> 00:14:43,170
First and foremost, since you
are going to run in Node.js,

278
00:14:43,170 --> 00:14:45,280
we could utilize some models.

279
00:14:45,280 --> 00:14:49,760
NPM is your source, and there
are so many, that it's quite

280
00:14:49,760 --> 00:14:54,920
funny to look sometimes
for the best ones.

281
00:14:54,920 --> 00:14:58,150
In our cases, since we're
working with a lot of data

282
00:14:58,150 --> 00:15:05,460
now, we get to get out of the
logger or, in our Node.js

283
00:15:05,460 --> 00:15:06,930
world, Console Log.

284
00:15:06,930 --> 00:15:09,600
We want to work with files,
and here I just choose the

285
00:15:09,600 --> 00:15:15,080
ability to work with text files
and basically build CSV

286
00:15:15,080 --> 00:15:18,930
files that later on I could
upload and analyze in Google

287
00:15:18,930 --> 00:15:21,170
Sheets again.

288
00:15:21,170 --> 00:15:24,990
So in our case, we'll try to
run, let's say, 1,000 times.

289
00:15:24,990 --> 00:15:27,985
We could do actually
10,000 times.

290
00:15:27,985 --> 00:15:31,100
It will be very, very efficient
and fast, and you'll

291
00:15:31,100 --> 00:15:33,220
see it in minute.

292
00:15:33,220 --> 00:15:36,530
In terms of percentage and all
the aspects that we talked

293
00:15:36,530 --> 00:15:39,960
about, very similar
to what we saw &mdash;

294
00:15:39,960 --> 00:15:44,510
20% chance to close a big deal,
50% for a smaller one.

295
00:15:44,510 --> 00:15:49,090
And those are the limitations
that we put to ourselves, and

296
00:15:49,090 --> 00:15:52,460
these are the returns.

297
00:15:52,460 --> 00:15:56,770
Now we're just putting some
boilerplate code to run our

298
00:15:56,770 --> 00:16:00,920
blending scenario x amount of
times, and each time we'll get

299
00:16:00,920 --> 00:16:04,160
the maximum, and we'll
want to output

300
00:16:04,160 --> 00:16:06,170
everything to a CSV file.

301
00:16:06,170 --> 00:16:08,180
By the way, this is all
I need in order to

302
00:16:08,180 --> 00:16:10,160
export it to a CSV file.

303
00:16:10,160 --> 00:16:13,860
I'm using outData as a string
object, and I'm just making

304
00:16:13,860 --> 00:16:17,120
sure that I'm putting commas and
end of line in the end of

305
00:16:17,120 --> 00:16:18,180
everything.

306
00:16:18,180 --> 00:16:21,750
And as you could see here, very
straightforward and easy.

307
00:16:21,750 --> 00:16:27,163
Now when we'll come here
to our Compute Engine &mdash;

308
00:16:27,163 --> 00:16:30,390
let me make it [AUDIO LOST].

309
00:16:30,390 --> 00:16:35,960
we could run this little,
nice application.

310
00:16:35,960 --> 00:16:45,370
And for 10,000 runs, we got
the results back after 451

311
00:16:45,370 --> 00:16:48,800
milliseconds, so roughly
half a second.

312
00:16:48,800 --> 00:16:52,430
And you could see here that we
were able to achieve the best

313
00:16:52,430 --> 00:16:54,920
results with a higher
number of big deals.

314
00:16:54,920 --> 00:16:59,270
So probably the best
recommendation that we could

315
00:16:59,270 --> 00:17:04,130
make in this case with
these assumptions &mdash;

316
00:17:04,130 --> 00:17:05,530
these are the ones &mdash;

317
00:17:05,530 --> 00:17:08,260
is that we want to focus
on more bigger deals

318
00:17:08,260 --> 00:17:09,970
than smaller deals.

319
00:17:09,970 --> 00:17:13,940
Now you might notice that it's
not black and white, and it's

320
00:17:13,940 --> 00:17:18,240
not that we have one
sort of thing.

321
00:17:18,240 --> 00:17:22,790
And I guess it's very similar
to the real world where

322
00:17:22,790 --> 00:17:25,010
usually the answers
are quite gray.

323
00:17:25,010 --> 00:17:27,460
You need to find the
golden path.

324
00:17:27,460 --> 00:17:30,240
And in most of the cases,
it's not very clear

325
00:17:30,240 --> 00:17:32,020
where they will be.

326
00:17:32,020 --> 00:17:38,160
And I guess that one of most
important aspects to note is

327
00:17:38,160 --> 00:17:41,270
that your assumptions will
drive the simulation.

328
00:17:41,270 --> 00:17:44,770
So it's very useful to have
those type of simulations when

329
00:17:44,770 --> 00:17:48,160
you feel that you have some
control or some assumptions

330
00:17:48,160 --> 00:17:49,850
that are close to reality.

331
00:17:49,850 --> 00:17:53,100
And in our case, we could
definitely say something like

332
00:17:53,100 --> 00:17:56,620
our brilliant salesgirl
could close a bigger

333
00:17:56,620 --> 00:17:59,280
deal 30% of the times.

334
00:17:59,280 --> 00:17:59,580
Why?

335
00:17:59,580 --> 00:18:04,160
Because for every 10 deals that
she approaches, three are

336
00:18:04,160 --> 00:18:05,720
done deals.

337
00:18:05,720 --> 00:18:09,980
And with those assumptions in
hand, we could definitely go

338
00:18:09,980 --> 00:18:12,630
and see how she or he
could utilize their

339
00:18:12,630 --> 00:18:14,570
time in the best way.

340
00:18:14,570 --> 00:18:18,610
So these were just fun little
things about how to utilize

341
00:18:18,610 --> 00:18:24,810
Node.js, App Script, and run
some Monte Carlo simulations.

342
00:18:24,810 --> 00:18:29,000
I hope in the near future to
show some cool things that you

343
00:18:29,000 --> 00:18:31,440
could do in App Engine
as well.

344
00:18:31,440 --> 00:18:34,630
And all the code, of course,
will be on my GitApp

345
00:18:34,630 --> 00:18:38,160
repository, and I'll put a full
transcript of all this

346
00:18:38,160 --> 00:18:42,940
show in the footnotes so you'll
be able to track it.

347
00:18:42,940 --> 00:18:46,400
And until next time, be
strong and have fun.

348
00:18:46,400 --> 00:18:47,650
Bye-bye.

349
00:18:47,650 --> 00:18:57,220

