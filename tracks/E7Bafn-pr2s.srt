1
00:00:00,000 --> 00:00:07,439

2
00:00:07,439 --> 00:00:08,230
COLT MCANLIS: Good.

3
00:00:08,230 --> 00:00:08,730
Test.

4
00:00:08,730 --> 00:00:09,780
Can everybody hear me?

5
00:00:09,780 --> 00:00:13,830
Can everyone see how bald I
am from where you're sitting?

6
00:00:13,830 --> 00:00:17,200
Hands up if you can see
your reflection in my head.

7
00:00:17,200 --> 00:00:19,330
So I have a really
tough job tonight.

8
00:00:19,330 --> 00:00:21,880
My job is to try to keep
you entertained and awake

9
00:00:21,880 --> 00:00:24,630
at this time of night, after
you've been fed and alcoholed.

10
00:00:24,630 --> 00:00:27,685
So I'm going to try to
do that as best I can.

11
00:00:27,685 --> 00:00:29,310
Let me introduce
myself really quickly.

12
00:00:29,310 --> 00:00:30,310
My name is Colt McAnlis.

13
00:00:30,310 --> 00:00:33,710
I'm actually the team lead
for Chrome Developer Relations

14
00:00:33,710 --> 00:00:34,690
Performance.

15
00:00:34,690 --> 00:00:36,910
About a year ago, in
January, we actually

16
00:00:36,910 --> 00:00:40,830
identified that the web
performance community was

17
00:00:40,830 --> 00:00:42,830
good and doing
well, but we didn't

18
00:00:42,830 --> 00:00:45,090
have someone focused on
bringing the message to people

19
00:00:45,090 --> 00:00:46,280
constantly.

20
00:00:46,280 --> 00:00:49,160
As talked about in the
previous talks tonight,

21
00:00:49,160 --> 00:00:51,796
it's really easy to do dumb,
slow things on the web.

22
00:00:51,796 --> 00:00:53,920
And one of the first things
we need to do with that

23
00:00:53,920 --> 00:00:55,820
is fix it with education.

24
00:00:55,820 --> 00:00:58,500
So we kind of defined
from the beginning

25
00:00:58,500 --> 00:01:00,335
that after looking
at all the education

26
00:01:00,335 --> 00:01:01,835
and looking at
everything out there,

27
00:01:01,835 --> 00:01:04,739
there's really three
pillars of web performance.

28
00:01:04,739 --> 00:01:07,550
Up until now, the web
as a whole has really

29
00:01:07,550 --> 00:01:08,920
only focused on one of them.

30
00:01:08,920 --> 00:01:11,040
All you've heard from
most performance experts

31
00:01:11,040 --> 00:01:13,280
is, how fast does
your website load.

32
00:01:13,280 --> 00:01:14,780
We've all seen the
studies that show

33
00:01:14,780 --> 00:01:17,870
that one millisecond of time
actually related to $10 million

34
00:01:17,870 --> 00:01:20,400
of lost revenue for
site X, Y, and Z.

35
00:01:20,400 --> 00:01:22,200
And they only really
talk about network.

36
00:01:22,200 --> 00:01:25,630
But in the modern age
of web applications,

37
00:01:25,630 --> 00:01:27,590
we often tend to
neglect the other two

38
00:01:27,590 --> 00:01:31,540
pillars of web performance,
rendering and compute.

39
00:01:31,540 --> 00:01:35,429
A great part of the
forecast &mdash; Forecastio?

40
00:01:35,429 --> 00:01:37,812
Forecast &mdash; I wanted to see.

41
00:01:37,812 --> 00:01:38,520
He was listening.

42
00:01:38,520 --> 00:01:39,120
That was good.

43
00:01:39,120 --> 00:01:39,828
I wanted to test.

44
00:01:39,828 --> 00:01:41,479
See, I've got to
keep you awake, too.

45
00:01:41,479 --> 00:01:43,770
One of the great parts of
the forecast talk, I believe,

46
00:01:43,770 --> 00:01:46,781
was when he really said,
we have to actually solve

47
00:01:46,781 --> 00:01:48,280
this problem of
rendering because it

48
00:01:48,280 --> 00:01:49,280
doesn't happen for free.

49
00:01:49,280 --> 00:01:52,292
I think the existence of
the previous type of web,

50
00:01:52,292 --> 00:01:54,250
where CSS animations
weren't something you even

51
00:01:54,250 --> 00:01:58,020
had availability to, allowed
us to do really stupid things,

52
00:01:58,020 --> 00:01:59,690
and the browser
kept us really fast.

53
00:01:59,690 --> 00:02:02,445
But now, because we kind
of can tend our own yard,

54
00:02:02,445 --> 00:02:04,330
we're running into
some problems there.

55
00:02:04,330 --> 00:02:05,940
So when you think
about performance,

56
00:02:05,940 --> 00:02:07,190
you should know that
network, render,

57
00:02:07,190 --> 00:02:09,606
and compute &mdash; you can have
problems in all three of these.

58
00:02:09,606 --> 00:02:13,220
And much like Jake said
earlier, a huge problem

59
00:02:13,220 --> 00:02:14,880
in one of these
portions can actually

60
00:02:14,880 --> 00:02:17,310
cloud out issues that are
happening in the other two.

61
00:02:17,310 --> 00:02:19,980
So as you're going through your
process of finding performance

62
00:02:19,980 --> 00:02:22,072
issues in your website,
you need to make sure

63
00:02:22,072 --> 00:02:23,780
that you're evaluating
all three of these

64
00:02:23,780 --> 00:02:25,560
with the right tools
at the right time.

65
00:02:25,560 --> 00:02:27,840
And what I'm going to do tonight
is I'm going to try to walk you

66
00:02:27,840 --> 00:02:29,950
through some of the sites
that you've submitted &mdash;

67
00:02:29,950 --> 00:02:34,390
ha-ha-ha-ha-ha &mdash; and hopefully
bruise your ego a little bit.

68
00:02:34,390 --> 00:02:35,124
No offense.

69
00:02:35,124 --> 00:02:36,290
It's what we all have to do.

70
00:02:36,290 --> 00:02:38,620
Quite frankly, I think one
of the big things we've

71
00:02:38,620 --> 00:02:40,480
been trying to do with
the web performance

72
00:02:40,480 --> 00:02:43,090
movement over the past year is
actually bruise a lot of egos,

73
00:02:43,090 --> 00:02:43,751
in a way.

74
00:02:43,751 --> 00:02:45,000
Because we're all programmers.

75
00:02:45,000 --> 00:02:46,000
We're all smart.

76
00:02:46,000 --> 00:02:47,810
We're too smart, quite frankly.

77
00:02:47,810 --> 00:02:49,682
And we've got to be
taken down a peg.

78
00:02:49,682 --> 00:02:51,640
Because we all know in
here &mdash; everyone in here,

79
00:02:51,640 --> 00:02:53,759
think about your coworkers.

80
00:02:53,759 --> 00:02:55,550
And think about what
really motivates them.

81
00:02:55,550 --> 00:02:58,039
99% of the time, if you
can bruise their ego

82
00:02:58,039 --> 00:03:00,330
or challenge them or tell
them they're not good enough,

83
00:03:00,330 --> 00:03:01,970
or the problem's
too hard, that's

84
00:03:01,970 --> 00:03:03,784
what actually gets
them to move, right?

85
00:03:03,784 --> 00:03:05,990
AUDIENCE: Or if
you pay them more.

86
00:03:05,990 --> 00:03:08,715
COLT MCANLIS: OK, maybe, maybe.

87
00:03:08,715 --> 00:03:11,590
If you've got Yankees
money, I guess so.

88
00:03:11,590 --> 00:03:12,904
So this is the loop.

89
00:03:12,904 --> 00:03:14,820
So this is what you
should all be thinking of.

90
00:03:14,820 --> 00:03:17,450
Now I've got about 10 years
of game development background

91
00:03:17,450 --> 00:03:18,070
under my belt.

92
00:03:18,070 --> 00:03:19,557
I'm a C++ programmer at heart.

93
00:03:19,557 --> 00:03:21,640
And I'm trying to apply a
lot of the lessons we're

94
00:03:21,640 --> 00:03:23,690
using in game development
to web development.

95
00:03:23,690 --> 00:03:26,430
Because in reality, we're both
dealing with real time media

96
00:03:26,430 --> 00:03:27,342
interfaces.

97
00:03:27,342 --> 00:03:29,550
So when you guys say, how
fast can something load off

98
00:03:29,550 --> 00:03:31,590
an internet site, I'm
thinking, how fast

99
00:03:31,590 --> 00:03:33,390
can that stuff be
streamed off a DVD.

100
00:03:33,390 --> 00:03:36,837
It's the same problem we've
had, just 10 years later.

101
00:03:36,837 --> 00:03:38,420
So when you're doing
your performance,

102
00:03:38,420 --> 00:03:40,710
the main thing that you have to
do is follow these three steps.

103
00:03:40,710 --> 00:03:42,370
The first thing is you
need to gather information.

104
00:03:42,370 --> 00:03:43,840
You go open up Chrome DevTools.

105
00:03:43,840 --> 00:03:46,680
You open up WebPagetest.org.

106
00:03:46,680 --> 00:03:50,060
This gives you information about
what is going on in your page.

107
00:03:50,060 --> 00:03:51,610
From that, you
actually need insight.

108
00:03:51,610 --> 00:03:53,540
Because really,
what's a whole sheet

109
00:03:53,540 --> 00:03:55,360
of floating point
numbers mean to you?

110
00:03:55,360 --> 00:03:55,960
Nothing.

111
00:03:55,960 --> 00:03:57,950
You need to know what those
floating point numbers mean.

112
00:03:57,950 --> 00:03:59,070
And your tooling
system needs to be

113
00:03:59,070 --> 00:04:01,480
able to infer what those
floating point numbers mean.

114
00:04:01,480 --> 00:04:02,980
And then once you
have that insight,

115
00:04:02,980 --> 00:04:04,580
you need to be able to
actually plan an action.

116
00:04:04,580 --> 00:04:05,320
You have this data.

117
00:04:05,320 --> 00:04:06,778
You have to then
go to your manager

118
00:04:06,778 --> 00:04:10,370
and justify, please, let
me spend two weeks fixing

119
00:04:10,370 --> 00:04:13,270
seven milliseconds of
load time from our website

120
00:04:13,270 --> 00:04:14,140
because it matters.

121
00:04:14,140 --> 00:04:16,110
And then you need to be able
to repeat this constantly,

122
00:04:16,110 --> 00:04:17,068
constantly, constantly.

123
00:04:17,068 --> 00:04:18,790
You need continuous
integration tools.

124
00:04:18,790 --> 00:04:23,070
You need the ability to actually
track down who's check-in

125
00:04:23,070 --> 00:04:24,437
broke the build.

126
00:04:24,437 --> 00:04:25,270
Quick show of hands.

127
00:04:25,270 --> 00:04:26,500
How many of you in
here actually have

128
00:04:26,500 --> 00:04:28,291
some continuous
integration for performance

129
00:04:28,291 --> 00:04:30,350
in your suite right now?

130
00:04:30,350 --> 00:04:33,940
One, two, three, four, five.

131
00:04:33,940 --> 00:04:34,440
Wait.

132
00:04:34,440 --> 00:04:35,600
Were you just showing
me your Pepsi can?

133
00:04:35,600 --> 00:04:36,240
AUDIENCE: [INAUDIBLE].

134
00:04:36,240 --> 00:04:37,000
COLT MCANLIS: OK.

135
00:04:37,000 --> 00:04:39,300
It's a cool can.

136
00:04:39,300 --> 00:04:41,400
Bravo?

137
00:04:41,400 --> 00:04:43,820
So maybe four, maybe five,
out of an entire room.

138
00:04:43,820 --> 00:04:47,379
I've asked this question to
probably about 3,000 developers

139
00:04:47,379 --> 00:04:48,920
this week while I've
been in New York

140
00:04:48,920 --> 00:04:51,610
and meeting and giving talks,
and the total number of people

141
00:04:51,610 --> 00:04:55,270
is close to about 15, with
the five in this room.

142
00:04:55,270 --> 00:04:58,020
This shows there's a huge
problem in the web community

143
00:04:58,020 --> 00:05:00,490
is that we're not actually
testing for performance

144
00:05:00,490 --> 00:05:03,750
and giving it the gravitas that
we are our features and our CSS

145
00:05:03,750 --> 00:05:05,250
and those pretty
little bubbly items

146
00:05:05,250 --> 00:05:06,160
everywhere else on our pages.

147
00:05:06,160 --> 00:05:08,140
And this is why we
actually moved forward

148
00:05:08,140 --> 00:05:10,270
with trying to build a
better community about this.

149
00:05:10,270 --> 00:05:12,630
So for you in the audience,
this is the only slide

150
00:05:12,630 --> 00:05:14,088
I want you to take
away from today.

151
00:05:14,088 --> 00:05:15,610
Burn this into your retina.

152
00:05:15,610 --> 00:05:16,110
Tweet it.

153
00:05:16,110 --> 00:05:16,830
Blog it.

154
00:05:16,830 --> 00:05:17,649
Get a tattoo of it.

155
00:05:17,649 --> 00:05:19,940
Get it tattooed, tweet me,
and I'll send you some swag.

156
00:05:19,940 --> 00:05:21,240
Please don't get a tattoo.

157
00:05:21,240 --> 00:05:22,740
Anything I say is
not representative

158
00:05:22,740 --> 00:05:25,330
of any organization or
Google or the lawyers that

159
00:05:25,330 --> 00:05:26,480
are affiliated with me.

160
00:05:26,480 --> 00:05:27,890
All comments are my own.

161
00:05:27,890 --> 00:05:30,036
Please do not get a tattoo.

162
00:05:30,036 --> 00:05:31,660
First off, if you're
doing performance,

163
00:05:31,660 --> 00:05:33,590
go to HTML5Rocks.com.

164
00:05:33,590 --> 00:05:34,651
There's a landing page.

165
00:05:34,651 --> 00:05:35,650
It's called Performance.

166
00:05:35,650 --> 00:05:36,720
You click on the button.

167
00:05:36,720 --> 00:05:39,490
I'm actually the guy
that maintains that page.

168
00:05:39,490 --> 00:05:41,240
If you start there,
it's going to walk you

169
00:05:41,240 --> 00:05:43,114
through the three pillars
of web performance.

170
00:05:43,114 --> 00:05:45,500
You're going to be able
to go step by step on how

171
00:05:45,500 --> 00:05:48,280
to find and address
the largest problems

172
00:05:48,280 --> 00:05:49,890
on each one of
these three pillars.

173
00:05:49,890 --> 00:05:51,660
Next is you need to
be following and using

174
00:05:51,660 --> 00:05:53,300
the #perfmatters hashtag.

175
00:05:53,300 --> 00:05:56,220
We actually started this
hashtag just earlier this year.

176
00:05:56,220 --> 00:05:58,660
And we really wanted
to use #webperf.

177
00:05:58,660 --> 00:05:59,280
We really did.

178
00:05:59,280 --> 00:06:00,530
We wanted to use that hashtag.

179
00:06:00,530 --> 00:06:01,238
It was out there.

180
00:06:01,238 --> 00:06:04,520
But we didn't feel like
it bruised enough egos.

181
00:06:04,520 --> 00:06:07,610
We wanted #perfmatters to
be this name, this brand,

182
00:06:07,610 --> 00:06:09,345
this answer to a question.

183
00:06:09,345 --> 00:06:11,220
And what we saw was that
very quickly, people

184
00:06:11,220 --> 00:06:13,830
started posting links to
their friends' websites

185
00:06:13,830 --> 00:06:15,060
and being like, yo, dude.

186
00:06:15,060 --> 00:06:18,451
Why does it take 15 seconds to
load your site? #perfmatters.

187
00:06:18,451 --> 00:06:18,950
Right?

188
00:06:18,950 --> 00:06:21,408
We wanted it to be something
you could take to your manager

189
00:06:21,408 --> 00:06:22,990
and say, hey, it
takes 15 seconds

190
00:06:22,990 --> 00:06:24,430
for our site to load on mobile.

191
00:06:24,430 --> 00:06:25,910
#perfmatters.

192
00:06:25,910 --> 00:06:27,680
We want this to be a badge.

193
00:06:27,680 --> 00:06:29,600
We are all egotistical
programmers.

194
00:06:29,600 --> 00:06:31,970
Wear the badge.

195
00:06:31,970 --> 00:06:33,350
Own the sticker.

196
00:06:33,350 --> 00:06:34,692
Make it a part of your culture.

197
00:06:34,692 --> 00:06:36,150
Make it a part of
your environment.

198
00:06:36,150 --> 00:06:36,983
That's what we want.

199
00:06:36,983 --> 00:06:37,920
We want attitude.

200
00:06:37,920 --> 00:06:39,670
That's why you should
follow that hashtag.

201
00:06:39,670 --> 00:06:42,606
Finally, check out the G+
Web Performance community,

202
00:06:42,606 --> 00:06:43,480
if you're in Google+.

203
00:06:43,480 --> 00:06:44,260
It's a cool place.

204
00:06:44,260 --> 00:06:45,760
A lot of cool people
hang out there.

205
00:06:45,760 --> 00:06:46,660
Some of them are bald.

206
00:06:46,660 --> 00:06:47,743
Some of them post content.

207
00:06:47,743 --> 00:06:49,215
I'm not saying who.

208
00:06:49,215 --> 00:06:52,070
But you need to follow that
because really, if you combine

209
00:06:52,070 --> 00:06:54,427
#perfmatters with the Google
Web Performance communities

210
00:06:54,427 --> 00:06:56,260
and the articles coming
through HTML5 Rocks,

211
00:06:56,260 --> 00:06:59,000
you're actually going to find
an overflow of information.

212
00:06:59,000 --> 00:07:01,120
I bet most of you in
here haven't actually

213
00:07:01,120 --> 00:07:02,880
dived into &mdash; here,
we'll do this.

214
00:07:02,880 --> 00:07:03,620
We'll do this.

215
00:07:03,620 --> 00:07:08,680
Put your hand up if you've
read more than five articles

216
00:07:08,680 --> 00:07:10,680
about performance.

217
00:07:10,680 --> 00:07:11,360
OK.

218
00:07:11,360 --> 00:07:11,880
Keep your hands up.

219
00:07:11,880 --> 00:07:12,671
Keep your hands up.

220
00:07:12,671 --> 00:07:14,410
More than 10 articles.

221
00:07:14,410 --> 00:07:14,910
OK.

222
00:07:14,910 --> 00:07:16,248
Let's ramp this exponentially.

223
00:07:16,248 --> 00:07:16,747
20.

224
00:07:16,747 --> 00:07:19,946

225
00:07:19,946 --> 00:07:22,256
28.

226
00:07:22,256 --> 00:07:23,192
Ah.

227
00:07:23,192 --> 00:07:26,510
Let's go 40 articles
on performance.

228
00:07:26,510 --> 00:07:28,040
OK.

229
00:07:28,040 --> 00:07:29,956
For those of you who
have had your hands up,

230
00:07:29,956 --> 00:07:31,580
of those 40 articles,
how many of those

231
00:07:31,580 --> 00:07:32,621
things did you implement?

232
00:07:32,621 --> 00:07:35,000
Maybe 5, 6, 20?

233
00:07:35,000 --> 00:07:38,180
No fair if you actually
did a talk earlier tonight.

234
00:07:38,180 --> 00:07:39,510
I'm not taking your input.

235
00:07:39,510 --> 00:07:40,540
So the point that we're
getting at, though,

236
00:07:40,540 --> 00:07:42,180
is that for those of you
who haven't been reading

237
00:07:42,180 --> 00:07:43,330
a lot of this content,
this is actually

238
00:07:43,330 --> 00:07:44,480
going to be an overflow
of information.

239
00:07:44,480 --> 00:07:46,355
Hopefully, you can find
it, you can guide it,

240
00:07:46,355 --> 00:07:47,477
you can move through it.

241
00:07:47,477 --> 00:07:48,310
What's the next one?

242
00:07:48,310 --> 00:07:48,670
Yeah.

243
00:07:48,670 --> 00:07:51,086
So what I'm going to do now
is with the rest of the time &mdash;

244
00:07:51,086 --> 00:07:52,760
Pete, how much time do we have?

245
00:07:52,760 --> 00:07:53,510
40, 60?

246
00:07:53,510 --> 00:07:54,260
As much as I want.

247
00:07:54,260 --> 00:07:55,550
Keep talking until
people fall asleep.

248
00:07:55,550 --> 00:07:56,050
Good.

249
00:07:56,050 --> 00:07:57,300
I can do that.

250
00:07:57,300 --> 00:07:59,650
So what we're going to do
is I'm actually only going

251
00:07:59,650 --> 00:08:01,480
to load these
websites on mobile.

252
00:08:01,480 --> 00:08:03,830
Quite frankly, I ran
through these earlier today.

253
00:08:03,830 --> 00:08:07,149
And most of your sites actually
fell over dead on mobile.

254
00:08:07,149 --> 00:08:09,190
There were some interesting
use cases on desktop,

255
00:08:09,190 --> 00:08:11,047
but quite frankly,
desktop's dead.

256
00:08:11,047 --> 00:08:13,130
If you're not making your
site mobile and friendly

257
00:08:13,130 --> 00:08:15,420
and fast there, you're
doing it wrong, period.

258
00:08:15,420 --> 00:08:16,440
Period, period, period.

259
00:08:16,440 --> 00:08:19,920
Mobile is all that matters
right now &mdash; #perfmatters.

260
00:08:19,920 --> 00:08:20,810
You can tweet that.

261
00:08:20,810 --> 00:08:22,285
I'll give you a second.

262
00:08:22,285 --> 00:08:23,030
No, go ahead.

263
00:08:23,030 --> 00:08:23,920
It's OK.

264
00:08:23,920 --> 00:08:25,640
#perfmatters, [INAUDIBLE], OK.

265
00:08:25,640 --> 00:08:28,306
So we're going to take a look at
a couple of these really quick.

266
00:08:28,306 --> 00:08:31,410
And I'm going to try to organize
these in terms of discussion

267
00:08:31,410 --> 00:08:32,820
and pointing out
a couple things.

268
00:08:32,820 --> 00:08:34,850
So if we don't get to
all of them, I apologize.

269
00:08:34,850 --> 00:08:37,079
Please feel free to email
me later and curse at me.

270
00:08:37,079 --> 00:08:38,120
Or do it on social media.

271
00:08:38,120 --> 00:08:39,194
That's always fun too.

272
00:08:39,194 --> 00:08:40,860
So what I've got here
is a little setup,

273
00:08:40,860 --> 00:08:42,760
and you can actually
see my little phone,

274
00:08:42,760 --> 00:08:44,000
so I can click on some stuff.

275
00:08:44,000 --> 00:08:47,640
And what I'm using over here is
the Chrome Developer Tools ADB

276
00:08:47,640 --> 00:08:48,530
extension.

277
00:08:48,530 --> 00:08:51,030
So this is a fantastic
little &mdash; who's using this?

278
00:08:51,030 --> 00:08:52,770
Anyone using this?

279
00:08:52,770 --> 00:08:53,400
No?

280
00:08:53,400 --> 00:08:56,220
No fair if you're
hosting the event, dude.

281
00:08:56,220 --> 00:08:57,290
You guys are cheating.

282
00:08:57,290 --> 00:08:59,080
So this is a fantastic
Chrome extension.

283
00:08:59,080 --> 00:09:00,190
You go to the Chrome Web Store.

284
00:09:00,190 --> 00:09:02,040
You can actually download
and install this extension.

285
00:09:02,040 --> 00:09:03,498
Basically, what it
allows you to do

286
00:09:03,498 --> 00:09:05,400
is interface with the
Android Developer Tools

287
00:09:05,400 --> 00:09:06,730
very easily and quickly.

288
00:09:06,730 --> 00:09:09,370
So I can actually click on this
and go View inspection targets,

289
00:09:09,370 --> 00:09:13,170
and you'll actually see that it
loads and shows me this Galaxy

290
00:09:13,170 --> 00:09:15,329
Nexus phone that's actually
plugged in right here.

291
00:09:15,329 --> 00:09:16,870
And I can actually
click &mdash; well, I'll

292
00:09:16,870 --> 00:09:19,330
close this so you can actually
see what this looks like.

293
00:09:19,330 --> 00:09:21,370
I can click the Inspect button.

294
00:09:21,370 --> 00:09:23,710
And what this Inspect
button shows is

295
00:09:23,710 --> 00:09:27,020
it actually shows me what's
on my phone right now.

296
00:09:27,020 --> 00:09:29,930
So this is one of the
sites, and I'll get to it

297
00:09:29,930 --> 00:09:31,570
a little bit deeper
here in a minute.

298
00:09:31,570 --> 00:09:33,314
But this is actually
what's on the phone.

299
00:09:33,314 --> 00:09:35,730
You can see it's moving, it's
scrolling, it's doing stuff.

300
00:09:35,730 --> 00:09:37,980
We go over here, and you can
actually see the network.

301
00:09:37,980 --> 00:09:40,755
So if I hit Reload on my
phone &mdash; and you can actually

302
00:09:40,755 --> 00:09:42,380
see the network
request coming through.

303
00:09:42,380 --> 00:09:43,170
This is not a desktop site.

304
00:09:43,170 --> 00:09:44,340
This is actually a mobile site.

305
00:09:44,340 --> 00:09:47,030
This is really good because I'm
actually testing on the device

306
00:09:47,030 --> 00:09:48,900
that my users are using.

307
00:09:48,900 --> 00:09:53,430
Wow, great comment &mdash;
#perfmatters.

308
00:09:53,430 --> 00:09:54,930
One of you will
tweet it tonight.

309
00:09:54,930 --> 00:09:55,700
It will happen.

310
00:09:55,700 --> 00:09:57,255
I'll keep drilling it into you.

311
00:09:57,255 --> 00:09:58,880
But the cool thing
is, you can actually

312
00:09:58,880 --> 00:09:59,921
see what's going on here.

313
00:09:59,921 --> 00:10:02,090
And notice, for this
particular website,

314
00:10:02,090 --> 00:10:04,630
that it's actually
not done loading yet.

315
00:10:04,630 --> 00:10:07,725
You can still see the bar
moving on the side over there.

316
00:10:07,725 --> 00:10:10,100
And the funny thing is, if
you load this site in desktop,

317
00:10:10,100 --> 00:10:11,867
you don't see that same problem.

318
00:10:11,867 --> 00:10:13,700
So obviously, there's
an issue on the mobile

319
00:10:13,700 --> 00:10:15,830
that is not showing
up on the desktop.

320
00:10:15,830 --> 00:10:18,590
Again, we need to make sure that
we're testing things properly.

321
00:10:18,590 --> 00:10:20,173
But the cool thing
is, we can actually

322
00:10:20,173 --> 00:10:23,180
see all of the same events, use
the DevTools in the same way,

323
00:10:23,180 --> 00:10:26,070
minus everything crashing
because of memory issues, which

324
00:10:26,070 --> 00:10:27,000
might happen tonight.

325
00:10:27,000 --> 00:10:28,250
I apologize for the live feed.

326
00:10:28,250 --> 00:10:31,170
But we can actually go through
here and just record memory

327
00:10:31,170 --> 00:10:33,270
and see what's
going on in memory.

328
00:10:33,270 --> 00:10:34,670
And so let me show
you over here.

329
00:10:34,670 --> 00:10:37,400
I can go through and actually
scroll and go back and actually

330
00:10:37,400 --> 00:10:39,790
see how memory is adjusting
based on this stuff.

331
00:10:39,790 --> 00:10:43,422
So if you haven't adopted
this Chrome ADB extension

332
00:10:43,422 --> 00:10:44,880
into your tooling
and your testing,

333
00:10:44,880 --> 00:10:46,240
you need to definitely do this.

334
00:10:46,240 --> 00:10:47,615
Definitely get
this in your stuff

335
00:10:47,615 --> 00:10:50,220
because no other tool allows
you this sort of integration.

336
00:10:50,220 --> 00:10:52,220
And Chrome DevTools are
already top of the line.

337
00:10:52,220 --> 00:10:53,303
This should be part of it.

338
00:10:53,303 --> 00:10:55,360
So anyhow, enough
of me babbling.

339
00:10:55,360 --> 00:10:57,412
So let's start with one
of the first sites here.

340
00:10:57,412 --> 00:10:59,675
Come on, clicky clicky.

341
00:10:59,675 --> 00:11:03,860
Now there's a native app
for you, slow when loading.

342
00:11:03,860 --> 00:11:05,740
Right, Forecastio?

343
00:11:05,740 --> 00:11:07,450
Aw, I'll get it right.

344
00:11:07,450 --> 00:11:08,070
Sorry.

345
00:11:08,070 --> 00:11:11,589
So we're going to try this
first one here, allout.org.

346
00:11:11,589 --> 00:11:12,380
This was submitted.

347
00:11:12,380 --> 00:11:13,910
Someone in the room
submitted this.

348
00:11:13,910 --> 00:11:14,370
I don't know who it is.

349
00:11:14,370 --> 00:11:14,940
Doesn't matter.

350
00:11:14,940 --> 00:11:16,060
But we're going to take
a look at your site,

351
00:11:16,060 --> 00:11:17,950
and hopefully, we're
going to make you upset.

352
00:11:17,950 --> 00:11:19,870
So this is loading.

353
00:11:19,870 --> 00:11:22,471
I'm going to show you what
the page looks like first.

354
00:11:22,471 --> 00:11:24,220
So first off, we all
just watched it load.

355
00:11:24,220 --> 00:11:25,650
This is on a 4G connection.

356
00:11:25,650 --> 00:11:27,840
I'm not on the local Wi-Fi.

357
00:11:27,840 --> 00:11:32,480
We can see that this actually
is not a mobile site.

358
00:11:32,480 --> 00:11:35,950
I mean, I shouldn't
have to scroll.

359
00:11:35,950 --> 00:11:36,910
Oh, I can zoom.

360
00:11:36,910 --> 00:11:38,680
Yay.

361
00:11:38,680 --> 00:11:41,572
But most of the site
is actually eclipsed.

362
00:11:41,572 --> 00:11:43,530
We've got some sort of
spinner here at the top,

363
00:11:43,530 --> 00:11:45,160
but it's a marquee movement.

364
00:11:45,160 --> 00:11:48,224
We've got some other items
down here on the bottom.

365
00:11:48,224 --> 00:11:49,140
Some stuff's going on.

366
00:11:49,140 --> 00:11:49,880
So let's take a
look at what that

367
00:11:49,880 --> 00:11:51,470
looks like in Chrome DevTools.

368
00:11:51,470 --> 00:11:52,945
So I can go here, click Inspect.

369
00:11:52,945 --> 00:11:56,700

370
00:11:56,700 --> 00:11:58,809
Again, native
applications, they're slow.

371
00:11:58,809 --> 00:12:00,100
So let's go to the Network tab.

372
00:12:00,100 --> 00:12:02,316
And I want to take a look
at how this thing loads.

373
00:12:02,316 --> 00:12:03,690
So I'm going to
hit Reload again,

374
00:12:03,690 --> 00:12:06,441
and we're going to watch
all the assets come through.

375
00:12:06,441 --> 00:12:07,940
And notice here,
on the bottom here,

376
00:12:07,940 --> 00:12:09,830
you can see six
requests, 12 requests.

377
00:12:09,830 --> 00:12:11,413
I'll keep scrolling
down to the bottom

378
00:12:11,413 --> 00:12:13,250
so you can kind of see that.

379
00:12:13,250 --> 00:12:15,970
Seven seconds worth of load time
before it's actually loaded.

380
00:12:15,970 --> 00:12:17,636
So this down here on
the bottom tells us

381
00:12:17,636 --> 00:12:20,449
that it took about six seconds
before content complete was

382
00:12:20,449 --> 00:12:22,990
actually kind of issued, before
the page load event occurred,

383
00:12:22,990 --> 00:12:25,500
and 7.9 seconds total.

384
00:12:25,500 --> 00:12:29,000
8K actually came &mdash; oh,
no, we're still not done.

385
00:12:29,000 --> 00:12:30,780
9K came through, pardon me.

386
00:12:30,780 --> 00:12:31,630
And so 34 requests.

387
00:12:31,630 --> 00:12:33,640
We can actually see the
health of this object

388
00:12:33,640 --> 00:12:34,320
and the health of this site.

389
00:12:34,320 --> 00:12:36,028
Now 34 requests, that's
actually nothing.

390
00:12:36,028 --> 00:12:38,580
9K, that's a drop in the bucket.

391
00:12:38,580 --> 00:12:41,080
The Robitussin-laced
grandmother picture from earlier

392
00:12:41,080 --> 00:12:43,412
could easily load
9K very quickly.

393
00:12:43,412 --> 00:12:45,870
What's important here, though,
and I want to show you this,

394
00:12:45,870 --> 00:12:48,282
is when we go up here and
actually sort by size,

395
00:12:48,282 --> 00:12:49,990
we actually get a
different sort of sense

396
00:12:49,990 --> 00:12:52,000
of the content that's
being sent around.

397
00:12:52,000 --> 00:12:54,870
So we can see &mdash;
let me not do that.

398
00:12:54,870 --> 00:12:55,780
There we go.

399
00:12:55,780 --> 00:12:57,540
So we can actually
see the images loaded.

400
00:12:57,540 --> 00:13:00,230
We can actually see that most
of the large assets here, 6.4K,

401
00:13:00,230 --> 00:13:02,610
512 bytes.

402
00:13:02,610 --> 00:13:05,241
We can see that the
large images here &mdash; this

403
00:13:05,241 --> 00:13:06,490
is actually interesting to me.

404
00:13:06,490 --> 00:13:10,710
So this is a 1,024 by 576.

405
00:13:10,710 --> 00:13:11,236
It's 213K.

406
00:13:11,236 --> 00:13:13,930

407
00:13:13,930 --> 00:13:14,930
Quick round of applause.

408
00:13:14,930 --> 00:13:16,846
Who thinks that's too
large for a mobile site?

409
00:13:16,846 --> 00:13:18,134
[APPLAUSE]

410
00:13:18,134 --> 00:13:19,012
COLT MCANLIS: Yeah.

411
00:13:19,012 --> 00:13:19,970
OK, here's another one.

412
00:13:19,970 --> 00:13:22,230
Here's 109K, a
little bit better.

413
00:13:22,230 --> 00:13:23,250
Same resolution, though.

414
00:13:23,250 --> 00:13:24,410
Anyone notice that?

415
00:13:24,410 --> 00:13:27,190
Same resolution, half the size.

416
00:13:27,190 --> 00:13:30,180
Now if anyone in here &mdash; a
quick other round of applause.

417
00:13:30,180 --> 00:13:32,630
Who's written a JPEG compressor?

418
00:13:32,630 --> 00:13:34,290
One guy, two guys, three guys.

419
00:13:34,290 --> 00:13:35,030
All right.

420
00:13:35,030 --> 00:13:36,130
We'll get some beers
later, and we'll

421
00:13:36,130 --> 00:13:37,360
talk about DCT coefficients.

422
00:13:37,360 --> 00:13:39,610
I've had this really cool
idea that you can actually &mdash;

423
00:13:39,610 --> 00:13:40,730
you know what, never mind.

424
00:13:40,730 --> 00:13:42,640
So notice, though, that
this image actually

425
00:13:42,640 --> 00:13:44,510
has a lot more data to it.

426
00:13:44,510 --> 00:13:45,667
There's a lot more edges.

427
00:13:45,667 --> 00:13:47,250
There's a lot more
noise to the image.

428
00:13:47,250 --> 00:13:48,920
Yet it's smaller
than this one here.

429
00:13:48,920 --> 00:13:50,140
This is actually mostly pink.

430
00:13:50,140 --> 00:13:52,610
There's no reason that
the image with more detail

431
00:13:52,610 --> 00:13:56,322
should be less size than the
one with less detail in it.

432
00:13:56,322 --> 00:13:58,780
What this tells me &mdash; I know
nothing about these developers.

433
00:13:58,780 --> 00:13:59,740
I know nothing about the site.

434
00:13:59,740 --> 00:14:01,020
But this tells me that
they're not actually

435
00:14:01,020 --> 00:14:03,740
exporting this particular image
with the right compression

436
00:14:03,740 --> 00:14:04,660
settings.

437
00:14:04,660 --> 00:14:07,110
So another &mdash; I like doing
these polls because it's late,

438
00:14:07,110 --> 00:14:09,100
and I need you all entertained.

439
00:14:09,100 --> 00:14:12,210
So how many of you
actually just export

440
00:14:12,210 --> 00:14:14,460
your images at some
constant format.

441
00:14:14,460 --> 00:14:17,520
Like when you do an export from
a JPEG, it's like on 12 or 80,

442
00:14:17,520 --> 00:14:20,440
depending on what you're doing.

443
00:14:20,440 --> 00:14:24,160
So no &mdash; everyone else
hand-optimizes exactly

444
00:14:24,160 --> 00:14:28,680
your exact, perfect PSNR
relationship for your JPEG.

445
00:14:28,680 --> 00:14:29,180
Yes?

446
00:14:29,180 --> 00:14:30,190
Is that what I'm hearing?

447
00:14:30,190 --> 00:14:31,340
Because I saw like three hands.

448
00:14:31,340 --> 00:14:33,048
So either you're all
lying to each other,

449
00:14:33,048 --> 00:14:35,730
or you have no idea the way
that your images are compressed.

450
00:14:35,730 --> 00:14:37,790
OK, round of applause for no
idea the compression quality.

451
00:14:37,790 --> 00:14:38,290
[APPLAUSE]

452
00:14:38,290 --> 00:14:40,169
COLT MCANLIS: OK, fantastic.

453
00:14:40,169 --> 00:14:41,710
So seeing this site
actually tells us

454
00:14:41,710 --> 00:14:42,780
that this is a systemic problem.

455
00:14:42,780 --> 00:14:44,160
And again, the 3,000
developers I've

456
00:14:44,160 --> 00:14:46,340
talked to over the past
week all see this problem.

457
00:14:46,340 --> 00:14:47,220
In a couple of
the other websites

458
00:14:47,220 --> 00:14:48,594
I'm going to load
tonight, you're

459
00:14:48,594 --> 00:14:51,720
going to see this show up very
prevalently that in general, we

460
00:14:51,720 --> 00:14:54,950
as a web community do a
horrible, horrible job

461
00:14:54,950 --> 00:14:58,310
of optimizing images for
quality against size.

462
00:14:58,310 --> 00:15:00,030
Now in reality,
this isn't something

463
00:15:00,030 --> 00:15:01,300
that's that difficult.

464
00:15:01,300 --> 00:15:03,800
Most of us consider
a single way pipe.

465
00:15:03,800 --> 00:15:06,920
We have artists or designers
that are working in a vacuum.

466
00:15:06,920 --> 00:15:09,060
They're trying to optimize
for the visual quality

467
00:15:09,060 --> 00:15:09,710
of the image.

468
00:15:09,710 --> 00:15:11,440
Meanwhile, there's
bald engineers

469
00:15:11,440 --> 00:15:14,534
in a corner somewhere
going, why is my site slow?

470
00:15:14,534 --> 00:15:16,950
And there's this constant back
and forth between these two

471
00:15:16,950 --> 00:15:19,177
camps about size of
images versus quality

472
00:15:19,177 --> 00:15:21,010
of images and load times
and all this stuff.

473
00:15:21,010 --> 00:15:22,470
Let me give you a
little word of advice.

474
00:15:22,470 --> 00:15:25,000
If any of you are able to
implement something like this,

475
00:15:25,000 --> 00:15:28,642
it's very simple to spin
up an Amazon EC2 instance

476
00:15:28,642 --> 00:15:30,350
or even do this at
your desk and actually

477
00:15:30,350 --> 00:15:32,630
run a compressor, a
command line compressor,

478
00:15:32,630 --> 00:15:35,320
like libjpeg or
jpeg-turbo &mdash; by the way,

479
00:15:35,320 --> 00:15:37,780
jpeg-turbo is the actual
codec that we use inside

480
00:15:37,780 --> 00:15:40,680
of Chrome for JPEGs &mdash;
and actually compress it

481
00:15:40,680 --> 00:15:44,247
at various quality settings and
test the PSNR of the images.

482
00:15:44,247 --> 00:15:45,830
PSNR, for those of
you who don't know,

483
00:15:45,830 --> 00:15:48,000
is Peak Signal-to-Noise Ratio.

484
00:15:48,000 --> 00:15:51,340
This is actually a
measurement of the amount

485
00:15:51,340 --> 00:15:53,130
of noise and error
that's introduced

486
00:15:53,130 --> 00:15:55,034
to an image, the
blockiness that actually

487
00:15:55,034 --> 00:15:56,450
comes from the
compression format.

488
00:15:56,450 --> 00:15:58,241
We actually have a
standardization process.

489
00:15:58,241 --> 00:16:01,550
We call it PSNR, and that's how
we compare image compressors

490
00:16:01,550 --> 00:16:02,270
to each other.

491
00:16:02,270 --> 00:16:05,250
So you could actually take your
image, compress it at level 90,

492
00:16:05,250 --> 00:16:09,200
see what the PSNR is, compress
it at 80, see what the PSNR is.

493
00:16:09,200 --> 00:16:10,770
70, 60, 50, 40, 30.

494
00:16:10,770 --> 00:16:13,020
If you get below 30,
you've gone too far.

495
00:16:13,020 --> 00:16:13,940
Just stop at 30.

496
00:16:13,940 --> 00:16:16,190
But the cool thing about
this is that you can actually

497
00:16:16,190 --> 00:16:19,320
run 10,000, 20,000, 30,000
images through this process,

498
00:16:19,320 --> 00:16:22,660
and for each one find the
exact right compression

499
00:16:22,660 --> 00:16:26,780
value to give you a
PSNR of around 38 to 45.

500
00:16:26,780 --> 00:16:28,450
So you're not actually
just exporting

501
00:16:28,450 --> 00:16:30,487
to a single compression
number, a slider

502
00:16:30,487 --> 00:16:32,320
that your artists have
no idea what it does.

503
00:16:32,320 --> 00:16:33,694
You can actually
programmatically

504
00:16:33,694 --> 00:16:36,260
find this value by implementing
a simple iterative process

505
00:16:36,260 --> 00:16:37,760
against the command
line compressor.

506
00:16:37,760 --> 00:16:39,170
That's kind of cool.

507
00:16:39,170 --> 00:16:40,310
Round of applause for cool.

508
00:16:40,310 --> 00:16:41,577
[APPLAUSE]

509
00:16:41,577 --> 00:16:43,410
COLT MCANLIS: I saw
some of you begrudgingly

510
00:16:43,410 --> 00:16:44,600
go, that's not cool.

511
00:16:44,600 --> 00:16:45,550
Let's save the
questions for the end,

512
00:16:45,550 --> 00:16:48,200
if that's OK, because otherwise
I'm going to stare at Putin,

513
00:16:48,200 --> 00:16:50,622
and he kind of scares me.

514
00:16:50,622 --> 00:16:52,580
So let's take a look at
some other things here.

515
00:16:52,580 --> 00:16:53,871
So I want to go over timelines.

516
00:16:53,871 --> 00:16:54,860
So that was load time.

517
00:16:54,860 --> 00:16:56,360
Everyone knows
the network stuff.

518
00:16:56,360 --> 00:17:01,235
If you're not using
WebPagetest.org or ModPagespeed

519
00:17:01,235 --> 00:17:03,270
or PageSpeed Insights
and all that stuff,

520
00:17:03,270 --> 00:17:04,750
you need to be using all that.

521
00:17:04,750 --> 00:17:06,069
So let's just take a
look at what this site's

522
00:17:06,069 --> 00:17:07,371
doing while I'm doing nothing.

523
00:17:07,371 --> 00:17:08,829
So now I haven't
touched this site.

524
00:17:08,829 --> 00:17:10,530
To be clear, my
phone almost actually

525
00:17:10,530 --> 00:17:12,050
went locked because
I haven't touched it.

526
00:17:12,050 --> 00:17:13,609
I'm still not touching
it, but I want

527
00:17:13,609 --> 00:17:15,692
you to notice what the
memory is doing on the top.

528
00:17:15,692 --> 00:17:18,970
Now I'm a C++ game developer.

529
00:17:18,970 --> 00:17:21,430
To me, the only thing that
matters for performance

530
00:17:21,430 --> 00:17:23,210
is follow the memory.

531
00:17:23,210 --> 00:17:24,720
I actually give a
talk at Velocity

532
00:17:24,720 --> 00:17:28,260
yesterday where I, in
a very heretic fashion,

533
00:17:28,260 --> 00:17:30,890
suggested that web developers
were really bad developers

534
00:17:30,890 --> 00:17:32,725
because we're not
controlling our memory.

535
00:17:32,725 --> 00:17:34,980
We're actually letting
JavaScript do it for us.

536
00:17:34,980 --> 00:17:36,510
And because of this,
we have no idea

537
00:17:36,510 --> 00:17:38,490
what's going on under the hood.

538
00:17:38,490 --> 00:17:40,640
How many of you know
what your heap size is?

539
00:17:40,640 --> 00:17:42,680
How many of you care?

540
00:17:42,680 --> 00:17:44,420
That's another question.

541
00:17:44,420 --> 00:17:45,005
I like that.

542
00:17:45,005 --> 00:17:45,930
I like your outfit.

543
00:17:45,930 --> 00:17:47,557
Is that like a
cummer &mdash; What is that?

544
00:17:47,557 --> 00:17:48,890
Is that like a real [INAUDIBLE]?

545
00:17:48,890 --> 00:17:49,800
Yeah, I like that.

546
00:17:49,800 --> 00:17:50,310
That's cool.

547
00:17:50,310 --> 00:17:52,476
I might have to get me one
of those. #perfmatters, I

548
00:17:52,476 --> 00:17:54,379
got to get me one of those.

549
00:17:54,379 --> 00:17:55,670
So again, I've touched nothing.

550
00:17:55,670 --> 00:17:57,003
But notice this here on the top.

551
00:17:57,003 --> 00:17:58,550
I don't know if you
guys can see it.

552
00:17:58,550 --> 00:18:01,816
It's allocating between
7.5 megs and 9 megs.

553
00:18:01,816 --> 00:18:02,690
I'm touching nothing.

554
00:18:02,690 --> 00:18:04,106
Nothing's occurring
on the screen.

555
00:18:04,106 --> 00:18:07,740
Yet two megabytes of data are
being allocated and cleared

556
00:18:07,740 --> 00:18:08,580
in this environment.

557
00:18:08,580 --> 00:18:10,080
Now I can actually
figure out what's

558
00:18:10,080 --> 00:18:13,356
going on with this &mdash;
if I stop my recording,

559
00:18:13,356 --> 00:18:14,230
too much information.

560
00:18:14,230 --> 00:18:15,896
Let me just do a quick
record real quick

561
00:18:15,896 --> 00:18:18,755
so I can clear all that.

562
00:18:18,755 --> 00:18:20,630
So we can see something
on the timeline here.

563
00:18:20,630 --> 00:18:22,130
So it looks like,
first off, they've

564
00:18:22,130 --> 00:18:24,120
got two different timers firing.

565
00:18:24,120 --> 00:18:25,744
So we've got widgets.js
and Chartbeat.

566
00:18:25,744 --> 00:18:27,910
Chartbeat, I'm guessing,
is like an analytics thing.

567
00:18:27,910 --> 00:18:29,840
I see this on a bunch of
sites you guys gave me.

568
00:18:29,840 --> 00:18:31,506
And then widgets seems
like their thing.

569
00:18:31,506 --> 00:18:33,820
So I'm guessing this is that
marquee scroll at the top.

570
00:18:33,820 --> 00:18:35,403
They've got some
timer that's actually

571
00:18:35,403 --> 00:18:36,880
moving those images around.

572
00:18:36,880 --> 00:18:38,340
What I don't like &mdash; pardon?

573
00:18:38,340 --> 00:18:39,442
AUDIENCE: [INAUDIBLE]

574
00:18:39,442 --> 00:18:40,650
COLT MCANLIS: For widgets.js?

575
00:18:40,650 --> 00:18:42,850
Oh, cool.

576
00:18:42,850 --> 00:18:43,570
Oh, nice.

577
00:18:43,570 --> 00:18:46,420

578
00:18:46,420 --> 00:18:47,460
Widgets.js, Twitter.

579
00:18:47,460 --> 00:18:47,960
Oh, cool.

580
00:18:47,960 --> 00:18:49,350
So Twitter is actually
screwing this page up.

581
00:18:49,350 --> 00:18:49,849
Go Twitter.

582
00:18:49,849 --> 00:18:51,380
Is anyone here from Twitter?

583
00:18:51,380 --> 00:18:54,386
Boo, Twitter.

584
00:18:54,386 --> 00:18:55,760
So what we see
down here, though,

585
00:18:55,760 --> 00:18:57,920
is we see recalculate
and paint and what not.

586
00:18:57,920 --> 00:19:01,420
For our memory, this
view doesn't actually

587
00:19:01,420 --> 00:19:02,790
tell us what's being allocated.

588
00:19:02,790 --> 00:19:05,520
We can see where the events
are occurring and whatnot.

589
00:19:05,520 --> 00:19:08,364
I can actually mouse over the
GCs when they actually happen.

590
00:19:08,364 --> 00:19:10,030
More importantly,
though, I can actually

591
00:19:10,030 --> 00:19:11,200
go over here to
the Profiles page.

592
00:19:11,200 --> 00:19:13,140
Because I don't like
seeing that kind of memory.

593
00:19:13,140 --> 00:19:15,310
And I can actually do a
record of heap applications.

594
00:19:15,310 --> 00:19:16,970
So I can just hit start
and let this thing run.

595
00:19:16,970 --> 00:19:19,365
And basically, what you're
seeing here is on this top,

596
00:19:19,365 --> 00:19:21,740
you're kind of seeing timeline
view plus memory profiling

597
00:19:21,740 --> 00:19:22,560
at the same time.

598
00:19:22,560 --> 00:19:25,240
In the top, any of
these blue lines

599
00:19:25,240 --> 00:19:27,140
is when memory
allocations occur.

600
00:19:27,140 --> 00:19:29,520
Now when you see a grey line,
what the grey line means is

601
00:19:29,520 --> 00:19:32,220
that memory has been freed by
a garbage collection process

602
00:19:32,220 --> 00:19:32,900
somewhere.

603
00:19:32,900 --> 00:19:35,810
So you can actually see a
new set that just happened,

604
00:19:35,810 --> 00:19:37,800
and some of the
grey lines happened.

605
00:19:37,800 --> 00:19:40,740
But these blues tend
to kind of pop up

606
00:19:40,740 --> 00:19:41,980
in a very regular fashion.

607
00:19:41,980 --> 00:19:44,490
Now in this, I can
actually go through here

608
00:19:44,490 --> 00:19:47,850
and change the size of
my window and actually

609
00:19:47,850 --> 00:19:50,090
see exactly what was allocated.

610
00:19:50,090 --> 00:19:52,480
So in this single event,
at about eight seconds

611
00:19:52,480 --> 00:19:55,255
in in my capture, about 3K
worth of data was allocated.

612
00:19:55,255 --> 00:19:57,171
And we can see a similar
pattern over here.

613
00:19:57,171 --> 00:19:59,170
I can highlight this
window, and we see another,

614
00:19:59,170 --> 00:20:00,667
about almost 3K.

615
00:20:00,667 --> 00:20:02,000
And over here, a similar window.

616
00:20:02,000 --> 00:20:04,920
There's about 3K, plus
a lot of extra change

617
00:20:04,920 --> 00:20:06,420
there that hasn't
been freed up yet.

618
00:20:06,420 --> 00:20:08,170
But let me focus on
this guy really quick.

619
00:20:08,170 --> 00:20:10,950
So here I can actually see that
3K came from compiled code.

620
00:20:10,950 --> 00:20:13,966
So somewhere in this system,
deoptimization code came from.

621
00:20:13,966 --> 00:20:15,590
Now for those of you
who are not versed

622
00:20:15,590 --> 00:20:17,610
in fast path and
slow path JavaScript,

623
00:20:17,610 --> 00:20:19,360
effectively what this
little block of data

624
00:20:19,360 --> 00:20:21,510
you're seeing here &mdash; see
that optimization data?

625
00:20:21,510 --> 00:20:25,219
The way that V8 and most
modern JavaScript VMs work

626
00:20:25,219 --> 00:20:26,760
is they will actually
try to optimize

627
00:20:26,760 --> 00:20:28,580
your code on your behalf
because, I mean, come on.

628
00:20:28,580 --> 00:20:29,810
You're a stupid programmer.

629
00:20:29,810 --> 00:20:31,010
You don't know
how to write code.

630
00:20:31,010 --> 00:20:32,460
Obviously, the VM
knows better than you

631
00:20:32,460 --> 00:20:34,310
because it's a machine, and
it's fast, and it's smart.

632
00:20:34,310 --> 00:20:35,910
So what it'll actually
do is take a code path

633
00:20:35,910 --> 00:20:37,990
that you've written, and
it'll actually optimize it.

634
00:20:37,990 --> 00:20:38,890
It'll manage the memory.

635
00:20:38,890 --> 00:20:40,556
It'll make some fast
path optimizations,

636
00:20:40,556 --> 00:20:42,627
and it'll put it out there
and start running it.

637
00:20:42,627 --> 00:20:44,210
Well, the problem
is that it does this

638
00:20:44,210 --> 00:20:46,543
with some assumptions about
the state of the environment

639
00:20:46,543 --> 00:20:47,240
that it's in.

640
00:20:47,240 --> 00:20:49,737
And it'll do this, and
oftentime, it'll break.

641
00:20:49,737 --> 00:20:51,820
And it'll go, whoa, we
actually cause an exception

642
00:20:51,820 --> 00:20:53,540
somewhere in the stack
due to our optimization,

643
00:20:53,540 --> 00:20:54,720
because we're just
a stupid robot,

644
00:20:54,720 --> 00:20:56,844
and we actually don't know
what we're doing either.

645
00:20:56,844 --> 00:20:58,420
When this happens,
basically Chrome

646
00:20:58,420 --> 00:21:02,020
has to create this new block
of code that's parallel

647
00:21:02,020 --> 00:21:04,779
to the block of code you had,
delete your block of code,

648
00:21:04,779 --> 00:21:07,320
put your new block of code in
the stack, and have it execute.

649
00:21:07,320 --> 00:21:09,720
When that deoptimization
occurs, because the optimization

650
00:21:09,720 --> 00:21:12,877
failed, it has to take
your old block of code,

651
00:21:12,877 --> 00:21:14,710
put it back in, and
delete the block of code

652
00:21:14,710 --> 00:21:16,750
that it just created.

653
00:21:16,750 --> 00:21:18,350
So there are specific
code paths that

654
00:21:18,350 --> 00:21:19,950
generally cause this to happen.

655
00:21:19,950 --> 00:21:22,450
Closures are one of them.

656
00:21:22,450 --> 00:21:25,247
How many of you are using
closures in your timers?

657
00:21:25,247 --> 00:21:25,830
Don't applaud.

658
00:21:25,830 --> 00:21:28,726
I don't want you
to applaud that.

659
00:21:28,726 --> 00:21:30,100
Closures are one
of these things.

660
00:21:30,100 --> 00:21:31,766
If you actually have
a closure running &mdash;

661
00:21:31,766 --> 00:21:33,310
so it's very common
for people to do

662
00:21:33,310 --> 00:21:36,800
set interval closure
comma 1,000, right?

663
00:21:36,800 --> 00:21:38,370
That closure in
that set interval

664
00:21:38,370 --> 00:21:41,170
is actually causing these
sorts of memory leaks to occur.

665
00:21:41,170 --> 00:21:44,380
It's a deoptimization path
that V8 can't optimize around.

666
00:21:44,380 --> 00:21:47,000
And so basically, every
single time you're doing this,

667
00:21:47,000 --> 00:21:48,986
you're running into
this situation.

668
00:21:48,986 --> 00:21:50,860
So let's look at something
else really quick.

669
00:21:50,860 --> 00:21:53,120
So I want to go over
here and show you

670
00:21:53,120 --> 00:21:54,480
what I'm seeing on the screen.

671
00:21:54,480 --> 00:21:58,800
Now I've turned on a couple
modes on the developer tools.

672
00:21:58,800 --> 00:22:01,680
So first off, you'll see
this beautiful little &mdash;

673
00:22:01,680 --> 00:22:03,310
you can't see it too well.

674
00:22:03,310 --> 00:22:04,740
I wonder if I can tilt my
phone just a little bit.

675
00:22:04,740 --> 00:22:05,950
You can see up at the
top that I actually

676
00:22:05,950 --> 00:22:07,780
have a little graph
showing me frame rate

677
00:22:07,780 --> 00:22:10,620
as well as how much GPU
memory is being used.

678
00:22:10,620 --> 00:22:13,800
So that's actually &mdash;
quick show of hands,

679
00:22:13,800 --> 00:22:18,187
who understands how a
web page is painted?

680
00:22:18,187 --> 00:22:20,270
It's like the same guys
that wrote JPEG compilers.

681
00:22:20,270 --> 00:22:20,820
OK.

682
00:22:20,820 --> 00:22:22,903
So for everyone else, let
me do this really quick.

683
00:22:22,903 --> 00:22:28,320
How your page is rasterized
is a delicate ballet.

684
00:22:28,320 --> 00:22:29,842
Really, it's more like boxing.

685
00:22:29,842 --> 00:22:32,050
It's basically two people
smashing each other's faces

686
00:22:32,050 --> 00:22:34,060
in for about six
milliseconds a frame.

687
00:22:34,060 --> 00:22:37,980
Effectively, what happens is
Chrome will take your web page,

688
00:22:37,980 --> 00:22:39,020
and it will dice it up.

689
00:22:39,020 --> 00:22:43,020
It'll create square regions
of 256 by 256 tiles.

690
00:22:43,020 --> 00:22:46,230
For each one of these tiles,
it'll actually spin up a thread

691
00:22:46,230 --> 00:22:49,640
and actually rasterize all
of the pixels in that tile,

692
00:22:49,640 --> 00:22:51,370
all of the WebKit &mdash;
well, Blink now.

693
00:22:51,370 --> 00:22:52,670
Sorry, I've got to get
my terminology right &mdash;

694
00:22:52,670 --> 00:22:54,960
all of the page elements,
and actually composite that

695
00:22:54,960 --> 00:22:59,960
to a CPU chunk of memory,
32 bits per pixel,

696
00:22:59,960 --> 00:23:01,210
256 by 256 tile.

697
00:23:01,210 --> 00:23:03,110
And it'll rasterize
all that data in there.

698
00:23:03,110 --> 00:23:04,568
Once that data is
rasterized, it'll

699
00:23:04,568 --> 00:23:06,140
then upload it to the GPU.

700
00:23:06,140 --> 00:23:09,510
When you scroll a page,
the GPU is actually

701
00:23:09,510 --> 00:23:11,086
the thing that's
moving your page.

702
00:23:11,086 --> 00:23:12,835
Now for those of you &mdash;
some of you in here

703
00:23:12,835 --> 00:23:14,340
are young, much younger than me.

704
00:23:14,340 --> 00:23:17,170
You may not know this, but
back before "Quake III"

705
00:23:17,170 --> 00:23:19,120
was hardware accelerated,
we had something

706
00:23:19,120 --> 00:23:20,530
called software rasterization.

707
00:23:20,530 --> 00:23:21,030
Yeah?

708
00:23:21,030 --> 00:23:22,030
Software rasterization?

709
00:23:22,030 --> 00:23:24,359
"Heretic," "Doom,"
"Quake," anybody?

710
00:23:24,359 --> 00:23:26,150
Any other professional
gamers in the house?

711
00:23:26,150 --> 00:23:27,640
Yeah.

712
00:23:27,640 --> 00:23:30,980
So back then, we used a term
called software rasterization.

713
00:23:30,980 --> 00:23:33,680
This was generally OK,
but once we invented GPUs,

714
00:23:33,680 --> 00:23:35,570
GPUs are basically
hardware rasterization.

715
00:23:35,570 --> 00:23:38,360
They're built to take pixels
and put them on the screen.

716
00:23:38,360 --> 00:23:40,050
They're dedicated
silicon for this.

717
00:23:40,050 --> 00:23:42,930
But Chrome is actually still
using software rasterization

718
00:23:42,930 --> 00:23:44,560
to paint the pixels
on the screen.

719
00:23:44,560 --> 00:23:46,360
This means that
this is a slow path.

720
00:23:46,360 --> 00:23:47,943
This also means that
every one of you,

721
00:23:47,943 --> 00:23:50,050
right now, should be
really, really scared,

722
00:23:50,050 --> 00:23:53,400
because how many of you have
actually tested whether or not

723
00:23:53,400 --> 00:23:57,460
those rounded corners and drop
shadows affect your render

724
00:23:57,460 --> 00:23:59,370
time?

725
00:23:59,370 --> 00:24:00,745
They do, actually,
quite frankly.

726
00:24:00,745 --> 00:24:03,203
If you go to "HTML5 Rocks," I
actually did a study on this.

727
00:24:03,203 --> 00:24:03,790
Ha ha.

728
00:24:03,790 --> 00:24:04,840
I'm sorry, that was
a leading question.

729
00:24:04,840 --> 00:24:05,423
That was mean.

730
00:24:05,423 --> 00:24:07,190
I knew that you didn't
know that answer.

731
00:24:07,190 --> 00:24:10,840
But basically what happens
is your CSS effects actually

732
00:24:10,840 --> 00:24:13,147
cause &mdash; it has to be
software rasterized, which

733
00:24:13,147 --> 00:24:15,480
means we have to actually go
and draw rounded rectangles

734
00:24:15,480 --> 00:24:18,104
and then actually add a drop
shadow to the side of it.

735
00:24:18,104 --> 00:24:19,520
And this actually
takes more time.

736
00:24:19,520 --> 00:24:21,311
In fact, if you have
those two combinations

737
00:24:21,311 --> 00:24:23,450
of things together,
it actually takes 4x

738
00:24:23,450 --> 00:24:25,400
as long as each one
of them individually.

739
00:24:25,400 --> 00:24:28,340
Which means that there's
combinations of CSS properties

740
00:24:28,340 --> 00:24:32,452
that hurt your rendering
performance more than others.

741
00:24:32,452 --> 00:24:34,160
Hopefully all of you
are going, dear god,

742
00:24:34,160 --> 00:24:35,914
I have to test this right now.

743
00:24:35,914 --> 00:24:38,330
And how you can test this, as
you can actually see up here

744
00:24:38,330 --> 00:24:40,296
in this GPU, this
frame rate meter,

745
00:24:40,296 --> 00:24:42,170
is that as you're
scrolling, you can actually

746
00:24:42,170 --> 00:24:45,342
see the milliseconds taken to
render that part of your page.

747
00:24:45,342 --> 00:24:46,800
Now what you're
also seeing here is

748
00:24:46,800 --> 00:24:49,250
notice this big red box
that keeps popping up?

749
00:24:49,250 --> 00:24:51,090
This is actually a mode
in Chrome DevTools.

750
00:24:51,090 --> 00:24:51,790
Let me show you this.

751
00:24:51,790 --> 00:24:53,340
And I know I'm spending
more time on this site.

752
00:24:53,340 --> 00:24:54,730
As we go to the
other sites, you'll

753
00:24:54,730 --> 00:24:55,800
actually see this
stuff play out.

754
00:24:55,800 --> 00:24:57,960
But I need to kind of
test the groundwork here.

755
00:24:57,960 --> 00:24:59,525
Is that in or left?

756
00:24:59,525 --> 00:25:00,150
AUDIENCE: Left.

757
00:25:00,150 --> 00:25:00,580
COLT MCANLIS: Left.

758
00:25:00,580 --> 00:25:01,130
Oh, wow, OK.

759
00:25:01,130 --> 00:25:02,350
I'll keep working.

760
00:25:02,350 --> 00:25:04,249
So anyhow, I have show
paint rectangles on.

761
00:25:04,249 --> 00:25:06,290
Basically, what this does
is when I turn this on,

762
00:25:06,290 --> 00:25:07,730
it's going to show
a red rectangle

763
00:25:07,730 --> 00:25:09,950
for every part of the page
that actually gets repainted.

764
00:25:09,950 --> 00:25:11,908
So this actually tells
me what part of the page

765
00:25:11,908 --> 00:25:13,880
is being rerasterized.

766
00:25:13,880 --> 00:25:15,880
Which is really cool
to know because I'm

767
00:25:15,880 --> 00:25:17,910
pretty sure all of you
will look at your site

768
00:25:17,910 --> 00:25:20,830
and find that you've got some
little square icon like this,

769
00:25:20,830 --> 00:25:23,500
but for some reason, it's
rasterizing like a 6x size

770
00:25:23,500 --> 00:25:26,100
window of that, that all has
to be processed on the CPU.

771
00:25:26,100 --> 00:25:27,210
This slows down your page.

772
00:25:27,210 --> 00:25:28,180
It creates jank.

773
00:25:28,180 --> 00:25:29,309
I hate that word.

774
00:25:29,309 --> 00:25:31,350
Hitching, by the way,
hitching is the right term.

775
00:25:31,350 --> 00:25:33,850
Every other medium,
video games, AV, movies,

776
00:25:33,850 --> 00:25:35,310
it's called hitching.

777
00:25:35,310 --> 00:25:37,400
Just, can we all
agree to use hitching?

778
00:25:37,400 --> 00:25:38,510
No?

779
00:25:38,510 --> 00:25:41,170
I'll get hitchfree.org later.

780
00:25:41,170 --> 00:25:42,856
Anyhow, let me move
on to the next site

781
00:25:42,856 --> 00:25:45,480
because I want to make sure that
we talk about some more stuff.

782
00:25:45,480 --> 00:25:46,940
But basically, you can
see that on this site,

783
00:25:46,940 --> 00:25:48,190
there there's a couple things.

784
00:25:48,190 --> 00:25:50,120
First off, they're
sending two large images

785
00:25:50,120 --> 00:25:51,490
to a mobile device.

786
00:25:51,490 --> 00:25:52,740
They don't have a mobile view.

787
00:25:52,740 --> 00:25:55,190
They don't have a
mindset of a viewport

788
00:25:55,190 --> 00:25:56,960
for these mobile environments.

789
00:25:56,960 --> 00:25:59,720
Plus it seems like their
marquee is actually

790
00:25:59,720 --> 00:26:01,899
rendering and updating
different parts of the page

791
00:26:01,899 --> 00:26:02,940
at different frequencies.

792
00:26:02,940 --> 00:26:06,410
They're allocating about
a meg of memory per minute

793
00:26:06,410 --> 00:26:08,000
or so when no one's
touching anything.

794
00:26:08,000 --> 00:26:11,437
So if this is your
site, fix those things

795
00:26:11,437 --> 00:26:12,270
because you need to.

796
00:26:12,270 --> 00:26:14,800
And also, your load time
is pretty harsh, too.

797
00:26:14,800 --> 00:26:17,470
So let's do this next one.

798
00:26:17,470 --> 00:26:19,170
So this next one
should be pretty quick.

799
00:26:19,170 --> 00:26:21,180
I just want to highlight
something really,

800
00:26:21,180 --> 00:26:22,270
really poignant here.

801
00:26:22,270 --> 00:26:24,100
So I'm going to close this.

802
00:26:24,100 --> 00:26:25,020
Which view are you on?

803
00:26:25,020 --> 00:26:25,519
OK.

804
00:26:25,519 --> 00:26:27,960

805
00:26:27,960 --> 00:26:28,710
So let's show you.

806
00:26:28,710 --> 00:26:32,040
So this is DoSomething.org,
a cool little website.

807
00:26:32,040 --> 00:26:33,520
It kind of just
encourages everyone

808
00:26:33,520 --> 00:26:36,860
to do something interesting in
small, little &mdash; small butterfly

809
00:26:36,860 --> 00:26:40,000
wings change the course of tides
in Africa and all that stuff.

810
00:26:40,000 --> 00:26:42,910
But we see it's a pretty
simple website, just kind

811
00:26:42,910 --> 00:26:46,560
of a little strata of
images and whatnot.

812
00:26:46,560 --> 00:26:49,110
When we go over here
to Chrome DevTools,

813
00:26:49,110 --> 00:26:50,610
let's inspect this
information here.

814
00:26:50,610 --> 00:26:52,480
And I'm going to put this
back on the Network tab,

815
00:26:52,480 --> 00:26:54,340
and we're going to go
ahead and reload this.

816
00:26:54,340 --> 00:26:58,230

817
00:26:58,230 --> 00:27:01,220
So we can actually see that
the page loaded pretty quickly.

818
00:27:01,220 --> 00:27:03,480
We got a lot of
information really quick.

819
00:27:03,480 --> 00:27:05,230
About 2.9 seconds, so
this is a lot better

820
00:27:05,230 --> 00:27:06,960
than the previous website.

821
00:27:06,960 --> 00:27:09,324
We're right around that
three second load time.

822
00:27:09,324 --> 00:27:10,490
And again, this is on my 4G.

823
00:27:10,490 --> 00:27:11,360
I'm not on the wireless.

824
00:27:11,360 --> 00:27:12,276
So that's pretty good.

825
00:27:12,276 --> 00:27:14,800
10K transferred,
that's all right.

826
00:27:14,800 --> 00:27:16,550
21 requests, not
that bad at all.

827
00:27:16,550 --> 00:27:17,750
So let's again sort by size.

828
00:27:17,750 --> 00:27:20,080
Let's see if anything's
coming up here.

829
00:27:20,080 --> 00:27:21,210
I got a couple not founds.

830
00:27:21,210 --> 00:27:23,490
That's not necessarily
a good idea.

831
00:27:23,490 --> 00:27:27,092
A couple images here.

832
00:27:27,092 --> 00:27:28,050
So this is interesting.

833
00:27:28,050 --> 00:27:30,780
Again, another 106K image
that's being delivered

834
00:27:30,780 --> 00:27:34,689
to a mobile screen that
obviously does not need 106K.

835
00:27:34,689 --> 00:27:35,980
That one's a little bit better.

836
00:27:35,980 --> 00:27:36,550
Well, not better.

837
00:27:36,550 --> 00:27:38,174
I mean, that's a very
depressing image.

838
00:27:38,174 --> 00:27:42,280
I didn't mean that
that was &mdash; again,

839
00:27:42,280 --> 00:27:44,030
my opinions are my
own and not that

840
00:27:44,030 --> 00:27:45,660
of any organization
or secret service

841
00:27:45,660 --> 00:27:47,049
that I'm influenced with.

842
00:27:47,049 --> 00:27:48,840
So we can actually see
some of these images

843
00:27:48,840 --> 00:27:50,520
may be a little bit
larger than others.

844
00:27:50,520 --> 00:27:52,395
But for the most part,
this is actually nice.

845
00:27:52,395 --> 00:27:54,133
Where did &mdash; what happened here?

846
00:27:54,133 --> 00:27:59,500
Did I &mdash; this technology,
isn't it great?

847
00:27:59,500 --> 00:28:02,730
So we can actually see, though,
that this page is actually

848
00:28:02,730 --> 00:28:05,226
a pretty good example of
what to do on a website.

849
00:28:05,226 --> 00:28:07,600
If you load this on the desktop,
what you'll actually see

850
00:28:07,600 --> 00:28:09,610
is that there's larger
versions of these images.

851
00:28:09,610 --> 00:28:11,370
They're tiled differently
with a different layout.

852
00:28:11,370 --> 00:28:12,494
There's a different scheme.

853
00:28:12,494 --> 00:28:14,420
But in the mobile
version, they really only

854
00:28:14,420 --> 00:28:16,086
have one or two images
that are probably

855
00:28:16,086 --> 00:28:17,982
too large for the mobile device.

856
00:28:17,982 --> 00:28:19,440
But in the most
part, this actually

857
00:28:19,440 --> 00:28:22,030
scrolls pretty quickly.

858
00:28:22,030 --> 00:28:24,080
I know you can't see
it up in the top, here

859
00:28:24,080 --> 00:28:27,795
but this is actually about
three milliseconds to five

860
00:28:27,795 --> 00:28:29,920
milliseconds to actually
draw the part of the page.

861
00:28:29,920 --> 00:28:32,020
And you can actually see
that as I'm scrolling,

862
00:28:32,020 --> 00:28:34,610
notice that there's
no red tiles.

863
00:28:34,610 --> 00:28:36,282
You don't see those
big red flashes.

864
00:28:36,282 --> 00:28:38,490
What that means is that this
entire page has actually

865
00:28:38,490 --> 00:28:40,720
been rasterized on the CPU
and uploaded to the GPU,

866
00:28:40,720 --> 00:28:42,890
and it's been cached in the GPU.

867
00:28:42,890 --> 00:28:44,540
And so as you're
scrolling up and down,

868
00:28:44,540 --> 00:28:46,320
the CPU doesn't
have to do any work.

869
00:28:46,320 --> 00:28:47,440
So this is what you want.

870
00:28:47,440 --> 00:28:49,770
You want no red blocks
going on in your page.

871
00:28:49,770 --> 00:28:50,330
All right.

872
00:28:50,330 --> 00:28:52,807
So let's do another
site here really quick.

873
00:28:52,807 --> 00:28:55,140
Because now I'm freaking out
that I only got 30 minutes.

874
00:28:55,140 --> 00:28:58,050
AUDIENCE: [INAUDIBLE].

875
00:28:58,050 --> 00:28:58,800
COLT MCANLIS: Yes.

876
00:28:58,800 --> 00:29:02,430
Oh, we're going all night.

877
00:29:02,430 --> 00:29:04,570
Let's just open
up every website.

878
00:29:04,570 --> 00:29:07,594
OK, so this is the one we
saw a little bit earlier.

879
00:29:07,594 --> 00:29:09,760
Sorry, I don't know if my
antics distracted you all.

880
00:29:09,760 --> 00:29:12,559
Let's reload this again.

881
00:29:12,559 --> 00:29:13,850
Let's see how the load time is.

882
00:29:13,850 --> 00:29:16,380
So notice on the top here
that it's about halfway.

883
00:29:16,380 --> 00:29:17,755
So this page hasn't
unloaded yet.

884
00:29:17,755 --> 00:29:19,755
Let's just be clear about
what we're looking at.

885
00:29:19,755 --> 00:29:21,024
This is an instant load.

886
00:29:21,024 --> 00:29:22,940
Now we've actually gotten
to the loading part.

887
00:29:22,940 --> 00:29:29,390

888
00:29:29,390 --> 00:29:32,290
If this is your
website, I'm sorry.

889
00:29:32,290 --> 00:29:34,660
Hopefully, you understand
there's work that needs to do.

890
00:29:34,660 --> 00:29:35,535
AUDIENCE: [INAUDIBLE]

891
00:29:35,535 --> 00:29:37,327

892
00:29:37,327 --> 00:29:38,410
COLT MCANLIS: It might be.

893
00:29:38,410 --> 00:29:39,822
Let's find out.

894
00:29:39,822 --> 00:29:41,530
So again, over here,
let's go to Inspect.

895
00:29:41,530 --> 00:29:42,865
I wonder if I can just
catch this midstream,

896
00:29:42,865 --> 00:29:44,820
if it'll just tell me
what that image is,

897
00:29:44,820 --> 00:29:48,030
or if I have to hit reload.

898
00:29:48,030 --> 00:29:49,160
It's still loading.

899
00:29:49,160 --> 00:29:52,490
OK, here, I'll hit Reload,
see what goes on here.

900
00:29:52,490 --> 00:29:53,350
Ooh.

901
00:29:53,350 --> 00:29:54,200
Oh, web fonts.

902
00:29:54,200 --> 00:29:56,830
OK, we'll take a look
at that in a second.

903
00:29:56,830 --> 00:29:58,010
OK, so I hit Reload.

904
00:29:58,010 --> 00:29:59,350
This is waiting to reload.

905
00:29:59,350 --> 00:30:02,052
So obviously, there's already
some problems with this site.

906
00:30:02,052 --> 00:30:03,760
Hopefully, someone in
here is going like,

907
00:30:03,760 --> 00:30:07,620
uh, please stop
clicking buttons.

908
00:30:07,620 --> 00:30:10,050
Please take my website off
of your screen, you angry,

909
00:30:10,050 --> 00:30:11,700
bald man.

910
00:30:11,700 --> 00:30:12,290
OK.

911
00:30:12,290 --> 00:30:14,400
Let's let see how
this is going here.

912
00:30:14,400 --> 00:30:16,300
So you can't see the screen.

913
00:30:16,300 --> 00:30:17,400
It's still loading.

914
00:30:17,400 --> 00:30:19,730
The font's just now appeared.

915
00:30:19,730 --> 00:30:21,770
Let's take a look at
what's going on here

916
00:30:21,770 --> 00:30:24,280
and see whether or not we can
discuss some of these items.

917
00:30:24,280 --> 00:30:28,140
So let's sort by size here.

918
00:30:28,140 --> 00:30:30,535
This is something I want
to let everybody know.

919
00:30:30,535 --> 00:30:32,910
This is the first thing I want
to point out on this site.

920
00:30:32,910 --> 00:30:34,250
This is a WOFF file.

921
00:30:34,250 --> 00:30:36,050
It's a web font.

922
00:30:36,050 --> 00:30:38,700
Round of applause if you're
using web fonts in your site.

923
00:30:38,700 --> 00:30:39,980
[APPLAUSE]

924
00:30:39,980 --> 00:30:40,880
COLT MCANLIS: Good.

925
00:30:40,880 --> 00:30:43,760
Please stop.

926
00:30:43,760 --> 00:30:46,290
Please, please stop.

927
00:30:46,290 --> 00:30:48,255
This is a &mdash; I don't
know if you saw this.

928
00:30:48,255 --> 00:30:49,380
Yeah, web fonts look great.

929
00:30:49,380 --> 00:30:50,046
They're awesome.

930
00:30:50,046 --> 00:30:51,930
This is 38K for that web font.

931
00:30:51,930 --> 00:30:54,824
And unfortunately, some
of these have been cached,

932
00:30:54,824 --> 00:30:57,240
so you can't actually see the
true size of a lot of these.

933
00:30:57,240 --> 00:30:59,989
But there's actually like five
or six web fonts on this page.

934
00:30:59,989 --> 00:31:01,780
So you guys are kind
of getting a bum deal.

935
00:31:01,780 --> 00:31:03,464
You're not seeing
how horrible this is.

936
00:31:03,464 --> 00:31:04,880
But basically,
here's what happens

937
00:31:04,880 --> 00:31:06,930
is when you've got
five web fonts,

938
00:31:06,930 --> 00:31:09,490
each one can be somewhere
between the range of 40K

939
00:31:09,490 --> 00:31:11,590
and like 90K for a font.

940
00:31:11,590 --> 00:31:14,600
That font is required
before text can actually

941
00:31:14,600 --> 00:31:17,240
be drawn to your screen.

942
00:31:17,240 --> 00:31:18,460
So pop quiz.

943
00:31:18,460 --> 00:31:20,890
What happens if you're
ready to draw text,

944
00:31:20,890 --> 00:31:23,440
and your CSS is down, and
your JavaScript is down,

945
00:31:23,440 --> 00:31:27,980
and your images are down,
but your WOFF isn't down yet?

946
00:31:27,980 --> 00:31:28,670
Good answer.

947
00:31:28,670 --> 00:31:29,450
I don't know.

948
00:31:29,450 --> 00:31:29,930
No one said anything.

949
00:31:29,930 --> 00:31:30,805
Good answer, nothing.

950
00:31:30,805 --> 00:31:31,540
Nothing happens.

951
00:31:31,540 --> 00:31:32,300
Chrome will do nothing.

952
00:31:32,300 --> 00:31:32,960
Chrome will block.

953
00:31:32,960 --> 00:31:33,580
Chrome will wait.

954
00:31:33,580 --> 00:31:35,720
Chrome will wait for every
single one of your WOFFs

955
00:31:35,720 --> 00:31:39,090
to come down before a
single character of text

956
00:31:39,090 --> 00:31:41,003
is drawn on your screen.

957
00:31:41,003 --> 00:31:44,101
AUDIENCE: Uh, it will
point at one WOFF.

958
00:31:44,101 --> 00:31:46,100
It will render all the
text that uses that WOFF.

959
00:31:46,100 --> 00:31:48,780
COLT MCANLIS: Jake
Archibald says I'm dumb.

960
00:31:48,780 --> 00:31:51,030
If that single WOFF is
visible, it'll render that one.

961
00:31:51,030 --> 00:31:52,440
Now Firefox will do it a
little bit differently.

962
00:31:52,440 --> 00:31:53,260
Basically, what
it'll do is it'll

963
00:31:53,260 --> 00:31:54,650
wait three seconds, right, Jake?

964
00:31:54,650 --> 00:31:54,960
AUDIENCE: Yeah.

965
00:31:54,960 --> 00:31:55,420
COLT MCANLIS: Yeah.

966
00:31:55,420 --> 00:31:56,260
It'll wait three seconds.

967
00:31:56,260 --> 00:31:57,343
Maybe you should continue.

968
00:31:57,343 --> 00:31:59,523
AUDIENCE: Yeah. [INAUDIBLE].

969
00:31:59,523 --> 00:32:01,481
COLT MCANLIS: I'm having
an awkward mic moment.

970
00:32:01,481 --> 00:32:03,064
Basically, what'll
happen with Firefox

971
00:32:03,064 --> 00:32:04,874
is it'll start the
request for the WOFF.

972
00:32:04,874 --> 00:32:06,790
If it hasn't been
downloaded in three seconds,

973
00:32:06,790 --> 00:32:10,540
it'll actually keep
allowing that to download,

974
00:32:10,540 --> 00:32:13,000
but it'll actually display
the font with a default.

975
00:32:13,000 --> 00:32:14,240
Like it'll just see Arial.

976
00:32:14,240 --> 00:32:15,850
So if you're actually
seeing this on Firefox,

977
00:32:15,850 --> 00:32:17,660
you'll see like three
seconds of nothing,

978
00:32:17,660 --> 00:32:19,980
and then you'll see Arial, and
then when the font comes in,

979
00:32:19,980 --> 00:32:22,313
you'll see it pop to whatever
the font's supposed to be.

980
00:32:22,313 --> 00:32:23,620
And so you see this flicker.

981
00:32:23,620 --> 00:32:24,190
I see it.

982
00:32:24,190 --> 00:32:26,600
You see it a lot on mobile,
because these mobile devices

983
00:32:26,600 --> 00:32:29,540
are actually 6x slower
in hardware, just

984
00:32:29,540 --> 00:32:32,069
across the board &mdash; probably
for at least another two years,

985
00:32:32,069 --> 00:32:34,485
depending on which hardware
manufacturer you're trending &mdash;

986
00:32:34,485 --> 00:32:35,984
than what you're
seeing on desktops.

987
00:32:35,984 --> 00:32:38,130
Not only is it slower to
download these things,

988
00:32:38,130 --> 00:32:40,710
but these WOFFs are actually
very complex spline paths

989
00:32:40,710 --> 00:32:43,630
that have to be interpreted by
these underpowered ARM chips

990
00:32:43,630 --> 00:32:44,260
as well.

991
00:32:44,260 --> 00:32:47,300
Anyone in here written
a software rasterizer?

992
00:32:47,300 --> 00:32:48,165
Cool.

993
00:32:48,165 --> 00:32:50,690
Spline paths are slow.

994
00:32:50,690 --> 00:32:53,530
Anyhow, WOFFs are bad,
and you should feel bad

995
00:32:53,530 --> 00:32:55,530
if you're using them in
your websites right now.

996
00:32:55,530 --> 00:32:57,850
Now, things are happening that
are trying to optimize this.

997
00:32:57,850 --> 00:32:58,890
I know that there's
people talking

998
00:32:58,890 --> 00:33:01,265
about different ways to compress
WOFFs and different ways

999
00:33:01,265 --> 00:33:03,450
to use these type of
fonts in different ways.

1000
00:33:03,450 --> 00:33:06,370
But please note that you have
them as part of your site,

1001
00:33:06,370 --> 00:33:08,100
you should feel bad.

1002
00:33:08,100 --> 00:33:10,977
Now let me see if I can &mdash;
can I Shift-Reload this?

1003
00:33:10,977 --> 00:33:12,230
I don't know.

1004
00:33:12,230 --> 00:33:13,940
I can't get the data from cache.

1005
00:33:13,940 --> 00:33:16,270
But we also see in here
a couple of these things,

1006
00:33:16,270 --> 00:33:17,400
and I can't show you this.

1007
00:33:17,400 --> 00:33:20,030
But these images are
actually a little bit larger

1008
00:33:20,030 --> 00:33:21,600
than they should be as well.

1009
00:33:21,600 --> 00:33:22,640
These are OK.

1010
00:33:22,640 --> 00:33:24,540
Was that Willie Nelson?

1011
00:33:24,540 --> 00:33:26,640
I don't know.

1012
00:33:26,640 --> 00:33:28,020
Again, there's another WOFF.

1013
00:33:28,020 --> 00:33:30,850
This PNG, where was
its header on that?

1014
00:33:30,850 --> 00:33:31,650
This one's a WebP.

1015
00:33:31,650 --> 00:33:32,560
Ooh, fantastic.

1016
00:33:32,560 --> 00:33:34,060
So this guy's
actually using a WebP.

1017
00:33:34,060 --> 00:33:36,300

1018
00:33:36,300 --> 00:33:36,800
Interesting.

1019
00:33:36,800 --> 00:33:37,510
I don't know what that's doing.

1020
00:33:37,510 --> 00:33:38,460
AUDIENCE: That was
the accept header.

1021
00:33:38,460 --> 00:33:40,418
COLT MCANLIS: That was
the accept header, yeah.

1022
00:33:40,418 --> 00:33:42,660
So at least a WebP
did come down.

1023
00:33:42,660 --> 00:33:46,210
However, we see that &mdash; let's
go down here &mdash; again, 124K.

1024
00:33:46,210 --> 00:33:47,990
So again, you guys are
getting the bad rap

1025
00:33:47,990 --> 00:33:51,980
because I'm not doing a
cached fresh reload on this.

1026
00:33:51,980 --> 00:33:53,900
But basically, this
site is using &mdash;

1027
00:33:53,900 --> 00:33:56,350
it's actually passing full
megabyte, two megabyte images

1028
00:33:56,350 --> 00:33:57,100
down.

1029
00:33:57,100 --> 00:33:59,695
It's got the WOFFs in the
direct path to rendering,

1030
00:33:59,695 --> 00:34:01,320
and so that's going
to take a long time

1031
00:34:01,320 --> 00:34:02,404
before text will show up.

1032
00:34:02,404 --> 00:34:04,570
In fact, the image will try
to progressively load in

1033
00:34:04,570 --> 00:34:06,050
before all the text does.

1034
00:34:06,050 --> 00:34:08,139
And this will annoy
your users a lot more.

1035
00:34:08,139 --> 00:34:09,831
So let's try to avoid that.

1036
00:34:09,831 --> 00:34:10,330
All right.

1037
00:34:10,330 --> 00:34:12,594
Let's try another website
here really quick.

1038
00:34:12,594 --> 00:34:15,250

1039
00:34:15,250 --> 00:34:17,210
Let me go over to this.

1040
00:34:17,210 --> 00:34:21,659
Is anyone sad yet about
the state of things?

1041
00:34:21,659 --> 00:34:23,440
Is anyone going
like, wow, I wonder

1042
00:34:23,440 --> 00:34:26,010
how my site does under
this type of scrutiny?

1043
00:34:26,010 --> 00:34:28,000
If so, then yay,
I'm doing my job.

1044
00:34:28,000 --> 00:34:31,321
I can get paid this week.

1045
00:34:31,321 --> 00:34:31,820
Cool.

1046
00:34:31,820 --> 00:34:33,469
That was actually pretty quick.

1047
00:34:33,469 --> 00:34:34,960
That actually wasn't that bad.

1048
00:34:34,960 --> 00:34:35,834
Let me do that again.

1049
00:34:35,834 --> 00:34:40,922

1050
00:34:40,922 --> 00:34:42,615
Yeah, that actually
wasn't that bad.

1051
00:34:42,615 --> 00:34:47,980
Here, let me see if I can
hard &mdash; load, load, load.

1052
00:34:47,980 --> 00:34:48,480
Good.

1053
00:34:48,480 --> 00:34:49,010
Cool, OK.

1054
00:34:49,010 --> 00:34:50,320
So this might be a good site.

1055
00:34:50,320 --> 00:34:51,250
Let's take a look at this one.

1056
00:34:51,250 --> 00:34:52,540
So we'll hit Inspect again.

1057
00:34:52,540 --> 00:34:53,265
We'll load it up.

1058
00:34:53,265 --> 00:34:56,020

1059
00:34:56,020 --> 00:34:56,770
Let's see here.

1060
00:34:56,770 --> 00:35:00,860
Scrolling actually seems
pretty smooth on this site.

1061
00:35:00,860 --> 00:35:03,220
Doesn't seem that bad.

1062
00:35:03,220 --> 00:35:06,189
We can move stuff
around pretty easily.

1063
00:35:06,189 --> 00:35:07,730
Let's take a look
at the Network tab.

1064
00:35:07,730 --> 00:35:08,688
Let's hit Reload again.

1065
00:35:08,688 --> 00:35:13,916

1066
00:35:13,916 --> 00:35:15,540
Again, unfortunately,
all of this stuff

1067
00:35:15,540 --> 00:35:16,748
is coming from the cache now.

1068
00:35:16,748 --> 00:35:19,248
I should've used
my other tablet.

1069
00:35:19,248 --> 00:35:21,360
Dot com, CSS, not that bad.

1070
00:35:21,360 --> 00:35:25,610
22K CSS, 27K CSS, 200K.

1071
00:35:25,610 --> 00:35:32,430
I don't like this 192K JPEG
that's only 920 by 300.

1072
00:35:32,430 --> 00:35:33,190
Notice this.

1073
00:35:33,190 --> 00:35:36,630
So this is 192K
for an image that

1074
00:35:36,630 --> 00:35:40,430
is a quarter of
the size of Putin.

1075
00:35:40,430 --> 00:35:42,740
Show of hands, who
knows what that means?

1076
00:35:42,740 --> 00:35:45,141
Yeah, not optimizing your JPEGs.

1077
00:35:45,141 --> 00:35:47,390
I think there's actually
some other bad examples here.

1078
00:35:47,390 --> 00:35:49,000
Here's another one, 240K.

1079
00:35:49,000 --> 00:35:52,909
Oh, oh, 240K, 920 by 300.

1080
00:35:52,909 --> 00:35:54,450
Does anyone off the
back of your hand

1081
00:35:54,450 --> 00:35:57,850
know what this is if it
were a raw image size?

1082
00:35:57,850 --> 00:36:03,445
So it's 920 times 300
times 24 bits per pixel?

1083
00:36:03,445 --> 00:36:04,070
Get back to me.

1084
00:36:04,070 --> 00:36:06,104
Jake'll give you some swag.

1085
00:36:06,104 --> 00:36:07,270
Oh, there's a Facebook icon.

1086
00:36:07,270 --> 00:36:09,010
Only 9K, yay.

1087
00:36:09,010 --> 00:36:10,370
Well, OK.

1088
00:36:10,370 --> 00:36:12,810
100 by 100 is 9K.

1089
00:36:12,810 --> 00:36:14,862
That seems a little
bit excessive, right?

1090
00:36:14,862 --> 00:36:17,320
That seems like there's actually
some bloat going on there.

1091
00:36:17,320 --> 00:36:19,361
I wonder if there's like
a negative JPEG encoder.

1092
00:36:19,361 --> 00:36:21,330
Make it larger.

1093
00:36:21,330 --> 00:36:25,340
By the way, if any of you are
going to be in San Francisco

1094
00:36:25,340 --> 00:36:27,500
next week or have a chance
or have the internet,

1095
00:36:27,500 --> 00:36:31,210
I think, definitely tune into my
talk I'm giving on compression

1096
00:36:31,210 --> 00:36:32,202
on the web.

1097
00:36:32,202 --> 00:36:34,160
And hopefully, if you've
seen my talk yesterday

1098
00:36:34,160 --> 00:36:37,140
about being scared of closures,
if you see my talk next week

1099
00:36:37,140 --> 00:36:39,480
on compression on the
web, hopefully compression

1100
00:36:39,480 --> 00:36:41,900
will scare you after
that, and you'll

1101
00:36:41,900 --> 00:36:44,530
trudge toward that
monster with a wary eye.

1102
00:36:44,530 --> 00:36:47,990
But anyhow, 100K, 100K
pixels, 3.9K in size.

1103
00:36:47,990 --> 00:36:51,160
So that actually seems a
little bit excessive there too.

1104
00:36:51,160 --> 00:36:53,200
Here's, again &mdash; those
are the same images.

1105
00:36:53,200 --> 00:36:54,470
Here's another one.

1106
00:36:54,470 --> 00:36:55,950
These are really large.

1107
00:36:55,950 --> 00:36:57,892
180K being sent to
my mobile device.

1108
00:36:57,892 --> 00:36:59,350
Now the reason this
loaded &mdash; again,

1109
00:36:59,350 --> 00:37:00,250
this loaded a little fast.

1110
00:37:00,250 --> 00:37:02,422
This is a bias because I've been
testing these things all day,

1111
00:37:02,422 --> 00:37:03,320
and this is coming from cache.

1112
00:37:03,320 --> 00:37:05,808
So you're not really feeling
as much pain as you should be.

1113
00:37:05,808 --> 00:37:08,016
AUDIENCE: If you go to the
bottom of the [INAUDIBLE],

1114
00:37:08,016 --> 00:37:10,890
you should be able
to disable the cache.

1115
00:37:10,890 --> 00:37:12,020
COLT MCANLIS: Beautiful.

1116
00:37:12,020 --> 00:37:14,085
All right, Jake
Archibald for the win.

1117
00:37:14,085 --> 00:37:15,210
Here, let's hit Reload now.

1118
00:37:15,210 --> 00:37:19,020

1119
00:37:19,020 --> 00:37:20,740
There we go.

1120
00:37:20,740 --> 00:37:22,341
Oh yeah.

1121
00:37:22,341 --> 00:37:23,960
Oh, feel it.

1122
00:37:23,960 --> 00:37:26,510
Feel it!

1123
00:37:26,510 --> 00:37:29,442
So awkward right now.

1124
00:37:29,442 --> 00:37:31,980
AUDIENCE: [INAUDIBLE] JPEGs.

1125
00:37:31,980 --> 00:37:34,020
COLT MCANLIS: They kind
of should be, yeah.

1126
00:37:34,020 --> 00:37:37,429
Oh, so &mdash; no one's hiding
their face right now,

1127
00:37:37,429 --> 00:37:39,470
so maybe the guy who put
this site in isn't here,

1128
00:37:39,470 --> 00:37:41,370
or you've got a
great poker face.

1129
00:37:41,370 --> 00:37:45,340
I will not bet
money against you.

1130
00:37:45,340 --> 00:37:47,526
OK.

1131
00:37:47,526 --> 00:37:48,900
AUDIENCE: Oh, then they shrink.

1132
00:37:48,900 --> 00:37:50,649
COLT MCANLIS: And then
they shrink, right?

1133
00:37:50,649 --> 00:37:52,460
So that's actually
a great point.

1134
00:37:52,460 --> 00:37:54,910
I'll bring this up
really quick, too.

1135
00:37:54,910 --> 00:37:58,060
How many of you have
responsive websites?

1136
00:37:58,060 --> 00:38:01,520
OK, you're doing it wrong.

1137
00:38:01,520 --> 00:38:02,980
Let me ask that in a better way.

1138
00:38:02,980 --> 00:38:04,600
How many of your
responsive websites

1139
00:38:04,600 --> 00:38:07,440
will actually resize the
image that you've been given?

1140
00:38:07,440 --> 00:38:10,130

1141
00:38:10,130 --> 00:38:10,630
Jake.

1142
00:38:10,630 --> 00:38:12,140
AUDIENCE: What do you
mean by resizing it?

1143
00:38:12,140 --> 00:38:13,598
COLT MCANLIS: You
got a CSS resize.

1144
00:38:13,598 --> 00:38:16,090
Are you changing the
properties of it?

1145
00:38:16,090 --> 00:38:19,890
If it comes down as 1024
by pixels by 1024 pixels,

1146
00:38:19,890 --> 00:38:23,060
and you display it as
900 pixels by 900 pixels,

1147
00:38:23,060 --> 00:38:25,292
or something like
that, anybody resizing?

1148
00:38:25,292 --> 00:38:27,000
You're telling me
every single one of you

1149
00:38:27,000 --> 00:38:30,630
gives exactly the right pixel
ratio for every single device

1150
00:38:30,630 --> 00:38:31,890
that loads your website.

1151
00:38:31,890 --> 00:38:33,080
Is that what I'm hearing?

1152
00:38:33,080 --> 00:38:34,460
All right, that guy's
hiding his face,

1153
00:38:34,460 --> 00:38:35,300
so I know he's doing it wrong.

1154
00:38:35,300 --> 00:38:35,730
You know what?

1155
00:38:35,730 --> 00:38:36,680
At least you're honest, brother.

1156
00:38:36,680 --> 00:38:38,200
I got some swag
for you after this.

1157
00:38:38,200 --> 00:38:41,770
So here's something a
lot of you don't know.

1158
00:38:41,770 --> 00:38:46,010
Decoding a JPEG or a PNG
or a WebP file actually

1159
00:38:46,010 --> 00:38:47,052
takes time from your CPU.

1160
00:38:47,052 --> 00:38:48,676
And in fact, you know
how I was talking

1161
00:38:48,676 --> 00:38:50,570
about those tiles
getting rasterized?

1162
00:38:50,570 --> 00:38:53,390
What happens is before a
tile can be rasterized,

1163
00:38:53,390 --> 00:38:55,160
Chrome actually has
to go decompress

1164
00:38:55,160 --> 00:38:58,010
all the images that
are in that tile.

1165
00:38:58,010 --> 00:39:01,390
Now when that tile is
evicted from the cache,

1166
00:39:01,390 --> 00:39:03,950
we're going to have to repaint
it again sometime later.

1167
00:39:03,950 --> 00:39:06,160
Well, lo and behold,
there's actually

1168
00:39:06,160 --> 00:39:08,210
a texture decompression
cache as well.

1169
00:39:08,210 --> 00:39:11,030
So there's a chance, a very
high, high, high chance

1170
00:39:11,030 --> 00:39:15,770
on mobile devices, that we'll
actually decompress a JPEG file

1171
00:39:15,770 --> 00:39:20,090
and then have to resize the
uncompressed version of it.

1172
00:39:20,090 --> 00:39:22,590
So you're actually getting full
32-bit pixels actually being

1173
00:39:22,590 --> 00:39:25,130
resized from 1024 to 512.

1174
00:39:25,130 --> 00:39:27,520
And then the next time you
have to render that image,

1175
00:39:27,520 --> 00:39:30,510
you have to decompress
it and resize it again.

1176
00:39:30,510 --> 00:39:32,870
So if an image is split
between two tiles,

1177
00:39:32,870 --> 00:39:35,460
you can run into a
very awkward situation

1178
00:39:35,460 --> 00:39:39,040
where you have to decode and
resize that image for each tile

1179
00:39:39,040 --> 00:39:41,680
that it's split in.

1180
00:39:41,680 --> 00:39:45,360
So if you're resizing your
images dynamically right now,

1181
00:39:45,360 --> 00:39:48,051
this could be a
problem for your site.

1182
00:39:48,051 --> 00:39:49,050
Hopefully, some of you &mdash;

1183
00:39:49,050 --> 00:39:51,425
AUDIENCE: [INAUDIBLE], should
we not do dynamic websites?

1184
00:39:51,425 --> 00:39:53,755

1185
00:39:53,755 --> 00:39:55,630
COLT MCANLIS: Save the
questions for the end.

1186
00:39:55,630 --> 00:39:55,720
AUDIENCE: OK, sorry.

1187
00:39:55,720 --> 00:39:56,290
COLT MCANLIS: I
said it to that guy.

1188
00:39:56,290 --> 00:39:58,150
I gotta say it to you, too.

1189
00:39:58,150 --> 00:40:00,066
Was that because I
called you Forecastio?

1190
00:40:00,066 --> 00:40:00,566
OK.

1191
00:40:00,566 --> 00:40:01,522
That's all right.

1192
00:40:01,522 --> 00:40:03,835
Much love.

1193
00:40:03,835 --> 00:40:05,210
Anyhow, so I think
we kind of see

1194
00:40:05,210 --> 00:40:07,250
that this website
has some issues.

1195
00:40:07,250 --> 00:40:09,250
And most of it is
on the Network tab.

1196
00:40:09,250 --> 00:40:13,610
Let me go ahead and turn
on continuous show paint

1197
00:40:13,610 --> 00:40:17,260
rectangles as well, because
I want to show this off too.

1198
00:40:17,260 --> 00:40:18,740
So see that red rectangle?

1199
00:40:18,740 --> 00:40:19,890
So you can kind of
see this little one.

1200
00:40:19,890 --> 00:40:20,760
Let me show it on
the screen here.

1201
00:40:20,760 --> 00:40:22,220
You can see this will pop it up.

1202
00:40:22,220 --> 00:40:24,550
But watch this red rectangle
happen full screen.

1203
00:40:24,550 --> 00:40:25,050
Did you

1204
00:40:25,050 --> 00:40:25,990
See that?

1205
00:40:25,990 --> 00:40:27,790
See that again?

1206
00:40:27,790 --> 00:40:28,800
Poom, poom, poomp.

1207
00:40:28,800 --> 00:40:29,810
Poom, poom, poom.

1208
00:40:29,810 --> 00:40:32,150
I see this almost on every
single site on this list.

1209
00:40:32,150 --> 00:40:34,070
Basically, they've
got a marquee on top.

1210
00:40:34,070 --> 00:40:36,380
And that marquee,
for some reason,

1211
00:40:36,380 --> 00:40:40,090
is actually invalidating the
entire page below it as well.

1212
00:40:40,090 --> 00:40:44,030
So the actual div that's
expanding this thing that's

1213
00:40:44,030 --> 00:40:48,334
getting repainted is touching
every single pixel on the page.

1214
00:40:48,334 --> 00:40:50,750
Which means that even sitting
here doing nothing, actually

1215
00:40:50,750 --> 00:40:52,530
the CPUs just sitting
here spinning and spinning

1216
00:40:52,530 --> 00:40:54,180
and spinning and spinning
and working and working.

1217
00:40:54,180 --> 00:40:56,910
And that's actually going to
make scrolling not as smooth

1218
00:40:56,910 --> 00:40:57,570
as possible.

1219
00:40:57,570 --> 00:40:58,780
And you can't see it.

1220
00:40:58,780 --> 00:41:00,160
I can feel it a little bit here.

1221
00:41:00,160 --> 00:41:01,891
This is actually a
pretty janky website.

1222
00:41:01,891 --> 00:41:04,390
Up at the top, it says that our
average frame rate right now

1223
00:41:04,390 --> 00:41:08,870
is about 18 frames a
second, 17 frames a second.

1224
00:41:08,870 --> 00:41:11,360
I can actually really
feel this on mobile.

1225
00:41:11,360 --> 00:41:12,440
Now I have 30 minutes.

1226
00:41:12,440 --> 00:41:13,220
Yes.

1227
00:41:13,220 --> 00:41:15,767
15 minutes of filler.

1228
00:41:15,767 --> 00:41:17,100
So obviously, this is a problem.

1229
00:41:17,100 --> 00:41:18,780
And because when I see
something dynamic like this,

1230
00:41:18,780 --> 00:41:21,380
I generally think that memory
is going wonky as well.

1231
00:41:21,380 --> 00:41:23,850
So let's go ahead and do a
timeline and hit Record again.

1232
00:41:23,850 --> 00:41:25,090
Let's see what's going on.

1233
00:41:25,090 --> 00:41:28,880

1234
00:41:28,880 --> 00:41:30,550
We've seen this before, right?

1235
00:41:30,550 --> 00:41:32,757
Same pattern we saw
with the other site.

1236
00:41:32,757 --> 00:41:35,340
We see just kind of memory, just
being allocated and allocated

1237
00:41:35,340 --> 00:41:37,079
and allocated and allocated.

1238
00:41:37,079 --> 00:41:39,120
Let's hit Stop and see if
we can drill in and see

1239
00:41:39,120 --> 00:41:39,953
what the culprit is.

1240
00:41:39,953 --> 00:41:42,100
Again, I know nothing
of these websites.

1241
00:41:42,100 --> 00:41:44,270
I'm just a primitive
C++ developer.

1242
00:41:44,270 --> 00:41:47,320
Your web development
scares and confuses me.

1243
00:41:47,320 --> 00:41:51,971
So let's go to Profile,
and let's do a record heap

1244
00:41:51,971 --> 00:41:52,470
allocation.

1245
00:41:52,470 --> 00:41:53,535
So we can see that
memory's a problem.

1246
00:41:53,535 --> 00:41:55,076
Now let's dig in a
little bit deeper.

1247
00:41:55,076 --> 00:41:57,270
Let's record a heap allocation.

1248
00:41:57,270 --> 00:41:57,770
OK.

1249
00:41:57,770 --> 00:41:59,770
Again, I'm not touching
anything on the website,

1250
00:41:59,770 --> 00:42:02,900
and memory, 10K, 5K, 10K, 5K.

1251
00:42:02,900 --> 00:42:05,570
Let's hit Stop.

1252
00:42:05,570 --> 00:42:08,690
Let's try to drill in
here on one of these guys.

1253
00:42:08,690 --> 00:42:09,860
Let's just look at this one.

1254
00:42:09,860 --> 00:42:11,080
Compiled code.

1255
00:42:11,080 --> 00:42:13,550
Looks familiar again.

1256
00:42:13,550 --> 00:42:14,470
Oh, wow.

1257
00:42:14,470 --> 00:42:17,510
It's almost like we've seen
this exact three lines of code

1258
00:42:17,510 --> 00:42:18,660
before.

1259
00:42:18,660 --> 00:42:20,369
So again, I know
nothing of this website.

1260
00:42:20,369 --> 00:42:22,243
I haven't even looked
at the source code yet.

1261
00:42:22,243 --> 00:42:24,540
But something in here is
already passing a closure

1262
00:42:24,540 --> 00:42:26,860
to a set timeout &mdash; or
a set interval, sorry.

1263
00:42:26,860 --> 00:42:28,746
Set timeout is a different
operating system.

1264
00:42:28,746 --> 00:42:30,870
But there's some other
stuff going on in here, too.

1265
00:42:30,870 --> 00:42:33,390
It looks like some other
relocation info is going on.

1266
00:42:33,390 --> 00:42:35,160
I don't see any
injections, which is good.

1267
00:42:35,160 --> 00:42:37,890
So no one's calling eval,
because otherwise we'd probably

1268
00:42:37,890 --> 00:42:40,556
see this 6K worth of
information &mdash; someone laughed.

1269
00:42:40,556 --> 00:42:41,430
That's probably good.

1270
00:42:41,430 --> 00:42:43,400
Eval is bad, and
you should feel bad.

1271
00:42:43,400 --> 00:42:45,810
So if you're using closures
and eval, just get out.

1272
00:42:45,810 --> 00:42:49,010
Just get out, dude.

1273
00:42:49,010 --> 00:42:50,510
I'm going to see a tweet.

1274
00:42:50,510 --> 00:42:55,252
Colt says, use set interval with
closure and eval #permatters.

1275
00:42:55,252 --> 00:42:57,105
Yeah, with a WOFF,
inside of a WOFF.

1276
00:42:57,105 --> 00:42:58,730
By the way, I saw
someone the other day

1277
00:42:58,730 --> 00:43:01,135
that actually had a WOFF
embedded inside of a CSS.

1278
00:43:01,135 --> 00:43:02,260
And I was like, OK.

1279
00:43:02,260 --> 00:43:04,180
That's just a bad idea
from all principles.

1280
00:43:04,180 --> 00:43:08,001
So the CSS gets bloated, and
then the WOFF has to be &mdash;

1281
00:43:08,001 --> 00:43:10,000
Anyhow, we see that this
other part is an array.

1282
00:43:10,000 --> 00:43:11,284
Now this is interesting.

1283
00:43:11,284 --> 00:43:12,700
So when you see
this array object,

1284
00:43:12,700 --> 00:43:14,720
this means this is an
actual JavaScript array that

1285
00:43:14,720 --> 00:43:16,060
is allocated
somewhere on the page.

1286
00:43:16,060 --> 00:43:17,559
And you can see
some of it is coming

1287
00:43:17,559 --> 00:43:20,530
from internal with V8,
the code deopt data.

1288
00:43:20,530 --> 00:43:23,230
But otherwise, the relocation
info, here's like a null.

1289
00:43:23,230 --> 00:43:26,190
A null array is just being
created for no reason,

1290
00:43:26,190 --> 00:43:28,170
and no items are
being added to it.

1291
00:43:28,170 --> 00:43:30,560
We can go down here
to string, and we

1292
00:43:30,560 --> 00:43:33,970
can see a GM string has
been created somewhere.

1293
00:43:33,970 --> 00:43:34,870
Let's scroll this up.

1294
00:43:34,870 --> 00:43:35,995
Do we have any information?

1295
00:43:35,995 --> 00:43:37,119
AUDIENCE: [INAUDIBLE]

1296
00:43:37,119 --> 00:43:37,910
COLT MCANLIS: Yeah.

1297
00:43:37,910 --> 00:43:39,100
Yeah, that's what's
going on right here.

1298
00:43:39,100 --> 00:43:41,050
So there's regex
occurring somewhere.

1299
00:43:41,050 --> 00:43:41,967
A GM is being created.

1300
00:43:41,967 --> 00:43:43,674
And then there's some
system level stuff.

1301
00:43:43,674 --> 00:43:45,320
This is mostly
dragons and krakens

1302
00:43:45,320 --> 00:43:47,334
and other things going
on under the hood.

1303
00:43:47,334 --> 00:43:48,750
If we expand this
a little bit, we

1304
00:43:48,750 --> 00:43:52,640
can actually slide over and
see, again, compiled code.

1305
00:43:52,640 --> 00:43:54,120
There's another relocation info.

1306
00:43:54,120 --> 00:43:55,881
Let's see if there's
a deopt this time.

1307
00:43:55,881 --> 00:43:56,380
No?

1308
00:43:56,380 --> 00:43:58,447
That makes sense because
the spike's not as high.

1309
00:43:58,447 --> 00:43:59,280
See around this guy.

1310
00:43:59,280 --> 00:44:01,250
Compiled code, relocation.

1311
00:44:01,250 --> 00:44:02,570
Yep, spike's not as high again.

1312
00:44:02,570 --> 00:44:03,700
So again, deopt
is actually what's

1313
00:44:03,700 --> 00:44:04,950
causing the memory spike here.

1314
00:44:04,950 --> 00:44:07,490
And then of course, that's
causing inflation in our heap.

1315
00:44:07,490 --> 00:44:08,830
So we can actually see
there's a couple problems.

1316
00:44:08,830 --> 00:44:10,730
Obviously, they're sending
too much data down the pipe.

1317
00:44:10,730 --> 00:44:11,896
This page is loading slowly.

1318
00:44:11,896 --> 00:44:13,100
The person should feel bad.

1319
00:44:13,100 --> 00:44:15,016
They've also got some
timers and some closures

1320
00:44:15,016 --> 00:44:17,000
and some memory leak
issues that are causing

1321
00:44:17,000 --> 00:44:18,560
some friction with their users.

1322
00:44:18,560 --> 00:44:19,695
Let's load another site.

1323
00:44:19,695 --> 00:44:24,406

1324
00:44:24,406 --> 00:44:25,310
Here we go.

1325
00:44:25,310 --> 00:44:27,620
Try this one.

1326
00:44:27,620 --> 00:44:29,993
Chrome always, thank you.

1327
00:44:29,993 --> 00:44:31,660
All right, So
let's see this one.

1328
00:44:31,660 --> 00:44:33,451
Who thinks this is
going to be a fast site?

1329
00:44:33,451 --> 00:44:34,400
Show of hands.

1330
00:44:34,400 --> 00:44:35,700
No hands.

1331
00:44:35,700 --> 00:44:36,630
Good job.

1332
00:44:36,630 --> 00:44:38,130
You win.

1333
00:44:38,130 --> 00:44:39,720
I like the spinner.

1334
00:44:39,720 --> 00:44:41,465
We're trying to load.

1335
00:44:41,465 --> 00:44:43,840
We're letting you know that
we don't know how to do this.

1336
00:44:43,840 --> 00:44:44,390
Oh, sorry.

1337
00:44:44,390 --> 00:44:45,200
That was below the belt.

1338
00:44:45,200 --> 00:44:45,816
Oh, I'm sorry.

1339
00:44:45,816 --> 00:44:46,315
I'm sorry.

1340
00:44:46,315 --> 00:44:50,140
[LAUGHTER]

1341
00:44:50,140 --> 00:44:51,240
COLT MCANLIS: I'm sorry.

1342
00:44:51,240 --> 00:44:52,190
I thought it was a good idea.

1343
00:44:52,190 --> 00:44:53,110
We see it in Gmail.

1344
00:44:53,110 --> 00:44:54,976
I don't know.

1345
00:44:54,976 --> 00:44:56,350
It's kind of like,
hey, we're not

1346
00:44:56,350 --> 00:44:58,880
ready to figure out how
to stream content yet.

1347
00:44:58,880 --> 00:44:59,600
We saw load.

1348
00:44:59,600 --> 00:45:00,210
That was good.

1349
00:45:00,210 --> 00:45:01,415
So let's do this again.

1350
00:45:01,415 --> 00:45:04,020
Or actually, let
me show &mdash; scrolling

1351
00:45:04,020 --> 00:45:06,796
doesn't seem that bad.

1352
00:45:06,796 --> 00:45:09,510
Let's click on something.

1353
00:45:09,510 --> 00:45:10,760
That was actually pretty fast.

1354
00:45:10,760 --> 00:45:12,590
That was actually
a little too fast.

1355
00:45:12,590 --> 00:45:13,620
Hold on.

1356
00:45:13,620 --> 00:45:15,090
Wait a minute.

1357
00:45:15,090 --> 00:45:16,150
Let me go back.

1358
00:45:16,150 --> 00:45:17,200
OK, I'm back [INAUDIBLE].

1359
00:45:17,200 --> 00:45:18,030
Let me click on something else.

1360
00:45:18,030 --> 00:45:19,014
Like, trust no one.

1361
00:45:19,014 --> 00:45:19,930
I don't trust anybody.

1362
00:45:19,930 --> 00:45:22,247

1363
00:45:22,247 --> 00:45:24,580
Wow, that actually loaded a
lot faster on the main site.

1364
00:45:24,580 --> 00:45:26,102
Let's drill in here.

1365
00:45:26,102 --> 00:45:26,602
Hold on.

1366
00:45:26,602 --> 00:45:27,546
AUDIENCE: [INAUDIBLE].

1367
00:45:27,546 --> 00:45:30,230
COLT MCANLIS: No, no.

1368
00:45:30,230 --> 00:45:31,550
Dude, you're messing it up.

1369
00:45:31,550 --> 00:45:33,674

1370
00:45:33,674 --> 00:45:34,965
Jake, who's got the microphone?

1371
00:45:34,965 --> 00:45:36,120
AUDIENCE: I'm sorry.

1372
00:45:36,120 --> 00:45:39,350
COLT MCANLIS: I didn't
interrupt your talk.

1373
00:45:39,350 --> 00:45:40,960
So let's take a
look at this here.

1374
00:45:40,960 --> 00:45:43,050
So I'm going to
go to Network tab,

1375
00:45:43,050 --> 00:45:44,880
and I'm going to hit
Reload again here.

1376
00:45:44,880 --> 00:45:46,140
Boom.

1377
00:45:46,140 --> 00:45:47,680
We're going to take
a look at this.

1378
00:45:47,680 --> 00:45:48,570
Let's see what's going on.

1379
00:45:48,570 --> 00:45:49,528
So it was really weird.

1380
00:45:49,528 --> 00:45:50,952
The main page loaded slow.

1381
00:45:50,952 --> 00:45:51,660
That was awkward.

1382
00:45:51,660 --> 00:45:54,470
But then all subsequent
clicks loaded actually really,

1383
00:45:54,470 --> 00:45:56,599
really, really
fast, which tells us

1384
00:45:56,599 --> 00:45:58,140
if you can't get
the main page right,

1385
00:45:58,140 --> 00:45:59,940
why are you getting
the sub clicks right?

1386
00:45:59,940 --> 00:46:01,230
That's kind of awkward.

1387
00:46:01,230 --> 00:46:02,480
So we're still loading.

1388
00:46:02,480 --> 00:46:03,650
We're still loading.

1389
00:46:03,650 --> 00:46:04,570
We're still loading.

1390
00:46:04,570 --> 00:46:06,130
Again, I always
sort by size, right?

1391
00:46:06,130 --> 00:46:09,130
Because I'm a big dude
who says that memory

1392
00:46:09,130 --> 00:46:12,260
is where the performance
problems are.

1393
00:46:12,260 --> 00:46:16,801
We can actually see
that they're loading &mdash;

1394
00:46:16,801 --> 00:46:19,420
and I'll kind of give
away the punch line here.

1395
00:46:19,420 --> 00:46:23,790
But these images were on the
sub pages, not the main page.

1396
00:46:23,790 --> 00:46:27,020
But they're being
loaded on the main page.

1397
00:46:27,020 --> 00:46:28,094
Anyone figure it out yet?

1398
00:46:28,094 --> 00:46:29,760
Basically, what they're
doing is they're

1399
00:46:29,760 --> 00:46:32,450
loading all of the images
for all of the articles

1400
00:46:32,450 --> 00:46:36,730
that you would click to before
the main page is loaded.

1401
00:46:36,730 --> 00:46:38,487
So they're basically
trading off.

1402
00:46:38,487 --> 00:46:40,070
They're saying, your
initial load time

1403
00:46:40,070 --> 00:46:41,945
is going to be really
crummy, but every click

1404
00:46:41,945 --> 00:46:43,490
after that's going to be golden.

1405
00:46:43,490 --> 00:46:45,948
So they're kind of giving up
that initial three second load

1406
00:46:45,948 --> 00:46:47,867
time to get one second
load times later.

1407
00:46:47,867 --> 00:46:49,950
I don't know how that &mdash;
maybe that's a discussion.

1408
00:46:49,950 --> 00:46:51,200
Again, here's a WOFF.

1409
00:46:51,200 --> 00:46:53,250
Anyone like WOFFs now?

1410
00:46:53,250 --> 00:46:54,431
Answer should be no.

1411
00:46:54,431 --> 00:46:55,930
But yeah, this is
really interesting

1412
00:46:55,930 --> 00:46:56,930
that we're seeing
some of these images.

1413
00:46:56,930 --> 00:46:58,388
Let me see if I
can sort this again

1414
00:46:58,388 --> 00:47:01,970
and see if we can't get
better &mdash; here's another PNG.

1415
00:47:01,970 --> 00:47:03,490
Again, this is not
on the main page.

1416
00:47:03,490 --> 00:47:04,502
So let me hit Back here.

1417
00:47:04,502 --> 00:47:06,710
And let me, again, let's
show you the main page here.

1418
00:47:06,710 --> 00:47:09,350

1419
00:47:09,350 --> 00:47:11,160
Even clicking Back
takes some time.

1420
00:47:11,160 --> 00:47:14,170

1421
00:47:14,170 --> 00:47:16,990
No?

1422
00:47:16,990 --> 00:47:19,350
Backie?

1423
00:47:19,350 --> 00:47:20,292
No, I guess not.

1424
00:47:20,292 --> 00:47:21,500
AUDIENCE: You can't go there.

1425
00:47:21,500 --> 00:47:23,510
COLT MCANLIS: We're stuck now.

1426
00:47:23,510 --> 00:47:25,170
There we go.

1427
00:47:25,170 --> 00:47:26,760
So yeah, notice this right here.

1428
00:47:26,760 --> 00:47:28,810
So this was one of the
last things I clicked on,

1429
00:47:28,810 --> 00:47:30,184
and they have a
little drop down.

1430
00:47:30,184 --> 00:47:33,700
So basically each one of
these items, the images

1431
00:47:33,700 --> 00:47:37,580
and the extra content is
loaded in the main page, not

1432
00:47:37,580 --> 00:47:38,449
the subsequent page.

1433
00:47:38,449 --> 00:47:40,990
We're kind of seeing that break
down in a lot of these charts

1434
00:47:40,990 --> 00:47:41,490
here.

1435
00:47:41,490 --> 00:47:44,130

1436
00:47:44,130 --> 00:47:47,950
So they have a couple lower
res versions here, too.

1437
00:47:47,950 --> 00:47:51,830
So remember when that 100 pixel
by 100 pixel Facebook icon

1438
00:47:51,830 --> 00:47:53,000
was 9K?

1439
00:47:53,000 --> 00:47:55,430
Here's a 320 by 180 that's 10K.

1440
00:47:55,430 --> 00:47:57,781
So again, don't trust
your Facebook icons.

1441
00:47:57,781 --> 00:47:59,530
I would like to say,
don't trust Facebook,

1442
00:47:59,530 --> 00:48:01,280
but I'm not allowed
to say that on camera.

1443
00:48:01,280 --> 00:48:03,090
Shit.

1444
00:48:03,090 --> 00:48:04,980
Sorry.

1445
00:48:04,980 --> 00:48:06,170
Again, perfect.

1446
00:48:06,170 --> 00:48:09,010
Here's a 320 by 180
that's exactly 9.1K.

1447
00:48:09,010 --> 00:48:11,160
So again, I think all of
you should be questioning

1448
00:48:11,160 --> 00:48:13,060
how big your images
are, but I think

1449
00:48:13,060 --> 00:48:15,490
this Quartz site is actually
kind of an interesting case

1450
00:48:15,490 --> 00:48:17,680
study because they've
definitely traded off

1451
00:48:17,680 --> 00:48:21,725
one type of load time for
another type of load time.

1452
00:48:21,725 --> 00:48:24,390
And I'm not really
sure why or where

1453
00:48:24,390 --> 00:48:26,726
the justifications of that are.

1454
00:48:26,726 --> 00:48:28,100
But I think we
can definitely all

1455
00:48:28,100 --> 00:48:30,470
agree that the 20 years
that we've had on the web

1456
00:48:30,470 --> 00:48:33,636
have all kind of accumulated
that the initial load time is

1457
00:48:33,636 --> 00:48:35,760
pretty much the most
important thing because that's

1458
00:48:35,760 --> 00:48:37,380
the first thing your user feels.

1459
00:48:37,380 --> 00:48:39,796
None of you have seen this
site except for the one guy who

1460
00:48:39,796 --> 00:48:42,090
submitted it, and all of you
felt the pain of this site

1461
00:48:42,090 --> 00:48:44,056
loading for me hitting a button.

1462
00:48:44,056 --> 00:48:46,430
And it doesn't matter how much
the clicks after that are.

1463
00:48:46,430 --> 00:48:48,980
Most of us would have left the
site before we got to that.

1464
00:48:48,980 --> 00:48:50,250
Let me go over here, too.

1465
00:48:50,250 --> 00:48:51,300
I want to show this.

1466
00:48:51,300 --> 00:48:54,770
So notice this &mdash;
oh, I moved now.

1467
00:48:54,770 --> 00:48:57,030
But this YouTube image here.

1468
00:48:57,030 --> 00:48:58,490
So if I click this
button, you'll

1469
00:48:58,490 --> 00:49:01,935
see the red boxes again
kind of show up here.

1470
00:49:01,935 --> 00:49:05,720
So we can actually see that the
video &mdash; that part of the page

1471
00:49:05,720 --> 00:49:08,229
is being re-rendered.

1472
00:49:08,229 --> 00:49:10,270
So you can see again that
it's showing that the &mdash;

1473
00:49:10,270 --> 00:49:10,510
[VIDEO PLAYBACK]

1474
00:49:10,510 --> 00:49:11,320
COLT MCANLIS: Nope.

1475
00:49:11,320 --> 00:49:11,820
Don't care.

1476
00:49:11,820 --> 00:49:13,150
Don't care.

1477
00:49:13,150 --> 00:49:14,140
Nope, done.

1478
00:49:14,140 --> 00:49:15,210
Stop.

1479
00:49:15,210 --> 00:49:16,270
Stop.

1480
00:49:16,270 --> 00:49:17,620
Let me click.

1481
00:49:17,620 --> 00:49:18,224
Done.

1482
00:49:18,224 --> 00:49:19,640
What I'd really
like to show here,

1483
00:49:19,640 --> 00:49:21,800
and this isn't really showing
up on the main screen,

1484
00:49:21,800 --> 00:49:22,383
and I'm sorry.

1485
00:49:22,383 --> 00:49:23,890
But can anyone see
this orange line

1486
00:49:23,890 --> 00:49:25,200
right here, this orange line?

1487
00:49:25,200 --> 00:49:26,870
So one of the other
interesting things,

1488
00:49:26,870 --> 00:49:29,670
there's a talk that I gave at
Google I/O this year on this.

1489
00:49:29,670 --> 00:49:33,630
It's called "Web Page Design
with the GPU in Mind."

1490
00:49:33,630 --> 00:49:36,390
So what happens is
certain elements on a page

1491
00:49:36,390 --> 00:49:38,460
are kind of &mdash; imagine
your page is a plane,

1492
00:49:38,460 --> 00:49:40,251
and all of your images
and all of your text

1493
00:49:40,251 --> 00:49:41,486
exist on this plane.

1494
00:49:41,486 --> 00:49:42,860
Some of those
things are actually

1495
00:49:42,860 --> 00:49:46,400
propagated to its own plane so
that the web page can actually

1496
00:49:46,400 --> 00:49:49,420
scroll in the background,
and this other plane

1497
00:49:49,420 --> 00:49:51,310
can actually scroll
relative to it.

1498
00:49:51,310 --> 00:49:53,110
So this is relative
scrolling concept.

1499
00:49:53,110 --> 00:49:56,990
Let me actually show you
this on a big screen here.

1500
00:49:56,990 --> 00:49:58,840
Let me load up HTML5 Rocks.

1501
00:49:58,840 --> 00:50:01,660

1502
00:50:01,660 --> 00:50:06,070
And let's &mdash; nope, I
typed in the wrong thing.

1503
00:50:06,070 --> 00:50:06,880
Because I can type.

1504
00:50:06,880 --> 00:50:11,750

1505
00:50:11,750 --> 00:50:12,625
Who's on my internet?

1506
00:50:12,625 --> 00:50:17,580

1507
00:50:17,580 --> 00:50:21,400
Watch my Wi-Fi go down now.

1508
00:50:21,400 --> 00:50:22,750
We'll try that.

1509
00:50:22,750 --> 00:50:24,140
There we go.

1510
00:50:24,140 --> 00:50:27,330
So I'm going to pick this,
just a random article

1511
00:50:27,330 --> 00:50:30,130
with some random guy on it.

1512
00:50:30,130 --> 00:50:31,380
Some random, good-looking guy.

1513
00:50:31,380 --> 00:50:32,754
I think he's pretty
good-looking.

1514
00:50:32,754 --> 00:50:34,890
Bald is beautiful, I hear.

1515
00:50:34,890 --> 00:50:36,700
So let's go ahead
and turn on &mdash; this

1516
00:50:36,700 --> 00:50:37,880
is Chrome DevTools
on a desktop site.

1517
00:50:37,880 --> 00:50:39,588
I know I wasn't going
to talk about this,

1518
00:50:39,588 --> 00:50:42,520
but let's do force accelerated
and show composite layer

1519
00:50:42,520 --> 00:50:43,020
borders.

1520
00:50:43,020 --> 00:50:44,960
So turning on layer
borders here shows us

1521
00:50:44,960 --> 00:50:46,160
what we're seeing normally.

1522
00:50:46,160 --> 00:50:49,230
The first thing you see is
that the blue lines here

1523
00:50:49,230 --> 00:50:51,280
actually represent the
tiling of the page.

1524
00:50:51,280 --> 00:50:53,310
And this orange line
actually represents

1525
00:50:53,310 --> 00:50:55,310
something that's been
promoted to its own layer.

1526
00:50:55,310 --> 00:50:57,460
So how many of you
are using translateZ?

1527
00:50:57,460 --> 00:51:00,490
TranslateZ, translate3d,
this is the hardware

1528
00:51:00,490 --> 00:51:03,030
accelerated fast path,
the silver bullet that

1529
00:51:03,030 --> 00:51:04,870
makes your web fast
because you're suddenly

1530
00:51:04,870 --> 00:51:06,550
using the GPU on the web.

1531
00:51:06,550 --> 00:51:07,984
It's so amazing.

1532
00:51:07,984 --> 00:51:09,400
Actually, that's
not how it works.

1533
00:51:09,400 --> 00:51:12,190
What happens is when you use
translateZ or translate3d,

1534
00:51:12,190 --> 00:51:14,830
you're actually promoting
these pieces of content

1535
00:51:14,830 --> 00:51:15,780
to its own plane.

1536
00:51:15,780 --> 00:51:17,655
And this is actually a
separate set of tiles.

1537
00:51:17,655 --> 00:51:19,760
So remember how I said
the GPU will actually

1538
00:51:19,760 --> 00:51:21,320
scroll your tiles on the screen?

1539
00:51:21,320 --> 00:51:23,160
When you actually
use translateZ,

1540
00:51:23,160 --> 00:51:25,917
you get another layer that
the GPU also controls.

1541
00:51:25,917 --> 00:51:28,500
Now I'm going to see if I can
do this because for some reason,

1542
00:51:28,500 --> 00:51:31,930
we get paused in the
debug &mdash; too much clicking.

1543
00:51:31,930 --> 00:51:38,190
So as I scroll here, notice
how these objects on the side &mdash;

1544
00:51:38,190 --> 00:51:38,820
watch this.

1545
00:51:38,820 --> 00:51:41,640
The table of contents
has not orange, right?

1546
00:51:41,640 --> 00:51:43,360
And so once it gets
to a certain part,

1547
00:51:43,360 --> 00:51:45,270
it actually gets promoted
to its own layer.

1548
00:51:45,270 --> 00:51:49,550
The orange border represents
different layers in GPU memory.

1549
00:51:49,550 --> 00:51:51,150
And then as I scroll
down the page,

1550
00:51:51,150 --> 00:51:52,390
they actually stay static.

1551
00:51:52,390 --> 00:51:54,899
Any time you have relative
scrolling content on your page,

1552
00:51:54,899 --> 00:51:56,690
you're actually going
to want to promote it

1553
00:51:56,690 --> 00:51:58,900
with this translateZ
or translate3d.

1554
00:51:58,900 --> 00:52:01,240
Now beware that this actually
puts a lot of pressure

1555
00:52:01,240 --> 00:52:01,841
on your GPU.

1556
00:52:01,841 --> 00:52:03,340
So for all of you
who are just going

1557
00:52:03,340 --> 00:52:06,222
to start putting translateZ
on every part of your pagee &mdash;

1558
00:52:06,222 --> 00:52:07,680
we saw this happen
a lot because it

1559
00:52:07,680 --> 00:52:09,240
was supposed to be
a silver bullet &mdash;

1560
00:52:09,240 --> 00:52:11,406
every one of these tiles,
every one of these layers,

1561
00:52:11,406 --> 00:52:14,390
is actually contending for
residency inside of your GPU

1562
00:52:14,390 --> 00:52:15,010
cache.

1563
00:52:15,010 --> 00:52:16,885
Which means the more of
these separate layers

1564
00:52:16,885 --> 00:52:19,360
that you've actually promoted,
the slower your website

1565
00:52:19,360 --> 00:52:20,170
is going to be.

1566
00:52:20,170 --> 00:52:22,060
So you get an inverse
effect with it.

1567
00:52:22,060 --> 00:52:24,270
Because basically, your
GPU is getting overtaxed.

1568
00:52:24,270 --> 00:52:26,362
More tiles are being
evicted from your cache,

1569
00:52:26,362 --> 00:52:28,320
because more things are
fighting for residency.

1570
00:52:28,320 --> 00:52:30,069
It's actually going
to slow down your site

1571
00:52:30,069 --> 00:52:31,640
because your CPU is
spinning up more.

1572
00:52:31,640 --> 00:52:33,223
Anyhow, enough with
the desktop stuff.

1573
00:52:33,223 --> 00:52:34,280
Desktop's dead.

1574
00:52:34,280 --> 00:52:35,982
No one wants desktop.

1575
00:52:35,982 --> 00:52:37,690
OK, let's go back over
here to this thing

1576
00:52:37,690 --> 00:52:40,782
because the mobile web is sexy.

1577
00:52:40,782 --> 00:52:41,740
What was I showing off?

1578
00:52:41,740 --> 00:52:42,240
Yeah.

1579
00:52:42,240 --> 00:52:44,980
So Quartz, this QZ site,
this is actually a little bit

1580
00:52:44,980 --> 00:52:51,670
interesting because we see
mostly that as we're scrolling,

1581
00:52:51,670 --> 00:52:55,090
notice the big red spots
that keep popping up.

1582
00:52:55,090 --> 00:52:59,240
Let me see if I can get
it to do that again.

1583
00:52:59,240 --> 00:53:00,200
Yep, see it?

1584
00:53:00,200 --> 00:53:01,339
So something's going on.

1585
00:53:01,339 --> 00:53:03,380
It turns out &mdash; I'll spare
you the punchline here.

1586
00:53:03,380 --> 00:53:05,479
What's actually occurring
is that these guys

1587
00:53:05,479 --> 00:53:07,520
are doing something with
a scroll handler in here

1588
00:53:07,520 --> 00:53:09,450
where they're actually trying
to catch what I'm doing.

1589
00:53:09,450 --> 00:53:10,670
They're trying to
catch my little scroll.

1590
00:53:10,670 --> 00:53:12,400
They're trying to
reposition things.

1591
00:53:12,400 --> 00:53:14,820
And as soon as
they touch the DOM,

1592
00:53:14,820 --> 00:53:16,590
the whole DOM has
to be recalculated.

1593
00:53:16,590 --> 00:53:18,590
As soon as the whole DOM
has to be recalculated,

1594
00:53:18,590 --> 00:53:20,560
all of the tiles
have to be redrawn.

1595
00:53:20,560 --> 00:53:23,230
So as soon as they try to
catch what I'm scrolling

1596
00:53:23,230 --> 00:53:25,490
and reposition things
manually, they're actually

1597
00:53:25,490 --> 00:53:28,010
invalidating the
hardware compositing

1598
00:53:28,010 --> 00:53:31,680
and the GPU scrolling that we're
trying to do on their behalf

1599
00:53:31,680 --> 00:53:33,970
and actually messing up
their entire frame rate.

1600
00:53:33,970 --> 00:53:36,520
How many of your mobile sites
are catching a user input

1601
00:53:36,520 --> 00:53:38,354
like this?

1602
00:53:38,354 --> 00:53:39,300
Yeah.

1603
00:53:39,300 --> 00:53:39,970
I saw that.

1604
00:53:39,970 --> 00:53:40,980
I saw that.

1605
00:53:40,980 --> 00:53:42,600
At least you're honest with it.

1606
00:53:42,600 --> 00:53:44,670
Forecast.io, they know
what's going, guys.

1607
00:53:44,670 --> 00:53:45,800
I got it right.

1608
00:53:45,800 --> 00:53:46,515
I got it right.

1609
00:53:46,515 --> 00:53:48,460
He didn't &mdash; no,
he still hates me.

1610
00:53:48,460 --> 00:53:49,500
That's OK.

1611
00:53:49,500 --> 00:53:50,130
All right.

1612
00:53:50,130 --> 00:53:51,620
Let's do some other websites.

1613
00:53:51,620 --> 00:53:54,780
Pete, how are we doing on time?

1614
00:53:54,780 --> 00:53:55,930
15 minutes?

1615
00:53:55,930 --> 00:53:58,670
I can load all the
websites in 15 minutes.

1616
00:53:58,670 --> 00:54:01,851
So let's look at a
couple other ones here.

1617
00:54:01,851 --> 00:54:02,350
Let's see.

1618
00:54:02,350 --> 00:54:04,204
Let's take a look
at something good so

1619
00:54:04,204 --> 00:54:05,620
that everyone walks
away from here

1620
00:54:05,620 --> 00:54:07,840
with feelings of
happy bunny times.

1621
00:54:07,840 --> 00:54:09,240
Sorry, I just called somebody.

1622
00:54:09,240 --> 00:54:12,720

1623
00:54:12,720 --> 00:54:13,670
So this is Meetup.com.

1624
00:54:13,670 --> 00:54:19,120

1625
00:54:19,120 --> 00:54:19,620
OK.

1626
00:54:19,620 --> 00:54:21,170
So we didn't see
a loading spinner.

1627
00:54:21,170 --> 00:54:22,086
That was kind of nice.

1628
00:54:22,086 --> 00:54:24,010
But it did take a
little bit long to load.

1629
00:54:24,010 --> 00:54:26,180
In general, though,
let's see how it scrolls.

1630
00:54:26,180 --> 00:54:29,930
That's actually pretty fast.

1631
00:54:29,930 --> 00:54:32,880
Notice &mdash; let me turn
the show &mdash; let's

1632
00:54:32,880 --> 00:54:35,470
open the DevTools again and
see what kind of red things

1633
00:54:35,470 --> 00:54:37,990
are occurring and what
kind of load times

1634
00:54:37,990 --> 00:54:39,300
we're experiencing here.

1635
00:54:39,300 --> 00:54:40,592
So turn on DevTools.

1636
00:54:40,592 --> 00:54:42,675
Let's hit Reload and see
how the network performs.

1637
00:54:42,675 --> 00:54:45,740

1638
00:54:45,740 --> 00:54:47,564
Not that bad, not that bad.

1639
00:54:47,564 --> 00:54:48,980
On the device, I'm
actually seeing

1640
00:54:48,980 --> 00:54:50,420
things starting
to pop up already.

1641
00:54:50,420 --> 00:54:52,170
I notice no WOFFs in the code.

1642
00:54:52,170 --> 00:54:52,985
That's really good.

1643
00:54:52,985 --> 00:54:53,730
Oh, there is one.

1644
00:54:53,730 --> 00:54:54,780
Son of a bitch.

1645
00:54:54,780 --> 00:54:57,030
Where did that come from?

1646
00:54:57,030 --> 00:54:58,450
Oh, bogus.

1647
00:54:58,450 --> 00:55:01,690
Well, maybe they're not using
that on something critical.

1648
00:55:01,690 --> 00:55:04,410
Let's sort by content here.

1649
00:55:04,410 --> 00:55:06,250
This is really cool to see.

1650
00:55:06,250 --> 00:55:08,770
We've actually got &mdash; a
44K JavaScript is actually

1651
00:55:08,770 --> 00:55:10,580
the biggest part of the page.

1652
00:55:10,580 --> 00:55:13,437
I'm surprised that's
not jQuery at 191K.

1653
00:55:13,437 --> 00:55:15,770
How many of you are using j &mdash;
you know what, never mind.

1654
00:55:15,770 --> 00:55:16,677
Just never mind.

1655
00:55:16,677 --> 00:55:18,760
OK, actually, this image
is popping up to the top.

1656
00:55:18,760 --> 00:55:23,110
60K JPEG, 320 by 226.

1657
00:55:23,110 --> 00:55:25,770
That's maybe a little large.

1658
00:55:25,770 --> 00:55:29,640
Another 60K JPEG,
another 50K JPEG.

1659
00:55:29,640 --> 00:55:32,910
This is really interesting, too,
because we just saw 340 by 226s

1660
00:55:32,910 --> 00:55:36,380
on the previous site that
were about 10K, right?

1661
00:55:36,380 --> 00:55:40,202
So again, someone's not
optimizing JPEGs the right way.

1662
00:55:40,202 --> 00:55:41,910
In fact, there's
actually, on the article

1663
00:55:41,910 --> 00:55:44,321
that I put on HTML5 Rocks
about image compression &mdash;

1664
00:55:44,321 --> 00:55:46,320
let me see if I can tab
over there really quick.

1665
00:55:46,320 --> 00:55:52,090

1666
00:55:52,090 --> 00:55:54,060
So this article that
I did was actually

1667
00:55:54,060 --> 00:55:55,685
"Image Compression
for Web Developers."

1668
00:55:55,685 --> 00:55:58,300
The entire point of this article
was to talk to all of you

1669
00:55:58,300 --> 00:56:00,401
in a very frank way
and kind of discuss

1670
00:56:00,401 --> 00:56:02,400
the back story of where
image compression works.

1671
00:56:02,400 --> 00:56:04,067
Plus I'm a really
big fan of parrots.

1672
00:56:04,067 --> 00:56:06,650
They're kind of cool, especially
the digitally pixelated ones.

1673
00:56:06,650 --> 00:56:09,520
Anyhow, there's some
great content down here

1674
00:56:09,520 --> 00:56:11,260
about JPEG information.

1675
00:56:11,260 --> 00:56:13,860
And it actually shows that &mdash;
here it is, right here.

1676
00:56:13,860 --> 00:56:17,430
Let me see if I
can zoom this in.

1677
00:56:17,430 --> 00:56:18,370
No, too far.

1678
00:56:18,370 --> 00:56:21,290
OK, so this is actually &mdash; I feel
it's important to kind of break

1679
00:56:21,290 --> 00:56:23,070
away from our regularly
scheduled bashing

1680
00:56:23,070 --> 00:56:24,330
of these websites &mdash;
because that's

1681
00:56:24,330 --> 00:56:25,400
getting a little
depressing, right?

1682
00:56:25,400 --> 00:56:26,608
Everyone's getting depressed?

1683
00:56:26,608 --> 00:56:29,470
So this is actually a test
that an external person

1684
00:56:29,470 --> 00:56:34,150
did on the compression
quality of the images that

1685
00:56:34,150 --> 00:56:36,880
are being served by the
top websites in the world.

1686
00:56:36,880 --> 00:56:40,060
And what you're actually
seeing here is most of them

1687
00:56:40,060 --> 00:56:43,140
actually just use
a standard value.

1688
00:56:43,140 --> 00:56:48,510
So all Window Live background
images are exactly 82.

1689
00:56:48,510 --> 00:56:51,580
Regardless of what the
PSNR is, they choose 82.

1690
00:56:51,580 --> 00:56:53,300
It's hard coded.

1691
00:56:53,300 --> 00:56:55,410
So they might be able,
on some of the images,

1692
00:56:55,410 --> 00:56:58,590
to use a level 64 and
actually reduce the size more

1693
00:56:58,590 --> 00:56:59,510
because they use 82.

1694
00:56:59,510 --> 00:57:02,560
Wikipedia are all 80 for
every one of their images,

1695
00:57:02,560 --> 00:57:04,660
regardless of the
content quality on it.

1696
00:57:04,660 --> 00:57:06,197
YouTube is about 70 to 82.

1697
00:57:06,197 --> 00:57:07,030
That's kind of good.

1698
00:57:07,030 --> 00:57:09,410
It shows that they're actually
doing some dynamic scaling,

1699
00:57:09,410 --> 00:57:11,610
although it's unclear whether
or not it's actually manually

1700
00:57:11,610 --> 00:57:13,580
scaled, where they have an
artist actually changing them,

1701
00:57:13,580 --> 00:57:15,371
or they have some sort
of dynamic solution,

1702
00:57:15,371 --> 00:57:16,160
like I was saying.

1703
00:57:16,160 --> 00:57:18,130
Yahoo, 69 to 91.

1704
00:57:18,130 --> 00:57:20,850
Again, they may have some more
responsive version of that.

1705
00:57:20,850 --> 00:57:22,920
Facebook's are at 85.

1706
00:57:22,920 --> 00:57:25,387
And Google image
thumbnails are about 74.

1707
00:57:25,387 --> 00:57:27,220
Here's the really
interesting &mdash; Twitter user

1708
00:57:27,220 --> 00:57:29,365
JPEGs are anywhere
between 30 and 100,

1709
00:57:29,365 --> 00:57:30,740
which means that
for some images,

1710
00:57:30,740 --> 00:57:32,830
they're actually doing nothing.

1711
00:57:32,830 --> 00:57:34,580
And some images, they're
doing everything.

1712
00:57:34,580 --> 00:57:36,310
This actually tells me &mdash; I
don't know if anyone &mdash; no one's

1713
00:57:36,310 --> 00:57:37,550
in here from Twitter, right?

1714
00:57:37,550 --> 00:57:40,008
This actually tells me that
they may have something dynamic

1715
00:57:40,008 --> 00:57:42,195
actually testing the noise
ratio of the compression

1716
00:57:42,195 --> 00:57:45,850
there and actually serving
you the most optimized JPEG

1717
00:57:45,850 --> 00:57:47,814
at the best image
quality possible.

1718
00:57:47,814 --> 00:57:48,730
So that's really cool.

1719
00:57:48,730 --> 00:57:50,396
That's really cool
to see that someone's

1720
00:57:50,396 --> 00:57:52,280
doing that out on the web.

1721
00:57:52,280 --> 00:57:55,080
OK, back to doom and gloom.

1722
00:57:55,080 --> 00:57:56,220
OK, we were over here.

1723
00:57:56,220 --> 00:57:58,350
So yeah, so these
images probably

1724
00:57:58,350 --> 00:58:01,180
are a little too
large in megabytes.

1725
00:58:01,180 --> 00:58:02,640
They're probably
not optimizing it.

1726
00:58:02,640 --> 00:58:04,350
Chances are &mdash; nope,
that's not an image &mdash;

1727
00:58:04,350 --> 00:58:05,770
chances are they're just
using a standard one.

1728
00:58:05,770 --> 00:58:06,970
So let's hit Timeline.

1729
00:58:06,970 --> 00:58:07,960
Let's just hit Record.

1730
00:58:07,960 --> 00:58:09,685
Let's see what's
going on with memory.

1731
00:58:09,685 --> 00:58:11,970
I'm not touching anything.

1732
00:58:11,970 --> 00:58:14,320
Memory's increasing.

1733
00:58:14,320 --> 00:58:18,280
Not too much, 5.5, 5.6.

1734
00:58:18,280 --> 00:58:20,600
Again, we've got these
timers getting fired.

1735
00:58:20,600 --> 00:58:22,860
Fine.js, I don't even
know what this is.

1736
00:58:22,860 --> 00:58:24,642
Meetup script mobile find.

1737
00:58:24,642 --> 00:58:26,850
OK, so apparently it's trying
to meet me and find me.

1738
00:58:26,850 --> 00:58:29,690
That's kind of creepy.

1739
00:58:29,690 --> 00:58:31,200
Mobile base.

1740
00:58:31,200 --> 00:58:31,990
So that's weird.

1741
00:58:31,990 --> 00:58:33,640
So they've got two
separate timers

1742
00:58:33,640 --> 00:58:36,320
coming from their own website,
doing two different things.

1743
00:58:36,320 --> 00:58:38,790
And again, not
touching anything.

1744
00:58:38,790 --> 00:58:43,230
Nothing's happening, nothing's
moving, but we're at 5.6 megs.

1745
00:58:43,230 --> 00:58:44,430
So this is like a slow leak.

1746
00:58:44,430 --> 00:58:48,050
It looks like there's a slow
closure or something being

1747
00:58:48,050 --> 00:58:48,930
tossed to this.

1748
00:58:48,930 --> 00:58:50,430
So let's take a look at this,
see if we can't drill in.

1749
00:58:50,430 --> 00:58:51,060
Maybe we get some insights.

1750
00:58:51,060 --> 00:58:51,910
Oh, yay.

1751
00:58:51,910 --> 00:58:53,160
It is a jQuery library.

1752
00:58:53,160 --> 00:58:55,066
Can we summon the
power of pretty print?

1753
00:58:55,066 --> 00:58:56,550
Aha.

1754
00:58:56,550 --> 00:58:58,535
That didn't help.

1755
00:58:58,535 --> 00:58:59,890
I'll try that again.

1756
00:58:59,890 --> 00:59:01,400
There we go.

1757
00:59:01,400 --> 00:59:02,206
Oh, mustache.

1758
00:59:02,206 --> 00:59:04,910

1759
00:59:04,910 --> 00:59:05,910
Interesting.

1760
00:59:05,910 --> 00:59:06,740
Who uses mustache?

1761
00:59:06,740 --> 00:59:09,250
Can anyone explain this
line of code to me?

1762
00:59:09,250 --> 00:59:13,250
AUDIENCE: It's a JavaScript
[INAUDIBLE] derived from it.

1763
00:59:13,250 --> 00:59:16,621
COLT MCANLIS: So this is
causing a memory leak.

1764
00:59:16,621 --> 00:59:18,175
Can anyone fix this?

1765
00:59:18,175 --> 00:59:18,734
Not now?

1766
00:59:18,734 --> 00:59:19,400
OK, that's cool.

1767
00:59:19,400 --> 00:59:19,780
Take your time.

1768
00:59:19,780 --> 00:59:19,990
That's all right.

1769
00:59:19,990 --> 00:59:21,094
We'll get back to it.

1770
00:59:21,094 --> 00:59:22,510
But basically,
we're seeing again,

1771
00:59:22,510 --> 00:59:27,530
this kind of looks like
an anonymous function

1772
00:59:27,530 --> 00:59:30,080
calling some factory
objects, testing some object

1773
00:59:30,080 --> 00:59:31,090
definitions.

1774
00:59:31,090 --> 00:59:33,010
This in and of itself
doesn't look bad,

1775
00:59:33,010 --> 00:59:37,390
although it is calling another
anonymous function down here.

1776
00:59:37,390 --> 00:59:38,870
Sometimes the
pretty print spacing

1777
00:59:38,870 --> 00:59:39,911
doesn't get it all right.

1778
00:59:39,911 --> 00:59:42,260
This might actually be sort
of a closure in a closure.

1779
00:59:42,260 --> 00:59:46,550
It looks like we've got one
close there, one open here.

1780
00:59:46,550 --> 00:59:48,590
Something's going on.

1781
00:59:48,590 --> 00:59:50,751
Any of you who are using
third party libraries,

1782
00:59:50,751 --> 00:59:52,750
it's actually really easy
to fall in these traps

1783
00:59:52,750 --> 00:59:54,708
where they're allocating
memory and doing stuff

1784
00:59:54,708 --> 00:59:57,110
on your behalf that may
be negatively impacting

1785
00:59:57,110 --> 00:59:58,080
your performance.

1786
00:59:58,080 --> 01:00:00,510
And we sometimes
ignore these faults

1787
01:00:00,510 --> 01:00:02,050
and don't track
these faults down

1788
01:00:02,050 --> 01:00:04,580
because the fact we get like
event propagation or something

1789
01:00:04,580 --> 01:00:05,080
else.

1790
01:00:05,080 --> 01:00:08,190
Like, oh, I get a callback
when something occurs.

1791
01:00:08,190 --> 01:00:10,540
That code you can actually
write in about 100 lines

1792
01:00:10,540 --> 01:00:13,074
of your own making and actually
keep it memory performant.

1793
01:00:13,074 --> 01:00:14,990
But instead, we pull in
these large libraries.

1794
01:00:14,990 --> 01:00:17,170
So it's important that
you know these trade-offs

1795
01:00:17,170 --> 01:00:19,089
when something like
this is occurring.

1796
01:00:19,089 --> 01:00:20,130
Let's do another website.

1797
01:00:20,130 --> 01:00:22,240
Pete, we got what,
10 minutes left?

1798
01:00:22,240 --> 01:00:23,870
Yeah, about 10 minutes?

1799
01:00:23,870 --> 01:00:24,410
Let's see.

1800
01:00:24,410 --> 01:00:26,920
What haven't we done here?

1801
01:00:26,920 --> 01:00:30,450
So I have to load this because
I really don't get this website.

1802
01:00:30,450 --> 01:00:32,450
And I really want to talk
about the website more

1803
01:00:32,450 --> 01:00:34,910
than the performance
characteristics.

1804
01:00:34,910 --> 01:00:37,616
So this is called
Game of Phones.

1805
01:00:37,616 --> 01:00:38,475
Is this your site?

1806
01:00:38,475 --> 01:00:39,100
AUDIENCE: Yeah.

1807
01:00:39,100 --> 01:00:41,480
COLT MCANLIS: OK, cool.

1808
01:00:41,480 --> 01:00:44,360
I really don't get this website.

1809
01:00:44,360 --> 01:00:45,262
But it's here.

1810
01:00:45,262 --> 01:00:47,720
So we can take a look at it
from a performance perspective.

1811
01:00:47,720 --> 01:00:50,210
Basically, what
happens is someone

1812
01:00:50,210 --> 01:00:52,350
will record &mdash; from
what I can tell,

1813
01:00:52,350 --> 01:00:55,950
they're like very politically
charged, angry arguments.

1814
01:00:55,950 --> 01:00:58,490
And you sign up,
and someone will

1815
01:00:58,490 --> 01:01:01,120
call you and play this
recorded message that's

1816
01:01:01,120 --> 01:01:03,250
like, blah, blah, blah,
blah, blah, blah, blah.

1817
01:01:03,250 --> 01:01:03,750
Rally.

1818
01:01:03,750 --> 01:01:05,210
Fight the power.

1819
01:01:05,210 --> 01:01:09,080
And then you have to call
someone else on the list

1820
01:01:09,080 --> 01:01:11,805
and try to regurgitate
what you heard.

1821
01:01:11,805 --> 01:01:13,816
And so it's kind of like
the game of telephone

1822
01:01:13,816 --> 01:01:15,190
that you play as
kids, and you're

1823
01:01:15,190 --> 01:01:16,240
trying to get all
the way through.

1824
01:01:16,240 --> 01:01:18,310
I have no idea why people
are even doing this.

1825
01:01:18,310 --> 01:01:20,506
Like, I hate getting calls
from my wife, much less

1826
01:01:20,506 --> 01:01:21,880
random strangers
on the internet.

1827
01:01:21,880 --> 01:01:24,940
I'm on the internet because
I don't want you to call me.

1828
01:01:24,940 --> 01:01:26,840
Send me a text or something.

1829
01:01:26,840 --> 01:01:28,522
Anyhow, personal thing.

1830
01:01:28,522 --> 01:01:29,980
I'm sure it works
for you, brother.

1831
01:01:29,980 --> 01:01:30,540
I don't get the internet.

1832
01:01:30,540 --> 01:01:31,121
I'm too old.

1833
01:01:31,121 --> 01:01:31,870
That's my problem.

1834
01:01:31,870 --> 01:01:34,340
AUDIENCE: I've had people tell
me it's the only phone calls

1835
01:01:34,340 --> 01:01:36,316
that they will answer.

1836
01:01:36,316 --> 01:01:38,292
They will answer
phone calls from this

1837
01:01:38,292 --> 01:01:39,290
and from their mother.

1838
01:01:39,290 --> 01:01:39,550
COLT MCANLIS: Oh, dude.

1839
01:01:39,550 --> 01:01:40,570
Game of Phones, awesome.

1840
01:01:40,570 --> 01:01:42,682

1841
01:01:42,682 --> 01:01:43,890
You know what you need to do?

1842
01:01:43,890 --> 01:01:46,490
You actually need to get the
voices from "Game of Thrones"

1843
01:01:46,490 --> 01:01:47,991
to actually do the
call, and then it

1844
01:01:47,991 --> 01:01:49,531
would just go through
the roof, dude.

1845
01:01:49,531 --> 01:01:50,460
HBO might sue me now.

1846
01:01:50,460 --> 01:01:51,534
Sorry about that.

1847
01:01:51,534 --> 01:01:53,950
Anyhow, let's look at this
from a performance perspective.

1848
01:01:53,950 --> 01:01:55,570
There's really
nothing on this page.

1849
01:01:55,570 --> 01:01:56,702
I mean, it's kind of text.

1850
01:01:56,702 --> 01:01:58,410
But we're going to
run through it anyway,

1851
01:01:58,410 --> 01:02:02,250
just so you guys can kind
of see the differences

1852
01:02:02,250 --> 01:02:03,080
in these things.

1853
01:02:03,080 --> 01:02:03,895
So am I here?

1854
01:02:03,895 --> 01:02:05,636
OK.

1855
01:02:05,636 --> 01:02:07,850
By the way, did you see
actually what showed up?

1856
01:02:07,850 --> 01:02:08,590
Was this on the screen?

1857
01:02:08,590 --> 01:02:09,090
Sorry.

1858
01:02:09,090 --> 01:02:10,370
So this is Game of Phones.

1859
01:02:10,370 --> 01:02:15,756
Again, it's just text,
people calling each other.

1860
01:02:15,756 --> 01:02:18,730
But this is it.

1861
01:02:18,730 --> 01:02:20,740
12 requests.

1862
01:02:20,740 --> 01:02:24,970
The interesting thing here
is 107K, that's a little odd.

1863
01:02:24,970 --> 01:02:28,340
Like we're seeing some other
pages come in below that.

1864
01:02:28,340 --> 01:02:31,720
Mainly this is coming
from a concatent.

1865
01:02:31,720 --> 01:02:33,730
So Bootstrap is being included.

1866
01:02:33,730 --> 01:02:37,170
I'm not really sure why
this needs Bootstrap.

1867
01:02:37,170 --> 01:02:42,160

1868
01:02:42,160 --> 01:02:44,130
I guess the cool
kids are doing it.

1869
01:02:44,130 --> 01:02:45,255
And here's the funny thing.

1870
01:02:45,255 --> 01:02:51,610
We got bootstrap.min and then
CSS that replaces Bootstrap.

1871
01:02:51,610 --> 01:02:52,570
So that's a thing.

1872
01:02:52,570 --> 01:02:53,236
And then jQuery.

1873
01:02:53,236 --> 01:03:00,470

1874
01:03:00,470 --> 01:03:03,810
And here's another Bootstrap
again, and then telephone-gram

1875
01:03:03,810 --> 01:03:04,975
and then another jQuery.

1876
01:03:04,975 --> 01:03:09,020

1877
01:03:09,020 --> 01:03:10,822
Are you using two jQueries?

1878
01:03:10,822 --> 01:03:12,571
AUDIENCE: I should
mention that I've never

1879
01:03:12,571 --> 01:03:13,790
made a web page before.

1880
01:03:13,790 --> 01:03:15,030
COLT MCANLIS: OK.

1881
01:03:15,030 --> 01:03:17,430
You're using two jQueries.

1882
01:03:17,430 --> 01:03:19,079
Do you know you're
using two jQueries?

1883
01:03:19,079 --> 01:03:19,870
AUDIENCE: Now I do.

1884
01:03:19,870 --> 01:03:20,911
COLT MCANLIS: Now you do.

1885
01:03:20,911 --> 01:03:23,220
OK.

1886
01:03:23,220 --> 01:03:26,160
And then I like the GIF, right?

1887
01:03:26,160 --> 01:03:29,104
It's sprite sheeted, I guess.

1888
01:03:29,104 --> 01:03:30,020
Here's the cool thing.

1889
01:03:30,020 --> 01:03:34,680
So a 300 by 120 animated
GIF is only 4.4K,

1890
01:03:34,680 --> 01:03:38,360
yet we were seeing like full
JPEGs that were like 9K that

1891
01:03:38,360 --> 01:03:40,490
were static, right?

1892
01:03:40,490 --> 01:03:44,890
So I'm not really sure
what else do with this.

1893
01:03:44,890 --> 01:03:47,221
Let me hit Timeline and see
what this is doing here.

1894
01:03:47,221 --> 01:03:48,595
This is kind of
a little awkward.

1895
01:03:48,595 --> 01:03:52,840

1896
01:03:52,840 --> 01:03:55,930
So your jQueries
are using memory.

1897
01:03:55,930 --> 01:03:58,297
So this is kind of telltale.

1898
01:03:58,297 --> 01:03:59,130
Do you have a timer?

1899
01:03:59,130 --> 01:04:00,690
It looks like you
have a timer on your &mdash;

1900
01:04:00,690 --> 01:04:02,820
AUDIENCE: [INAUDIBLE], maybe
the audio player is using it.

1901
01:04:02,820 --> 01:04:04,361
COLT MCANLIS: Maybe
the audio player.

1902
01:04:04,361 --> 01:04:05,780
Yeah, it looks
like yeah, it does.

1903
01:04:05,780 --> 01:04:07,220
So it looks like
there's a timer here.

1904
01:04:07,220 --> 01:04:08,803
I don't know if you
guys can see this.

1905
01:04:08,803 --> 01:04:10,730
It looks like
there's a timer here.

1906
01:04:10,730 --> 01:04:13,660
And you can see this red square
up here, just the Play button.

1907
01:04:13,660 --> 01:04:18,090
Just like that Play
button has a timer that

1908
01:04:18,090 --> 01:04:22,210
needs jQuery and Boostrap &mdash;
two jQueries and Bootstrap &mdash;

1909
01:04:22,210 --> 01:04:27,790
and is allocating like a meg of
memory over like seven seconds.

1910
01:04:27,790 --> 01:04:29,310
So that's a thing.

1911
01:04:29,310 --> 01:04:31,370
Lots of rasterizes
occurring in here.

1912
01:04:31,370 --> 01:04:32,570
Lots of recalculates.

1913
01:04:32,570 --> 01:04:34,420
So not only is it
repainting, it's

1914
01:04:34,420 --> 01:04:37,390
actually like updating
the DOM to repaint.

1915
01:04:37,390 --> 01:04:38,700
Let's look at this again.

1916
01:04:38,700 --> 01:04:41,330
That's updating the DOM.

1917
01:04:41,330 --> 01:04:41,972
Don't know why.

1918
01:04:41,972 --> 01:04:43,680
Maybe there's a cool
jitter effect there.

1919
01:04:43,680 --> 01:04:44,440
You know what?

1920
01:04:44,440 --> 01:04:44,970
Maybe I got this wrong.

1921
01:04:44,970 --> 01:04:46,678
Maybe I'm actually
looking at the Matrix.

1922
01:04:46,678 --> 01:04:48,165
Am I looking at the Matrix?

1923
01:04:48,165 --> 01:04:49,290
That would be kind of cool.

1924
01:04:49,290 --> 01:04:51,105
I'm like &mdash; sorry.

1925
01:04:51,105 --> 01:04:51,730
I'm having fun.

1926
01:04:51,730 --> 01:04:53,521
It's late, and I have
to keep you all awake

1927
01:04:53,521 --> 01:04:54,960
for like another five minutes.

1928
01:04:54,960 --> 01:04:57,340
So anyhow, I don't
like this trend.

1929
01:04:57,340 --> 01:04:59,324
You're actually allocating
more memory faster

1930
01:04:59,324 --> 01:05:00,990
than the other websites
we looked at it.

1931
01:05:00,990 --> 01:05:01,850
It's probably because
you have two jQueries,

1932
01:05:01,850 --> 01:05:03,371
but anyhow, let's dig in.

1933
01:05:03,371 --> 01:05:04,370
So let's go to profiles.

1934
01:05:04,370 --> 01:05:06,570
Again, follow the memory,
find the performance problems.

1935
01:05:06,570 --> 01:05:08,080
So we follow the asset
memory to figure out

1936
01:05:08,080 --> 01:05:09,137
where load problems are.

1937
01:05:09,137 --> 01:05:10,720
We follow dynamic
memory to figure out

1938
01:05:10,720 --> 01:05:12,678
where compute problems
and render problems are.

1939
01:05:12,678 --> 01:05:14,830
Can I click this button, please?

1940
01:05:14,830 --> 01:05:15,870
Clicky.

1941
01:05:15,870 --> 01:05:19,240
You've allocated too much
memory for your site,

1942
01:05:19,240 --> 01:05:20,170
and I can't click.

1943
01:05:20,170 --> 01:05:20,970
Oh, there we go.

1944
01:05:20,970 --> 01:05:21,580
OK.

1945
01:05:21,580 --> 01:05:23,740
So let's do record heap
allocations, hit Start.

1946
01:05:23,740 --> 01:05:26,430

1947
01:05:26,430 --> 01:05:27,680
So that's kind of interesting.

1948
01:05:27,680 --> 01:05:28,920
You guys see this pattern?

1949
01:05:28,920 --> 01:05:32,400
So this is actually really very,
very regular allocations that

1950
01:05:32,400 --> 01:05:34,130
are occurring, two
different sets of it,

1951
01:05:34,130 --> 01:05:36,920
but they're almost
deleted immediately,

1952
01:05:36,920 --> 01:05:38,400
except for the
stuff that happened

1953
01:05:38,400 --> 01:05:39,170
at the beginning of the trace.

1954
01:05:39,170 --> 01:05:40,710
So we're seeing the grey lines.

1955
01:05:40,710 --> 01:05:43,376
So the grey lines mean that what
was allocated has actually been

1956
01:05:43,376 --> 01:05:44,050
freed now.

1957
01:05:44,050 --> 01:05:45,910
This is kind of odd.

1958
01:05:45,910 --> 01:05:48,270
I kind of want to see
where this is coming from.

1959
01:05:48,270 --> 01:05:52,005
I like to dig in and
figure out why I'm so bald.

1960
01:05:52,005 --> 01:05:53,880
So we have the whole
thing, yada, yada, yada.

1961
01:05:53,880 --> 01:05:56,370
Let's actually just
highlight this guy here.

1962
01:05:56,370 --> 01:05:58,810
So array, what's &mdash;
transition array.

1963
01:05:58,810 --> 01:06:00,930
So something's going
on inside of V8.

1964
01:06:00,930 --> 01:06:02,660
All these are being deleted.

1965
01:06:02,660 --> 01:06:03,850
Compiled code.

1966
01:06:03,850 --> 01:06:05,420
Is this a deopt?

1967
01:06:05,420 --> 01:06:06,310
No, relocation info.

1968
01:06:06,310 --> 01:06:10,010
So it looks like there's
just some sort of cases

1969
01:06:10,010 --> 01:06:12,760
where jQuery is executing &mdash;
and again, I see this a lot

1970
01:06:12,760 --> 01:06:13,450
with closures.

1971
01:06:13,450 --> 01:06:15,825
Closures, for some reason,
tend to bring up this pattern.

1972
01:06:15,825 --> 01:06:17,380
jQuery's kicking
off a closure that's

1973
01:06:17,380 --> 01:06:23,290
causing a reflow of your entire
page for like a five pixel

1974
01:06:23,290 --> 01:06:24,480
by five pixel icon.

1975
01:06:24,480 --> 01:06:27,830
So you still loaded faster
than the other sites.

1976
01:06:27,830 --> 01:06:28,520
Bravo.

1977
01:06:28,520 --> 01:06:30,038
Round of applause for that.

1978
01:06:30,038 --> 01:06:31,014
[APPLAUSE]

1979
01:06:31,014 --> 01:06:32,966
AUDIENCE: Real web
pages don't need images.

1980
01:06:32,966 --> 01:06:33,454
COLT MCANLIS: Say again?

1981
01:06:33,454 --> 01:06:35,410
AUDIENCE: Real web
pages don't need images.

1982
01:06:35,410 --> 01:06:36,944
COLT MCANLIS: There you go.

1983
01:06:36,944 --> 01:06:39,212
You know, I'm a fan
of the text web.

1984
01:06:39,212 --> 01:06:41,670
That requires drinking to get
more information out of that.

1985
01:06:41,670 --> 01:06:43,310
Anyhow, let's load
up another one.

1986
01:06:43,310 --> 01:06:44,190
Pete, how are we doing on time?

1987
01:06:44,190 --> 01:06:45,200
AUDIENCE: You've
got five minutes.

1988
01:06:45,200 --> 01:06:45,850
COLT MCANLIS: Five more minutes.

1989
01:06:45,850 --> 01:06:46,050
OK.

1990
01:06:46,050 --> 01:06:48,110
Let's clear up quickly,
because I'm actually

1991
01:06:48,110 --> 01:06:50,640
really interested to try this
Robitussin and whiskey thing.

1992
01:06:50,640 --> 01:06:52,395
I think we may have
something on there.

1993
01:06:52,395 --> 01:06:53,850
AUDIENCE: I highly recommend it.

1994
01:06:53,850 --> 01:06:54,680
COLT MCANLIS: OK.

1995
01:06:54,680 --> 01:06:57,830
Let's try &mdash; here we go.

1996
01:06:57,830 --> 01:06:58,860
Let's try this CBN Week.

1997
01:06:58,860 --> 01:07:10,440

1998
01:07:10,440 --> 01:07:12,707
And we're done.

1999
01:07:12,707 --> 01:07:14,290
I think at this time,
I don't actually

2000
01:07:14,290 --> 01:07:16,081
need to tell you guys
what I'm about to do.

2001
01:07:16,081 --> 01:07:18,770

2002
01:07:18,770 --> 01:07:20,580
This is &mdash; no, I don't
want to translate.

2003
01:07:20,580 --> 01:07:22,038
I used to be able
to speak Chinese.

2004
01:07:22,038 --> 01:07:23,830
It was a beautiful language.

2005
01:07:23,830 --> 01:07:26,247
So you kind of know
what I'm about to do.

2006
01:07:26,247 --> 01:07:27,580
I'm going to load up networking.

2007
01:07:27,580 --> 01:07:30,120
I'm going to see what images
are too large, what JavaScript

2008
01:07:30,120 --> 01:07:32,660
is too large, what you're using
that you shouldn't be using.

2009
01:07:32,660 --> 01:07:34,200
We're going to
try to cull assets

2010
01:07:34,200 --> 01:07:36,400
and get rid of
extra network loads.

2011
01:07:36,400 --> 01:07:38,240
I thought the points
about sprite sheets

2012
01:07:38,240 --> 01:07:39,230
was perfect earlier.

2013
01:07:39,230 --> 01:07:41,020
By the way, they shouldn't
be called sprite sheets.

2014
01:07:41,020 --> 01:07:42,270
They should be called atlases.

2015
01:07:42,270 --> 01:07:44,700
You should actually see my
Udacity course rant on this.

2016
01:07:44,700 --> 01:07:47,250
Everywhere else in the
world, in video games,

2017
01:07:47,250 --> 01:07:49,855
in film and everything,
we call them atlases.

2018
01:07:49,855 --> 01:07:50,910
You know what?

2019
01:07:50,910 --> 01:07:51,890
Never mind.

2020
01:07:51,890 --> 01:07:53,760
Anyhow, let's see
some scrolling.

2021
01:07:53,760 --> 01:07:56,140
Not that bad.

2022
01:07:56,140 --> 01:07:57,840
Let's head over to DevTools.

2023
01:07:57,840 --> 01:08:00,090
Let's take a look at this
under the microscope, right?

2024
01:08:00,090 --> 01:08:02,544

2025
01:08:02,544 --> 01:08:03,585
Let's go back to network.

2026
01:08:03,585 --> 01:08:06,500

2027
01:08:06,500 --> 01:08:07,720
My computer said, I'm done.

2028
01:08:07,720 --> 01:08:12,870

2029
01:08:12,870 --> 01:08:13,370
All right.

2030
01:08:13,370 --> 01:08:14,340
This wil be the last
site, and then we'll

2031
01:08:14,340 --> 01:08:15,290
actually get to
all the questions.

2032
01:08:15,290 --> 01:08:17,359
And I think we're going
to do a group question.

2033
01:08:17,359 --> 01:08:17,880
Right?

2034
01:08:17,880 --> 01:08:19,939
Fantastic.

2035
01:08:19,939 --> 01:08:23,859
So that's interesting.

2036
01:08:23,859 --> 01:08:28,483
So there's already 89
requests, 92 requests, 93, 95.

2037
01:08:28,483 --> 01:08:31,261

2038
01:08:31,261 --> 01:08:35,050
1.5 megs transferred so far.

2039
01:08:35,050 --> 01:08:38,470
1.9 &mdash; 2 megs.

2040
01:08:38,470 --> 01:08:39,676
2.195.

2041
01:08:39,676 --> 01:08:41,220
Let's see if we
can go [INAUDIBLE].

2042
01:08:41,220 --> 01:08:43,890
So here's something
interesting up here.

2043
01:08:43,890 --> 01:08:46,036
So notice this grey
bar right here.

2044
01:08:46,036 --> 01:08:48,410
So in Chrome DevTools, when
you look at this Network tab,

2045
01:08:48,410 --> 01:08:49,869
basically, you see two values.

2046
01:08:49,869 --> 01:08:51,410
You see sort of this
semi-transparent

2047
01:08:51,410 --> 01:08:53,770
and then this opaque
portion of these items.

2048
01:08:53,770 --> 01:08:55,700
That semi-transparent
value is actually

2049
01:08:55,700 --> 01:08:59,354
how long the browser spent
waiting to receive the asset.

2050
01:08:59,354 --> 01:09:01,770
This is one of the reasons
that sprite sheets are actually

2051
01:09:01,770 --> 01:09:04,819
so important for you, because
each browser has a set

2052
01:09:04,819 --> 01:09:06,580
number of limits
of open connections

2053
01:09:06,580 --> 01:09:08,450
that it will allow
to a single server.

2054
01:09:08,450 --> 01:09:11,060
For Chrome, I believe
it's around six.

2055
01:09:11,060 --> 01:09:14,330
Which means if you have
six requests in flight,

2056
01:09:14,330 --> 01:09:17,689
it'll block the rest of the
requests until a slot opens up.

2057
01:09:17,689 --> 01:09:19,752
Think of it like a
caching FIFO or whatnot.

2058
01:09:19,752 --> 01:09:22,210
And so Chrome actually shows
you this here on the timeline.

2059
01:09:22,210 --> 01:09:24,430
You can see some of
these actually waited

2060
01:09:24,430 --> 01:09:26,091
a very, very long time.

2061
01:09:26,091 --> 01:09:27,590
In this case, it
was actually spent,

2062
01:09:27,590 --> 01:09:31,090
what is this, 471
milliseconds waiting.

2063
01:09:31,090 --> 01:09:33,080
It wanted to request
this asset, but it

2064
01:09:33,080 --> 01:09:34,790
couldn't because there were
other things in the pipe.

2065
01:09:34,790 --> 01:09:37,248
And you can kind of see that
this is a function of the fact

2066
01:09:37,248 --> 01:09:40,830
that there's about 100 requests
and 3.6 megs transferred.

2067
01:09:40,830 --> 01:09:43,390
For those of you who don't
know, the average website

2068
01:09:43,390 --> 01:09:45,409
size right now, according
to HTTP Archive,

2069
01:09:45,409 --> 01:09:47,352
is about 1.1 megs.

2070
01:09:47,352 --> 01:09:48,310
And that's for desktop.

2071
01:09:48,310 --> 01:09:49,890
They haven't really got into
a lot of the mobile testing

2072
01:09:49,890 --> 01:09:50,670
just yet.

2073
01:09:50,670 --> 01:09:53,899
But obviously, mobile
shouldn't be 1.1 meg, right?

2074
01:09:53,899 --> 01:09:55,849
So obviously, there's
too big a content here.

2075
01:09:55,849 --> 01:09:57,640
So let's see if there
is any big offenders.

2076
01:09:57,640 --> 01:09:59,056
Let's see if images
are a problem.

2077
01:09:59,056 --> 01:10:00,855
Who thinks images are a problem?

2078
01:10:00,855 --> 01:10:02,190
AUDIENCE: Show of hands.

2079
01:10:02,190 --> 01:10:05,900
COLT MCANLIS:
There's a 300K image.

2080
01:10:05,900 --> 01:10:09,720
200K, 197K, 161K.

2081
01:10:09,720 --> 01:10:12,340
152K.

2082
01:10:12,340 --> 01:10:13,530
What is in that image?

2083
01:10:13,530 --> 01:10:16,740

2084
01:10:16,740 --> 01:10:19,140
I think that's bigger than raw.

2085
01:10:19,140 --> 01:10:20,060
Yeah.

2086
01:10:20,060 --> 01:10:21,811
Yeah, obviously, these
images are too big.

2087
01:10:21,811 --> 01:10:22,976
They're not being optimized.

2088
01:10:22,976 --> 01:10:23,990
They should be fixed.

2089
01:10:23,990 --> 01:10:25,240
Let's take a look at timeline.

2090
01:10:25,240 --> 01:10:27,430
Let's see if anything is
going on with memory here.

2091
01:10:27,430 --> 01:10:28,054
Anything crazy?

2092
01:10:28,054 --> 01:10:30,850

2093
01:10:30,850 --> 01:10:32,100
Slow.

2094
01:10:32,100 --> 01:10:33,230
Again, timer.

2095
01:10:33,230 --> 01:10:34,700
We see this same pattern.

2096
01:10:34,700 --> 01:10:37,560
So we see almost
all of these pages

2097
01:10:37,560 --> 01:10:39,010
are falling into
the same pattern.

2098
01:10:39,010 --> 01:10:41,460
Also, almost all of these
pages, and some of them,

2099
01:10:41,460 --> 01:10:45,840
in rare cases, are all using
jQuery or jQuery twice.

2100
01:10:45,840 --> 01:10:48,580
Closures are being passed
off to timers for things

2101
01:10:48,580 --> 01:10:51,430
like ads or analytics
or marquees.

2102
01:10:51,430 --> 01:10:53,190
And this seems to
be a common pattern.

2103
01:10:53,190 --> 01:10:55,640
But this is obviously is
causing a lot of memory

2104
01:10:55,640 --> 01:10:58,361
and a lot of churn and some
other weird things going on.

2105
01:10:58,361 --> 01:10:59,860
I can look at the
frames times here.

2106
01:10:59,860 --> 01:11:01,151
And so let me actually do this.

2107
01:11:01,151 --> 01:11:03,260
I don't know if I showed
you guys this tool.

2108
01:11:03,260 --> 01:11:04,700
Nope, cancel.

2109
01:11:04,700 --> 01:11:07,680

2110
01:11:07,680 --> 01:11:10,636
So as I'm scrolling here &mdash;
it's not picking that up.

2111
01:11:10,636 --> 01:11:11,541
OK.

2112
01:11:11,541 --> 01:11:12,040
Never mind.

2113
01:11:12,040 --> 01:11:13,210
I won't show you that tool.

2114
01:11:13,210 --> 01:11:16,190
Anyhow, let's be done
with this for the evening

2115
01:11:16,190 --> 01:11:18,680
because I think Pete has
some other stuff he wants

2116
01:11:18,680 --> 01:11:21,630
to talk to you
guys about tonight.

2117
01:11:21,630 --> 01:11:24,340
So thank you for
your time tonight.

2118
01:11:24,340 --> 01:11:25,440
Perfmatters.

2119
01:11:25,440 --> 01:11:27,190
Wait, wait, wait.

2120
01:11:27,190 --> 01:11:28,960
I'll let you start
the clap in a second.

2121
01:11:28,960 --> 01:11:30,910
So here's how you
get a hold of me.

2122
01:11:30,910 --> 01:11:34,050
If you guys, if anything today
was controversial or something

2123
01:11:34,050 --> 01:11:35,550
worth tweeting or
something you just

2124
01:11:35,550 --> 01:11:37,690
want to ask more questions
about, go ahead and find me.

2125
01:11:37,690 --> 01:11:39,850
Make sure you join the Google+
Web Performance community.

2126
01:11:39,850 --> 01:11:40,940
There's a lot of
great stuff there.

2127
01:11:40,940 --> 01:11:42,610
Please, for the love of
god, use #perfmatters.

2128
01:11:42,610 --> 01:11:43,500
Follow #perfmatters.

2129
01:11:43,500 --> 01:11:44,400
It's a brand.

2130
01:11:44,400 --> 01:11:46,910
You should wear this at work.

2131
01:11:46,910 --> 01:11:50,600
Everything you do, you should
be challenging your employees,

2132
01:11:50,600 --> 01:11:53,330
your managers, the
owners of your company,

2133
01:11:53,330 --> 01:11:55,540
#perfmatters,
#perfmatters, #perfmatters.

2134
01:11:55,540 --> 01:11:57,870
It's going to be the
thing that separates

2135
01:11:57,870 --> 01:12:00,590
the billion-dollar
companies from everybody

2136
01:12:00,590 --> 01:12:03,202
else on the mobile
web in the next year.

2137
01:12:03,202 --> 01:12:04,160
In fact, it already is.

2138
01:12:04,160 --> 01:12:05,990
It's already [INAUDIBLE].

2139
01:12:05,990 --> 01:12:07,050
Challenge everyone.

2140
01:12:07,050 --> 01:12:08,841
Hold them to the
standards of #perfmatters.

2141
01:12:08,841 --> 01:12:10,390
Now you can start the clap.

2142
01:12:10,390 --> 01:12:10,890
Yes.

2143
01:12:10,890 --> 01:12:11,790
[APPLAUSE]

2144
01:12:11,790 --> 01:12:13,940
COLT MCANLIS: Thank
you for your time.

2145
01:12:13,940 --> 01:12:19,901

