1
00:00:00,000 --> 00:00:01,100
ARUN NAGARAJAN: Hello,
everybody.

2
00:00:01,100 --> 00:00:03,280
My name is Arun Nagarajan, and
I'm with the Google Apps

3
00:00:03,280 --> 00:00:04,420
Script Team.

4
00:00:04,420 --> 00:00:06,470
JOHN MCGOWAN: My name is John
McGowan, and I'm a developer

5
00:00:06,470 --> 00:00:07,700
on Google Drive.

6
00:00:07,700 --> 00:00:08,270
ARUN NAGARAJAN: Excellent.

7
00:00:08,270 --> 00:00:09,900
This session is Integrate
Google Drive

8
00:00:09,900 --> 00:00:11,580
with Google Apps Script.

9
00:00:11,580 --> 00:00:14,480
And we're really excited for
all of you to be here.

10
00:00:14,480 --> 00:00:16,940
Google Drive is a storage and
collaboration platform with

11
00:00:16,940 --> 00:00:19,660
millions of users with
billions of files.

12
00:00:19,660 --> 00:00:21,630
In this session, you will
learn how to write

13
00:00:21,630 --> 00:00:24,690
applications that provide
value to those users.

14
00:00:24,690 --> 00:00:27,230
There are many ways to write
these applications, but today

15
00:00:27,230 --> 00:00:29,040
we're going to focus on an
exciting platform called

16
00:00:29,040 --> 00:00:31,920
Google Apps Script, which we
think is really an easy way to

17
00:00:31,920 --> 00:00:34,380
get started, but also a powerful
way to deliver value

18
00:00:34,380 --> 00:00:35,870
to these users.

19
00:00:35,870 --> 00:00:37,960
And we're going to tell you this
story by focusing on two

20
00:00:37,960 --> 00:00:39,690
integration scenarios.

21
00:00:39,690 --> 00:00:43,530
The first one is having your
application available to the

22
00:00:43,530 --> 00:00:46,600
user in the interface that
they're already used to &mdash;

23
00:00:46,600 --> 00:00:47,916
drive.google.com.

24
00:00:47,916 --> 00:00:50,510
Real easy to remember, probably
the home page for a

25
00:00:50,510 --> 00:00:53,410
lot of folks that are living
in Google Drive.

26
00:00:53,410 --> 00:00:56,240
This means being available in
the Create menu, and also in

27
00:00:56,240 --> 00:00:59,320
the Open option for
a selected file.

28
00:00:59,320 --> 00:01:01,730
And then the second part, which
really goes well with

29
00:01:01,730 --> 00:01:05,140
the newly released service, is
the ability to access those

30
00:01:05,140 --> 00:01:07,740
billions of files from
Google Apps Script.

31
00:01:07,740 --> 00:01:10,850
So being able to access those
files &mdash; write files, changing

32
00:01:10,850 --> 00:01:11,840
permissions &mdash;

33
00:01:11,840 --> 00:01:14,890
as the user from Google
Apps Script.

34
00:01:14,890 --> 00:01:16,980
So those are the two things
we're going to show you.

35
00:01:16,980 --> 00:01:19,290
But we think it's really
important to show you this

36
00:01:19,290 --> 00:01:20,350
with a live demo.

37
00:01:20,350 --> 00:01:23,520
So we're going to start off by
showing off a demo, and then

38
00:01:23,520 --> 00:01:27,040
come back and deconstruct what
we did in a nice flow.

39
00:01:27,040 --> 00:01:29,770
Yesterday at the keynote, you
heard our leaders tell you

40
00:01:29,770 --> 00:01:32,820
that we have 25 million users
in the education space.

41
00:01:32,820 --> 00:01:34,990
It's a really important
segment for us.

42
00:01:34,990 --> 00:01:36,900
It's something that these users
are finding a lot of

43
00:01:36,900 --> 00:01:38,300
value in already.

44
00:01:38,300 --> 00:01:40,910
In the demo today, we're going
to &mdash; we made up an application

45
00:01:40,910 --> 00:01:42,550
called Quiz Manager.

46
00:01:42,550 --> 00:01:45,970
And the idea is to provide a
little utility to teachers to

47
00:01:45,970 --> 00:01:49,100
allow them to take what usually
is a roster in a

48
00:01:49,100 --> 00:01:52,230
spreadsheet, and then being
able to turn that into

49
00:01:52,230 --> 00:01:56,590
assigned assignments through a
Drive document, or a Google

50
00:01:56,590 --> 00:01:58,450
Document, I should say.

51
00:01:58,450 --> 00:01:59,870
Now that's what we
want to show you.

52
00:01:59,870 --> 00:02:01,450
That's the demo we're
going to build you.

53
00:02:01,450 --> 00:02:03,630
Some of the requirements that
you should keep in mind as

54
00:02:03,630 --> 00:02:06,760
we're showing you this is that
it should be the whole life

55
00:02:06,760 --> 00:02:09,220
cycle of the quiz that
we want to manage.

56
00:02:09,220 --> 00:02:12,400
Being able to start from the
roster all the way to then

57
00:02:12,400 --> 00:02:14,150
completing the quiz.

58
00:02:14,150 --> 00:02:18,290
We want it to be supportive
of multiple file creation.

59
00:02:18,290 --> 00:02:21,190
So one of the more painful
things sometimes is copying a

60
00:02:21,190 --> 00:02:24,120
file 15 times, renaming it
appropriately, and sharing it

61
00:02:24,120 --> 00:02:25,150
with the right people.

62
00:02:25,150 --> 00:02:27,210
So we want to take that human
error and pain out of the

63
00:02:27,210 --> 00:02:29,980
picture, and have it facilitate
the creation of

64
00:02:29,980 --> 00:02:31,490
multiple files.

65
00:02:31,490 --> 00:02:33,630
And we want it to be completely
integrated with the

66
00:02:33,630 --> 00:02:34,630
Drive interface.

67
00:02:34,630 --> 00:02:37,880
So the application itself has
very little UI by itself.

68
00:02:37,880 --> 00:02:39,470
You work with it in Drive.

69
00:02:39,470 --> 00:02:42,600
And we want to be built with
the easy-to-use platform

70
00:02:42,600 --> 00:02:46,750
that's easy to tweak, upgrade
to what the new requirements

71
00:02:46,750 --> 00:02:48,860
might be, and run
on the cloud.

72
00:02:48,860 --> 00:02:51,720
So I don't have to, as a teacher
a an administrative

73
00:02:51,720 --> 00:02:54,160
person at the school,
manage a lot of

74
00:02:54,160 --> 00:02:57,020
different systems, right?

75
00:02:57,020 --> 00:02:58,190
So let's go take a look.

76
00:02:58,190 --> 00:03:01,460
All the code is available on
our system, on GitHub.

77
00:03:01,460 --> 00:03:05,250
So don't have to worry about
getting access to the code.

78
00:03:05,250 --> 00:03:07,790
So I'm going to switch over
to the demo laptop.

79
00:03:07,790 --> 00:03:09,520
So here is Google Drive.

80
00:03:09,520 --> 00:03:11,680
Everybody's very familiar
with this.

81
00:03:11,680 --> 00:03:14,500
So like any good teacher,
there's a lot of different

82
00:03:14,500 --> 00:03:17,050
applications that this teacher's
already installed.

83
00:03:17,050 --> 00:03:19,670
What we want to do with this is
install a new application

84
00:03:19,670 --> 00:03:22,140
into this and then be able to
do some interesting things

85
00:03:22,140 --> 00:03:24,390
with the files in
Drive itself.

86
00:03:24,390 --> 00:03:27,650
So now I'm going to assume the
role of that teacher, and I'll

87
00:03:27,650 --> 00:03:29,630
play along as the teacher.

88
00:03:29,630 --> 00:03:32,630
So the teacher recently got an
email saying, there's an

89
00:03:32,630 --> 00:03:34,780
awesome new application that
you can install into your

90
00:03:34,780 --> 00:03:35,700
Google Drive.

91
00:03:35,700 --> 00:03:38,230
And it's really easy to install
and really easy to get

92
00:03:38,230 --> 00:03:41,665
started, and it'll help me
with my quiz management.

93
00:03:41,665 --> 00:03:45,490
So I'm going to click on the
link to get started.

94
00:03:45,490 --> 00:03:47,940
It's going to show me a simple
welcome screen to install the

95
00:03:47,940 --> 00:03:49,700
application.

96
00:03:49,700 --> 00:03:51,380
I go ahead and install it &mdash;

97
00:03:51,380 --> 00:03:54,310
a very standard, trusted screen
that tells me that this

98
00:03:54,310 --> 00:03:58,080
is from Google, do you want to
install this application into

99
00:03:58,080 --> 00:03:59,620
your Drive?

100
00:03:59,620 --> 00:04:02,770
This one, this user's Drive
Create Assignment, and that

101
00:04:02,770 --> 00:04:04,960
allows me to trust
that screen.

102
00:04:04,960 --> 00:04:06,120
I've installed it.

103
00:04:06,120 --> 00:04:08,780
Let me close that, go
back into Drive.

104
00:04:08,780 --> 00:04:11,510
Refresh my Drive window.

105
00:04:11,510 --> 00:04:14,600
And now we have a new option
available called Create

106
00:04:14,600 --> 00:04:15,360
Assignment.

107
00:04:15,360 --> 00:04:18,320
So it makes sense, as well, from
a teacher's perspective

108
00:04:18,320 --> 00:04:19,640
on what it does.

109
00:04:19,640 --> 00:04:21,480
So I'm going to say, let's
go ahead and create an

110
00:04:21,480 --> 00:04:22,820
assignment.

111
00:04:22,820 --> 00:04:25,840
So what's happening now is
that this application is

112
00:04:25,840 --> 00:04:29,400
working against the user's
Drive and creating the

113
00:04:29,400 --> 00:04:31,630
documents and the folder
structure necessary for the

114
00:04:31,630 --> 00:04:33,490
document to exist.

115
00:04:33,490 --> 00:04:35,290
So I'm going to hit
Close here.

116
00:04:35,290 --> 00:04:39,040
Go back to my drive, and now I
have a new folder called New

117
00:04:39,040 --> 00:04:40,370
Assignment.

118
00:04:40,370 --> 00:04:44,070
I'll go within it, and I see
that there is now a couple of

119
00:04:44,070 --> 00:04:45,490
files here of interest.

120
00:04:45,490 --> 00:04:49,490
There is a roster, and
there's also a

121
00:04:49,490 --> 00:04:51,790
template for quiz questions.

122
00:04:51,790 --> 00:04:52,450
OK?

123
00:04:52,450 --> 00:04:55,420
In order to facilitate the demo,
I've just kind of saved

124
00:04:55,420 --> 00:04:57,450
a sample roster.

125
00:04:57,450 --> 00:05:00,090
I'm going to copy and
paste that in.

126
00:05:00,090 --> 00:05:05,860
And we've also come up with a
quiz we think is a really good

127
00:05:05,860 --> 00:05:09,590
quiz to give to high
school students.

128
00:05:09,590 --> 00:05:13,070
It's a standard Google
quiz, I think.

129
00:05:13,070 --> 00:05:13,520
All right.

130
00:05:13,520 --> 00:05:17,550
So what I have now is a
quiz, a roster, and I

131
00:05:17,550 --> 00:05:19,270
think I'm good to go.

132
00:05:19,270 --> 00:05:22,450
So now what I'll do is I'll
come here, and I'll hit

133
00:05:22,450 --> 00:05:24,970
Publish Quiz.

134
00:05:24,970 --> 00:05:25,870
And that's going to spin.

135
00:05:25,870 --> 00:05:28,670
And in the meantime, I'm going
to switch over here.

136
00:05:28,670 --> 00:05:32,080
On the right side of my screen,
I am now a student.

137
00:05:32,080 --> 00:05:33,930
So that's my second persona.

138
00:05:33,930 --> 00:05:37,630
And what's going to happen is
a new file just popped into

139
00:05:37,630 --> 00:05:39,460
Jane's Drive.

140
00:05:39,460 --> 00:05:41,810
She didn't have to go and
refresh anything.

141
00:05:41,810 --> 00:05:44,480
This is the always online
collaborative aspect of Google

142
00:05:44,480 --> 00:05:46,190
Drive coming into play.

143
00:05:46,190 --> 00:05:49,110
And as far as the teacher's
concerned, the application's

144
00:05:49,110 --> 00:05:50,880
finished for him or her.

145
00:05:50,880 --> 00:05:55,040
And now there's a bunch more
files for the teacher to grade

146
00:05:55,040 --> 00:05:55,970
and look at.

147
00:05:55,970 --> 00:05:58,430
So let's go back to
being a student.

148
00:05:58,430 --> 00:06:00,100
I am Jane.

149
00:06:00,100 --> 00:06:01,490
I've come back in.

150
00:06:01,490 --> 00:06:05,340
And OK, the first question
I know the answer to.

151
00:06:05,340 --> 00:06:07,490
The next question
I think is 9.

152
00:06:07,490 --> 00:06:08,740
This one &mdash;

153
00:06:08,740 --> 00:06:12,050
that's kind of beyond me, so
I'm going to slack off, and

154
00:06:12,050 --> 00:06:14,410
let's say that I'm just going
to go to a movie and

155
00:06:14,410 --> 00:06:16,630
not solve this quiz.

156
00:06:16,630 --> 00:06:18,760
In the meantime, the deadline
has passed.

157
00:06:18,760 --> 00:06:22,410
The teacher decides now
to close the quiz.

158
00:06:22,410 --> 00:06:24,780
No longer can you add
more content to it.

159
00:06:24,780 --> 00:06:26,510
It's sort of like pencils
down, right?

160
00:06:26,510 --> 00:06:28,130
That's what that button does.

161
00:06:28,130 --> 00:06:31,560
And that's going to now spin,
and it's going to finish.

162
00:06:31,560 --> 00:06:34,690
And the quiz is now closed,
according to the quiz manager.

163
00:06:34,690 --> 00:06:37,420
Let's say Jane comes back, and
she's feeling all wise, and

164
00:06:37,420 --> 00:06:41,250
she says, I don't know,
this is tricky.

165
00:06:41,250 --> 00:06:43,310
And she tries to answer
the question anyway.

166
00:06:43,310 --> 00:06:43,980
Google Drive &mdash;

167
00:06:43,980 --> 00:06:46,310
Google Docs is going
to try to save it.

168
00:06:46,310 --> 00:06:49,670
It's going to do its best to
save what it thinks it can

169
00:06:49,670 --> 00:06:51,790
save automatically, but then
it realizes that the

170
00:06:51,790 --> 00:06:54,160
permissions have been taken
away from the quiz.

171
00:06:54,160 --> 00:06:57,200
So it's no longer a quiz where
the student can work on.

172
00:06:57,200 --> 00:07:00,680
All she can do now is reload
this page, which will bring

173
00:07:00,680 --> 00:07:02,210
her into her last save point.

174
00:07:02,210 --> 00:07:05,350
So she at least got two
questions, and it's now in

175
00:07:05,350 --> 00:07:07,150
View Only mode, right?

176
00:07:07,150 --> 00:07:09,950
So now at this point, she can
look at the comments and the

177
00:07:09,950 --> 00:07:12,350
grades that the teacher's
providing, but she can no

178
00:07:12,350 --> 00:07:15,340
longer enter any content
into the quiz.

179
00:07:15,340 --> 00:07:18,460
So that's what the whole
workflow is all about &mdash;

180
00:07:18,460 --> 00:07:22,840
being able to start something,
and then as a student take the

181
00:07:22,840 --> 00:07:26,240
quiz, and then come back in.

182
00:07:26,240 --> 00:07:27,660
So all that code is available.

183
00:07:27,660 --> 00:07:30,020
And what we're going to do now
is deconstruct what we just

184
00:07:30,020 --> 00:07:30,820
showed you.

185
00:07:30,820 --> 00:07:33,350
So what did we show you here?

186
00:07:33,350 --> 00:07:36,490
So we were able to take a
classroom example of being

187
00:07:36,490 --> 00:07:39,200
able to take a roster and
convert that into a set of

188
00:07:39,200 --> 00:07:42,690
assigned documents
for the quiz.

189
00:07:42,690 --> 00:07:45,130
We were able to work within the
Google Drive UI, as well.

190
00:07:45,130 --> 00:07:47,370
So we were able to meet
that requirement.

191
00:07:47,370 --> 00:07:51,280
And it was one click to publish
that assignment.

192
00:07:51,280 --> 00:07:53,540
So we were able to take the
roster and the template that

193
00:07:53,540 --> 00:07:55,920
was already there and then
assign that to the right

194
00:07:55,920 --> 00:07:58,410
people with the right privileges
at the right time,

195
00:07:58,410 --> 00:08:01,270
and then flip that back
and take it away.

196
00:08:01,270 --> 00:08:03,800
And you'll also notice that I
actually used files in the

197
00:08:03,800 --> 00:08:06,520
folder itself to act like
command runners.

198
00:08:06,520 --> 00:08:09,240
So when I clicked on it, it knew
the context of where it

199
00:08:09,240 --> 00:08:12,550
was and what it meant,
and operated on the

200
00:08:12,550 --> 00:08:13,890
files in that folder.

201
00:08:13,890 --> 00:08:16,970
So that's a little trick that
allows you to have little

202
00:08:16,970 --> 00:08:20,260
executable-like links from
within a folder and do some

203
00:08:20,260 --> 00:08:21,330
interesting things.

204
00:08:21,330 --> 00:08:23,880
And you'll also notice that it
was the default action for

205
00:08:23,880 --> 00:08:26,430
when I clicked on it, so
the default MIME type

206
00:08:26,430 --> 00:08:27,630
associated with it.

207
00:08:27,630 --> 00:08:30,010
Now there's a lot of
improvement ideas

208
00:08:30,010 --> 00:08:30,760
here for the viewers.

209
00:08:30,760 --> 00:08:32,929
We wanted to make sure that you
knew what else could be

210
00:08:32,929 --> 00:08:33,440
done with this.

211
00:08:33,440 --> 00:08:35,230
This is by no means a
finished product.

212
00:08:35,230 --> 00:08:36,909
It's really a set of
principles that we

213
00:08:36,909 --> 00:08:38,000
wanted to show you.

214
00:08:38,000 --> 00:08:40,320
There's a lot of ways you
could monitor progress.

215
00:08:40,320 --> 00:08:42,020
You could ask &mdash;

216
00:08:42,020 --> 00:08:44,530
you could write a little
application to see when the

217
00:08:44,530 --> 00:08:47,610
deadline's coming up and
alert the students.

218
00:08:47,610 --> 00:08:48,730
Close the assignments

219
00:08:48,730 --> 00:08:50,560
automatically on a timed trigger.

220
00:08:50,560 --> 00:08:52,800
These are things that are
possible in Apps Script.

221
00:08:52,800 --> 00:08:55,510
And also, having a nice
assignment dashboard.

222
00:08:55,510 --> 00:08:58,160
When is the student actually
working on it?

223
00:08:58,160 --> 00:09:00,910
Has she not even opened
the document?

224
00:09:00,910 --> 00:09:01,520
Things like that.

225
00:09:01,520 --> 00:09:03,320
So you're able to get history
and things like that from the

226
00:09:03,320 --> 00:09:05,740
Drive service, which
is pretty useful.

227
00:09:05,740 --> 00:09:07,620
The Drive API, I should say.

228
00:09:07,620 --> 00:09:10,780
So now, that was the demo to
kind of show you what's

229
00:09:10,780 --> 00:09:13,870
possible in the Google
Apps Script plus

230
00:09:13,870 --> 00:09:15,020
Google Drive world.

231
00:09:15,020 --> 00:09:17,690
Now let's take you through how
we built it and what some of

232
00:09:17,690 --> 00:09:21,550
the technical salient points are
for this particular demo.

233
00:09:21,550 --> 00:09:23,490
So we're going to show you
this in two parts.

234
00:09:23,490 --> 00:09:26,140
So first, I'm going to quickly
introduce Google Apps Script.

235
00:09:26,140 --> 00:09:29,250
And then, John's going to give
you more of the detailed

236
00:09:29,250 --> 00:09:31,610
deep-dive on what we did
in Apps Script itself.

237
00:09:31,610 --> 00:09:34,160
Then I'll talk about what was
really important in the

238
00:09:34,160 --> 00:09:35,420
Google Drive SDK.

239
00:09:35,420 --> 00:09:38,730
And then we'll bring it all
together at the end.

240
00:09:38,730 --> 00:09:41,530
So the important thing about
Google Apps Script, I think,

241
00:09:41,530 --> 00:09:45,150
that's really exciting to show
off is the fact that it is a

242
00:09:45,150 --> 00:09:47,880
cloud-based JavaScript platform
that allows you to do

243
00:09:47,880 --> 00:09:49,220
more with Google.

244
00:09:49,220 --> 00:09:51,100
It allows you to take apps that
you already love, like

245
00:09:51,100 --> 00:09:56,110
Gmail, Drive, Docs, Sites, and
then automate, integrate, and

246
00:09:56,110 --> 00:09:58,150
extend those applications.

247
00:09:58,150 --> 00:10:00,760
And you can do that beyond just
the Google APIs, as well.

248
00:10:00,760 --> 00:10:03,940
We have the ability to call
external services, as well.

249
00:10:03,940 --> 00:10:05,330
So I think that's really
important.

250
00:10:05,330 --> 00:10:08,540
And the best part of it is that
you're able to write the

251
00:10:08,540 --> 00:10:09,960
code in a browser.

252
00:10:09,960 --> 00:10:14,510
So that's an actual screenshot
of the browser with a script

253
00:10:14,510 --> 00:10:15,960
editor loaded up.

254
00:10:15,960 --> 00:10:18,386
The URL is script.google.com.

255
00:10:18,386 --> 00:10:20,170
You can try it on your Pixels.

256
00:10:20,170 --> 00:10:22,580
It's really easy to remember,
really easy to get to.

257
00:10:22,580 --> 00:10:26,170
And that actually in there is
a working example of an app

258
00:10:26,170 --> 00:10:28,460
that could archive
a Gmail inbox.

259
00:10:28,460 --> 00:10:29,960
There's no limits &mdash;

260
00:10:29,960 --> 00:10:32,320
it's not limited to the first
hundred, or something like

261
00:10:32,320 --> 00:10:34,790
that, so that will probably
time out in a large inbox.

262
00:10:34,790 --> 00:10:36,810
But the idea is that it's really
easy to write this

263
00:10:36,810 --> 00:10:39,260
JavaScript, and there are things
like auto-complete that

264
00:10:39,260 --> 00:10:41,570
make you even more productive
and comfortable within this

265
00:10:41,570 --> 00:10:44,250
environment.

266
00:10:44,250 --> 00:10:47,150
The important thing that made
this all possible is the fact

267
00:10:47,150 --> 00:10:50,330
that Google Apps Script apps
can be deployed as web

268
00:10:50,330 --> 00:10:51,440
applications.

269
00:10:51,440 --> 00:10:53,580
So that's the screenshot of
what the deployment screen

270
00:10:53,580 --> 00:10:54,270
looks like.

271
00:10:54,270 --> 00:10:56,900
That was announced last I/O, so
it's really exciting for us

272
00:10:56,900 --> 00:10:59,460
to use this for some interesting
capabilities.

273
00:10:59,460 --> 00:11:02,090
And what you essentially end up
doing is expose these web

274
00:11:02,090 --> 00:11:04,490
endpoints for your
business logic.

275
00:11:04,490 --> 00:11:06,900
And the business logic is what
John's going to talk about &mdash;

276
00:11:06,900 --> 00:11:09,860
how we were able to take the
calls, and perform operations

277
00:11:09,860 --> 00:11:11,400
on the user's Drive.

278
00:11:11,400 --> 00:11:14,880
We were able to also run the
application to execute as the

279
00:11:14,880 --> 00:11:17,380
user, rather than the developer
that wrote it.

280
00:11:17,380 --> 00:11:20,110
That's really important, because
we're trying to save

281
00:11:20,110 --> 00:11:22,830
to the user's Drive, not
the developer's Drive.

282
00:11:22,830 --> 00:11:26,120
So that authorization part is
really taken care of for you.

283
00:11:26,120 --> 00:11:28,500
And you're able to &mdash; if you have
Google Apps for Education

284
00:11:28,500 --> 00:11:30,880
or Google Apps for Business,
you can restrict the

285
00:11:30,880 --> 00:11:33,360
application to be only available
to people within

286
00:11:33,360 --> 00:11:34,570
your organization.

287
00:11:34,570 --> 00:11:36,780
So that's actually a really nice
feature of Google Apps

288
00:11:36,780 --> 00:11:40,620
Script to restrict that
access pretty easily.

289
00:11:40,620 --> 00:11:43,220
And from a developer standpoint,
all you need to do

290
00:11:43,220 --> 00:11:46,290
is implement a method called
doGet, which is very familiar

291
00:11:46,290 --> 00:11:49,120
for folks that have done Java
servlet programming, to

292
00:11:49,120 --> 00:11:52,770
execute the logic that you need,
receive the context that

293
00:11:52,770 --> 00:11:56,430
you need, and then return the
HTML, or any content you want

294
00:11:56,430 --> 00:11:57,550
to return back.

295
00:11:57,550 --> 00:12:00,200
Really straightforward
to do this.

296
00:12:00,200 --> 00:12:01,690
So now let's step back
and look at the

297
00:12:01,690 --> 00:12:05,090
Drive SDK bits of this.

298
00:12:05,090 --> 00:12:07,860
The Google Drive SDK allows you
to integrate deeply within

299
00:12:07,860 --> 00:12:08,740
the Google Drive UI.

300
00:12:08,740 --> 00:12:12,640
So it allows you to show your
application within the Create

301
00:12:12,640 --> 00:12:13,990
menu and the Open option.

302
00:12:13,990 --> 00:12:15,960
You do that by defining
the metadata in

303
00:12:15,960 --> 00:12:17,330
the Developer Console.

304
00:12:17,330 --> 00:12:20,730
So that's a one-time option,
a process that's a bit of a

305
00:12:20,730 --> 00:12:23,470
different console than you're
normally used to.

306
00:12:23,470 --> 00:12:25,760
It's
developers.google.com/console.

307
00:12:25,760 --> 00:12:27,750
Real easy to find once
you're there.

308
00:12:27,750 --> 00:12:30,696
And then I'll talk you through
what the settings you need to

309
00:12:30,696 --> 00:12:32,150
set up are.

310
00:12:32,150 --> 00:12:35,890
Then you write the web
application, which we showed

311
00:12:35,890 --> 00:12:38,870
you, to receive the context
and perform the logic.

312
00:12:38,870 --> 00:12:41,270
And then at the very end of it,
how does the user get your

313
00:12:41,270 --> 00:12:42,280
application?

314
00:12:42,280 --> 00:12:45,700
In our example, we installed
it by visiting a link, by

315
00:12:45,700 --> 00:12:48,710
requesting the drive.install
OAuth scope.

316
00:12:48,710 --> 00:12:50,720
You can also have your
application available in the

317
00:12:50,720 --> 00:12:52,290
Chrome Web Store, which
is really great for

318
00:12:52,290 --> 00:12:55,910
discoverability, reviews,
having more videos and

319
00:12:55,910 --> 00:12:58,140
screenshots of what your app
does and looks like.

320
00:12:58,140 --> 00:12:59,940
So that's actually really
powerful, as well.

321
00:12:59,940 --> 00:13:02,300
For our demo, it's a lot easier
to just email a link

322
00:13:02,300 --> 00:13:03,880
and showcase that capability.

323
00:13:03,880 --> 00:13:06,950
But I urge you to submit to
the Chrome Web Store for

324
00:13:06,950 --> 00:13:10,580
really commonly used
applications.

325
00:13:10,580 --> 00:13:13,620
So what is the lifecycle of
the app that we want to

326
00:13:13,620 --> 00:13:16,300
demonstrate today?

327
00:13:16,300 --> 00:13:20,040
It takes the click from the
Drive UI integration point and

328
00:13:20,040 --> 00:13:23,490
the Create in the Open option,
invokes a web app with a

329
00:13:23,490 --> 00:13:27,520
parameter called "state." Then
App Script kicks off its

330
00:13:27,520 --> 00:13:30,590
execution of the business logic,
and then uses the Drive

331
00:13:30,590 --> 00:13:34,480
App API in JavaScript to read
and write to the user's Drive.

332
00:13:34,480 --> 00:13:34,990
OK?

333
00:13:34,990 --> 00:13:37,550
So I'm going to talk about the
top part, and John's going to

334
00:13:37,550 --> 00:13:40,080
cover the bottom part, which is
the JavaScript API that we

335
00:13:40,080 --> 00:13:40,970
talked about.

336
00:13:40,970 --> 00:13:44,190
So this kind of explains how
Google Drive SDK and the

337
00:13:44,190 --> 00:13:48,240
Google Apps Script work
side-by-side.

338
00:13:48,240 --> 00:13:50,380
So let's go a little deeper into
the Drive SDK and talk

339
00:13:50,380 --> 00:13:54,010
about all the different settings
that are important.

340
00:13:54,010 --> 00:13:56,510
The first thing you need to
do is enable the Drive SDK

341
00:13:56,510 --> 00:13:58,520
Service in the Developer
Console.

342
00:13:58,520 --> 00:13:59,580
Real easy to find it.

343
00:13:59,580 --> 00:14:02,740
Just look for the Drive icon,
and it's Drive SDK.

344
00:14:02,740 --> 00:14:04,790
Flip it on, and then you'll
have a new panel

345
00:14:04,790 --> 00:14:06,210
on the bottom left.

346
00:14:06,210 --> 00:14:07,790
That has a lot of settings.

347
00:14:07,790 --> 00:14:10,360
It's really powerful in how
well you can brand your

348
00:14:10,360 --> 00:14:13,310
application for mobile support,
for all the different

349
00:14:13,310 --> 00:14:14,900
resolutions that we support.

350
00:14:14,900 --> 00:14:17,950
But really, the important ones
that you have to remember to

351
00:14:17,950 --> 00:14:20,720
deal with are the Open URL.

352
00:14:20,720 --> 00:14:25,680
So your app has to open at least
one type of document.

353
00:14:25,680 --> 00:14:27,400
That's a requirement.

354
00:14:27,400 --> 00:14:31,296
In our example, notice that the
URL is script.google.com,

355
00:14:31,296 --> 00:14:34,080
because we published
an App Script app.

356
00:14:34,080 --> 00:14:36,760
You can register default MIME
types that your application is

357
00:14:36,760 --> 00:14:37,590
associated with.

358
00:14:37,590 --> 00:14:41,230
And that's the trick that we
used to have our apps open

359
00:14:41,230 --> 00:14:43,560
when you click on that icon,
that little floral

360
00:14:43,560 --> 00:14:44,660
icon that we had.

361
00:14:44,660 --> 00:14:46,940
And you can make up your
own MIME types.

362
00:14:46,940 --> 00:14:49,910
This is something that you're
able to define ad hoc and

363
00:14:49,910 --> 00:14:52,200
respond to those.

364
00:14:52,200 --> 00:14:54,880
And you can also have the Create
With option available.

365
00:14:54,880 --> 00:14:58,680
So again, notice the URL is
script.google.com, followed by

366
00:14:58,680 --> 00:15:00,110
your deployed URL.

367
00:15:00,110 --> 00:15:01,180
So that's really important.

368
00:15:01,180 --> 00:15:03,530
So those are three things that
you have to get right.

369
00:15:03,530 --> 00:15:05,870
The others are more about
branding and the images and

370
00:15:05,870 --> 00:15:07,800
things like that.

371
00:15:07,800 --> 00:15:10,220
So what are the actions
that these URLs

372
00:15:10,220 --> 00:15:11,670
receive that we showed?

373
00:15:11,670 --> 00:15:14,400
They get URL-encoded
JSON strings.

374
00:15:14,400 --> 00:15:17,320
That's what a state parameter
looks like.

375
00:15:17,320 --> 00:15:20,250
It's actually pretty
self-explanatory to see that

376
00:15:20,250 --> 00:15:23,320
it's the folder ID, what type
of action it is, and then a

377
00:15:23,320 --> 00:15:24,690
user identifier.

378
00:15:24,690 --> 00:15:28,330
So in that case, it's saying the
app &mdash; the user requested

379
00:15:28,330 --> 00:15:31,400
the Create action while
in that folder.

380
00:15:31,400 --> 00:15:33,540
So you can actually get the
context of which folder the

381
00:15:33,540 --> 00:15:36,490
users is in, so you could do
some nested things, as well,

382
00:15:36,490 --> 00:15:37,780
if you wanted do.

383
00:15:37,780 --> 00:15:42,280
And then the Open option tells
you, OK, which files did the

384
00:15:42,280 --> 00:15:43,620
user want to open?

385
00:15:43,620 --> 00:15:45,450
And you notice that
that's an array.

386
00:15:45,450 --> 00:15:49,970
So if you allow the application
to, it'll let the

387
00:15:49,970 --> 00:15:52,860
user select multiple options,
and then open that.

388
00:15:52,860 --> 00:15:55,430
So in our case, since we're
executing commands, it doesn't

389
00:15:55,430 --> 00:15:57,700
make sense to have multiple
selected.

390
00:15:57,700 --> 00:15:59,820
So we only have one available.

391
00:15:59,820 --> 00:16:02,390
There's a third type of
parameter called Import, which

392
00:16:02,390 --> 00:16:03,680
we won't talk about here.

393
00:16:03,680 --> 00:16:07,260
But that allows you to take
pre-defined types and convert

394
00:16:07,260 --> 00:16:11,130
them, if you wanted, in
your application.

395
00:16:11,130 --> 00:16:13,430
Now let's talk about from
a user standpoint.

396
00:16:13,430 --> 00:16:16,210
This is what the user saw when
they visited the link.

397
00:16:16,210 --> 00:16:18,430
In fact, in this example, I have
a couple of additional

398
00:16:18,430 --> 00:16:19,670
scopes requested.

399
00:16:19,670 --> 00:16:22,420
But in our example, it's just
add to Google Drive.

400
00:16:22,420 --> 00:16:26,090
Very easy and simple screen that
users are used to from

401
00:16:26,090 --> 00:16:27,640
installing applications.

402
00:16:27,640 --> 00:16:31,600
And as long the user clicks on
Allow Access, your app is now

403
00:16:31,600 --> 00:16:33,520
linked to the user's Drive.

404
00:16:33,520 --> 00:16:36,080
Now what's cool about installing
applications to

405
00:16:36,080 --> 00:16:40,520
Drive is that it's not like your
desktop world or mobile

406
00:16:40,520 --> 00:16:44,060
world where you're downloading
binaries onto your machine.

407
00:16:44,060 --> 00:16:47,230
You're essentially linking two
web applications together, one

408
00:16:47,230 --> 00:16:49,960
being the user's Google Drive,
the other being your web

409
00:16:49,960 --> 00:16:50,810
application.

410
00:16:50,810 --> 00:16:53,260
And Google in the middle
mediating that, and ensuring

411
00:16:53,260 --> 00:16:54,590
that everything is
done securely and

412
00:16:54,590 --> 00:16:55,910
appropriately, right?

413
00:16:55,910 --> 00:16:58,310
So that's really nice in that
you're installing a

414
00:16:58,310 --> 00:17:00,680
cloud-based application
is really linking

415
00:17:00,680 --> 00:17:03,770
the domains and whatnot.

416
00:17:03,770 --> 00:17:07,160
And then one nice bonus is that
you can actually have

417
00:17:07,160 --> 00:17:08,549
your application be
mobile-friendly.

418
00:17:08,549 --> 00:17:12,020
So if you check that option,
it'll in fact allow the user &mdash;

419
00:17:12,020 --> 00:17:14,520
the teacher, in this case &mdash; to
kick off the Create Assignment

420
00:17:14,520 --> 00:17:18,280
option from their Android
phone or smartphone.

421
00:17:18,280 --> 00:17:20,760
So they're able to very
easily do this.

422
00:17:20,760 --> 00:17:23,710
It'll have the same parameters
passed in, and then it'll

423
00:17:23,710 --> 00:17:26,349
actually only work with the
Open option for now.

424
00:17:26,349 --> 00:17:28,430
The Create option is
not supported.

425
00:17:28,430 --> 00:17:30,490
But that's a nice little thing
you should do to your

426
00:17:30,490 --> 00:17:34,270
applications if you have a
simple enough web app.

427
00:17:34,270 --> 00:17:37,290
So what we just saw so far
is, how do you make your

428
00:17:37,290 --> 00:17:41,150
application available within
the Google Drive UI?

429
00:17:41,150 --> 00:17:44,890
What John's going to now do is
talk about how do we take that

430
00:17:44,890 --> 00:17:47,440
invocation and then do the
business logic behind it to

431
00:17:47,440 --> 00:17:49,046
create the files.

432
00:17:49,046 --> 00:17:51,470
JOHN MCGOWAN: Thank you, Arun.

433
00:17:51,470 --> 00:17:54,400
So at this point, I want
to do a quick overview.

434
00:17:54,400 --> 00:17:57,700
Arun talked about Drive SDK, and
what it looks like for a

435
00:17:57,700 --> 00:18:01,260
developer to integrate an
application with the Drive UI.

436
00:18:01,260 --> 00:18:03,930
And also, what it looks like
for a user to install an

437
00:18:03,930 --> 00:18:07,070
application within
the Drive UI.

438
00:18:07,070 --> 00:18:09,600
I'm going to talk about a new
Drive service that we

439
00:18:09,600 --> 00:18:12,320
announced this week that really
just integrates with

440
00:18:12,320 --> 00:18:15,610
the user's files within Drive.

441
00:18:15,610 --> 00:18:19,870
We created a new service for
a variety of reasons.

442
00:18:19,870 --> 00:18:23,670
If you remember, we had a
Docs List API before.

443
00:18:23,670 --> 00:18:26,360
But with the new service, we
built it on top of the Drive

444
00:18:26,360 --> 00:18:28,790
API that we launched
last year.

445
00:18:28,790 --> 00:18:31,870
And this allowed us to provide
a bunch of new features,

446
00:18:31,870 --> 00:18:36,770
including new search
functionality that we couldn't

447
00:18:36,770 --> 00:18:38,940
provide in the old API.

448
00:18:38,940 --> 00:18:43,460
This allows us to do searches
on the file's metadata and

449
00:18:43,460 --> 00:18:45,710
MIME types and stuff like that,
rather than just the

450
00:18:45,710 --> 00:18:49,340
document's content or title.

451
00:18:49,340 --> 00:18:55,430
We also thought about how
certain processes was very

452
00:18:55,430 --> 00:18:57,820
complicated, such as getting a

453
00:18:57,820 --> 00:19:00,080
collection of files or folders.

454
00:19:00,080 --> 00:19:04,770
So we added iterators in order
to make retrieving collections

455
00:19:04,770 --> 00:19:06,920
of files and folders much
easier to do and

456
00:19:06,920 --> 00:19:08,710
much simpler to code.

457
00:19:08,710 --> 00:19:10,770
I'll give you guys a code demo
of this later in the

458
00:19:10,770 --> 00:19:12,730
presentation.

459
00:19:12,730 --> 00:19:15,270
Since we are providing a new
service, we decided to add

460
00:19:15,270 --> 00:19:16,980
some new features, as well.

461
00:19:16,980 --> 00:19:20,830
One of the top three features
that were requested in the

462
00:19:20,830 --> 00:19:25,250
Docs List API was to change
the ownership

463
00:19:25,250 --> 00:19:26,840
of a file or a folder.

464
00:19:26,840 --> 00:19:28,910
So we've added that into
this new service.

465
00:19:28,910 --> 00:19:31,310
And I'm really excited to see
what you guys are going to be

466
00:19:31,310 --> 00:19:32,340
doing with this &mdash;

467
00:19:32,340 --> 00:19:33,900
the whole service, in general.

468
00:19:33,900 --> 00:19:36,220
But I'll get into that more.

469
00:19:36,220 --> 00:19:38,840
Also, another feature that we
did, since we were focusing on

470
00:19:38,840 --> 00:19:43,380
sharing already, is we also
added the ability to change

471
00:19:43,380 --> 00:19:45,770
the default sharing settings
of a document.

472
00:19:45,770 --> 00:19:48,670
So now you can share a document
to an entire domain,

473
00:19:48,670 --> 00:19:54,240
or publicly for anyone to view
or edit or comment on.

474
00:19:54,240 --> 00:19:57,130
So what does this look like?

475
00:19:57,130 --> 00:20:02,100
We made it a one-line change to
change the default sharing

476
00:20:02,100 --> 00:20:04,150
visibility of a file.

477
00:20:04,150 --> 00:20:06,160
So this one line, it
will take the quiz

478
00:20:06,160 --> 00:20:08,430
template from Arun's demo.

479
00:20:08,430 --> 00:20:10,670
We take the template of the
quiz, and we can share it to

480
00:20:10,670 --> 00:20:13,750
anyone who has a link so they
can view it, and make a copy

481
00:20:13,750 --> 00:20:16,810
of it if they wish.

482
00:20:16,810 --> 00:20:21,360
So you can do the same thing
through the Drive UI, and it

483
00:20:21,360 --> 00:20:23,010
takes two parameters.

484
00:20:23,010 --> 00:20:26,540
One is the scope of people
that have access to the

485
00:20:26,540 --> 00:20:29,590
document, and the other is the
permission that they have.

486
00:20:29,590 --> 00:20:34,270
And this is how it relates to
the Google Drive UI, as well.

487
00:20:34,270 --> 00:20:37,190
And again, I spoke about the
iterators in order to make it

488
00:20:37,190 --> 00:20:39,620
easier to retrieve files
and folders.

489
00:20:39,620 --> 00:20:43,860
Before, you had to deal with
indexing and page tokens.

490
00:20:43,860 --> 00:20:46,500
Now, it only takes a couple
lines of code in order to

491
00:20:46,500 --> 00:20:49,030
retrieve all the files and
folders of a document.

492
00:20:49,030 --> 00:20:51,660
Or in this case, we're
getting a quiz for a

493
00:20:51,660 --> 00:20:53,330
student and moving it.

494
00:20:53,330 --> 00:20:55,540
So we just pull it out of all
of the folders that it's

495
00:20:55,540 --> 00:20:56,860
currently in.

496
00:20:56,860 --> 00:21:00,280
And this is just a
five-line change.

497
00:21:00,280 --> 00:21:02,460
At this point, I'd like to show
you a quick demo of the

498
00:21:02,460 --> 00:21:04,250
code in action.

499
00:21:04,250 --> 00:21:07,190
And since we're all students
of life, it's going to

500
00:21:07,190 --> 00:21:13,050
continue being a demo of
student versus teacher.

501
00:21:13,050 --> 00:21:17,700
Now I have this code
here, and it's not

502
00:21:17,700 --> 00:21:19,070
production-level code.

503
00:21:19,070 --> 00:21:20,970
It's just going to be
a quick code demo.

504
00:21:20,970 --> 00:21:24,530
What it's going to do is it's
going to create a folder for a

505
00:21:24,530 --> 00:21:29,110
student, make a copy of our quiz
template, copy that into

506
00:21:29,110 --> 00:21:32,260
the folder, and then share
it with our student.

507
00:21:32,260 --> 00:21:34,430
So at the beginning,
it's very simple.

508
00:21:34,430 --> 00:21:39,130
All that we do is we get the
quiz template, and this is the

509
00:21:39,130 --> 00:21:40,930
same as our old API.

510
00:21:40,930 --> 00:21:43,680
And then we share it publicly
for anyone who has a link so

511
00:21:43,680 --> 00:21:46,930
they can view it, make
a copy of it.

512
00:21:46,930 --> 00:21:49,735
Finally, we make a copy of
it, calling it quiz 2.0.

513
00:21:49,735 --> 00:21:53,700
You know, everything
online is 2.0.

514
00:21:53,700 --> 00:21:54,950
I heard one giggle.

515
00:21:54,950 --> 00:21:57,540

516
00:21:57,540 --> 00:21:59,800
So we create a folder for
our student, JerryBob.

517
00:21:59,800 --> 00:22:01,910
He was my favorite student.

518
00:22:01,910 --> 00:22:05,990
And at this point, we're going
to take all the parents of our

519
00:22:05,990 --> 00:22:10,270
quiz so that we can move the
quiz into JerryBob's folder.

520
00:22:10,270 --> 00:22:13,390
These four lines will
remove the quiz from

521
00:22:13,390 --> 00:22:14,860
whatever folder it's in.

522
00:22:14,860 --> 00:22:18,030
When you make a copy of a
document, it defaults in the

523
00:22:18,030 --> 00:22:19,840
same folder as the original
document.

524
00:22:19,840 --> 00:22:22,340
So we're just trying to move
it out of those folders.

525
00:22:22,340 --> 00:22:24,390
And then this last line
will add the quiz

526
00:22:24,390 --> 00:22:27,650
to JerryBob's folder.

527
00:22:27,650 --> 00:22:30,440
Finally, we share the folder
with JerryBob.

528
00:22:30,440 --> 00:22:35,340
And it will propagate down to
any documents within the

529
00:22:35,340 --> 00:22:38,390
folder, so JerryBob will have
edit access for the folder,

530
00:22:38,390 --> 00:22:40,520
and the files within it.

531
00:22:40,520 --> 00:22:42,690
And in order to prevent
cheating &mdash;

532
00:22:42,690 --> 00:22:45,220
because JerryBob likes to talk
with Jimmy, sits right next to

533
00:22:45,220 --> 00:22:46,810
him in class.

534
00:22:46,810 --> 00:22:50,120
Anyways, we make sure that he's
not able to share the

535
00:22:50,120 --> 00:22:51,250
document, as well.

536
00:22:51,250 --> 00:22:52,500
This is a new function that
we've also added.

537
00:22:52,500 --> 00:22:55,710

538
00:22:55,710 --> 00:22:57,640
So &mdash;

539
00:22:57,640 --> 00:22:58,050
oops.

540
00:22:58,050 --> 00:23:01,590
Actually, I wanted
to run that.

541
00:23:01,590 --> 00:23:04,370
So I'm going to go ahead and
run this so you can see the

542
00:23:04,370 --> 00:23:05,845
files that it creates.

543
00:23:05,845 --> 00:23:08,110
And obviously, it's running
in the bar up here.

544
00:23:08,110 --> 00:23:09,320
I didn't install this app.

545
00:23:09,320 --> 00:23:12,460
I'm just running it within
the script as a demo.

546
00:23:12,460 --> 00:23:14,710
Obviously, you can create
an application that does

547
00:23:14,710 --> 00:23:16,730
all this for you.

548
00:23:16,730 --> 00:23:19,520
So we have our assignment
templates over here, and you

549
00:23:19,520 --> 00:23:23,740
can see the quiz template
is shared with

550
00:23:23,740 --> 00:23:25,200
anyone who has the link.

551
00:23:25,200 --> 00:23:28,600
And they can view it,
just as we wanted.

552
00:23:28,600 --> 00:23:31,380
And then here's JerryBob's
folder, which is shared.

553
00:23:31,380 --> 00:23:34,100
And I'm going to go in and
show you that quiz 2.0 is

554
00:23:34,100 --> 00:23:36,760
shared with JerryBob.

555
00:23:36,760 --> 00:23:37,420
So here he is.

556
00:23:37,420 --> 00:23:38,330
He can edit.

557
00:23:38,330 --> 00:23:43,750
And also, only the owner can
change the permissions.

558
00:23:43,750 --> 00:23:45,000
Great.

559
00:23:45,000 --> 00:23:48,530

560
00:23:48,530 --> 00:23:53,090
Moving on, I mentioned that we
have more complicated search

561
00:23:53,090 --> 00:23:54,490
functionality.

562
00:23:54,490 --> 00:23:57,590
Before, you could only search on
title, or what the contents

563
00:23:57,590 --> 00:24:00,340
of a document, or some
high-level searches.

564
00:24:00,340 --> 00:24:02,540
But now we've add &mdash; since we're
built on top of the

565
00:24:02,540 --> 00:24:05,920
Drive API, we get all
that feature.

566
00:24:05,920 --> 00:24:08,230
So you can now search on
the file's metadata.

567
00:24:08,230 --> 00:24:10,540
You can search for
the date the file

568
00:24:10,540 --> 00:24:13,280
was created or modified.

569
00:24:13,280 --> 00:24:15,830
And also, get a collection of
all the files a specific user

570
00:24:15,830 --> 00:24:17,670
has access to.

571
00:24:17,670 --> 00:24:19,850
Obviously, you can also combine
these together to get

572
00:24:19,850 --> 00:24:24,290
very granular searches and get
just the files you want.

573
00:24:24,290 --> 00:24:27,050
There are few things to note
with the new service.

574
00:24:27,050 --> 00:24:30,680
One of the things is we no
longer expose email addresses.

575
00:24:30,680 --> 00:24:34,110
This is due to privacy
concerns.

576
00:24:34,110 --> 00:24:37,320
You can still add editors and
viewers to documents using

577
00:24:37,320 --> 00:24:40,290
their email address, and you
can also get what kind of

578
00:24:40,290 --> 00:24:44,260
access a specific user has
to documents, as well.

579
00:24:44,260 --> 00:24:47,470
And once again, since this was
built on the Drive API, we are

580
00:24:47,470 --> 00:24:49,810
able to offer a bunch of other
features that we didn't have

581
00:24:49,810 --> 00:24:53,860
time to talk about in our
presentation today.

582
00:24:53,860 --> 00:24:55,350
But we also &mdash;

583
00:24:55,350 --> 00:24:57,840
because it's also built on
Google Apps Script, we were

584
00:24:57,840 --> 00:25:01,370
able to take care of all the
authorization flows for you,

585
00:25:01,370 --> 00:25:03,900
as Arun demoed earlier.

586
00:25:03,900 --> 00:25:07,280
And it's all built into the
cloud, so you can code on it

587
00:25:07,280 --> 00:25:08,740
wherever you want.

588
00:25:08,740 --> 00:25:11,330
With our new Pixel you can do
this out in the grass, get

589
00:25:11,330 --> 00:25:13,010
yourself a tan.

590
00:25:13,010 --> 00:25:15,370
One thing to point out is
Arun's demo was actually

591
00:25:15,370 --> 00:25:18,300
originally written with
the old Docs List API.

592
00:25:18,300 --> 00:25:21,090
And it's actually really easy to
migrate from the old API to

593
00:25:21,090 --> 00:25:23,330
the new Drive service,
as well.

594
00:25:23,330 --> 00:25:26,575
I went and migrated it over out
in the sun, and as you can

595
00:25:26,575 --> 00:25:28,160
tell, I didn't get
a very good tan.

596
00:25:28,160 --> 00:25:32,470
So, it was a little too easy,
but we're really excited to

597
00:25:32,470 --> 00:25:37,440
see what you guys are going to
do with the new Drive SDK and

598
00:25:37,440 --> 00:25:39,600
Google Apps Script, and
this new service,

599
00:25:39,600 --> 00:25:41,720
and putting it together.

600
00:25:41,720 --> 00:25:43,870
So hopefully you guys can go out
and get a tan, as well, as

601
00:25:43,870 --> 00:25:46,140
you build some pretty
cool apps.

602
00:25:46,140 --> 00:25:48,390
We look forward to hearing what
feedback you guys have on

603
00:25:48,390 --> 00:25:49,900
this presentation.

604
00:25:49,900 --> 00:25:52,540
But at this point, we are open
to taking your questions.

605
00:25:52,540 --> 00:25:55,190
We have two microphones
in the center here.

606
00:25:55,190 --> 00:25:56,330
Once again, this is Arun.

607
00:25:56,330 --> 00:25:58,002
My name's John.

608
00:25:58,002 --> 00:26:06,840
[APPLAUSE]

609
00:26:06,840 --> 00:26:07,920
AUDIENCE: Hi.

610
00:26:07,920 --> 00:26:12,240
On the transfer ownership of the
documents, is there a way

611
00:26:12,240 --> 00:26:16,110
to transfer ownership to public
Gmail accounts and

612
00:26:16,110 --> 00:26:20,740
import documents from a
public Gmail account?

613
00:26:20,740 --> 00:26:23,840
JOHN MCGOWAN: It will follow the
sharing permissions that

614
00:26:23,840 --> 00:26:25,410
you can do through the UI.

615
00:26:25,410 --> 00:26:27,300
So if you can do it through the
Drive UI, you can also do

616
00:26:27,300 --> 00:26:30,080
it through the new Drive
service, as well.

617
00:26:30,080 --> 00:26:31,400
ARUN NAGARAJAN: It's consistent
with what you're

618
00:26:31,400 --> 00:26:32,560
able to do in the UI.

619
00:26:32,560 --> 00:26:35,080
So if your domain allows your
documents to be shared outside

620
00:26:35,080 --> 00:26:36,240
of your domain &mdash;

621
00:26:36,240 --> 00:26:37,780
to, like, Gmail accounts &mdash;

622
00:26:37,780 --> 00:26:40,120
then you should be able to do
it with the API, as well.

623
00:26:40,120 --> 00:26:40,530
AUDIENCE: Perfect.

624
00:26:40,530 --> 00:26:43,070
Thank you.

625
00:26:43,070 --> 00:26:46,790
AUDIENCE: My question is,
you associate files

626
00:26:46,790 --> 00:26:48,750
through MIME types.

627
00:26:48,750 --> 00:26:53,430
What if another app also
registers for that MIME type?

628
00:26:53,430 --> 00:26:55,990
Can you prevent them from
opening your file?

629
00:26:55,990 --> 00:26:59,310
ARUN NAGARAJAN: The user
ultimately wins.

630
00:26:59,310 --> 00:27:00,510
Where is the Chrome book?

631
00:27:00,510 --> 00:27:00,820
Here.

632
00:27:00,820 --> 00:27:04,620
So the user is able to go into
the Manage Apps setting, and

633
00:27:04,620 --> 00:27:06,400
then decide what
the default is.

634
00:27:06,400 --> 00:27:11,420
So I don't know which gets the
default option, but the user

635
00:27:11,420 --> 00:27:13,220
ultimately can decide.

636
00:27:13,220 --> 00:27:15,460
AUDIENCE: But you
cannot prevent &mdash;

637
00:27:15,460 --> 00:27:16,460
the user has control?

638
00:27:16,460 --> 00:27:17,360
ARUN NAGARAJAN: The
user has control.

639
00:27:17,360 --> 00:27:18,304
That's right.

640
00:27:18,304 --> 00:27:21,090
AUDIENCE: Thanks.

641
00:27:21,090 --> 00:27:24,050
AUDIENCE: My question is, I was
in the session with Forms

642
00:27:24,050 --> 00:27:25,260
and Apps Script as well.

643
00:27:25,260 --> 00:27:26,355
Is there any cross,

644
00:27:26,355 --> 00:27:28,570
interoperability between the two?

645
00:27:28,570 --> 00:27:29,540
ARUN NAGARAJAN: Yeah.

646
00:27:29,540 --> 00:27:31,020
Well, not directly.

647
00:27:31,020 --> 00:27:32,960
But it all runs with
the same ecosystem

648
00:27:32,960 --> 00:27:34,100
of Google Apps Script.

649
00:27:34,100 --> 00:27:37,880
So you could conceivably write
an app that you're able to

650
00:27:37,880 --> 00:27:40,900
have a icon in the Create option
that, when you click on

651
00:27:40,900 --> 00:27:44,030
it, creates five new
Google forms.

652
00:27:44,030 --> 00:27:47,600
So you're able to script weaving
all the different APIs

653
00:27:47,600 --> 00:27:50,160
together, and build some
interesting workflows just

654
00:27:50,160 --> 00:27:51,240
like you describe.

655
00:27:51,240 --> 00:27:51,710
AUDIENCE: Could you even
do it the other

656
00:27:51,710 --> 00:27:53,700
way, where the form &mdash;

657
00:27:53,700 --> 00:27:56,290
you can attach maybe an
assignment to the form and

658
00:27:56,290 --> 00:28:00,170
have that go into Drive?

659
00:28:00,170 --> 00:28:01,490
ARUN NAGARAJAN: I'd have to
think about that a little bit.

660
00:28:01,490 --> 00:28:02,850
Maybe you could chat in
the Office Hours?

661
00:28:02,850 --> 00:28:06,960
But you'd have to manage
that linking yourself.

662
00:28:06,960 --> 00:28:07,600
AUDIENCE: Hi.

663
00:28:07,600 --> 00:28:08,230
I'm [? Devesh ?]

664
00:28:08,230 --> 00:28:08,930
[? Pramani ?] from
[? Cloud Coach. ?]

665
00:28:08,930 --> 00:28:09,830
I have a couple of questions.

666
00:28:09,830 --> 00:28:14,980
First, when you're copying a
document using the APIs, is

667
00:28:14,980 --> 00:28:17,590
there any way to copy the script
associated with the

668
00:28:17,590 --> 00:28:19,740
document, like a spreadsheet?

669
00:28:19,740 --> 00:28:22,590
When I copy a spreadsheet
through an API, the script

670
00:28:22,590 --> 00:28:23,990
doesn't get copied.

671
00:28:23,990 --> 00:28:24,660
ARUN NAGARAJAN: Is that right?

672
00:28:24,660 --> 00:28:24,950
AUDIENCE: Yeah.

673
00:28:24,950 --> 00:28:27,112
It's only the document
you copy.

674
00:28:27,112 --> 00:28:28,370
The script doesn't get copied.

675
00:28:28,370 --> 00:28:28,970
ARUN NAGARAJAN: OK.

676
00:28:28,970 --> 00:28:31,350
I wasn't familiar &mdash; is that only
for documents, or also

677
00:28:31,350 --> 00:28:31,540
for spreadsheets?

678
00:28:31,540 --> 00:28:33,450
AUDIENCE: Spreadsheet,
sites, everything.

679
00:28:33,450 --> 00:28:35,470
Whenever I do copy site
or copy documents &mdash;

680
00:28:35,470 --> 00:28:37,690
ARUN NAGARAJAN: So copying from
the UI is copying the

681
00:28:37,690 --> 00:28:38,680
scripts, but not the &mdash;

682
00:28:38,680 --> 00:28:40,450
AUDIENCE: I'm using APIs
to copy spreadsheet or

683
00:28:40,450 --> 00:28:41,900
document the site.

684
00:28:41,900 --> 00:28:44,800
Only the content gets
copied, except the

685
00:28:44,800 --> 00:28:45,690
script doesn't get copied.

686
00:28:45,690 --> 00:28:45,965
ARUN NAGARAJAN: OK.

687
00:28:45,965 --> 00:28:47,984
We'll have to investigate
that.

688
00:28:47,984 --> 00:28:49,010
AUDIENCE: Second thing is about

689
00:28:49,010 --> 00:28:50,190
performance of Apps Script.

690
00:28:50,190 --> 00:28:52,630
Is there anything that you have
standard best practices

691
00:28:52,630 --> 00:28:54,640
by which we can optimize
performance?

692
00:28:54,640 --> 00:28:57,420
Because as data starts
increasing with associated

693
00:28:57,420 --> 00:28:59,720
spreadsheet, it starts
degrading.

694
00:28:59,720 --> 00:29:01,830
And there is &mdash;

695
00:29:01,830 --> 00:29:03,810
is there a best practice that
you have, or something?

696
00:29:03,810 --> 00:29:05,360
ARUN NAGARAJAN: So, yeah,
there's actually a section on

697
00:29:05,360 --> 00:29:07,200
our website about how
do you optimize

698
00:29:07,200 --> 00:29:08,810
spreadsheet-based access.

699
00:29:08,810 --> 00:29:11,080
There's batch access
and batch write.

700
00:29:11,080 --> 00:29:15,180
At some point, you may even
exceed those thresholds.

701
00:29:15,180 --> 00:29:16,740
A spreadsheet's not
a database.

702
00:29:16,740 --> 00:29:19,880
And we have other products like
Fusion Table and BigQuery

703
00:29:19,880 --> 00:29:23,640
that solve the millions
of rows problem.

704
00:29:23,640 --> 00:29:26,230
So there's a fine line
there somewhere.

705
00:29:26,230 --> 00:29:29,990
But for hundreds of rows, even
thousands of rows, I've seen

706
00:29:29,990 --> 00:29:33,150
if you use the batch access
methods that we have, you're

707
00:29:33,150 --> 00:29:34,680
able to get decent
performance.

708
00:29:34,680 --> 00:29:36,600
And there's also caching
available.

709
00:29:36,600 --> 00:29:38,950
So if you could prevent from
going back into the

710
00:29:38,950 --> 00:29:41,900
spreadsheet every 10 minutes, or
whatever the threshold is,

711
00:29:41,900 --> 00:29:44,080
that might also help
performance.

712
00:29:44,080 --> 00:29:45,420
The caching service.

713
00:29:45,420 --> 00:29:46,260
AUDIENCE: Thank you.

714
00:29:46,260 --> 00:29:48,490
ARUN NAGARAJAN: Thank you.

715
00:29:48,490 --> 00:29:49,990
AUDIENCE: My question
is about finding the

716
00:29:49,990 --> 00:29:51,300
scripts that I create.

717
00:29:51,300 --> 00:29:53,780
Like, I've created scripts for
documents before, and I have

718
00:29:53,780 --> 00:29:55,250
to open the document and
then go to Script

719
00:29:55,250 --> 00:29:56,690
Manager to find them.

720
00:29:56,690 --> 00:29:58,570
With these that aren't
necessary linked to a

721
00:29:58,570 --> 00:30:01,000
particular document, will they
just show up in my Drive list?

722
00:30:01,000 --> 00:30:01,310
ARUN NAGARAJAN: Yeah.

723
00:30:01,310 --> 00:30:03,380
Yeah, that's a really
good question.

724
00:30:03,380 --> 00:30:06,320
So scripts, depending on how
you create them, are

725
00:30:06,320 --> 00:30:08,320
first-class items in Drive.

726
00:30:08,320 --> 00:30:11,490
So if you create them from the
Create menu here, or go to

727
00:30:11,490 --> 00:30:14,790
script.google.com, they're
considered top-level scripts.

728
00:30:14,790 --> 00:30:17,060
And they will show up here,
and you can share them and

729
00:30:17,060 --> 00:30:19,340
move them into a folder just
like any other file.

730
00:30:19,340 --> 00:30:22,170
But if they are within a
spreadsheet or within a

731
00:30:22,170 --> 00:30:24,460
document, think of it
almost like an image

732
00:30:24,460 --> 00:30:25,940
embedded in that document.

733
00:30:25,940 --> 00:30:29,280
So it kind of gets encapsulated
within the

734
00:30:29,280 --> 00:30:33,260
document, and you share it
with the document itself.

735
00:30:33,260 --> 00:30:34,520
It's not a separate item.

736
00:30:34,520 --> 00:30:36,465
It's called container-bound
scripts is the term we use.

737
00:30:36,465 --> 00:30:39,000

738
00:30:39,000 --> 00:30:39,072
AUDIENCE: Hi.

739
00:30:39,072 --> 00:30:42,750
My question is, can documents
created with the Drive SDK or

740
00:30:42,750 --> 00:30:45,100
Apps Script scripts
that you make be

741
00:30:45,100 --> 00:30:47,490
made available offline?

742
00:30:47,490 --> 00:30:48,380
JOHN MCGOWAN: Yes.

743
00:30:48,380 --> 00:30:51,830
They can be made available
offline, but you can't edit

744
00:30:51,830 --> 00:30:53,530
them offline &mdash;

745
00:30:53,530 --> 00:30:56,710
unless it's like a
Google document

746
00:30:56,710 --> 00:30:58,280
that has offline enabled.

747
00:30:58,280 --> 00:31:00,730
AUDIENCE: So it's just
a read-only view?

748
00:31:00,730 --> 00:31:03,110
ARUN NAGARAJAN: Well, it should
manage what the sync

749
00:31:03,110 --> 00:31:04,830
tool already does.

750
00:31:04,830 --> 00:31:06,220
So I'll have to think
about the one.

751
00:31:06,220 --> 00:31:07,940
That's a really interesting
question.

752
00:31:07,940 --> 00:31:09,770
Come by the Office Hours
right after this.

753
00:31:09,770 --> 00:31:10,360
AUDIENCE: We can
give that a try

754
00:31:10,360 --> 00:31:12,390
ARUN NAGARAJAN: We'll
do a quick test.

755
00:31:12,390 --> 00:31:14,160
Thank you.

756
00:31:14,160 --> 00:31:16,780
AUDIENCE: You said that you'd
removed the email addresses

757
00:31:16,780 --> 00:31:18,570
from the API.

758
00:31:18,570 --> 00:31:22,910
So is there any way to get a
list of documents that a user

759
00:31:22,910 --> 00:31:23,880
has access to?

760
00:31:23,880 --> 00:31:29,240
Or if you've got a document, get
the list of users who have

761
00:31:29,240 --> 00:31:30,670
access to that document?

762
00:31:30,670 --> 00:31:32,800
JOHN MCGOWAN: You can get a list
of documents that a user

763
00:31:32,800 --> 00:31:36,690
has access to using the
search functionality.

764
00:31:36,690 --> 00:31:38,660
However, at this point, you
can't get a list of email

765
00:31:38,660 --> 00:31:41,620
addresses that have access
to a document.

766
00:31:41,620 --> 00:31:41,920
AUDIENCE: OK.

767
00:31:41,920 --> 00:31:46,210
So if I know a particular
document, I can't see who else

768
00:31:46,210 --> 00:31:47,330
has access to that?

769
00:31:47,330 --> 00:31:48,010
JOHN MCGOWAN: Correct

770
00:31:48,010 --> 00:31:49,730
ARUN NAGARAJAN: You can ask &mdash;

771
00:31:49,730 --> 00:31:51,750
if you also know an email
address, and you know the

772
00:31:51,750 --> 00:31:54,890
document, you could say, does
this person have access?

773
00:31:54,890 --> 00:31:55,880
But that's about it.

774
00:31:55,880 --> 00:31:58,290
You cannot just get a list of
all email addresses against

775
00:31:58,290 --> 00:31:58,870
the document.

776
00:31:58,870 --> 00:31:59,320
AUDIENCE: OK.

777
00:31:59,320 --> 00:32:03,080
Is that even in Google
Apps for Business, if

778
00:32:03,080 --> 00:32:05,010
the document is &mdash;

779
00:32:05,010 --> 00:32:08,050
ARUN NAGARAJAN: That's
correct.

780
00:32:08,050 --> 00:32:09,470
AUDIENCE: Hi.

781
00:32:09,470 --> 00:32:12,470
Regarding the other question
about searching for your

782
00:32:12,470 --> 00:32:13,930
script files &mdash;

783
00:32:13,930 --> 00:32:17,960
when you have hundreds of
documents, is there any way to

784
00:32:17,960 --> 00:32:20,870
look into just the script
files you have?

785
00:32:20,870 --> 00:32:24,530
Because it's complicated, like
scrolling down between all the

786
00:32:24,530 --> 00:32:27,500
documents to find just
the script ones.

787
00:32:27,500 --> 00:32:31,380

788
00:32:31,380 --> 00:32:31,920
ARUN NAGARAJAN: Yeah.

789
00:32:31,920 --> 00:32:32,780
That's a good idea &mdash;

790
00:32:32,780 --> 00:32:35,720
write a script to find
all your scripts.

791
00:32:35,720 --> 00:32:40,350
I don't know what we have
that would solve that.

792
00:32:40,350 --> 00:32:43,730
JOHN MCGOWAN: You should be able
to do searches based on

793
00:32:43,730 --> 00:32:46,833
script in the advance search
functionality.

794
00:32:46,833 --> 00:32:47,970
I'm not sure if &mdash;

795
00:32:47,970 --> 00:32:48,100
AUDIENCE: Yeah.

796
00:32:48,100 --> 00:32:49,220
There's no script there.

797
00:32:49,220 --> 00:32:50,690
JOHN MCGOWAN: There is
no script there.

798
00:32:50,690 --> 00:32:51,130
ARUN NAGARAJAN: All right.

799
00:32:51,130 --> 00:32:52,440
JOHN MCGOWAN: All right.

800
00:32:52,440 --> 00:32:53,790
ARUN NAGARAJAN: Point taken.

801
00:32:53,790 --> 00:32:54,400
But you could &mdash;

802
00:32:54,400 --> 00:32:56,885
AUDIENCE: You can write scripts
in folders now.

803
00:32:56,885 --> 00:33:00,110
AUDIENCE: Yeah, that's
what I do.

804
00:33:00,110 --> 00:33:00,640
JOHN MCGOWAN: OK, cool.

805
00:33:00,640 --> 00:33:02,860
Thank you.

806
00:33:02,860 --> 00:33:03,270
AUDIENCE: Hi.

807
00:33:03,270 --> 00:33:08,480
Regarding the Drive search, did
wildcards make it into the

808
00:33:08,480 --> 00:33:10,120
new version?

809
00:33:10,120 --> 00:33:12,690
JOHN MCGOWAN: We did update
the Drive API with this.

810
00:33:12,690 --> 00:33:16,390
But since it's based on the
Drive API, we offer the same

811
00:33:16,390 --> 00:33:19,040
search functionality
as the Drive API.

812
00:33:19,040 --> 00:33:21,060
AUDIENCE: But wildcards
are not in?

813
00:33:21,060 --> 00:33:21,990
JOHN MCGOWAN: I'm not
entirely sure.

814
00:33:21,990 --> 00:33:24,020
I think the answer is no.

815
00:33:24,020 --> 00:33:25,040
ARUN NAGARAJAN: Not
at this point.

816
00:33:25,040 --> 00:33:25,590
JOHN MCGOWAN: Not
at this point.

817
00:33:25,590 --> 00:33:28,040
AUDIENCE: Thank you.

818
00:33:28,040 --> 00:33:29,200
AUDIENCE: Hi, good afternoon.

819
00:33:29,200 --> 00:33:32,600
Is there access to the version
control functionality that's

820
00:33:32,600 --> 00:33:38,140
inside documents and
spreadsheets by the SDK?

821
00:33:38,140 --> 00:33:40,170
JOHN MCGOWAN: The new
Drive service?

822
00:33:40,170 --> 00:33:42,010
AUDIENCE: The versioning
inside documents.

823
00:33:42,010 --> 00:33:44,620
So one of the things I'm trying
to do is try to version

824
00:33:44,620 --> 00:33:49,420
lock aspects of the document,
or a document in a certain

825
00:33:49,420 --> 00:33:50,170
amount of time.

826
00:33:50,170 --> 00:33:51,850
I've not managed to
find any way of

827
00:33:51,850 --> 00:33:53,760
looking into the versions.

828
00:33:53,760 --> 00:33:55,330
JOHN MCGOWAN: OK.

829
00:33:55,330 --> 00:33:57,160
At this point, we don't support
that in the Drive

830
00:33:57,160 --> 00:34:00,400
service that we just launched
for Apps Script.

831
00:34:00,400 --> 00:34:03,730
I think you can get the
change log using

832
00:34:03,730 --> 00:34:04,880
the Drive API, though.

833
00:34:04,880 --> 00:34:05,824
AUDIENCE: OK.

834
00:34:05,824 --> 00:34:07,240
AUDIENCE: That's only for
library files, though.

835
00:34:07,240 --> 00:34:09,600
But the Google Docs revision
history isn't exposed in any

836
00:34:09,600 --> 00:34:10,950
API right now.

837
00:34:10,950 --> 00:34:14,750
But we know that we're bad
for doing that, and &mdash;

838
00:34:14,750 --> 00:34:16,690
AUDIENCE: You're bad, you say?

839
00:34:16,690 --> 00:34:17,880
He's bad.

840
00:34:17,880 --> 00:34:18,984
ARUN NAGARAJAN: That's the
guy you want to convince.

841
00:34:18,984 --> 00:34:21,564
AUDIENCE: Currently, we are
figuring out ways of making

842
00:34:21,564 --> 00:34:24,600
ourselves feel less
bad about that.

843
00:34:24,600 --> 00:34:25,830
ARUN NAGARAJAN: Not solving
the problem, just

844
00:34:25,830 --> 00:34:26,850
feeling less bad.

845
00:34:26,850 --> 00:34:29,330
AUDIENCE: Just version control
is a big deal for legal audit

846
00:34:29,330 --> 00:34:32,489
trail for a lot of enterprises,
yeah?

847
00:34:32,489 --> 00:34:33,820
Thanks.

848
00:34:33,820 --> 00:34:34,139
ARUN NAGARAJAN: Thank you.

849
00:34:34,139 --> 00:34:35,040
AUDIENCE: I think
to that earlier

850
00:34:35,040 --> 00:34:36,420
question, if you type &mdash;

851
00:34:36,420 --> 00:34:40,150
or, going into Google Drive, and
Create With, I think you

852
00:34:40,150 --> 00:34:42,530
can choose Apps Script to bring
up your app scripts.

853
00:34:42,530 --> 00:34:44,300
ARUN NAGARAJAN: Oh, yeah.

854
00:34:44,300 --> 00:34:47,163
AUDIENCE: Also, with the Doc
List, are we going to &mdash; you're

855
00:34:47,163 --> 00:34:48,960
going to deprecate that
over a period of time?

856
00:34:48,960 --> 00:34:49,739
ARUN NAGARAJAN: Yep.

857
00:34:49,739 --> 00:34:51,360
So Docs List is deprecated.

858
00:34:51,360 --> 00:34:54,449
There's no sort of date
announced at this point where

859
00:34:54,449 --> 00:34:55,370
that will be turned off.

860
00:34:55,370 --> 00:34:59,000
But it's standard deprecation
policy, so we have an

861
00:34:59,000 --> 00:35:00,520
alternative now in Drive App.

862
00:35:00,520 --> 00:35:01,890
So we encourage you
to shift over.

863
00:35:01,890 --> 00:35:03,540
And like John said, it
was actually a very

864
00:35:03,540 --> 00:35:04,890
straightforward exercise.

865
00:35:04,890 --> 00:35:07,140
We've taken care to ensure
that the APIs are pretty

866
00:35:07,140 --> 00:35:08,070
consistent.

867
00:35:08,070 --> 00:35:11,623
So it should be sort of an
afternoon type thing.

868
00:35:11,623 --> 00:35:13,890
AUDIENCE: OK, thank you.

869
00:35:13,890 --> 00:35:14,800
AUDIENCE: Hello, again.

870
00:35:14,800 --> 00:35:21,040
Regarding revision history, is
there any roadmap to have

871
00:35:21,040 --> 00:35:25,150
Drive be involved with Vault?

872
00:35:25,150 --> 00:35:26,960
ARUN NAGARAJAN: Good question.

873
00:35:26,960 --> 00:35:29,160
I don't have any updates
on that.

874
00:35:29,160 --> 00:35:30,430
That's a good question.

875
00:35:30,430 --> 00:35:31,220
Do you know?

876
00:35:31,220 --> 00:35:32,279
JOHN MCGOWAN: I do not know.

877
00:35:32,279 --> 00:35:33,529
AUDIENCE: [INAUDIBLE]

878
00:35:33,529 --> 00:35:38,160

879
00:35:38,160 --> 00:35:40,390
AUDIENCE: Question
about delegation.

880
00:35:40,390 --> 00:35:44,190
Will it support delegation, the
Drive API, in Apps Script

881
00:35:44,190 --> 00:35:45,440
eventually?

882
00:35:45,440 --> 00:35:47,280

883
00:35:47,280 --> 00:35:49,980
JOHN MCGOWAN: That's something
that we're working on in Drive

884
00:35:49,980 --> 00:35:52,900
API that we know about.

885
00:35:52,900 --> 00:35:55,930
So right now, Drive API
doesn't support it.

886
00:35:55,930 --> 00:35:57,690
So we can't support it with
the Drive service, either,

887
00:35:57,690 --> 00:35:59,290
since we're built
on top of them.

888
00:35:59,290 --> 00:36:00,270
ARUN NAGARAJAN: So one of the
things you could do with Apps

889
00:36:00,270 --> 00:36:02,840
Script is that you could run
it as the developer.

890
00:36:02,840 --> 00:36:04,970
And then the developer has admin
rights, some of those

891
00:36:04,970 --> 00:36:06,210
things will come through.

892
00:36:06,210 --> 00:36:10,400
But what is difficult is the
hybrid models run partially as

893
00:36:10,400 --> 00:36:13,130
the user, and run partially
as the administrator.

894
00:36:13,130 --> 00:36:15,200
Those are the situations
that become difficult.

895
00:36:15,200 --> 00:36:18,110
But if you think about building
your application,

896
00:36:18,110 --> 00:36:20,670
knowing that there's
two options &mdash;

897
00:36:20,670 --> 00:36:22,530
run as the developer, and
run as the user &mdash;

898
00:36:22,530 --> 00:36:25,810
you can actually build most use
cases through if you just

899
00:36:25,810 --> 00:36:28,210
kind of think through
that with that lens.

900
00:36:28,210 --> 00:36:28,516
AUDIENCE: OK.

901
00:36:28,516 --> 00:36:31,610
Now what I've done, but not
with Apps Script, is

902
00:36:31,610 --> 00:36:32,660
delegation.

903
00:36:32,660 --> 00:36:37,520
Like, you can install the
scope in the domain.

904
00:36:37,520 --> 00:36:41,130
And then you can act like
an administrator.

905
00:36:41,130 --> 00:36:42,130
You are &mdash;

906
00:36:42,130 --> 00:36:46,060
the user is an administrator,
but can't specify which user

907
00:36:46,060 --> 00:36:48,790
to pretend to be.

908
00:36:48,790 --> 00:36:51,790
That's something that you are
considering integrating into

909
00:36:51,790 --> 00:36:53,110
Apps Script?

910
00:36:53,110 --> 00:36:55,070
ARUN NAGARAJAN: We're
looking into it.

911
00:36:55,070 --> 00:36:56,480
No updates at this point.

912
00:36:56,480 --> 00:36:56,810
AUDIENCE: Thanks.

913
00:36:56,810 --> 00:36:58,600
ARUN NAGARAJAN: Thank you.

914
00:36:58,600 --> 00:36:58,692
AUDIENCE: Hi.

915
00:36:58,692 --> 00:37:00,950
This might be slightly off
topic, but I was curious if

916
00:37:00,950 --> 00:37:03,220
we're going to have any options
to export in native

917
00:37:03,220 --> 00:37:06,230
format from Drive coming
anytime soon?

918
00:37:06,230 --> 00:37:08,760
I mean, I realize that
Word export is &mdash;

919
00:37:08,760 --> 00:37:12,240
or, Microsoft exports and Open
Doc are pretty high fidelity.

920
00:37:12,240 --> 00:37:13,520
But there's a lot of &mdash;

921
00:37:13,520 --> 00:37:15,570
in my situation, there's a lot
of users who are transferring

922
00:37:15,570 --> 00:37:17,240
data from one account to
another, and they end up

923
00:37:17,240 --> 00:37:20,520
exporting it and converting
it, and uploading it and

924
00:37:20,520 --> 00:37:23,200
converting it to a different
account via take out or via

925
00:37:23,200 --> 00:37:24,890
the Drive interface.

926
00:37:24,890 --> 00:37:26,440
ARUN NAGARAJAN: So
theoretically, you could build

927
00:37:26,440 --> 00:37:29,900
that with the set owner API.

928
00:37:29,900 --> 00:37:33,940
So you could theoretically
say, run a script that

929
00:37:33,940 --> 00:37:37,180
iterates through all my files
and sets the owner to another

930
00:37:37,180 --> 00:37:38,380
Google account.

931
00:37:38,380 --> 00:37:39,746
AUDIENCE: As long as you're &mdash;

932
00:37:39,746 --> 00:37:41,240
when you're in Google
Apps, though.

933
00:37:41,240 --> 00:37:42,770
I meant Google Apps Education.

934
00:37:42,770 --> 00:37:44,600
And whenever we tried
to do that to

935
00:37:44,600 --> 00:37:45,660
get out of the domain &mdash;

936
00:37:45,660 --> 00:37:46,740
ARUN NAGARAJAN: Education
has that limitation.

937
00:37:46,740 --> 00:37:48,050
AUDIENCE: --it will
[INAUDIBLE].

938
00:37:48,050 --> 00:37:49,690
So we have people leaving &mdash;

939
00:37:49,690 --> 00:37:51,500
for example, seniors graduating
high school.

940
00:37:51,500 --> 00:37:53,750
And we're forcing them to export
everything and then

941
00:37:53,750 --> 00:37:56,400
giving them instructions to
make a new Google Gmail

942
00:37:56,400 --> 00:37:59,400
account or at their university
to upload everything, because

943
00:37:59,400 --> 00:38:02,300
they can't &mdash; it just comes to
a standstill when you try to

944
00:38:02,300 --> 00:38:05,990
script out an export &mdash;

945
00:38:05,990 --> 00:38:08,010
or, excuse me, an
owner change.

946
00:38:08,010 --> 00:38:08,340
ARUN NAGARAJAN: OK.

947
00:38:08,340 --> 00:38:11,350
Yeah, I think that's a document
setting with Google

948
00:38:11,350 --> 00:38:12,050
Apps for Education.

949
00:38:12,050 --> 00:38:13,460
But we'll look into
how to solve this.

950
00:38:13,460 --> 00:38:14,300
AUDIENCE: Just a suggestion.

951
00:38:14,300 --> 00:38:16,020
Thank you.

952
00:38:16,020 --> 00:38:17,230
ARUN NAGARAJAN: You can make
a copy, that's right.

953
00:38:17,230 --> 00:38:18,120
AUDIENCE: Hello.

954
00:38:18,120 --> 00:38:24,000
Will we ever be able to share
scripts across domains?

955
00:38:24,000 --> 00:38:25,270
ARUN NAGARAJAN: You
can share scripts

956
00:38:25,270 --> 00:38:26,900
across domains already.

957
00:38:26,900 --> 00:38:29,030
It's just like any other file.

958
00:38:29,030 --> 00:38:30,800
So what you can do is &mdash;

959
00:38:30,800 --> 00:38:32,720
it's easy enough to &mdash;

960
00:38:32,720 --> 00:38:33,930
AUDIENCE: But to
a whole domain.

961
00:38:33,930 --> 00:38:36,190
So for example, I want to share
this script to this

962
00:38:36,190 --> 00:38:36,750
whole domain.

963
00:38:36,750 --> 00:38:39,890
Everybody from this domain that
is not mine can't access

964
00:38:39,890 --> 00:38:40,710
the script.

965
00:38:40,710 --> 00:38:41,980
So I know I can do
it specifically

966
00:38:41,980 --> 00:38:42,640
to get to one person.

967
00:38:42,640 --> 00:38:44,976
ARUN NAGARAJAN: I see.

968
00:38:44,976 --> 00:38:47,940
AUDIENCE: The chances are that
you can do that already.

969
00:38:47,940 --> 00:38:51,398
But what's confusing about it
is that if you share an item

970
00:38:51,398 --> 00:38:53,868
with a very large group of
people, like your whole

971
00:38:53,868 --> 00:38:56,832
domain, you need to publish a
link that they can click.

972
00:38:56,832 --> 00:38:59,960
It won't automatically show up
in their Drives until they go

973
00:38:59,960 --> 00:39:01,278
and look at the file.

974
00:39:01,278 --> 00:39:05,724
And that's done to stop hacks
and spam on every single thing

975
00:39:05,724 --> 00:39:06,712
available to the domain.

976
00:39:06,712 --> 00:39:09,923
But if you've got the internal
website, for example, you

977
00:39:09,923 --> 00:39:12,640
could say, hey everybody who
wants to do this, click this

978
00:39:12,640 --> 00:39:14,780
link, and then you'll
be able to see this

979
00:39:14,780 --> 00:39:16,098
script in Google Drive.

980
00:39:16,098 --> 00:39:18,815
So just set the settings so
that it's shared in your

981
00:39:18,815 --> 00:39:20,050
domain and publish
a link to it.

982
00:39:20,050 --> 00:39:22,530
And it'll just work.

983
00:39:22,530 --> 00:39:23,456
ARUN NAGARAJAN: So I
think we have time

984
00:39:23,456 --> 00:39:24,340
for one more question.

985
00:39:24,340 --> 00:39:27,200
We will be at the Office
Hours right after this.

986
00:39:27,200 --> 00:39:29,705
AUDIENCE: This isn't as much
of a question, Arun, but I

987
00:39:29,705 --> 00:39:32,220
just wanted to +1 what Doug
said very strongly.

988
00:39:32,220 --> 00:39:34,130
We have the same kind of a
situation at the University of

989
00:39:34,130 --> 00:39:35,040
Minnesota where we're
trying to move

990
00:39:35,040 --> 00:39:36,240
people between domains.

991
00:39:36,240 --> 00:39:39,300
We have five different campus
accounts, like domains.

992
00:39:39,300 --> 00:39:44,360
And we'd love to just update
the metadata on your end to

993
00:39:44,360 --> 00:39:46,050
push them all into one domain.

994
00:39:46,050 --> 00:39:48,440
But yeah, find and replace
across all of Google for one

995
00:39:48,440 --> 00:39:50,500
email address for a different
email address.

996
00:39:50,500 --> 00:39:51,690
The left hand side's the same.

997
00:39:51,690 --> 00:39:54,550
The right hand side changes a
little bit, a few characters.

998
00:39:54,550 --> 00:39:56,140
And then everybody would
be super happy.

999
00:39:56,140 --> 00:39:56,510
JOHN MCGOWAN: Got it.

1000
00:39:56,510 --> 00:39:57,130
So this is &mdash;

1001
00:39:57,130 --> 00:39:58,150
OK.

1002
00:39:58,150 --> 00:40:00,530
AUDIENCE: It's because like you
guys showed you can make

1003
00:40:00,530 --> 00:40:01,380
it where you can
share something

1004
00:40:01,380 --> 00:40:02,540
with that whole domain.

1005
00:40:02,540 --> 00:40:06,650
Well, we've got some things that
now are across campuses &mdash;

1006
00:40:06,650 --> 00:40:08,180
between multiple campuses &mdash; and
then you try to share it

1007
00:40:08,180 --> 00:40:09,990
with the whole domain, and it's
like, I shared it with

1008
00:40:09,990 --> 00:40:11,110
the whole domain &mdash;

1009
00:40:11,110 --> 00:40:12,800
oh, except for all the
people in Duluth.

1010
00:40:12,800 --> 00:40:13,810
That's 30,000 people.

1011
00:40:13,810 --> 00:40:17,820
So I tried to think of like,
could I make an All at Duluth,

1012
00:40:17,820 --> 00:40:19,030
and share with that, too.

1013
00:40:19,030 --> 00:40:20,700
But then it doesn't
really work well.

1014
00:40:20,700 --> 00:40:24,750
It would show up nowhere until
they would click a link, and

1015
00:40:24,750 --> 00:40:27,990
stuff like that, to be able to
see the thing on their side.

1016
00:40:27,990 --> 00:40:30,620
And it could be much easier to
have everybody all in one

1017
00:40:30,620 --> 00:40:31,270
organization.

1018
00:40:31,270 --> 00:40:31,950
ARUN NAGARAJAN: Understood.

1019
00:40:31,950 --> 00:40:32,790
Thank you.

1020
00:40:32,790 --> 00:40:33,460
All right, guys.

1021
00:40:33,460 --> 00:40:35,210
Thank you so much for
all the questions.

1022
00:40:35,210 --> 00:40:36,330
And hope you enjoyed it.

1023
00:40:36,330 --> 00:40:36,930
JOHN MCGOWAN: Thank you.

1024
00:40:36,930 --> 00:40:40,092
[APPLAUSE]

