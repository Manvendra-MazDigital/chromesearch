1
00:00:00,000 --> 00:00:07,860

2
00:00:07,860 --> 00:00:12,550
Hello, and welcome to another
episode of GDL-IL, GDL Israel.

3
00:00:12,550 --> 00:00:14,930
Today we're going to
do some [INAUDIBLE]

4
00:00:14,930 --> 00:00:16,520
things.

5
00:00:16,520 --> 00:00:21,500
We'll start with checking out
how we could run NodeJS on

6
00:00:21,500 --> 00:00:24,420
Google infrastructure on Google
Cloud, and we'll use of

7
00:00:24,420 --> 00:00:27,230
course Compute Engine
to do that.

8
00:00:27,230 --> 00:00:32,320
And later, we'll see how easy
it is to use NodeJS in order

9
00:00:32,320 --> 00:00:35,500
to run things like fetching
data from other

10
00:00:35,500 --> 00:00:36,570
sources on the web.

11
00:00:36,570 --> 00:00:41,240
It might be another API, in our
case we took a different

12
00:00:41,240 --> 00:00:45,260
set of APIs, not directly Google
ones, just to show you

13
00:00:45,260 --> 00:00:50,350
the power of getting information
from any open API

14
00:00:50,350 --> 00:00:51,920
that you have out there.

15
00:00:51,920 --> 00:00:55,640
And then, using Google Sheets
in order to upload this API,

16
00:00:55,640 --> 00:00:59,200
this data, and then later on
of course using it and

17
00:00:59,200 --> 00:01:01,930
leveraging it inside
Google Sheets.

18
00:01:01,930 --> 00:01:05,695
The nice thing or the nice theme
that is connecting all

19
00:01:05,695 --> 00:01:08,270
the dots in this episode
will be JavaScript.

20
00:01:08,270 --> 00:01:10,420
And we have JavaScript
on the server side.

21
00:01:10,420 --> 00:01:13,940
And of course, we'll use
NodeJS to execute it.

22
00:01:13,940 --> 00:01:16,580
And then, we'll have JavaScript
as the scripting

23
00:01:16,580 --> 00:01:20,570
language of Google Docs and
Google Apps that allows you to

24
00:01:20,570 --> 00:01:24,430
do clever, sophisticated things
on the information, on

25
00:01:24,430 --> 00:01:27,900
the data that you already
fetched and put in your Google

26
00:01:27,900 --> 00:01:29,480
Sheets in our case.

27
00:01:29,480 --> 00:01:33,470
So without further ado, let me
just share my screen with you.

28
00:01:33,470 --> 00:01:38,810
And maybe today, I'll just share
my old desktop so I can

29
00:01:38,810 --> 00:01:40,430
jump quickly.

30
00:01:40,430 --> 00:01:44,860
Or maybe it would be wiser, I'll
just try to go through

31
00:01:44,860 --> 00:01:47,820
this little blog post that just
summarizes all the things

32
00:01:47,820 --> 00:01:49,040
that we're going to touch on.

33
00:01:49,040 --> 00:01:53,790
The blog post is live as of 10
minutes ago, so feel free to

34
00:01:53,790 --> 00:01:55,160
go and check it out.

35
00:01:55,160 --> 00:02:00,360
And of course, I'll put links
to this blog post on the

36
00:02:00,360 --> 00:02:05,070
footnotes of this show on the
developer.google.com site.

37
00:02:05,070 --> 00:02:08,600
So feel free, you don't need
to write anything.

38
00:02:08,600 --> 00:02:10,720
Basically, what we're going
to show here is

39
00:02:10,720 --> 00:02:12,460
the ability to go.

40
00:02:12,460 --> 00:02:15,860
And in this case, I just choose
Yahoo Finance API just

41
00:02:15,860 --> 00:02:21,350
because I got lots of questions
on how to use it and

42
00:02:21,350 --> 00:02:24,500
leverage it from inside
Google Sheets.

43
00:02:24,500 --> 00:02:27,470
And here in the example you
[INAUDIBLE], basically Yahoo

44
00:02:27,470 --> 00:02:33,880
allows you to do things like
get a certain URL.

45
00:02:33,880 --> 00:02:36,130
Let me make all the
fonts much larger.

46
00:02:36,130 --> 00:02:38,550
And then, if you put in
here, I put Netflix.

47
00:02:38,550 --> 00:02:40,450
But you could put any ticker.

48
00:02:40,450 --> 00:02:44,500
And after you put a ticker, you
have a set of let's say

49
00:02:44,500 --> 00:02:48,590
parameters, or it's more
crypting keys that will fetch

50
00:02:48,590 --> 00:02:49,950
the right information
that you want.

51
00:02:49,950 --> 00:02:52,200
And once you are clicking
on it, basically you're

52
00:02:52,200 --> 00:02:55,430
downloading a CSV file that you
can later on work with it.

53
00:02:55,430 --> 00:02:58,520
In our case, we want to
do something nicer.

54
00:02:58,520 --> 00:03:04,450
And basically, to take even
farther this approach of

55
00:03:04,450 --> 00:03:07,450
getting data, getting
information, and then putting

56
00:03:07,450 --> 00:03:11,910
it into good work, into good
usage inside of Google Sheets.

57
00:03:11,910 --> 00:03:16,050
So what I did here is after
you've installed NodeJS, and

58
00:03:16,050 --> 00:03:19,850
if you remember correctly, I
have an episode in the past

59
00:03:19,850 --> 00:03:23,380
here on this [INAUDIBLE]

60
00:03:23,380 --> 00:03:27,470
how to install NodeJS on Compute
Engine in less than

61
00:03:27,470 --> 00:03:29,030
five minutes.

62
00:03:29,030 --> 00:03:33,140
So just go search
it and do that.

63
00:03:33,140 --> 00:03:34,960
That's the first step
that you need to do.

64
00:03:34,960 --> 00:03:38,140
But after you install NodeJS,
basically you just need those

65
00:03:38,140 --> 00:03:39,380
three packages.

66
00:03:39,380 --> 00:03:42,610
And luckily for us, the
community around NodeJS is

67
00:03:42,610 --> 00:03:48,750
holding a very large set of
libraries and frameworks and

68
00:03:48,750 --> 00:03:52,770
abilities, basically already
made wheels for us.

69
00:03:52,770 --> 00:03:55,620
So we don't need to reinvent
the wheel again.

70
00:03:55,620 --> 00:03:58,640
And in this case, I just choose
those three libraries.

71
00:03:58,640 --> 00:04:01,595
One is the request model
that just lets you do

72
00:04:01,595 --> 00:04:03,400
work easily with URLs.

73
00:04:03,400 --> 00:04:08,120
Basically, we're using a very
easy way of fetching the

74
00:04:08,120 --> 00:04:09,920
information with
a get request.

75
00:04:09,920 --> 00:04:12,670
But once you install it,
basically you have all the

76
00:04:12,670 --> 00:04:15,110
different possibilities of doing
authentication, doing

77
00:04:15,110 --> 00:04:17,930
OAuth, post, and all the
good things that you'll

78
00:04:17,930 --> 00:04:19,100
want to do later on.

79
00:04:19,100 --> 00:04:21,970
So it's good thing to have right
at the beginning of a

80
00:04:21,970 --> 00:04:24,360
new project that is going to do
something interesting with

81
00:04:24,360 --> 00:04:29,120
this API that is being
fetched over HTTP.

82
00:04:29,120 --> 00:04:31,670
Then, I put cheerio.

83
00:04:31,670 --> 00:04:33,250
It's a cool name.

84
00:04:33,250 --> 00:04:35,860
And for us, it's basically
jQuery on the server side.

85
00:04:35,860 --> 00:04:39,460
So the ability to work with that
dollar sign that we all

86
00:04:39,460 --> 00:04:44,150
love, and just to be able to
have these CSS selectors to

87
00:04:44,150 --> 00:04:47,520
get the right piece of
information from this or that

88
00:04:47,520 --> 00:04:49,520
location in the DOM.

89
00:04:49,520 --> 00:04:50,690
Very easy to do.

90
00:04:50,690 --> 00:04:53,410
So that's why I use this one.

91
00:04:53,410 --> 00:04:55,980
And last but not least, just to
make our life easier when

92
00:04:55,980 --> 00:05:00,060
we're going to integrate and
upload and edit and update our

93
00:05:00,060 --> 00:05:04,970
information, let's just leverage
again already built

94
00:05:04,970 --> 00:05:10,990
model that's letting us just
work with Google Spreadsheets.

95
00:05:10,990 --> 00:05:15,470
Having those three pieces of
code in place, our code will

96
00:05:15,470 --> 00:05:16,930
be really, really short.

97
00:05:16,930 --> 00:05:22,350
So in these three lines, we're
just fetching the models so we

98
00:05:22,350 --> 00:05:24,050
could work with them later.

99
00:05:24,050 --> 00:05:28,540
And then, of course, we have
those few parameters that we

100
00:05:28,540 --> 00:05:31,920
want to keep as global
to our script.

101
00:05:31,920 --> 00:05:35,820
I highly recommend you to remove
them, as in line 19

102
00:05:35,820 --> 00:05:37,960
it's written here.

103
00:05:37,960 --> 00:05:41,230
Not black and white, but clearly
enough, you want to

104
00:05:41,230 --> 00:05:42,710
remove them from the
global scope.

105
00:05:42,710 --> 00:05:45,650
In this specific, simple case
I just left it there.

106
00:05:45,650 --> 00:05:48,840
But probably the first thing
that I'll do tomorrow morning

107
00:05:48,840 --> 00:05:51,370
would be just to remove them
from the global scope, make

108
00:05:51,370 --> 00:05:55,255
sure that I'm encapsulating them
inside an object so when

109
00:05:55,255 --> 00:05:58,700
this project will get bigger and
bigger and not just live

110
00:05:58,700 --> 00:06:02,720
as a gist, we'll be able to have
all the best practices of

111
00:06:02,720 --> 00:06:04,140
software development.

112
00:06:04,140 --> 00:06:06,085
And we want [INAUDIBLE]

113
00:06:06,085 --> 00:06:07,780
so quickly.

114
00:06:07,780 --> 00:06:12,070
So the basic constants here
are just the ticker, and

115
00:06:12,070 --> 00:06:15,050
probably it would be wiser just
to put it as a variable

116
00:06:15,050 --> 00:06:18,800
so that the user will enter
from the script itself.

117
00:06:18,800 --> 00:06:21,070
Later on, just the end point.

118
00:06:21,070 --> 00:06:24,260
And in your case, it might
be Google Cloud endpoint.

119
00:06:24,260 --> 00:06:27,940
It might be any other API that's
letting you just fetch

120
00:06:27,940 --> 00:06:31,090
information over
HTTP or HTTPS.

121
00:06:31,090 --> 00:06:36,440
And then, just two actually
arrays that are letting us

122
00:06:36,440 --> 00:06:39,365
have the keys, or mainly the
metadata on the data that

123
00:06:39,365 --> 00:06:43,130
we're going to fetch, and
the details themselves.

124
00:06:43,130 --> 00:06:46,360
Then, we have a few functions
that we're using.

125
00:06:46,360 --> 00:06:48,820
sheetReady, we'll touch
on it later.

126
00:06:48,820 --> 00:06:50,260
And in this one,
basically we're

127
00:06:50,260 --> 00:06:51,590
just calling the request.

128
00:06:51,590 --> 00:06:54,180
So after we're fetching
the URL.

129
00:06:54,180 --> 00:06:56,930
Here, you can see that first
and foremost I just want to

130
00:06:56,930 --> 00:07:00,390
see that everything came
back correctly with

131
00:07:00,390 --> 00:07:01,820
status code of 200.

132
00:07:01,820 --> 00:07:05,315
If it's 400 or 500 or other
things, I want probably to

133
00:07:05,315 --> 00:07:06,890
just notify the user.

134
00:07:06,890 --> 00:07:10,630
And in this case, I'm just
loading into cheerio the body.

135
00:07:10,630 --> 00:07:13,466
And then nicely enough, I have
this dollar sign that

136
00:07:13,466 --> 00:07:15,440
I could work with.

137
00:07:15,440 --> 00:07:17,550
And in this case, I'm just
choosing one table that's

138
00:07:17,550 --> 00:07:19,910
containing all the
information.

139
00:07:19,910 --> 00:07:25,310
And then, I'm getting all the
tds in this table into my

140
00:07:25,310 --> 00:07:27,180
array, the keys.

141
00:07:27,180 --> 00:07:30,740
And I'm doing just the same
thing on a different class

142
00:07:30,740 --> 00:07:33,160
name and fetching
all the details

143
00:07:33,160 --> 00:07:34,810
into a different array.

144
00:07:34,810 --> 00:07:38,210
Once I do those two things,
all I need to do now is

145
00:07:38,210 --> 00:07:42,180
basically just of course letting
ourselves know that we

146
00:07:42,180 --> 00:07:43,920
have the right information
in place.

147
00:07:43,920 --> 00:07:46,140
And we'll run the script
in a minute.

148
00:07:46,140 --> 00:07:48,550
And then, I want to upload it.

149
00:07:48,550 --> 00:07:51,920
So look how easy is
the API itself.

150
00:07:51,920 --> 00:07:53,490
I call it.

151
00:07:53,490 --> 00:07:55,690
I'm creating a new one.

152
00:07:55,690 --> 00:07:57,720
Basically, I already
created one.

153
00:07:57,720 --> 00:08:01,100
But here, I'm just creating or
calling the constructor of

154
00:08:01,100 --> 00:08:04,870
this object that here it's
called spreadsheet.

155
00:08:04,870 --> 00:08:08,490
And the debug information is
just for us right now.

156
00:08:08,490 --> 00:08:10,120
Actually, I see that we
have two lines of it.

157
00:08:10,120 --> 00:08:11,770
So I need to remove one.

158
00:08:11,770 --> 00:08:15,460
Here, of course, you want to put
your credentials, probably

159
00:08:15,460 --> 00:08:18,550
your Gmail address and
then your password.

160
00:08:18,550 --> 00:08:24,430
And very important, the sheet
name and the worksheet.

161
00:08:24,430 --> 00:08:27,760
So both of them need to be here
so we know which sheet we

162
00:08:27,760 --> 00:08:29,060
are going to update.

163
00:08:29,060 --> 00:08:31,940
And then we're calling, in the
callback after this, returning

164
00:08:31,940 --> 00:08:34,110
the sheetReady method.

165
00:08:34,110 --> 00:08:38,010
And if we scroll back to this
method, basically you could

166
00:08:38,010 --> 00:08:41,390
see that it's a very,
very simple one.

167
00:08:41,390 --> 00:08:43,740
We're adding to the spreadsheet
on the top.

168
00:08:43,740 --> 00:08:48,940
So it will be at column one, row
one, and then column one,

169
00:08:48,940 --> 00:08:52,050
row two, the attribute
and the value.

170
00:08:52,050 --> 00:08:56,120
And then, we're just going
to iterate and

171
00:08:56,120 --> 00:08:58,270
just in those arrays.

172
00:08:58,270 --> 00:09:02,360
And luckily for us, any looping
here will just call

173
00:09:02,360 --> 00:09:05,190
our object, the spreadsheet,
and will add an array.

174
00:09:05,190 --> 00:09:07,460
We're giving it the
starting point.

175
00:09:07,460 --> 00:09:11,655
And once I get the started
point, all we need to do is

176
00:09:11,655 --> 00:09:15,480
just attach the array, and all
the information will be there.

177
00:09:15,480 --> 00:09:18,520
And of course, we're sending
all the information in one

178
00:09:18,520 --> 00:09:20,910
batch and getting
the response.

179
00:09:20,910 --> 00:09:23,840
Here, probably you want to
notify the user that

180
00:09:23,840 --> 00:09:27,990
everything is done correctly
and is in the good hands of

181
00:09:27,990 --> 00:09:28,760
Google Cloud.

182
00:09:28,760 --> 00:09:30,540
So all the data is now saved.

183
00:09:30,540 --> 00:09:33,080
And of course, if something
wrong happens, just

184
00:09:33,080 --> 00:09:34,790
communicate it back.

185
00:09:34,790 --> 00:09:35,980
That's all the script.

186
00:09:35,980 --> 00:09:38,510
So you could see here that at
the bottom, there's nothing

187
00:09:38,510 --> 00:09:39,560
more than it.

188
00:09:39,560 --> 00:09:45,870
And now, we could check or let
me show you how you could

189
00:09:45,870 --> 00:09:49,240
quite easily run this script.

190
00:09:49,240 --> 00:09:55,000
So let's see again
in this window.

191
00:09:55,000 --> 00:09:56,800
This is my terminal.

192
00:09:56,800 --> 00:10:00,710
I'll make the font
even bigger, and

193
00:10:00,710 --> 00:10:02,610
even one step bigger.

194
00:10:02,610 --> 00:10:07,870
And what you can see here is
that I'm calling node with the

195
00:10:07,870 --> 00:10:10,130
fetch example that
we have here.

196
00:10:10,130 --> 00:10:12,690
And once I'm running it,
quite quickly we're

197
00:10:12,690 --> 00:10:17,880
going to Yahoo API.

198
00:10:17,880 --> 00:10:19,590
We're fetching the
information.

199
00:10:19,590 --> 00:10:22,740
Here, the console log
just making sure--

200
00:10:22,740 --> 00:10:23,990
actually, it's from here--

201
00:10:23,990 --> 00:10:26,630
that I'm fetching
the information.

202
00:10:26,630 --> 00:10:30,180
And you can see that in this
case, for instance, the key

203
00:10:30,180 --> 00:10:32,160
would be the market cap.

204
00:10:32,160 --> 00:10:35,700
And then, I have the overall
value of the company.

205
00:10:35,700 --> 00:10:38,310
And again, and again, lots
of other parameters.

206
00:10:38,310 --> 00:10:42,620
And then, when I'm wanting to
upload it to Google, I got a

207
00:10:42,620 --> 00:10:43,940
log in error.

208
00:10:43,940 --> 00:10:48,170
And this is because all I have
there right now are the to

209
00:10:48,170 --> 00:10:50,670
dos, and not my real
credentials.

210
00:10:50,670 --> 00:10:54,730
But I highly encourage you to
fork the gist that we just

211
00:10:54,730 --> 00:10:59,260
showed and just put your
credentials and work with it

212
00:10:59,260 --> 00:11:03,300
and see how fluidly
it's working.

213
00:11:03,300 --> 00:11:06,550
The other beauty is that you
could take this code that we

214
00:11:06,550 --> 00:11:09,180
ran, and let me just again
share with you

215
00:11:09,180 --> 00:11:10,440
that snippet itself.

216
00:11:10,440 --> 00:11:13,690

217
00:11:13,690 --> 00:11:17,630
We could actually see it here.

218
00:11:17,630 --> 00:11:25,710
And this code, with very few
changes, will work from Google

219
00:11:25,710 --> 00:11:29,970
App, Google Sheets as well.

220
00:11:29,970 --> 00:11:33,280
So if you don't want even to
have the ability or the

221
00:11:33,280 --> 00:11:37,420
efficiency of running this
simple script inside Node, you

222
00:11:37,420 --> 00:11:40,240
could do the same
from JavaScript

223
00:11:40,240 --> 00:11:44,070
that will run in Sheets.

224
00:11:44,070 --> 00:11:46,640
And that's another benefit for
the ones that don't want to

225
00:11:46,640 --> 00:11:50,520
work with a Node instance.

226
00:11:50,520 --> 00:11:53,450
However, I highly encourage you
to check Compute Engine

227
00:11:53,450 --> 00:11:58,660
and to check the ability to run
with NodeJS because the

228
00:11:58,660 --> 00:12:00,940
performances will be
much, much better.

229
00:12:00,940 --> 00:12:03,330
And if you want to do something
more than just

230
00:12:03,330 --> 00:12:09,070
putting a simple example like
that, you want some heavy

231
00:12:09,070 --> 00:12:12,220
lifting on the server side, some
data manipulation, some

232
00:12:12,220 --> 00:12:15,520
things that you do want
a strong server side.

233
00:12:15,520 --> 00:12:18,440
NodeJS on Compute Engine will
give you those benefits.

234
00:12:18,440 --> 00:12:22,280
And it's highly recommended
to check it out.

235
00:12:22,280 --> 00:12:25,060
So if we have any, questions
right now is

236
00:12:25,060 --> 00:12:26,690
that the right time.

237
00:12:26,690 --> 00:12:28,770
Let's see here.

238
00:12:28,770 --> 00:12:32,900
Let's see if in the
chat we have some.

239
00:12:32,900 --> 00:12:34,950
I don't see any question
right now.

240
00:12:34,950 --> 00:12:39,850
So if you have later on any
questions, +GreenIdo on G+ or

241
00:12:39,850 --> 00:12:41,320
GreenIdo as one word
on Twitter.

242
00:12:41,320 --> 00:12:43,200
Both will work quite nicely.

243
00:12:43,200 --> 00:12:47,166
Happy hacking, and be strong.

244
00:12:47,166 --> 00:12:48,416
Bye-bye.

245
00:12:48,416 --> 00:12:58,425

