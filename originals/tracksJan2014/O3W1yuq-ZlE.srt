1
00:00:00,000 --> 00:00:09,620

2
00:00:09,620 --> 00:00:14,380
PAUL IRISH: Hello,
hi, so I'm going

3
00:00:14,380 --> 00:00:17,820
to show a little bit around
using the Chrome Developer

4
00:00:17,820 --> 00:00:20,800
tools and how to have
a productive workflow

5
00:00:20,800 --> 00:00:23,960
in developing, also
capturing developing

6
00:00:23,960 --> 00:00:28,200
for the mobile web and some
more performance stuff.

7
00:00:28,200 --> 00:00:30,830
So first up, we're going
to dive into workflow,

8
00:00:30,830 --> 00:00:33,895
and so optimizing
how fast we can

9
00:00:33,895 --> 00:00:37,180
iterate when we're
doing development.

10
00:00:37,180 --> 00:00:39,500
To do this, I'm going to demo.

11
00:00:39,500 --> 00:00:43,480
And so I'm going to try
and put this in my pocket.

12
00:00:43,480 --> 00:00:43,980
How's that?

13
00:00:43,980 --> 00:00:45,356
Does that work?

14
00:00:45,356 --> 00:00:48,180
OK, that's not awkward at all.

15
00:00:48,180 --> 00:00:53,370
All right, so we're going
to come out to this.

16
00:00:53,370 --> 00:00:55,690
This is a site that I work
on with some friends called

17
00:00:55,690 --> 00:00:57,300
HTML5 Please.

18
00:00:57,300 --> 00:01:01,220
And let's say I just want to
make some changes on this site.

19
00:01:01,220 --> 00:01:02,870
So I'm just hosting it.

20
00:01:02,870 --> 00:01:06,100
I have a local server
on localhost:8000.

21
00:01:06,100 --> 00:01:08,470
And I want to make some changes.

22
00:01:08,470 --> 00:01:11,746
All right, so let's
see, I'm going

23
00:01:11,746 --> 00:01:13,610
to open up the Chrome
Developer tools,

24
00:01:13,610 --> 00:01:16,650
select this, and
make some changes.

25
00:01:16,650 --> 00:01:19,850
Maybe I'm going to bring the
font size down a little bit,

26
00:01:19,850 --> 00:01:24,760
add in a new color-- it
doesn't look very good.

27
00:01:24,760 --> 00:01:28,410

28
00:01:28,410 --> 00:01:29,880
Let me try-- I'll
change this over

29
00:01:29,880 --> 00:01:32,640
to blue for now-- OK, sure.

30
00:01:32,640 --> 00:01:38,680
Now normally how this works is
that I will take this and take

31
00:01:38,680 --> 00:01:41,760
the changes that I like, and
copy them, and then come over

32
00:01:41,760 --> 00:01:48,960
to my text file-- say it's right
here-- and paste it in, right?

33
00:01:48,960 --> 00:01:52,060
And that's how I would
probably normally do it.

34
00:01:52,060 --> 00:01:54,580
But that's not very good.

35
00:01:54,580 --> 00:01:58,910
So what we can actually do
is we can combine the two.

36
00:01:58,910 --> 00:02:01,060
And so what we're
going to do is use

37
00:02:01,060 --> 00:02:03,740
a new feature called Workspaces.

38
00:02:03,740 --> 00:02:05,295
And this allows me
to kind of mount

39
00:02:05,295 --> 00:02:12,320
in my code, my local
development folder, into Chrome

40
00:02:12,320 --> 00:02:15,150
and just be able to save
directly back to disk

41
00:02:15,150 --> 00:02:16,600
with all my changes.

42
00:02:16,600 --> 00:02:17,600
So this is how it works.

43
00:02:17,600 --> 00:02:21,020

44
00:02:21,020 --> 00:02:23,810
First, I'll just
refresh the page.

45
00:02:23,810 --> 00:02:28,930
OK, and now I right click
in the Sources panel.

46
00:02:28,930 --> 00:02:31,880
And I can select Add
Folder to Workspace.

47
00:02:31,880 --> 00:02:35,370
So everyone can see
this-- down there.

48
00:02:35,370 --> 00:02:36,189
Now, that comes up.

49
00:02:36,189 --> 00:02:38,480
And I want to select what
folder I'm going to bring in.

50
00:02:38,480 --> 00:02:42,120
And here's my local
folder for this project.

51
00:02:42,120 --> 00:02:45,200
So I say, Yes and Allow.

52
00:02:45,200 --> 00:02:48,270
All right, now we
can see it here.

53
00:02:48,270 --> 00:02:50,500
And so here's my local folder.

54
00:02:50,500 --> 00:02:52,850
And so this has
everything, all the

55
00:02:52,850 --> 00:02:58,240
files in it, say, for
instance, my configuration

56
00:02:58,240 --> 00:03:02,130
for Sass, my gitignore.

57
00:03:02,130 --> 00:03:04,280
I can make any changes here.

58
00:03:04,280 --> 00:03:08,320
And also, if, say
for instance, I

59
00:03:08,320 --> 00:03:15,600
make a new file,
that also comes in.

60
00:03:15,600 --> 00:03:16,470
And I can see that.

61
00:03:16,470 --> 00:03:24,400
So hello, hello,
and then-- right.

62
00:03:24,400 --> 00:03:30,150
So, nice, I have a mapping
between what I have on disk

63
00:03:30,150 --> 00:03:34,150
and what I have inside
Chrome in full persistence.

64
00:03:34,150 --> 00:03:36,140
The way this gets
interesting is being

65
00:03:36,140 --> 00:03:39,760
able to manipulate the
styles, or whatever else,

66
00:03:39,760 --> 00:03:41,670
like we all want to.

67
00:03:41,670 --> 00:03:44,780
So let's do some of that.

68
00:03:44,780 --> 00:03:47,210
So I was making some
changes here before.

69
00:03:47,210 --> 00:03:52,580
And then, we'll bring down this
font size and select this guy.

70
00:03:52,580 --> 00:03:54,450
We'll change him--
ooh, that's pretty.

71
00:03:54,450 --> 00:03:55,010
That's nice.

72
00:03:55,010 --> 00:03:57,230
I like this.

73
00:03:57,230 --> 00:03:58,140
So that's good.

74
00:03:58,140 --> 00:04:00,680

75
00:04:00,680 --> 00:04:12,510
And now, when I come over
to-- ah, one mistake.

76
00:04:12,510 --> 00:04:15,500

77
00:04:15,500 --> 00:04:19,410
One thing that I need to do
once I mount in this folder

78
00:04:19,410 --> 00:04:20,570
is to map it.

79
00:04:20,570 --> 00:04:23,240
I need to map it
to my other assets.

80
00:04:23,240 --> 00:04:28,970
So I have my script that's
coming from local host.

81
00:04:28,970 --> 00:04:32,470
But I need to tell Chrome
than it needs to match.

82
00:04:32,470 --> 00:04:35,590
So what I do-- this
is a one-time set-up--

83
00:04:35,590 --> 00:04:39,270
I need to map file
to local resource.

84
00:04:39,270 --> 00:04:41,470
So I select the
one that matches.

85
00:04:41,470 --> 00:04:44,420
And that's it-- yes.

86
00:04:44,420 --> 00:04:54,580
OK, OK, now I'm going
to come back and make

87
00:04:54,580 --> 00:04:55,610
this change again.

88
00:04:55,610 --> 00:04:59,040

89
00:04:59,040 --> 00:05:00,825
And I'll add in a new color.

90
00:05:00,825 --> 00:05:03,500

91
00:05:03,500 --> 00:05:06,660
And now when I come
over to my code,

92
00:05:06,660 --> 00:05:09,200
you can see my font
size is now 3M.

93
00:05:09,200 --> 00:05:11,090
My color is blue.

94
00:05:11,090 --> 00:05:19,532
I'll add in a few more border--
10px, solid gray, background,

95
00:05:19,532 --> 00:05:22,060
hmm, I don't know, green?

96
00:05:22,060 --> 00:05:28,150
Green-- not improvements,
but they're coming right in.

97
00:05:28,150 --> 00:05:31,760
So this is full
persistence in there.

98
00:05:31,760 --> 00:05:33,370
Now, another way I
could do this is I

99
00:05:33,370 --> 00:05:38,170
could come in to the Sources
panel and make any changes.

100
00:05:38,170 --> 00:05:40,370
One new change
that we just added

101
00:05:40,370 --> 00:05:44,680
is if you hold down
the Alt key, you

102
00:05:44,680 --> 00:05:48,020
can now just hold down Alt
and change these numbers

103
00:05:48,020 --> 00:05:51,630
just right with Up and Down.

104
00:05:51,630 --> 00:05:53,280
So I can make changes here.

105
00:05:53,280 --> 00:05:57,240
Or I could come over
to my text editor

106
00:05:57,240 --> 00:05:59,660
and-- say I don't
like green anymore.

107
00:05:59,660 --> 00:06:01,170
I really want purple.

108
00:06:01,170 --> 00:06:03,700
I hit Save in Sublime.

109
00:06:03,700 --> 00:06:07,500
And I come back here, and it's
like, oh sure, no problem.

110
00:06:07,500 --> 00:06:09,160
So this is really nice.

111
00:06:09,160 --> 00:06:14,300
If you do want to continue
to develop over here and make

112
00:06:14,300 --> 00:06:19,160
any changes, it'll just
come in immediately.

113
00:06:19,160 --> 00:06:21,380
So this is pretty powerful.

114
00:06:21,380 --> 00:06:23,990
And I've showed
it with CSS here.

115
00:06:23,990 --> 00:06:26,570
But it's also really
useful with JavaScript.

116
00:06:26,570 --> 00:06:32,090
So on this site, if
I type in this box,

117
00:06:32,090 --> 00:06:35,550
we filter down the
results of what's

118
00:06:35,550 --> 00:06:37,309
showing up here based on that.

119
00:06:37,309 --> 00:06:39,600
But if I want to get a better
understanding of how that

120
00:06:39,600 --> 00:06:43,520
works-- maybe I want
to add some console log

121
00:06:43,520 --> 00:06:46,830
like debug statements
to figure this out.

122
00:06:46,830 --> 00:06:50,990
So let me just close these.

123
00:06:50,990 --> 00:06:55,860
I'm going to hit Command-O
and look for my script file.

124
00:06:55,860 --> 00:07:00,470
And yeah, actually
this is perfect.

125
00:07:00,470 --> 00:07:04,480

126
00:07:04,480 --> 00:07:11,200
So right now, when
I type here, I

127
00:07:11,200 --> 00:07:14,440
want to get an idea of
how these values come

128
00:07:14,440 --> 00:07:17,230
into the JavaScript
that's handling this.

129
00:07:17,230 --> 00:07:19,370
So what I can just
do is immediately

130
00:07:19,370 --> 00:07:21,510
enter in a console
log statement.

131
00:07:21,510 --> 00:07:25,230
And so I'm in the
Update Search Method.

132
00:07:25,230 --> 00:07:29,000
And so I'm just going
to blog that I'm there

133
00:07:29,000 --> 00:07:31,910
and see what the value is.

134
00:07:31,910 --> 00:07:38,030
Now, when I hit Command-S right
now, what Command-S is doing is

135
00:07:38,030 --> 00:07:40,080
it's persisting
this change to disk.

136
00:07:40,080 --> 00:07:44,220
And then, it's also telling
V8, the JavaScript engine,

137
00:07:44,220 --> 00:07:47,940
that it needs to now
evaluate this new definition

138
00:07:47,940 --> 00:07:49,210
of this file.

139
00:07:49,210 --> 00:07:53,160
So I'm hitting Command-S. I'm
not refreshing the page at all.

140
00:07:53,160 --> 00:07:59,540
And when I type here,
it immediately changes.

141
00:07:59,540 --> 00:08:01,560
So V8 has a new definition.

142
00:08:01,560 --> 00:08:06,450
And now, if I go over, and
I'll just double check,

143
00:08:06,450 --> 00:08:12,070
here's my changes that I
made to disk on the styles.

144
00:08:12,070 --> 00:08:15,730
Yup, and here's my change
down here to the JavaScript.

145
00:08:15,730 --> 00:08:17,940
So this is nice, because
I can go really fast.

146
00:08:17,940 --> 00:08:19,630
I'm not refreshing the page.

147
00:08:19,630 --> 00:08:22,340
I'm changing both
CSS and JavaScript

148
00:08:22,340 --> 00:08:24,475
and persisting all the
changes that I like to disk.

149
00:08:24,475 --> 00:08:27,110

150
00:08:27,110 --> 00:08:30,720
One thing I didn't show is--
let's see if this works.

151
00:08:30,720 --> 00:08:32,760
We have full undo and redo.

152
00:08:32,760 --> 00:08:41,548
So I'm going to try-- oh
no, I refreshed the page.

153
00:08:41,548 --> 00:08:46,780
Damn, all right, so if
I make these changes,

154
00:08:46,780 --> 00:08:50,670
and I don't really
like them, I can just

155
00:08:50,670 --> 00:08:56,630
hit Command-Z to
bring them back.

156
00:08:56,630 --> 00:09:01,690
So whether you make changes here
inside the DevTools or changes

157
00:09:01,690 --> 00:09:03,680
over here, you can
just hit Command-Z

158
00:09:03,680 --> 00:09:05,050
to kind of work your way back.

159
00:09:05,050 --> 00:09:09,220
And all those changes will
be maintained in the files.

160
00:09:09,220 --> 00:09:12,400
So this gets really
powerful, right?

161
00:09:12,400 --> 00:09:15,270
I can edit the entire project.

162
00:09:15,270 --> 00:09:18,460
Whether it's mark
down files, PHP files,

163
00:09:18,460 --> 00:09:20,380
I can do it right
there in the DevTools.

164
00:09:20,380 --> 00:09:23,190
So the DevTools kind
of becomes my editor.

165
00:09:23,190 --> 00:09:26,100
All the changes persist
to disk, full undo, redo,

166
00:09:26,100 --> 00:09:28,310
and it's nice because I
can maintain my context.

167
00:09:28,310 --> 00:09:33,160
If I'm setting break points in
my JavaScript in the DevTools,

168
00:09:33,160 --> 00:09:35,710
I can also edit right there
and make those changes

169
00:09:35,710 --> 00:09:37,976
and save those to desk.

170
00:09:37,976 --> 00:09:40,840
All right, the next
thing I want to show

171
00:09:40,840 --> 00:09:44,370
is the DevTools support
for Sass and Less.

172
00:09:44,370 --> 00:09:47,450
Who writes their
styles using Sass?

173
00:09:47,450 --> 00:09:48,980
Raise your hand.

174
00:09:48,980 --> 00:09:53,490
Yes, or Less-- Less, a lot
more people are using Less.

175
00:09:53,490 --> 00:09:57,880
Good, OK, this was just
added like two weeks ago.

176
00:09:57,880 --> 00:10:00,680
But let me show
you how this works.

177
00:10:00,680 --> 00:10:16,350
So now, one thing
that you might notice

178
00:10:16,350 --> 00:10:20,590
is that-- let's say I'm going
to select this little item right

179
00:10:20,590 --> 00:10:21,090
here.

180
00:10:21,090 --> 00:10:25,410

181
00:10:25,410 --> 00:10:32,630
So this is the little-- Use
Item is what I'm selecting.

182
00:10:32,630 --> 00:10:35,125
And if we look over here,
we have a few styles on it.

183
00:10:35,125 --> 00:10:37,750
And we have just this green and
a green that's a little darker,

184
00:10:37,750 --> 00:10:41,340
and a green that's a
little darker than that.

185
00:10:41,340 --> 00:10:45,240
But you can see actually where
this definition is coming from.

186
00:10:45,240 --> 00:10:47,390
It's from an SESS file.

187
00:10:47,390 --> 00:10:48,540
So it's not a Sass file.

188
00:10:48,540 --> 00:10:50,000
It's not a CSS file.

189
00:10:50,000 --> 00:10:52,000
It's an SESS file.

190
00:10:52,000 --> 00:10:54,560
So let me click through on
that and see what's going on.

191
00:10:54,560 --> 00:10:58,000

192
00:10:58,000 --> 00:10:59,460
Oh, let me try that once more.

193
00:10:59,460 --> 00:11:03,790

194
00:11:03,790 --> 00:11:07,640
OK, so here, we're
actually jumping

195
00:11:07,640 --> 00:11:09,970
to the definition of the mix in.

196
00:11:09,970 --> 00:11:14,302
So the mix in that I wrote
for this Sass kind of

197
00:11:14,302 --> 00:11:15,010
does some things.

198
00:11:15,010 --> 00:11:18,050
I have a variable coming
in with this color.

199
00:11:18,050 --> 00:11:20,480
Here's the background box
shot on boarder radius.

200
00:11:20,480 --> 00:11:23,770
But it's taking this color, and
it's kind of darkening it here.

201
00:11:23,770 --> 00:11:25,080
It's darkening it here.

202
00:11:25,080 --> 00:11:28,200
So we're doing some
nice things in the Sass.

203
00:11:28,200 --> 00:11:34,030
But if I want to make a change
to this green, what I could do

204
00:11:34,030 --> 00:11:37,270
is just take this
and change the color.

205
00:11:37,270 --> 00:11:38,830
But that doesn't
really work, right?

206
00:11:38,830 --> 00:11:42,740
I have this stuff here.

207
00:11:42,740 --> 00:11:45,490
So clearly, I'm not going
to be able to do this

208
00:11:45,490 --> 00:11:46,980
by just editing the CSS.

209
00:11:46,980 --> 00:11:50,390
I need to edit the
Sass, the original Sass.

210
00:11:50,390 --> 00:11:52,310
So let's try that.

211
00:11:52,310 --> 00:11:55,710

212
00:11:55,710 --> 00:12:01,540
So if you hold down the
Command key or the Control key,

213
00:12:01,540 --> 00:12:03,650
you'll see an underline.

214
00:12:03,650 --> 00:12:05,790
Let me zoom in on that.

215
00:12:05,790 --> 00:12:08,610

216
00:12:08,610 --> 00:12:11,340
So this command, this
indicates that you

217
00:12:11,340 --> 00:12:14,620
can jump to the original
location where this is defined.

218
00:12:14,620 --> 00:12:18,630
So here, if I Command
click on background,

219
00:12:18,630 --> 00:12:22,690
I jump to where
the background is.

220
00:12:22,690 --> 00:12:25,270
But I want to change the color.

221
00:12:25,270 --> 00:12:29,550
So I want to Command click
on that background color.

222
00:12:29,550 --> 00:12:33,650
And now-- whoops.

223
00:12:33,650 --> 00:12:41,230

224
00:12:41,230 --> 00:12:44,460
Well, what I'm
expecting it to do

225
00:12:44,460 --> 00:12:46,600
is to jump to this
color definition, which

226
00:12:46,600 --> 00:12:49,830
is in my Variables Sass file.

227
00:12:49,830 --> 00:12:52,480
So what's cool here
is if I want to make

228
00:12:52,480 --> 00:12:55,350
this change to this
variable definition-- let's

229
00:12:55,350 --> 00:13:00,210
say I'm going to turn it to
red-- I just hit Command-S,

230
00:13:00,210 --> 00:13:01,750
and I wait.

231
00:13:01,750 --> 00:13:03,250
And I get my changes.

232
00:13:03,250 --> 00:13:07,110
So I just changed
Sass in the DevTools.

233
00:13:07,110 --> 00:13:11,230
And what happened on
the back is over here,

234
00:13:11,230 --> 00:13:17,100
I actually have a tab that
has a little watch, just

235
00:13:17,100 --> 00:13:20,750
to monitor changes, and have
compass and Sass recompile

236
00:13:20,750 --> 00:13:22,230
the new CSS.

237
00:13:22,230 --> 00:13:23,960
And so that happened.

238
00:13:23,960 --> 00:13:25,720
And then, DevTools
picked up on the fact

239
00:13:25,720 --> 00:13:29,150
that the CSS file had changed
and just refreshed it.

240
00:13:29,150 --> 00:13:32,550
So now I can make any sort
of change in the Sass.

241
00:13:32,550 --> 00:13:36,220

242
00:13:36,220 --> 00:13:39,900
And it takes a
little bit of time

243
00:13:39,900 --> 00:13:44,070
to actually-- there we
go-- for the change happen.

244
00:13:44,070 --> 00:13:45,080
But this is really nice.

245
00:13:45,080 --> 00:13:48,270
Because I can go very fast now.

246
00:13:48,270 --> 00:13:54,440
All right, so that is a little
bit of the DevTools support.

247
00:13:54,440 --> 00:13:58,660
Like I mentioned, we've had
support for Sass for awhile.

248
00:13:58,660 --> 00:14:01,960
And the guys behind
the Less project

249
00:14:01,960 --> 00:14:04,920
just added support
inside their compiler

250
00:14:04,920 --> 00:14:06,380
for creating source
maps, which is

251
00:14:06,380 --> 00:14:08,140
what powers this whole thing.

252
00:14:08,140 --> 00:14:10,820
So we have support for both.

253
00:14:10,820 --> 00:14:12,680
So this whole story
really creates

254
00:14:12,680 --> 00:14:15,400
a compelling
development environment

255
00:14:15,400 --> 00:14:18,870
where I can just-- anywhere
that I type, I can style,

256
00:14:18,870 --> 00:14:20,210
see the immediate results.

257
00:14:20,210 --> 00:14:21,880
Everything is
persistent to disk.

258
00:14:21,880 --> 00:14:26,804
And I get a lot of
immediate feedback.

259
00:14:26,804 --> 00:14:28,470
All right, but I want
to take this stuff

260
00:14:28,470 --> 00:14:29,540
and go mobile with it.

261
00:14:29,540 --> 00:14:31,340
So let's do that.

262
00:14:31,340 --> 00:14:34,090

263
00:14:34,090 --> 00:14:36,830
So we're going to
come over here.

264
00:14:36,830 --> 00:14:39,080
And I have my phone.

265
00:14:39,080 --> 00:14:40,240
And this is my password.

266
00:14:40,240 --> 00:14:45,400

267
00:14:45,400 --> 00:14:50,570
All right, so let me
just refresh this.

268
00:14:50,570 --> 00:14:55,450
OK, cool-- focus, yeah, good.

269
00:14:55,450 --> 00:14:58,740
Now I want to do
this development.

270
00:14:58,740 --> 00:15:02,170
And I want to debug
what's on my phone.

271
00:15:02,170 --> 00:15:04,690
So let's try that out.

272
00:15:04,690 --> 00:15:08,180
So I come over to
Chrome Inspect.

273
00:15:08,180 --> 00:15:11,790
You can also just
type, "about inspect."

274
00:15:11,790 --> 00:15:16,870
And now, let's see, I want
to get this on the screen

275
00:15:16,870 --> 00:15:18,000
at the same time.

276
00:15:18,000 --> 00:15:18,960
There we go.

277
00:15:18,960 --> 00:15:20,535
Now let's plug in the phone.

278
00:15:20,535 --> 00:15:23,370

279
00:15:23,370 --> 00:15:27,800
Doo, doo, doo-- yeah,
woo, all right, cool,

280
00:15:27,800 --> 00:15:29,290
so it just found my phone.

281
00:15:29,290 --> 00:15:32,720
Now raise your hand if you've
done a remote debugging

282
00:15:32,720 --> 00:15:38,070
with Chrome on Android before--
OK, cool, a few of you.

283
00:15:38,070 --> 00:15:40,410
Before, it required some
things around downloading

284
00:15:40,410 --> 00:15:42,950
the entire Android SDK.

285
00:15:42,950 --> 00:15:43,990
It was really painful.

286
00:15:43,990 --> 00:15:45,710
Now, just plug it in.

287
00:15:45,710 --> 00:15:47,740
It just works.

288
00:15:47,740 --> 00:15:49,870
So we see Chrome.

289
00:15:49,870 --> 00:15:51,910
Chrome 31 is now here.

290
00:15:51,910 --> 00:15:55,860
And I want to load a page.

291
00:15:55,860 --> 00:16:01,378
So let's see, I don't
know, load naver.com, sure.

292
00:16:01,378 --> 00:16:04,140

293
00:16:04,140 --> 00:16:10,965
All right, cool-- all right, so
I'm just going to hit Inspect.

294
00:16:10,965 --> 00:16:15,010

295
00:16:15,010 --> 00:16:21,690
And all right, here's the
DevTools, the full DevTools.

296
00:16:21,690 --> 00:16:23,700
And so if I come
over to Timeline,

297
00:16:23,700 --> 00:16:27,020
and I start a recording,
and I scroll the page,

298
00:16:27,020 --> 00:16:28,940
I'm getting all that stuff.

299
00:16:28,940 --> 00:16:29,930
So that's really cool.

300
00:16:29,930 --> 00:16:33,190

301
00:16:33,190 --> 00:16:36,700
Raise your hand if you have
one of these cameras here

302
00:16:36,700 --> 00:16:39,760
that can take a picture of your
camera and put it on your-- OK,

303
00:16:39,760 --> 00:16:40,330
probably not.

304
00:16:40,330 --> 00:16:43,040
So we thought that
this is a problem.

305
00:16:43,040 --> 00:16:44,910
So let's solve this.

306
00:16:44,910 --> 00:16:47,690
So I'm going to kill this video.

307
00:16:47,690 --> 00:16:49,750
And I'm going to
go into Settings

308
00:16:49,750 --> 00:16:52,337
and turn on a new experiment
that we've been working on.

309
00:16:52,337 --> 00:16:53,420
This is called Screencast.

310
00:16:53,420 --> 00:16:56,000

311
00:16:56,000 --> 00:17:00,650
This is the first time that
I've ever showed this publicly.

312
00:17:00,650 --> 00:17:03,210
So this is the debut
of this feature.

313
00:17:03,210 --> 00:17:04,920
I'm really excited.

314
00:17:04,920 --> 00:17:10,579
All right, so what we do is we
close that down and bring that

315
00:17:10,579 --> 00:17:11,164
back up.

316
00:17:11,164 --> 00:17:15,410

317
00:17:15,410 --> 00:17:19,636
Ahh, and now-- yes.

318
00:17:19,636 --> 00:17:22,552
[APPLAUSE]

319
00:17:22,552 --> 00:17:24,010
PAUL IRISH: So this
is really cool.

320
00:17:24,010 --> 00:17:28,750
So I have-- as I just
scroll, I can see immediately

321
00:17:28,750 --> 00:17:31,340
what's going on.

322
00:17:31,340 --> 00:17:35,130
So I can just do the same thing.

323
00:17:35,130 --> 00:17:37,400
Right, so that's really nice.

324
00:17:37,400 --> 00:17:40,114
I don't have to go back
and look down at the phone

325
00:17:40,114 --> 00:17:40,905
and come over here.

326
00:17:40,905 --> 00:17:43,720
Because it's all right
here on the screen.

327
00:17:43,720 --> 00:17:47,140
So let's do a search.

328
00:17:47,140 --> 00:17:49,440
So I can type and
be like, Chrome.

329
00:17:49,440 --> 00:17:52,160

330
00:17:52,160 --> 00:17:53,560
OK, but this is taking a while.

331
00:17:53,560 --> 00:17:55,590
I'd much rather just
type here on my keyboard.

332
00:17:55,590 --> 00:17:56,897
So let's try that.

333
00:17:56,897 --> 00:18:02,230
Ah, OK, cool, so I can type.

334
00:18:02,230 --> 00:18:03,900
And let's see.

335
00:18:03,900 --> 00:18:04,480
Let's check.

336
00:18:04,480 --> 00:18:09,980

337
00:18:09,980 --> 00:18:16,020
Yeah, all right, I can click.

338
00:18:16,020 --> 00:18:17,870
And the last thing
I want to show here

339
00:18:17,870 --> 00:18:21,210
is that I can just Inspect
Element, and Inspect Element

340
00:18:21,210 --> 00:18:22,630
works, too.

341
00:18:22,630 --> 00:18:25,310
So I can just select the item.

342
00:18:25,310 --> 00:18:26,800
And my DOM view comes up.

343
00:18:26,800 --> 00:18:29,310

344
00:18:29,310 --> 00:18:31,710
So this is really powerful.

345
00:18:31,710 --> 00:18:34,420
This means that I don't
have to go and muck back

346
00:18:34,420 --> 00:18:35,420
with my device.

347
00:18:35,420 --> 00:18:38,080
I have it all right
here on screen.

348
00:18:38,080 --> 00:18:41,190
And I have the full
DevTools to support it.

349
00:18:41,190 --> 00:18:45,560
But let's go back to the project
that I was developing before.

350
00:18:45,560 --> 00:18:52,785
It was this, localhost:8000.

351
00:18:52,785 --> 00:18:59,120
And so we'll just open up a
tab with that and inspect it.

352
00:18:59,120 --> 00:19:05,690

353
00:19:05,690 --> 00:19:11,370
Hmm, so one thing-- there we go.

354
00:19:11,370 --> 00:19:15,000

355
00:19:15,000 --> 00:19:20,550
So one thing that happens a
lot is that you want to develop

356
00:19:20,550 --> 00:19:21,850
localhost:8000.

357
00:19:21,850 --> 00:19:26,690
But your phone doesn't know
what localhost:8000 is.

358
00:19:26,690 --> 00:19:28,460
Because that's your machine.

359
00:19:28,460 --> 00:19:30,160
So the feature that
we have available

360
00:19:30,160 --> 00:19:31,560
now is port forwarding.

361
00:19:31,560 --> 00:19:34,750
So you can just say, I want
whatever's on this machine.

362
00:19:34,750 --> 00:19:39,140
And I want to have it
available on my phone.

363
00:19:39,140 --> 00:19:44,930
So now we have this project
right here on the phone.

364
00:19:44,930 --> 00:19:47,420
And everything that I
showed just a moment ago

365
00:19:47,420 --> 00:19:50,030
with Workspaces still works.

366
00:19:50,030 --> 00:19:55,950
So let's try-- first step, we're
just going to select this text

367
00:19:55,950 --> 00:19:58,466
and try a different
selection color.

368
00:19:58,466 --> 00:20:03,310
Ooh yeah, that's nice--
something like that?

369
00:20:03,310 --> 00:20:10,270
OK, good-- come over,
select this text, this H1.

370
00:20:10,270 --> 00:20:14,850
And again, we'll change the font
size to be really big-- yeah.

371
00:20:14,850 --> 00:20:18,430

372
00:20:18,430 --> 00:20:23,510
And what's great about this is
that these changes that I just

373
00:20:23,510 --> 00:20:29,490
made here while I'm
debugging my phone,

374
00:20:29,490 --> 00:20:31,280
these just saved to disk.

375
00:20:31,280 --> 00:20:36,950
So if I now come over
to my other window,

376
00:20:36,950 --> 00:20:43,260
this one-- see, this
one-- I refresh.

377
00:20:43,260 --> 00:20:45,630
Wow, yes-- cool.

378
00:20:45,630 --> 00:20:48,800
So this means I basically can
choose where I want to develop,

379
00:20:48,800 --> 00:20:50,620
and it's all saving
back to disk, which

380
00:20:50,620 --> 00:20:54,530
means that I can go really fast,
make changes, and not worry

381
00:20:54,530 --> 00:20:57,670
about where I have to copy what.

382
00:20:57,670 --> 00:21:03,880
All right, so this is how
remote debugging works now.

383
00:21:03,880 --> 00:21:05,962
We have a very
powerful feature set.

384
00:21:05,962 --> 00:21:07,920
Everything that you can
do in regular developer

385
00:21:07,920 --> 00:21:11,220
tools you can do while
you debug your phone--

386
00:21:11,220 --> 00:21:14,820
the screen casting
feature, port forwarding.

387
00:21:14,820 --> 00:21:19,760
And it's a lot easier to set
up than it ever was before.

388
00:21:19,760 --> 00:21:22,690
All right, I'm going to
move on to performance.

389
00:21:22,690 --> 00:21:29,270
So first up, these are actually
graphs from Internet Explorer.

390
00:21:29,270 --> 00:21:32,530
They were talking about what
sorts of operations the browser

391
00:21:32,530 --> 00:21:35,930
does when it's loading
and using pages.

392
00:21:35,930 --> 00:21:39,120
So they looked at the top
100 sites and the top Ajax

393
00:21:39,120 --> 00:21:42,180
sites, JavaScript-heavy
sites, and looked

394
00:21:42,180 --> 00:21:45,810
at what the browser is
busy doing on those sites.

395
00:21:45,810 --> 00:21:50,550
And in these cases, the amount
of time actually executing

396
00:21:50,550 --> 00:21:52,550
JavaScript is pretty low.

397
00:21:52,550 --> 00:21:55,950
A lot of time is just spent
in layout rendering and kind

398
00:21:55,950 --> 00:21:58,350
of manifesting the page.

399
00:21:58,350 --> 00:22:02,060
So this basically means
that JavaScript is often not

400
00:22:02,060 --> 00:22:04,310
the bottleneck in
many, many cases.

401
00:22:04,310 --> 00:22:06,100
And you want to be
able to look at and get

402
00:22:06,100 --> 00:22:08,480
an idea of the performance
of the other parts of what

403
00:22:08,480 --> 00:22:10,550
the browser has
to do, so not just

404
00:22:10,550 --> 00:22:12,150
running the JavaScript profile.

405
00:22:12,150 --> 00:22:14,440
So let's talk about
how some of that works.

406
00:22:14,440 --> 00:22:17,100
And to show it, I'm going
to do a little demo where

407
00:22:17,100 --> 00:22:20,450
I do a performance
audit of this site.

408
00:22:20,450 --> 00:22:25,830
So this is a festival in Canada.

409
00:22:25,830 --> 00:22:28,120
And they have a nice website.

410
00:22:28,120 --> 00:22:31,470
But it could be faster.

411
00:22:31,470 --> 00:22:34,260
So I loaded up the page.

412
00:22:34,260 --> 00:22:37,790
And as I scrolled out--
it might be hard to see.

413
00:22:37,790 --> 00:22:45,260
But it's a little--
it doesn't feel

414
00:22:45,260 --> 00:22:47,910
very smooth as I'm
scrolling here.

415
00:22:47,910 --> 00:22:50,770
It feels like it's stuttering.

416
00:22:50,770 --> 00:22:53,380
So I'm going to take
a look at the DevTools

417
00:22:53,380 --> 00:22:56,792
and see what they're
telling me about this.

418
00:22:56,792 --> 00:22:58,250
So I'm going to go
to the timeline.

419
00:22:58,250 --> 00:22:59,874
The timeline is where
you want to start

420
00:22:59,874 --> 00:23:02,080
all of your performance
investigations.

421
00:23:02,080 --> 00:23:04,340
And I'm going to
start recording.

422
00:23:04,340 --> 00:23:07,800
And here we go.

423
00:23:07,800 --> 00:23:11,080
So immediately, this is giving
me back a lot of information.

424
00:23:11,080 --> 00:23:14,960
And what I'm seeing is a
lot of purple here, right?

425
00:23:14,960 --> 00:23:19,360
And the purple, when I look,
is a lot of recalc style.

426
00:23:19,360 --> 00:23:23,680
Let me raise this up just
so that everyone can see.

427
00:23:23,680 --> 00:23:28,090
So recalc style in
jQuery-- OK, interesting.

428
00:23:28,090 --> 00:23:30,610
So we can look at
what exactly the call

429
00:23:30,610 --> 00:23:33,840
stack is that forced this.

430
00:23:33,840 --> 00:23:36,330
Add class-- OK, so
we're manipulating

431
00:23:36,330 --> 00:23:37,950
the class of an element.

432
00:23:37,950 --> 00:23:40,640
And we come down to where the
actual application code is.

433
00:23:40,640 --> 00:23:42,223
And let me just click
through on that.

434
00:23:42,223 --> 00:23:44,940

435
00:23:44,940 --> 00:23:49,940
And it went right here.

436
00:23:49,940 --> 00:23:53,590
So the cursor is telling me
that this is where it happened.

437
00:23:53,590 --> 00:23:56,080
We called toggleClass.

438
00:23:56,080 --> 00:24:00,390
And we're calling toggleClass
inside the Scroll Handler.

439
00:24:00,390 --> 00:24:04,010
So on every single
scroll event, we're

440
00:24:04,010 --> 00:24:08,820
manipulating the class
of the HTML element.

441
00:24:08,820 --> 00:24:11,460
This-- you know how
people tell you to not

442
00:24:11,460 --> 00:24:13,010
touch the DOM too much?

443
00:24:13,010 --> 00:24:15,050
This is usually why.

444
00:24:15,050 --> 00:24:18,000
You're manipulating the
class of the HTML element.

445
00:24:18,000 --> 00:24:23,760
And what it's causing is a
lot of performance problems,

446
00:24:23,760 --> 00:24:25,450
all this purple here.

447
00:24:25,450 --> 00:24:28,780
So let's try changing
this and fixing it.

448
00:24:28,780 --> 00:24:34,730
One quick fix that we can do is
using-- instead of toggleClass,

449
00:24:34,730 --> 00:24:41,460
I'm going to use an HTML5 API,
here we go, called classList.

450
00:24:41,460 --> 00:24:44,640

451
00:24:44,640 --> 00:24:50,360
And classList.toggle actually
has the exact same method

452
00:24:50,360 --> 00:24:55,830
signature, the same
arguments, as toggleClass.

453
00:24:55,830 --> 00:24:59,610
So we can just keep
that there, keep this,

454
00:24:59,610 --> 00:25:03,710
and now I'm just going
to hit Command-S.

455
00:25:03,710 --> 00:25:09,360
And that should just
send it immediately

456
00:25:09,360 --> 00:25:11,420
to the JavaScript engine.

457
00:25:11,420 --> 00:25:14,630
So now, when I come back
to Timeline, and I hit

458
00:25:14,630 --> 00:25:16,880
Record again-- ahh.

459
00:25:16,880 --> 00:25:19,910
OK, cool-- it's a
big change, right?

460
00:25:19,910 --> 00:25:21,790
There's no more purple.

461
00:25:21,790 --> 00:25:25,590
There's no more
recalculate style.

462
00:25:25,590 --> 00:25:30,200
Still, there is a good amount
of green, of painting happening.

463
00:25:30,200 --> 00:25:33,260
So we want to figure
out what that is.

464
00:25:33,260 --> 00:25:35,820
So I'm going to go into
the DevTools settings,

465
00:25:35,820 --> 00:25:40,160
and I'm going to turn on a mode
called Show Paint Rectangles.

466
00:25:40,160 --> 00:25:43,487
I'm also going to turn on
Show Composited Layer Borders.

467
00:25:43,487 --> 00:25:45,570
I'm going to get into what
these mean in a second,

468
00:25:45,570 --> 00:25:48,820
but I just kind of want to
figure out what's happening.

469
00:25:48,820 --> 00:25:53,870
OK, interesting-- so
you can see as I scroll,

470
00:25:53,870 --> 00:25:59,100
there's this rectangle
above the top nav.

471
00:25:59,100 --> 00:26:00,660
So it's being repainted.

472
00:26:00,660 --> 00:26:03,100
Every single time I
scroll, the browser

473
00:26:03,100 --> 00:26:05,930
has to re-figure out what
the top of that looks like.

474
00:26:05,930 --> 00:26:08,240
You can't just put the
layers on top of each other.

475
00:26:08,240 --> 00:26:10,150
It's doing a lot of work here.

476
00:26:10,150 --> 00:26:12,160
I want to make that easier.

477
00:26:12,160 --> 00:26:15,730
And so I'm going to
try a few tricks.

478
00:26:15,730 --> 00:26:18,670
So we're going to come in here.

479
00:26:18,670 --> 00:26:20,730
Here's the main navigation.

480
00:26:20,730 --> 00:26:25,060
A quick tip is you can
hit H on the keyboard,

481
00:26:25,060 --> 00:26:26,810
and it'll just hide
whatever element

482
00:26:26,810 --> 00:26:30,100
you're looking at, all right?

483
00:26:30,100 --> 00:26:34,610
So we have this top nav.

484
00:26:34,610 --> 00:26:39,290
And it's actually
position fixed right?

485
00:26:39,290 --> 00:26:48,050
Or-- here we go, it's position
absolute, interesting.

486
00:26:48,050 --> 00:26:50,630
Let me try and see
if we can fix this.

487
00:26:50,630 --> 00:26:53,700
So I'm going to change
this to position fixed.

488
00:26:53,700 --> 00:26:56,300

489
00:26:56,300 --> 00:27:00,510
And-- ahh, OK, here we go.

490
00:27:00,510 --> 00:27:04,695

491
00:27:04,695 --> 00:27:08,160
All right, position
fixed, and I'm

492
00:27:08,160 --> 00:27:10,820
going to use a trick
called promoting a layer.

493
00:27:10,820 --> 00:27:13,490

494
00:27:13,490 --> 00:27:15,980
And you might have
seen this before.

495
00:27:15,980 --> 00:27:18,580
It's often called
the translateZ(0)

496
00:27:18,580 --> 00:27:20,510
or the translate3d hack.

497
00:27:20,510 --> 00:27:23,050

498
00:27:23,050 --> 00:27:25,320
So now I've just
promoted it to a layer.

499
00:27:25,320 --> 00:27:28,580
And you can actually
see this gold border

500
00:27:28,580 --> 00:27:32,130
around it-- indicates
that it's now a layer.

501
00:27:32,130 --> 00:27:34,520
And now when I try
scrolling, I don't

502
00:27:34,520 --> 00:27:37,890
have that red paint
rectangle around it.

503
00:27:37,890 --> 00:27:40,710
And I can verify
here in the Timeline

504
00:27:40,710 --> 00:27:44,050
by just scrolling
up and down-- yeah.

505
00:27:44,050 --> 00:27:46,720
And I've taken care
of that concern.

506
00:27:46,720 --> 00:27:49,450
This particular
trick often happens

507
00:27:49,450 --> 00:27:52,350
with position fixed elements.

508
00:27:52,350 --> 00:27:55,630
And right now, it's only
particular to Chrome

509
00:27:55,630 --> 00:27:56,990
on desktop.

510
00:27:56,990 --> 00:27:59,610
Pretty much all other browsers,
including mobile browsers,

511
00:27:59,610 --> 00:28:01,370
have ways of dealing with this.

512
00:28:01,370 --> 00:28:04,290
But it's something
to look out for.

513
00:28:04,290 --> 00:28:11,070
All right, so those are a few
of the tricks that you can use.

514
00:28:11,070 --> 00:28:14,340
But I want to walk through what
some of those operations were.

515
00:28:14,340 --> 00:28:17,060
The first that you
see is recalc style.

516
00:28:17,060 --> 00:28:20,224
So recalculation of style
gets all the style rules

517
00:28:20,224 --> 00:28:20,890
in the document.

518
00:28:20,890 --> 00:28:24,730
Whether it's in a CSS style
sheet, an in-line style,

519
00:28:24,730 --> 00:28:27,800
a style tag, it
gets all of them.

520
00:28:27,800 --> 00:28:30,770
And then, it looks at
what all the selectors are

521
00:28:30,770 --> 00:28:33,010
and matches them
against the DOM.

522
00:28:33,010 --> 00:28:38,560
It figures out what elements it
needs to evaluate the style of

523
00:28:38,560 --> 00:28:41,690
and gets a computed style
of every CSS property

524
00:28:41,690 --> 00:28:45,340
for every element in the DOM.

525
00:28:45,340 --> 00:28:49,160
All right, once it knows what
all the styles should be,

526
00:28:49,160 --> 00:28:50,740
it needs to apply it.

527
00:28:50,740 --> 00:28:52,317
And this is called the layout.

528
00:28:52,317 --> 00:28:54,400
Layout is the first step
where it just figures out

529
00:28:54,400 --> 00:28:57,563
the geometry of where
everything goes in the document.

530
00:28:57,563 --> 00:29:00,770

531
00:29:00,770 --> 00:29:05,830
I want to show a problem
called layout thrashing.

532
00:29:05,830 --> 00:29:12,720
Layout thrashing happens because
when a browser is laying out

533
00:29:12,720 --> 00:29:14,550
the geometry of
the page, it also

534
00:29:14,550 --> 00:29:18,350
needs to figure
out-- if you ask it

535
00:29:18,350 --> 00:29:21,850
for the current position
or the current width,

536
00:29:21,850 --> 00:29:25,010
the current size of an element,
the browser's like, oh, OK,

537
00:29:25,010 --> 00:29:26,510
I'll go get that.

538
00:29:26,510 --> 00:29:29,210
But then, if you change
something, it re-lays it out.

539
00:29:29,210 --> 00:29:32,620
And then, there's a bad pattern
that people often fall into.

540
00:29:32,620 --> 00:29:35,220
I'm going to show a little
demonstration right now.

541
00:29:35,220 --> 00:29:38,820

542
00:29:38,820 --> 00:29:56,560
All right, come
on-- OK, all right,

543
00:29:56,560 --> 00:29:59,970
so in this little
demonstration, I

544
00:29:59,970 --> 00:30:02,530
can change the size of
the green rectangle.

545
00:30:02,530 --> 00:30:05,660
And when I hit Set
Block Width, it goes

546
00:30:05,660 --> 00:30:11,110
and it sets the width of
all the other text blocks.

547
00:30:11,110 --> 00:30:15,960
You can see-- click,
ugh, it takes a while.

548
00:30:15,960 --> 00:30:18,750

549
00:30:18,750 --> 00:30:22,110
Now, there's another
way to do this.

550
00:30:22,110 --> 00:30:28,990
And if I try that
way-- ahh much faster.

551
00:30:28,990 --> 00:30:32,065
OK, so what's the
difference between the two?

552
00:30:32,065 --> 00:30:33,190
Let's open up the DevTools.

553
00:30:33,190 --> 00:30:36,650

554
00:30:36,650 --> 00:30:40,150
First, I'll turn off these guys.

555
00:30:40,150 --> 00:30:44,850
And I'm going to start
our Timeline recording

556
00:30:44,850 --> 00:30:48,830
and set that block width.

557
00:30:48,830 --> 00:30:55,654
Ooh, OK, so here, you can see
that big pause, that big chunk,

558
00:30:55,654 --> 00:30:56,320
after I clicked.

559
00:30:56,320 --> 00:30:59,540

560
00:30:59,540 --> 00:31:01,180
All right, so I'll
bring this up.

561
00:31:01,180 --> 00:31:04,472
Now, you can see here, this
pattern-- recalc style layout,

562
00:31:04,472 --> 00:31:06,180
recalc style layout,
recalc style layout,

563
00:31:06,180 --> 00:31:09,941
recalc style layout.

564
00:31:09,941 --> 00:31:13,851
And there's this little
warning indicator telling you

565
00:31:13,851 --> 00:31:15,100
that there might be a problem.

566
00:31:15,100 --> 00:31:17,420
And it says, "Forced
synchronous layout

567
00:31:17,420 --> 00:31:20,930
is a possible
performance bottleneck."

568
00:31:20,930 --> 00:31:24,010
And you can see right here
what it's telling you.

569
00:31:24,010 --> 00:31:27,970
There was a layout that was
invalidated at line 125.

570
00:31:27,970 --> 00:31:33,252
And the layout was forced to
be recomputed at line 124.

571
00:31:33,252 --> 00:31:34,585
So let's go look at those lines.

572
00:31:34,585 --> 00:31:37,830

573
00:31:37,830 --> 00:31:42,440
All right, so here is line 124.

574
00:31:42,440 --> 00:31:44,500
What we have is
a big while loop.

575
00:31:44,500 --> 00:31:48,130
It's just looping over all
those little text blocks.

576
00:31:48,130 --> 00:31:51,870
And inside that loop,
we get the offset width

577
00:31:51,870 --> 00:31:56,140
of that green
block, of this guy.

578
00:31:56,140 --> 00:32:00,769
And then, we come in and we
set the width of each element.

579
00:32:00,769 --> 00:32:02,560
So we're setting the
width of each element.

580
00:32:02,560 --> 00:32:03,976
We're going to
look into the size.

581
00:32:03,976 --> 00:32:07,050
We're setting the width,
going to look into the size.

582
00:32:07,050 --> 00:32:09,990
In the fast version,
which is right here,

583
00:32:09,990 --> 00:32:13,250
we go and we look up the
width of that block once.

584
00:32:13,250 --> 00:32:15,980
And then, we go and
we do all of our sets

585
00:32:15,980 --> 00:32:17,970
where we set the widths.

586
00:32:17,970 --> 00:32:21,520
So the big thing
to learn here is

587
00:32:21,520 --> 00:32:28,790
that if you need to figure out
the dimensions, if you need

588
00:32:28,790 --> 00:32:31,130
to ask the DOM
for the dimensions

589
00:32:31,130 --> 00:32:35,130
or sizes of an element,
try and do that only once

590
00:32:35,130 --> 00:32:37,700
and not interleave it
with changes that you're

591
00:32:37,700 --> 00:32:41,110
making to the DOM.

592
00:32:41,110 --> 00:32:43,060
But if you ever
have any question,

593
00:32:43,060 --> 00:32:44,840
just open up the Timeline.

594
00:32:44,840 --> 00:32:47,390
And you'll probably end
up seeing this pattern.

595
00:32:47,390 --> 00:32:51,030
It happens a lot of times.

596
00:32:51,030 --> 00:32:53,960
All right, the next is paint.

597
00:32:53,960 --> 00:32:57,340
Painting often
captures a lot of time.

598
00:32:57,340 --> 00:32:59,860
We were seeing
before all the green.

599
00:32:59,860 --> 00:33:01,730
There's a lot of
time spent in paint.

600
00:33:01,730 --> 00:33:05,279
There's a few ways
to debug when you're

601
00:33:05,279 --> 00:33:06,320
having a lot of painting.

602
00:33:06,320 --> 00:33:09,650
And the first is
Continuous Paint mode.

603
00:33:09,650 --> 00:33:12,130
So Continuous Paint
mode allows you

604
00:33:12,130 --> 00:33:16,850
to look at how long
it takes to paint,

605
00:33:16,850 --> 00:33:19,060
and it allows you to
kind of figure out

606
00:33:19,060 --> 00:33:20,450
what is contributing to it.

607
00:33:20,450 --> 00:33:24,610
So I'm going to turn it on now.

608
00:33:24,610 --> 00:33:29,700
You'll see right here, Enable
Continuous Page Repainting.

609
00:33:29,700 --> 00:33:31,870
All right, so this is it.

610
00:33:31,870 --> 00:33:36,200
What it's telling me is it's
taking about three to four

611
00:33:36,200 --> 00:33:40,830
milliseconds to paint this page.

612
00:33:40,830 --> 00:33:42,670
And it's just doing it
over and over again.

613
00:33:42,670 --> 00:33:47,910
I can verify that down here
by opening the timeline.

614
00:33:47,910 --> 00:33:50,480
All right, so what
this allows us to do

615
00:33:50,480 --> 00:33:52,540
is we can make some
changes and figure out

616
00:33:52,540 --> 00:33:57,960
how to kind of manipulate
what that looks like.

617
00:33:57,960 --> 00:34:02,340
So I'm going to come over
and turn on some box shadows.

618
00:34:02,340 --> 00:34:08,230
Wow, OK, cool, so box
shadows definitely

619
00:34:08,230 --> 00:34:10,510
take a lot more time to paint.

620
00:34:10,510 --> 00:34:15,010
And so that's why we're seeing
the graph really spike up.

621
00:34:15,010 --> 00:34:20,790
I could also, let's see,
try-- if, for instance,

622
00:34:20,790 --> 00:34:25,739
I take this box show, and right
now it has a blur radius of 120

623
00:34:25,739 --> 00:34:32,730
pixels, if I just change that
down to 20 pixels, it's faster.

624
00:34:32,730 --> 00:34:35,520
Bring it down even more-- yeah.

625
00:34:35,520 --> 00:34:39,219
So this allows you to kind
of see what affects paint.

626
00:34:39,219 --> 00:34:44,060
Oftentimes, box shadow does
currently impact paint cost

627
00:34:44,060 --> 00:34:45,429
quite a lot.

628
00:34:45,429 --> 00:34:47,130
But Chrome is always
improving things.

629
00:34:47,130 --> 00:34:49,400
So that might not be
the same case tomorrow.

630
00:34:49,400 --> 00:34:53,650

631
00:34:53,650 --> 00:34:55,460
The next situation
I want to introduce

632
00:34:55,460 --> 00:34:57,910
is-- we call it paint storms.

633
00:34:57,910 --> 00:35:01,130
And pant storms basically
refers to the browser

634
00:35:01,130 --> 00:35:02,960
is painting the page a lot.

635
00:35:02,960 --> 00:35:05,350
But it really shouldn't have to.

636
00:35:05,350 --> 00:35:11,130
So let's take a look at a
situation where that happens.

637
00:35:11,130 --> 00:35:15,955
So I'm going to come in here
and set this background--

638
00:35:15,955 --> 00:35:16,680
all right.

639
00:35:16,680 --> 00:35:22,200

640
00:35:22,200 --> 00:35:25,770
I'm going to come
over to Timeline

641
00:35:25,770 --> 00:35:29,670
and turn off Continuous
Paint for now.

642
00:35:29,670 --> 00:35:35,600
And if I turn on Show Paint
Recs, you can see-- actually,

643
00:35:35,600 --> 00:35:37,200
it's a little hard to see.

644
00:35:37,200 --> 00:35:41,540
But the entire
screen is repainting

645
00:35:41,540 --> 00:35:43,970
on every single scroll.

646
00:35:43,970 --> 00:35:46,750
We can see the paint
action down here.

647
00:35:46,750 --> 00:35:50,306
It has to figure out-- let
me turn on a box shadow,

648
00:35:50,306 --> 00:35:51,430
too, so it hurts even more.

649
00:35:51,430 --> 00:35:54,790

650
00:35:54,790 --> 00:35:58,670
Uhh, yeah, that
feels bad, right?

651
00:35:58,670 --> 00:36:02,750
Ouch-- all right,
so what's happening

652
00:36:02,750 --> 00:36:05,930
is that there's the fixed
background behind all

653
00:36:05,930 --> 00:36:06,920
this content.

654
00:36:06,920 --> 00:36:09,820
And the browser is
being really slow

655
00:36:09,820 --> 00:36:12,990
in figuring out-- on
every single scroll,

656
00:36:12,990 --> 00:36:18,570
it is recomputing how that looks
underneath all this content.

657
00:36:18,570 --> 00:36:24,910
I'm going to quickly try
and fix this-- we'll see.

658
00:36:24,910 --> 00:36:31,150
Doo, doo, doo-- I'm going to
take the fixed background that

659
00:36:31,150 --> 00:36:39,400
is on the body, and I'm going
to create a brand new element.

660
00:36:39,400 --> 00:36:43,928

661
00:36:43,928 --> 00:36:46,960
Let's put him right here.

662
00:36:46,960 --> 00:36:50,710
And I'm going to cheat.

663
00:36:50,710 --> 00:36:52,270
And I have some code-- hey.

664
00:36:52,270 --> 00:36:55,958

665
00:36:55,958 --> 00:36:57,690
Hey, what?

666
00:36:57,690 --> 00:37:03,790
No, definitely not--
OK, there we go.

667
00:37:03,790 --> 00:37:05,780
So I have my div.

668
00:37:05,780 --> 00:37:08,460
And let's drop in that.

669
00:37:08,460 --> 00:37:12,180
OK, yeah, that
seems pretty good.

670
00:37:12,180 --> 00:37:18,340
With 100% cover-- there we go.

671
00:37:18,340 --> 00:37:23,540
OK, cool, now--
so I've basically

672
00:37:23,540 --> 00:37:26,880
shifted the background from
the background of the body

673
00:37:26,880 --> 00:37:32,200
to a div that's within it and
just put z-index as negative 1

674
00:37:32,200 --> 00:37:34,500
to kind of put it
behind everything.

675
00:37:34,500 --> 00:37:37,650
And I use that trick again,
the translateZ(0) trick,

676
00:37:37,650 --> 00:37:41,200
because it is position fixed.

677
00:37:41,200 --> 00:37:45,390
And so you can see now,
there's no red outline.

678
00:37:45,390 --> 00:37:51,200
And if I look in the
timeline, there's no activity.

679
00:37:51,200 --> 00:37:55,590
Just to kind of verify that
this indeed does change things,

680
00:37:55,590 --> 00:37:57,930
I take off that translateZ(0).

681
00:37:57,930 --> 00:38:01,090

682
00:38:01,090 --> 00:38:01,640
It's back.

683
00:38:01,640 --> 00:38:06,112

684
00:38:06,112 --> 00:38:07,530
It's gone.

685
00:38:07,530 --> 00:38:14,080
Cool, so that can be a trick
for fixed backgrounds or fixed

686
00:38:14,080 --> 00:38:16,490
position elements.

687
00:38:16,490 --> 00:38:18,740
But the big thing that
you want to look for

688
00:38:18,740 --> 00:38:21,010
is turning on Show
Paint Rectangles

689
00:38:21,010 --> 00:38:23,540
and seeing if the
entire page is flashing,

690
00:38:23,540 --> 00:38:25,300
or one section of
the page is flashing,

691
00:38:25,300 --> 00:38:27,880
while you're scrolling the
page, or while some behavior is

692
00:38:27,880 --> 00:38:28,630
happening.

693
00:38:28,630 --> 00:38:32,340
That's often a way you can--
there is some improvement

694
00:38:32,340 --> 00:38:33,590
that you could make.

695
00:38:33,590 --> 00:38:35,090
And you want to
investigate what you

696
00:38:35,090 --> 00:38:39,050
can do there to make the
experience a lot smoother.

697
00:38:39,050 --> 00:38:48,110
All right, moving forward--
I just kind of want

698
00:38:48,110 --> 00:38:50,510
to point out, if you spend a
lot of time in the timeline,

699
00:38:50,510 --> 00:38:52,840
you want to get a flow
for what operations

700
00:38:52,840 --> 00:38:54,140
are supposed to happen.

701
00:38:54,140 --> 00:38:56,890
And this is the
correct kind of flow.

702
00:38:56,890 --> 00:38:59,190
So oftentimes, you'll
have JavaScript that runs.

703
00:38:59,190 --> 00:39:02,210
After that, the styles
need to be recalculated.

704
00:39:02,210 --> 00:39:04,730
The geometry of the page
needs to be laid out.

705
00:39:04,730 --> 00:39:06,030
Maybe there's paint set-up.

706
00:39:06,030 --> 00:39:08,060
We have to show what
things look like.

707
00:39:08,060 --> 00:39:09,560
And then, we have
to kind of send it

708
00:39:09,560 --> 00:39:11,400
to the GPU and composite
layers together.

709
00:39:11,400 --> 00:39:15,170

710
00:39:15,170 --> 00:39:17,400
When doing performance
work with the timeline,

711
00:39:17,400 --> 00:39:22,290
this is kind of a cheat sheet
for what tool to use when.

712
00:39:22,290 --> 00:39:25,055
If you profile
with the timeline,

713
00:39:25,055 --> 00:39:27,140
and you're spending a
lot of time in script,

714
00:39:27,140 --> 00:39:30,460
just go to the
JavaScript Profiler.

715
00:39:30,460 --> 00:39:34,430
If you're spending a lot of
time in layout, look and figure

716
00:39:34,430 --> 00:39:37,640
out if you have layout
thrashing, things like that.

717
00:39:37,640 --> 00:39:39,120
Paint-- I covered this.

718
00:39:39,120 --> 00:39:44,920
Paint recs, layer borders--
use Continuous Paint mode.

719
00:39:44,920 --> 00:39:47,450
And there's a pro
level feature called

720
00:39:47,450 --> 00:39:51,650
About Tracing, which dives
into the guts of Chrome,

721
00:39:51,650 --> 00:39:53,900
that you can use if none of
these are working for you.

722
00:39:53,900 --> 00:39:57,780

723
00:39:57,780 --> 00:40:01,440
All right, but how do
these all map to CSS?

724
00:40:01,440 --> 00:40:07,060
Just your general
CSS that you write--

725
00:40:07,060 --> 00:40:10,300
the CSS Selector gets
recomputed in recalc style.

726
00:40:10,300 --> 00:40:13,760
The height, because it's
the geometry of the element,

727
00:40:13,760 --> 00:40:16,010
is what size it is
and its position.

728
00:40:16,010 --> 00:40:17,440
That affects layout.

729
00:40:17,440 --> 00:40:21,050
And a text shadow doesn't affect
the layout of the page at all.

730
00:40:21,050 --> 00:40:22,670
It only affects how it looks.

731
00:40:22,670 --> 00:40:23,814
It's a visual effect.

732
00:40:23,814 --> 00:40:25,480
And so that's captured
underneath paint.

733
00:40:25,480 --> 00:40:28,140

734
00:40:28,140 --> 00:40:31,820
So there's actually--
between all

735
00:40:31,820 --> 00:40:33,630
the different CSS
properties, they

736
00:40:33,630 --> 00:40:38,190
affect different parts
of all these operations.

737
00:40:38,190 --> 00:40:44,360
Transform and opacity can
be operated 100% on the GPU.

738
00:40:44,360 --> 00:40:47,910
This is really good.

739
00:40:47,910 --> 00:40:51,200
Basically, GPUs are
fantastic at doing

740
00:40:51,200 --> 00:40:52,620
these sorts of operations.

741
00:40:52,620 --> 00:40:55,410
But everything else needs to go
through a little bit more work.

742
00:40:55,410 --> 00:40:57,730
Box shadow, border
radius, and background

743
00:40:57,730 --> 00:40:59,640
just need to be painted.

744
00:40:59,640 --> 00:41:02,430
But they don't affect
the geometry, the layout.

745
00:41:02,430 --> 00:41:04,970
And like I mentioned,
width, margin, border,

746
00:41:04,970 --> 00:41:07,660
those sorts of things,
those do layout.

747
00:41:07,660 --> 00:41:10,670
So if you're doing an
animation, like you're

748
00:41:10,670 --> 00:41:12,780
animating an item
across the page,

749
00:41:12,780 --> 00:41:16,380
or you're increasing the
height of an element, the less

750
00:41:16,380 --> 00:41:19,630
work that you can
do, the better.

751
00:41:19,630 --> 00:41:23,100
If all you can change is just
the transform and opacity,

752
00:41:23,100 --> 00:41:25,780
it's probably going to be a
lot faster than if you try

753
00:41:25,780 --> 00:41:29,000
and animate left
and top or width.

754
00:41:29,000 --> 00:41:31,280
So try and animate these guys.

755
00:41:31,280 --> 00:41:35,940

756
00:41:35,940 --> 00:41:38,560
Here's another way
to look at that.

757
00:41:38,560 --> 00:41:41,690
There's four things that a
browser can transition really

758
00:41:41,690 --> 00:41:42,550
fast.

759
00:41:42,550 --> 00:41:45,940
They can scale, move,
rotate, and fade.

760
00:41:45,940 --> 00:41:51,340
That maps over to our
transforms and our opacity.

761
00:41:51,340 --> 00:41:56,280
Sometimes, you do need to
apply that translateZ(0).

762
00:41:56,280 --> 00:41:59,000
Everything else that you
translate, that you animate,

763
00:41:59,000 --> 00:42:00,630
might take more work.

764
00:42:00,630 --> 00:42:02,850
And so just be aware of that.

765
00:42:02,850 --> 00:42:05,950
Especially on older
phones, animating something

766
00:42:05,950 --> 00:42:10,940
like left and top or
width is going to be slow.

767
00:42:10,940 --> 00:42:13,355
So if you want things
to be fast on mobile,

768
00:42:13,355 --> 00:42:18,090
try and animate
only those things.

769
00:42:18,090 --> 00:42:24,929
All right, I just want
to quickly try and show

770
00:42:24,929 --> 00:42:27,220
the difference of what this
looks like in the DevTools.

771
00:42:27,220 --> 00:42:29,920

772
00:42:29,920 --> 00:42:31,320
I have this table here.

773
00:42:31,320 --> 00:42:34,230
And this is kind of
a fun little app that

774
00:42:34,230 --> 00:42:39,520
lets you see how different
CSS properties animate.

775
00:42:39,520 --> 00:42:42,080
It's nice.

776
00:42:42,080 --> 00:42:44,310
Let's take a look
at what changes

777
00:42:44,310 --> 00:42:47,870
all these things affect
in the web browser.

778
00:42:47,870 --> 00:42:55,740
So we'll open up the
DevTools and come down here.

779
00:42:55,740 --> 00:42:59,960
All right, so
here, we have left.

780
00:42:59,960 --> 00:43:00,950
Here we have top.

781
00:43:00,950 --> 00:43:02,220
We're animating the top.

782
00:43:02,220 --> 00:43:04,306
And here's transform.

783
00:43:04,306 --> 00:43:05,930
And if I come in,
I'm going to turn off

784
00:43:05,930 --> 00:43:10,797
Show Paint Rectangles for
now and go to Timeline-- yes.

785
00:43:10,797 --> 00:43:11,630
I'll do a recording.

786
00:43:11,630 --> 00:43:15,970

787
00:43:15,970 --> 00:43:17,272
There we go.

788
00:43:17,272 --> 00:43:18,730
So here, in this
recording, you can

789
00:43:18,730 --> 00:43:22,710
see we're going through
recalc style, layout, paint,

790
00:43:22,710 --> 00:43:23,530
composite layers.

791
00:43:23,530 --> 00:43:26,090

792
00:43:26,090 --> 00:43:33,810
When I do transform--
oops-- all we're doing

793
00:43:33,810 --> 00:43:36,492
is just painting and
composite layers.

794
00:43:36,492 --> 00:43:37,950
And that's all the
work that we do.

795
00:43:37,950 --> 00:43:40,534

796
00:43:40,534 --> 00:43:48,130
Yeah, so the best ways to
do an animation, if you can,

797
00:43:48,130 --> 00:43:49,720
is to not use JavaScript.

798
00:43:49,720 --> 00:43:53,420
If you can do it completely in
key frame animations or a CSS

799
00:43:53,420 --> 00:43:56,670
transition, browsers can
optimize that really,

800
00:43:56,670 --> 00:43:57,730
really well.

801
00:43:57,730 --> 00:44:02,220
Once you use jQuery to animate,
it's going to be a lot slower.

802
00:44:02,220 --> 00:44:07,920
Because the browser can't
predict what's happening next.

803
00:44:07,920 --> 00:44:09,610
All right, let's move on.

804
00:44:09,610 --> 00:44:14,330

805
00:44:14,330 --> 00:44:18,080
I was going to talk a little
bit about how to figure out

806
00:44:18,080 --> 00:44:21,200
when sites are done loading.

807
00:44:21,200 --> 00:44:23,100
And there's a
fantastic measurement.

808
00:44:23,100 --> 00:44:25,120
And it's called the speed index.

809
00:44:25,120 --> 00:44:28,180
It basically
evaluates how long it

810
00:44:28,180 --> 00:44:31,280
takes to get a visual
on the page of what

811
00:44:31,280 --> 00:44:34,260
the page is supposed
to look like.

812
00:44:34,260 --> 00:44:36,880
It's a really nice
metric and captures

813
00:44:36,880 --> 00:44:39,150
when the page has completed
loading a lot better

814
00:44:39,150 --> 00:44:43,160
than window.load or
DOM content ready.

815
00:44:43,160 --> 00:44:44,850
So it's called the speed index.

816
00:44:44,850 --> 00:44:50,320
And right now, you can use
Web Page Test to look at it.

817
00:44:50,320 --> 00:44:52,100
Web Page Test-- raise
your hand if you've

818
00:44:52,100 --> 00:44:54,426
used Web Page Test before.

819
00:44:54,426 --> 00:44:58,820
A few people, yeah--
it's really fantastic.

820
00:44:58,820 --> 00:45:02,940
So I'm going to show quickly
what the results look like.

821
00:45:02,940 --> 00:45:07,680
So I did an analysis for
a site called RetailMeNot.

822
00:45:07,680 --> 00:45:12,990
And in it, you get
the network waterfall.

823
00:45:12,990 --> 00:45:16,720
But a really nice view
is the film strip view

824
00:45:16,720 --> 00:45:21,180
where you can see
this network waterfall

825
00:45:21,180 --> 00:45:24,080
against the visual
representation.

826
00:45:24,080 --> 00:45:27,070
So I can scroll and
kind of see as resources

827
00:45:27,070 --> 00:45:29,660
were loaded what did
the page look like.

828
00:45:29,660 --> 00:45:36,120
And here, at 0.9 seconds, we
finally got to see something.

829
00:45:36,120 --> 00:45:42,640
It can also capture what the
Chrome DevTools Timeline will

830
00:45:42,640 --> 00:45:45,890
look like for this
exact recording.

831
00:45:45,890 --> 00:45:47,690
The Chrome DevTools
is a web app.

832
00:45:47,690 --> 00:45:51,930
So we can just load up
the Chrome DevTools using

833
00:45:51,930 --> 00:45:57,380
that recording and see if we
see any of those patterns.

834
00:45:57,380 --> 00:46:03,762
Big layout, timers-- yeah,
this site was really fast,

835
00:46:03,762 --> 00:46:04,970
so there's not much optimize.

836
00:46:04,970 --> 00:46:10,410

837
00:46:10,410 --> 00:46:15,070
And lastly, they also do Show
and Capture the Speed Index.

838
00:46:15,070 --> 00:46:16,960
So a really nice
thing that you can do

839
00:46:16,960 --> 00:46:24,140
is have Web Page Test track
the performance of your page.

840
00:46:24,140 --> 00:46:28,360
Do a test once a day, and you
can see its progress over time,

841
00:46:28,360 --> 00:46:30,480
and see if you're
actually improving

842
00:46:30,480 --> 00:46:34,410
how fast that page loads.

843
00:46:34,410 --> 00:46:37,730
It's possible to run a
completely private instance.

844
00:46:37,730 --> 00:46:38,910
You can send it.

845
00:46:38,910 --> 00:46:44,080
You can ask a Chrome or
an IE8 or IE9 in the cloud

846
00:46:44,080 --> 00:46:45,220
to evaluate the page.

847
00:46:45,220 --> 00:46:46,691
Or you can also
run it internally

848
00:46:46,691 --> 00:46:48,690
if you want to evaluate
it against a site that's

849
00:46:48,690 --> 00:46:51,590
in development.

850
00:46:51,590 --> 00:46:59,350
All right, so to sum up, users
expect things to be fast.

851
00:46:59,350 --> 00:47:03,970
Under 100 milliseconds
is good for showing

852
00:47:03,970 --> 00:47:05,760
a user that it's happening.

853
00:47:05,760 --> 00:47:07,360
But it starts to
get really stuttery

854
00:47:07,360 --> 00:47:09,060
when it comes to animation.

855
00:47:09,060 --> 00:47:12,546
Anything longer than
one second is just

856
00:47:12,546 --> 00:47:13,670
going to take way too long.

857
00:47:13,670 --> 00:47:16,950
So you want to be really attuned
to how fast your page loads

858
00:47:16,950 --> 00:47:19,970
and how fast the
interactions are.

859
00:47:19,970 --> 00:47:22,320
These are some
aggressive but good goals

860
00:47:22,320 --> 00:47:24,660
to kind of think about.

861
00:47:24,660 --> 00:47:27,660
When it comes to delivering
an experience on mobile,

862
00:47:27,660 --> 00:47:29,540
you really want to
show the content that's

863
00:47:29,540 --> 00:47:32,820
above the fold, the content that
the user sees when they first

864
00:47:32,820 --> 00:47:36,670
load up the page, in under
one second from after they

865
00:47:36,670 --> 00:47:40,710
click a button, click a link,
or finish typing in a URL.

866
00:47:40,710 --> 00:47:43,450
Under one second is a good goal.

867
00:47:43,450 --> 00:47:46,150
One of the things that has to
happen to be able to do this

868
00:47:46,150 --> 00:47:48,800
is serve all the
content that you

869
00:47:48,800 --> 00:47:52,435
need to for that above the
fold content in under 14K.

870
00:47:52,435 --> 00:47:55,260

871
00:47:55,260 --> 00:47:58,730
That includes any CSS that
is required for that section.

872
00:47:58,730 --> 00:48:01,670
But if you have CSS that
applies to the rest of the page,

873
00:48:01,670 --> 00:48:05,740
you can defer that and
send that part later.

874
00:48:05,740 --> 00:48:14,940
Oh, well, OK, all right,
lastly-- a maximum

875
00:48:14,940 --> 00:48:16,790
of 200 milliseconds
for the server

876
00:48:16,790 --> 00:48:21,960
to respond with the page, 60 FPS
scrolling, 60 FPS transitions,

877
00:48:21,960 --> 00:48:28,264
keep things fast, and a
speed index under 1,000.

878
00:48:28,264 --> 00:48:30,680
I showed you a lot of things
in the Chrome Developer tools

879
00:48:30,680 --> 00:48:31,960
today.

880
00:48:31,960 --> 00:48:34,100
We have been working
on our documentation.

881
00:48:34,100 --> 00:48:36,300
So this covers a lot of
the functionality that's

882
00:48:36,300 --> 00:48:38,480
in there, things that
you might not expect.

883
00:48:38,480 --> 00:48:42,970
So I encourage you
to go check that out.

884
00:48:42,970 --> 00:48:46,530
And everything that I showed
is available in Chrome Canary

885
00:48:46,530 --> 00:48:48,010
today.

886
00:48:48,010 --> 00:48:52,245
And one more thing--
is Jimmy Moon here?

887
00:48:52,245 --> 00:48:54,048
He is, oh good.

888
00:48:54,048 --> 00:48:56,278
OK, great, hi, Jimmy.

889
00:48:56,278 --> 00:48:58,190
Jimmy's awesome.

890
00:48:58,190 --> 00:49:01,895
And we met actually at
Google I/O not too long ago.

891
00:49:01,895 --> 00:49:04,790
He's a JavaScript
developer here in Seoul.

892
00:49:04,790 --> 00:49:08,230
And he's been really active
on the Yeomen project.

893
00:49:08,230 --> 00:49:12,700
He also maintains the generators
for the Chrome apps and Chrome

894
00:49:12,700 --> 00:49:13,310
extensions.

895
00:49:13,310 --> 00:49:15,410
And a lot of people use these.

896
00:49:15,410 --> 00:49:17,020
He's also working
on a brand new site

897
00:49:17,020 --> 00:49:18,436
that I encourage
you to check out.

898
00:49:18,436 --> 00:49:20,140
It's called Chromist.

899
00:49:20,140 --> 00:49:23,450
And he wrote about Polymer
just the other day.

900
00:49:23,450 --> 00:49:24,670
And it's really fantastic.

901
00:49:24,670 --> 00:49:25,830
So I encourage you
to check that out.

902
00:49:25,830 --> 00:49:27,280
And I just wanted
to thank you, Jimmy,

903
00:49:27,280 --> 00:49:28,432
because you're fantastic.

904
00:49:28,432 --> 00:49:29,390
So thank you very much.

905
00:49:29,390 --> 00:49:32,990
[APPLAUSE]

906
00:49:32,990 --> 00:49:34,972
PAUL IRISH: And
that's it for me, too.

907
00:49:34,972 --> 00:49:36,680
Thank you guys very
much-- appreciate it.

908
00:49:36,680 --> 00:49:51,449
[APPLAUSE]

