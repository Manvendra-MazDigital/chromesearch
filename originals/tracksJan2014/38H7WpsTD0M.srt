1
00:00:00,000 --> 00:00:00,820

2
00:00:00,820 --> 00:00:01,230
ERIC KOLEDA: All right.

3
00:00:01,230 --> 00:00:02,290
Hello everybody.

4
00:00:02,290 --> 00:00:03,890
Welcome.

5
00:00:03,890 --> 00:00:05,750
My name is Eric Koleda.

6
00:00:05,750 --> 00:00:08,330
I'm a Developer Programs
Engineer working on Google

7
00:00:08,330 --> 00:00:09,580
Apps Script.

8
00:00:09,580 --> 00:00:10,755
MATTHEW ZIEGELBAUM: My name
is Matt Ziegelbaum.

9
00:00:10,755 --> 00:00:13,580
I'm a Software Engineer and
I work on Google Forms.

10
00:00:13,580 --> 00:00:15,770
ERIC KOLEDA: And today, we're
going to show you how you can

11
00:00:15,770 --> 00:00:19,890
take the simple, scalable data
collection of Google Forms and

12
00:00:19,890 --> 00:00:22,740
combine it with the powerful,
integrated automation of Apps

13
00:00:22,740 --> 00:00:26,910
Script to eliminate a lot of
the manual processes, the

14
00:00:26,910 --> 00:00:30,900
annoying workflows you have to
do in your daily routine.

15
00:00:30,900 --> 00:00:34,550
But first, let's take a look
back at where we've come from.

16
00:00:34,550 --> 00:00:37,346
MATTHEW ZIEGELBAUM: So I guess
maybe sometimes we all feel a

17
00:00:37,346 --> 00:00:40,100
bit like this, sitting in
a room processing paper.

18
00:00:40,100 --> 00:00:44,390
This is the Sears Roebuck
Fulfillment Center Entry

19
00:00:44,390 --> 00:00:47,000
Department from about
100 years ago.

20
00:00:47,000 --> 00:00:51,260
This postcard is from 1916, and
it kind of illustrates how

21
00:00:51,260 --> 00:00:53,080
far we've come.

22
00:00:53,080 --> 00:00:56,140
Back at the turn of the century,
Sears figured out

23
00:00:56,140 --> 00:00:57,980
that you could turn
form processing

24
00:00:57,980 --> 00:00:59,650
into an assembly line.

25
00:00:59,650 --> 00:01:03,550
They filled rooms throughout
the country with people who

26
00:01:03,550 --> 00:01:06,860
had to move forms from point A
to point B at various time

27
00:01:06,860 --> 00:01:12,250
points, and it cut their error
margins, it increased their

28
00:01:12,250 --> 00:01:16,190
profitability, it made their
customers happy, but it's

29
00:01:16,190 --> 00:01:17,390
really manual.

30
00:01:17,390 --> 00:01:21,290
And moving forward, today,
this is fairly standard.

31
00:01:21,290 --> 00:01:24,800
Enterprise software, you build
these big enterprise systems.

32
00:01:24,800 --> 00:01:25,685
They do your order
fulfillment.

33
00:01:25,685 --> 00:01:29,070
Your user comes to your website,
you click a button,

34
00:01:29,070 --> 00:01:32,730
all of a sudden the warehouse
gets the order, it ships out.

35
00:01:32,730 --> 00:01:35,690
But it's still big, it requires
a lot of costly

36
00:01:35,690 --> 00:01:39,475
engineering work, and
you can do better.

37
00:01:39,475 --> 00:01:42,780
ERIC KOLEDA: And the truth is
there's a lot of problems that

38
00:01:42,780 --> 00:01:45,490
aren't solved by using
a really big system.

39
00:01:45,490 --> 00:01:47,560
For lack of a better term, I'm
going to refer to these as

40
00:01:47,560 --> 00:01:49,230
mini-workflows.

41
00:01:49,230 --> 00:01:51,840
So these are processes that you
have that are often maybe

42
00:01:51,840 --> 00:01:53,490
very small in scope.

43
00:01:53,490 --> 00:01:55,990
So sometimes we try to
plan a team dinner.

44
00:01:55,990 --> 00:01:58,110
I'm not going to build an
enterprise application for a

45
00:01:58,110 --> 00:01:59,556
team dinner.

46
00:01:59,556 --> 00:02:01,600
Other times, they're just
limited time frame.

47
00:02:01,600 --> 00:02:03,650
So let's say you're doing
an event registration.

48
00:02:03,650 --> 00:02:06,550
When that event is over in a
couple weeks, no longer is

49
00:02:06,550 --> 00:02:09,360
that entire workflow system
necessary, so it doesn't make

50
00:02:09,360 --> 00:02:11,410
sense to invest too
much in it.

51
00:02:11,410 --> 00:02:13,500
And sometimes, there's just
processes that are really

52
00:02:13,500 --> 00:02:14,430
rapidly changing.

53
00:02:14,430 --> 00:02:16,420
So think crisis response.

54
00:02:16,420 --> 00:02:18,600
You're on the ground and you
need to quickly adapt your

55
00:02:18,600 --> 00:02:22,060
workflow to what's happening,
and having something big,

56
00:02:22,060 --> 00:02:24,930
clunky, and hard baked is just
not going to scale to what you

57
00:02:24,930 --> 00:02:26,590
need it to do.

58
00:02:26,590 --> 00:02:29,480
Now, we use different kinds of
technology today to address

59
00:02:29,480 --> 00:02:30,250
these problems.

60
00:02:30,250 --> 00:02:31,490
I think one of the
first things that

61
00:02:31,490 --> 00:02:34,110
people turn to is email.

62
00:02:34,110 --> 00:02:36,830
What's great about email is that
it really requires the

63
00:02:36,830 --> 00:02:38,160
minimal effort out of
all the things we're

64
00:02:38,160 --> 00:02:39,010
going to talk about.

65
00:02:39,010 --> 00:02:41,630
You just start typing and hit
the Send button, and your

66
00:02:41,630 --> 00:02:44,580
workflow is off and running.

67
00:02:44,580 --> 00:02:46,590
And the other great thing about
it is the technology is

68
00:02:46,590 --> 00:02:47,500
really familiar.

69
00:02:47,500 --> 00:02:50,540
Even your least technical user
in your organization has an

70
00:02:50,540 --> 00:02:52,220
inbox and knows how
to work it.

71
00:02:52,220 --> 00:02:53,480
Otherwise, they probably
wouldn't be

72
00:02:53,480 --> 00:02:55,050
employed there any longer.

73
00:02:55,050 --> 00:02:58,630
But once you scale a workflow
like this to something beyond

74
00:02:58,630 --> 00:03:00,630
just a handful of users,
it really turns

75
00:03:00,630 --> 00:03:02,060
into complete chaos.

76
00:03:02,060 --> 00:03:04,290
Trying to collect all
that data, organize

77
00:03:04,290 --> 00:03:05,840
it, even handle edits.

78
00:03:05,840 --> 00:03:07,850
People change their
response later.

79
00:03:07,850 --> 00:03:10,910
Trying to process all of that
in email really breaks down,

80
00:03:10,910 --> 00:03:12,950
and I think people quickly
realize this is not the way to

81
00:03:12,950 --> 00:03:16,670
go for something that has any
degree of complexity.

82
00:03:16,670 --> 00:03:19,330
Now, where a lot of people turn
to next, and an obvious

83
00:03:19,330 --> 00:03:20,620
choice, is spreadsheets.

84
00:03:20,620 --> 00:03:23,950
Spreadsheets are a great tool
for doing data organization

85
00:03:23,950 --> 00:03:27,140
and collection, mostly because
it's structured.

86
00:03:27,140 --> 00:03:30,280
So unlike email, you can define
columns and rows, you

87
00:03:30,280 --> 00:03:33,140
can organize your data into
different fields, really add

88
00:03:33,140 --> 00:03:35,660
some much needed structure
to what you're doing.

89
00:03:35,660 --> 00:03:38,150
And although it's a little bit
more complicated than email,

90
00:03:38,150 --> 00:03:39,995
it's still relatively
simple to set up.

91
00:03:39,995 --> 00:03:41,740
I find that people, when
they're working on a

92
00:03:41,740 --> 00:03:43,930
spreadsheet, they'll probably
spend more time getting the

93
00:03:43,930 --> 00:03:46,410
background colors just the way
they want than they actually

94
00:03:46,410 --> 00:03:49,700
do on the rows and columns
and the important bits.

95
00:03:49,700 --> 00:03:52,500
But once again, there's still
a problem here in that it's

96
00:03:52,500 --> 00:03:53,580
somewhat error prone.

97
00:03:53,580 --> 00:03:55,760
So we use Google Sheets,
obviously, inside Google for

98
00:03:55,760 --> 00:03:58,860
all of our work, and I've been
in sheets open before that

99
00:03:58,860 --> 00:04:01,920
have hundreds of little cursors
flying around adding

100
00:04:01,920 --> 00:04:03,280
rows, changing cells,

101
00:04:03,280 --> 00:04:05,140
overwriting what I just entered.

102
00:04:05,140 --> 00:04:07,880
It's still kind of dangerous
because all the data is

103
00:04:07,880 --> 00:04:10,970
available for everybody to both
view and edit, and so it

104
00:04:10,970 --> 00:04:15,150
really doesn't scale to a more
complex kind of mini-workflow.

105
00:04:15,150 --> 00:04:17,500
Now, I imagine a bunch of us
here in the room are software

106
00:04:17,500 --> 00:04:20,220
developers, and so our natural
inclination, when we see a

107
00:04:20,220 --> 00:04:23,140
problem like this is, I can
just I an application.

108
00:04:23,140 --> 00:04:24,100
I know how to do it.

109
00:04:24,100 --> 00:04:26,560
I could spin up a database
and a server.

110
00:04:26,560 --> 00:04:28,480
Lickety split, not a problem.

111
00:04:28,480 --> 00:04:30,270
Actually I have a colleague,
[? Khalyan, ?]

112
00:04:30,270 --> 00:04:33,340
no matter what problem I tell
him in my life, he always says

113
00:04:33,340 --> 00:04:35,810
that with just a weekend of
coding and maybe [INAUDIBLE],

114
00:04:35,810 --> 00:04:36,830
he could solve it.

115
00:04:36,830 --> 00:04:40,010
Doesn't matter how complex
the problem is.

116
00:04:40,010 --> 00:04:41,890
And the truth is there are
some benefits to custom

117
00:04:41,890 --> 00:04:43,030
applications.

118
00:04:43,030 --> 00:04:44,150
You can tailor your application

119
00:04:44,150 --> 00:04:46,360
to your exact needs.

120
00:04:46,360 --> 00:04:48,680
Just expose the data you want,
just collect the data you

121
00:04:48,680 --> 00:04:51,520
want, have the exact sequences
and branching.

122
00:04:51,520 --> 00:04:55,150
So it's really perfect for
getting the exact solution

123
00:04:55,150 --> 00:04:57,070
that you would like to have.

124
00:04:57,070 --> 00:04:58,990
And if you build it on the right
technologies, it can

125
00:04:58,990 --> 00:05:00,360
easily scale to thousands
of users.

126
00:05:00,360 --> 00:05:02,380
The scalability problem
for number of

127
00:05:02,380 --> 00:05:03,870
users really goes away.

128
00:05:03,870 --> 00:05:06,240
But there's a cost here and a
problem that isn't always

129
00:05:06,240 --> 00:05:09,580
obvious at first, and that's
the long term maintenance.

130
00:05:09,580 --> 00:05:12,330
So just by a show of hands,
how many people here have

131
00:05:12,330 --> 00:05:14,900
built an application for a
friend or colleague that they

132
00:05:14,900 --> 00:05:17,980
swore was a two week project,
and it's years later and

133
00:05:17,980 --> 00:05:20,030
you're still supporting it?

134
00:05:20,030 --> 00:05:21,720
A lot of hands went up there.

135
00:05:21,720 --> 00:05:22,605
You're getting the calls.

136
00:05:22,605 --> 00:05:23,800
Can you add a label?

137
00:05:23,800 --> 00:05:25,540
Can you add a field?

138
00:05:25,540 --> 00:05:27,400
You've got to remember a
password to a system you

139
00:05:27,400 --> 00:05:29,620
probably long ago forgot.

140
00:05:29,620 --> 00:05:32,610
There's an ongoing cost of these
custom applications that

141
00:05:32,610 --> 00:05:35,600
doesn't make sense in more of
these mini-workflow scenarios.

142
00:05:35,600 --> 00:05:38,000
But at Google, we think we
have a better option for

143
00:05:38,000 --> 00:05:39,680
addressing it.

144
00:05:39,680 --> 00:05:39,960
MATTHEW ZIEGELBAUM: Yes.

145
00:05:39,960 --> 00:05:43,020
So we think that option
is Google Forms.

146
00:05:43,020 --> 00:05:45,660
Google Forms started in 2008
as a feature of Google

147
00:05:45,660 --> 00:05:49,330
Spreadsheets, and we wrote it to
address problems like this

148
00:05:49,330 --> 00:05:51,770
where you had a lot of
information you needed to

149
00:05:51,770 --> 00:05:53,720
collect-- say, going
to dinner--

150
00:05:53,720 --> 00:05:57,130
and you had too many users, and
there just wasn't a great

151
00:05:57,130 --> 00:06:00,970
way to plan well.

152
00:06:00,970 --> 00:06:05,880
Google Forms is perfect for
these short, flexible

153
00:06:05,880 --> 00:06:09,160
solutions that you need
to create on the fly.

154
00:06:09,160 --> 00:06:10,780
Crisis response is perfect.

155
00:06:10,780 --> 00:06:12,290
Teachers love it.

156
00:06:12,290 --> 00:06:14,840
Just recently after the Boston
bombings, the community

157
00:06:14,840 --> 00:06:17,710
actually threw together two
forms and sent them out to the

158
00:06:17,710 --> 00:06:21,760
world, one form for people who
got stuck because of grounded

159
00:06:21,760 --> 00:06:23,950
flights and couldn't leave the
city and didn't have anywhere

160
00:06:23,950 --> 00:06:26,570
to stay, and the other
form for people who

161
00:06:26,570 --> 00:06:27,810
could provide housing.

162
00:06:27,810 --> 00:06:34,210
And ad hoc, they set up an on
the fly solution and got

163
00:06:34,210 --> 00:06:35,970
everyone a place to stay.

164
00:06:35,970 --> 00:06:37,365
They got first responders
food.

165
00:06:37,365 --> 00:06:41,430
And it was all through using
this simple technology.

166
00:06:41,430 --> 00:06:44,260
In February, we launched a new
version of Google Forms.

167
00:06:44,260 --> 00:06:45,650
It's much richer.

168
00:06:45,650 --> 00:06:48,600
It looks like Docs,
Sheets and Slides.

169
00:06:48,600 --> 00:06:51,930
It supports real time
collaboration, and it scales

170
00:06:51,930 --> 00:06:53,750
better than the old version.

171
00:06:53,750 --> 00:06:55,870
So as [? Sundar ?]

172
00:06:55,870 --> 00:07:01,050
noted this morning, Apps for
Education is huge, and

173
00:07:01,050 --> 00:07:05,030
teachers are some of our most
enthusiastic Forms users.

174
00:07:05,030 --> 00:07:07,050
They love it.

175
00:07:07,050 --> 00:07:13,790
They work to create quizzes and
parent feedback forms and

176
00:07:13,790 --> 00:07:15,230
all of these things that
just make their

177
00:07:15,230 --> 00:07:16,730
lives so much easier.

178
00:07:16,730 --> 00:07:19,730
But it's all manual, if a
student joins the class

179
00:07:19,730 --> 00:07:22,350
halfway through the year and
they add it to their roster

180
00:07:22,350 --> 00:07:26,720
spreadsheet, it's not in all of
their forms, and it's hard.

181
00:07:26,720 --> 00:07:29,020
Teachers don't have infinite
time and their resources are

182
00:07:29,020 --> 00:07:31,780
already stretched, and they
really need more automation.

183
00:07:31,780 --> 00:07:34,060
They want to be able to quickly
create quizzes.

184
00:07:34,060 --> 00:07:37,130
They want to send feedback forms
to parents to find out

185
00:07:37,130 --> 00:07:38,440
what they can do better.

186
00:07:38,440 --> 00:07:42,290
There's just a whole slew of
things that they need to do.

187
00:07:42,290 --> 00:07:46,420
And luckily, Google has had a
solution for automating things

188
00:07:46,420 --> 00:07:48,570
with Google Apps for years.

189
00:07:48,570 --> 00:07:50,600
ERIC KOLEDA: And that's
Google Apps Script.

190
00:07:50,600 --> 00:07:52,500
So some of you might already
know what Google Apps Script

191
00:07:52,500 --> 00:07:54,770
is, judging from
the talk title.

192
00:07:54,770 --> 00:07:57,060
But if you haven't heard of it,
there's basically a few

193
00:07:57,060 --> 00:07:59,800
takeaways about what
Apps Script is.

194
00:07:59,800 --> 00:08:02,690
So the first is that it's
JavaScript in the cloud.

195
00:08:02,690 --> 00:08:05,160
What that means is you're
writing JavaScript code, but

196
00:08:05,160 --> 00:08:08,070
you're writing it in an online
editor that gets stored in

197
00:08:08,070 --> 00:08:11,860
Google Storage and then runs
on Google hardware.

198
00:08:11,860 --> 00:08:14,420
And so since all of this is
taking place in the cloud, it

199
00:08:14,420 --> 00:08:16,390
really requires no set
up whatsoever.

200
00:08:16,390 --> 00:08:18,000
So right now, you could
open a web browser to

201
00:08:18,000 --> 00:08:21,270
script.google.com and start
coding immediately.

202
00:08:21,270 --> 00:08:25,860
No IDE, no binaries, no
configuration or setup steps.

203
00:08:25,860 --> 00:08:28,850
It's really a lightweight way to
get coding in a Google Apps

204
00:08:28,850 --> 00:08:30,900
environment.

205
00:08:30,900 --> 00:08:33,400
And another great thing about it
is that it gives you really

206
00:08:33,400 --> 00:08:35,159
easy access to all your data.

207
00:08:35,159 --> 00:08:37,190
So we have connectors
into a lot of

208
00:08:37,190 --> 00:08:38,650
different Google services--

209
00:08:38,650 --> 00:08:41,610
Gmail, Calendar, Docs,
and Drive--

210
00:08:41,610 --> 00:08:44,760
so you can pull out your Google
data and start doing

211
00:08:44,760 --> 00:08:46,000
interesting things with it.

212
00:08:46,000 --> 00:08:49,310
But we also have connectors into
outside technologies and

213
00:08:49,310 --> 00:08:51,920
outside data so you can
interface with third party

214
00:08:51,920 --> 00:08:56,110
APIs, you can interface with
legacy systems that you have,

215
00:08:56,110 --> 00:08:58,620
and it's a really great way
to bring all of your data

216
00:08:58,620 --> 00:09:02,300
together and then take action
and extend Google Apps.

217
00:09:02,300 --> 00:09:04,310
I don't have it in the slide,
but there's a fourth thing I

218
00:09:04,310 --> 00:09:06,470
would recommend you remember
about Apps Script.

219
00:09:06,470 --> 00:09:09,610
Please do not refer
to it as GAS.

220
00:09:09,610 --> 00:09:12,340
My colleague Arun, it really
bugs him that he's the Lead

221
00:09:12,340 --> 00:09:13,950
Developer Advocate on GAS.

222
00:09:13,950 --> 00:09:18,120
But that's a small point.

223
00:09:18,120 --> 00:09:20,690
Now, we've had Google Apps
Script in Google Sheets and

224
00:09:20,690 --> 00:09:22,600
Google Sites for a number
of years now.

225
00:09:22,600 --> 00:09:23,550
It's been really popular.

226
00:09:23,550 --> 00:09:26,560
And just yesterday, we were so
happy to announce that Apps

227
00:09:26,560 --> 00:09:30,336
Script is now in Google
Forms as well.

228
00:09:30,336 --> 00:09:30,760
[APPLAUSE]

229
00:09:30,760 --> 00:09:34,310
ERIC KOLEDA: There we go.

230
00:09:34,310 --> 00:09:34,610
All right.

231
00:09:34,610 --> 00:09:37,530
So we really think this opens
up a whole lot of great

232
00:09:37,530 --> 00:09:40,560
potential for solving these
mini-workflow problems and

233
00:09:40,560 --> 00:09:44,870
getting these manual tasks
completely automated.

234
00:09:44,870 --> 00:09:47,860
So what does it mean to have
Google Scripts in Forms?

235
00:09:47,860 --> 00:09:49,900
Well, the first thing you'll
notice right away is in the

236
00:09:49,900 --> 00:09:53,800
Forms Designer, there's a new
menu, Tools, Script Editor.

237
00:09:53,800 --> 00:09:55,900
This is how you jump right
into creating a

238
00:09:55,900 --> 00:09:58,800
script for your form.

239
00:09:58,800 --> 00:10:00,630
You can just start coding right
away, and it provides

240
00:10:00,630 --> 00:10:03,770
you really easy access to the
currently open form so you can

241
00:10:03,770 --> 00:10:05,530
start taking action on it.

242
00:10:05,530 --> 00:10:07,730
And really, it bundles together
the script and the

243
00:10:07,730 --> 00:10:10,956
form so that if you were to
copy that form or share it

244
00:10:10,956 --> 00:10:13,140
with someone, the script
moves along with it.

245
00:10:13,140 --> 00:10:14,850
So it's a really great way
to take a workflow, a

246
00:10:14,850 --> 00:10:18,580
mini-workflow solution, bundle
it up, and move it along.

247
00:10:18,580 --> 00:10:21,630
Now, what can you actually
do now that you have a

248
00:10:21,630 --> 00:10:22,720
script in your form?

249
00:10:22,720 --> 00:10:24,890
Well, there's basically three
main ways that we're

250
00:10:24,890 --> 00:10:26,850
integrated with Forms.

251
00:10:26,850 --> 00:10:30,270
The first is the ability to
create, open, and edit forms

252
00:10:30,270 --> 00:10:33,040
programmatically using
Apps Script.

253
00:10:33,040 --> 00:10:36,210
Second is to enhance the Form
Designer with your own custom

254
00:10:36,210 --> 00:10:38,660
user interface components.

255
00:10:38,660 --> 00:10:42,450
And third is to react to form
submissions and carry that

256
00:10:42,450 --> 00:10:45,110
into another action.

257
00:10:45,110 --> 00:10:46,230
MATTHEW ZIEGELBAUM: So
let's take a look at

258
00:10:46,230 --> 00:10:48,750
create, open, and edit.

259
00:10:48,750 --> 00:10:51,990
The most important thing that
we wanted to give to you in

260
00:10:51,990 --> 00:10:55,180
this new API is that if you can
do something in the Form

261
00:10:55,180 --> 00:10:57,360
Designer, you should be able
to do it in Apps Script.

262
00:10:57,360 --> 00:10:59,180
So we worked really hard to
make sure all of that

263
00:10:59,180 --> 00:11:00,690
functionality is there.

264
00:11:00,690 --> 00:11:02,250
You can manage your forms.

265
00:11:02,250 --> 00:11:06,210
You can change basically
everything about them from

266
00:11:06,210 --> 00:11:09,430
their confirmation message, to
the choices of a check box

267
00:11:09,430 --> 00:11:11,900
field, to whether or not the
form is currently accepting

268
00:11:11,900 --> 00:11:15,890
responses, and this opens up
a whole slew of things.

269
00:11:15,890 --> 00:11:18,310
You can generate new forms
programmatically.

270
00:11:18,310 --> 00:11:20,600
If you had those quizzes that
you need to send to your

271
00:11:20,600 --> 00:11:22,540
students, you can do that now.

272
00:11:22,540 --> 00:11:26,080
If you want to make dinner plans
using a form and you

273
00:11:26,080 --> 00:11:28,730
have to plan a dinner once a
month for someone's birthday,

274
00:11:28,730 --> 00:11:33,750
all of a sudden, you can click a
button and make that happen.

275
00:11:33,750 --> 00:11:37,140
So just taking a quick look
at some code snippets.

276
00:11:37,140 --> 00:11:39,650
You can see here we
have FormApp.

277
00:11:39,650 --> 00:11:42,840
FormApp is the new service to
interact with Google Forms.

278
00:11:42,840 --> 00:11:44,830
Services are Apps
Script's way of

279
00:11:44,830 --> 00:11:47,420
interacting with Google services.

280
00:11:47,420 --> 00:11:51,840
We already had DocumentApp,
SpreadsheetApp, GmailApp, and

281
00:11:51,840 --> 00:11:54,940
a whole bunch of others, so
FormApp should be familiar.

282
00:11:54,940 --> 00:11:58,290
If you're familiar with this
script editor already, just

283
00:11:58,290 --> 00:12:00,880
type FormApp and a period,
and you'll get the nice

284
00:12:00,880 --> 00:12:04,980
auto-complete you expect
from Apps Script.

285
00:12:04,980 --> 00:12:08,370
Moving on, setting values.

286
00:12:08,370 --> 00:12:10,890
Monday, Tuesday, Wednesday are
the days I can go to dinner.

287
00:12:10,890 --> 00:12:13,280
We're not going to dinner when
I can't go because I'm

288
00:12:13,280 --> 00:12:15,030
organizing this.

289
00:12:15,030 --> 00:12:18,790
And finally, sending it over
to the team is really easy.

290
00:12:18,790 --> 00:12:24,160
Using the Mail App and just a
couple of lines, we've sent

291
00:12:24,160 --> 00:12:26,600
out a script.

292
00:12:26,600 --> 00:12:26,890
ERIC KOLEDA: All right.

293
00:12:26,890 --> 00:12:29,000
So that's creating, opening,
and editing, but the next

294
00:12:29,000 --> 00:12:30,700
thing we want to take a look
at is enhancing the Form

295
00:12:30,700 --> 00:12:32,320
Designer itself.

296
00:12:32,320 --> 00:12:33,860
So there's basically
three types of

297
00:12:33,860 --> 00:12:35,300
things you can enhance.

298
00:12:35,300 --> 00:12:38,500
The first is you can add your
own custom menus into the Menu

299
00:12:38,500 --> 00:12:40,550
Bar that blend in seamlessly
with the menus that are

300
00:12:40,550 --> 00:12:41,760
already there.

301
00:12:41,760 --> 00:12:45,300
Secondly, you can show simple
prompts and alerts, little

302
00:12:45,300 --> 00:12:48,380
pop-ups that allow you to
collect information from your

303
00:12:48,380 --> 00:12:51,780
user or show them some little
small piece of information.

304
00:12:51,780 --> 00:12:53,710
And then if you want to build
a more rich form of

305
00:12:53,710 --> 00:12:57,740
interaction, you can actually
design your own UIs, your own

306
00:12:57,740 --> 00:13:01,350
more complex, custom built user
interfaces, and expose

307
00:13:01,350 --> 00:13:04,240
those as a dialog or even
in the sidebar.

308
00:13:04,240 --> 00:13:06,330
The sidebar is especially great
when you're designing a

309
00:13:06,330 --> 00:13:08,550
form because you can keep
your information up

310
00:13:08,550 --> 00:13:10,700
while taking action.

311
00:13:10,700 --> 00:13:12,890
Now, what that allows you
to do, I think first and

312
00:13:12,890 --> 00:13:14,640
foremost, is kind
of make macros.

313
00:13:14,640 --> 00:13:17,680
So you may find yourself in the
Form Designer doing the

314
00:13:17,680 --> 00:13:20,900
same kind of repetitive tasks
over and over again, things

315
00:13:20,900 --> 00:13:24,510
like refreshing the values in
a list, like Matt mentioned

316
00:13:24,510 --> 00:13:28,230
before, or maybe some sort of
sorting, or some sort of

317
00:13:28,230 --> 00:13:29,880
updating task.

318
00:13:29,880 --> 00:13:31,970
Maybe you had a form previously
that you were

319
00:13:31,970 --> 00:13:34,530
changing some text
on every week.

320
00:13:34,530 --> 00:13:36,280
Now you can automate that.

321
00:13:36,280 --> 00:13:39,370
And taking that script and
actually exposing it by a menu

322
00:13:39,370 --> 00:13:42,060
item makes it a lot more
approachable to

323
00:13:42,060 --> 00:13:43,500
nontechnical users.

324
00:13:43,500 --> 00:13:46,710
We found that a lot of users,
the act of opening a script

325
00:13:46,710 --> 00:13:48,230
and hitting the little
Run button, that

326
00:13:48,230 --> 00:13:48,800
just scares them away.

327
00:13:48,800 --> 00:13:50,640
They see code and they're
out the door.

328
00:13:50,640 --> 00:13:52,550
But when you expose it by a
menu item, they don't even

329
00:13:52,550 --> 00:13:54,700
need to know that this is not
a built in feature, and so

330
00:13:54,700 --> 00:13:56,590
it's very approachable.

331
00:13:56,590 --> 00:13:59,100
And then the other thing you can
do with enhancing the UI

332
00:13:59,100 --> 00:14:01,140
is bring forward
relevant data.

333
00:14:01,140 --> 00:14:03,350
So when you're designing a form,
it may be helpful to

334
00:14:03,350 --> 00:14:06,230
have built into that interface,
if you're a

335
00:14:06,230 --> 00:14:09,070
teacher, a list of your classes
or students, or your

336
00:14:09,070 --> 00:14:09,800
organization.

337
00:14:09,800 --> 00:14:13,600
Perhaps you could even just
show your calendar or your

338
00:14:13,600 --> 00:14:16,390
Gmail, some information that
when you're designing a form

339
00:14:16,390 --> 00:14:19,390
would be really nice to have,
not only to see, but then to

340
00:14:19,390 --> 00:14:22,060
take action with in
a complex way.

341
00:14:22,060 --> 00:14:24,180
So now let's go back to this
dinner planning example we've

342
00:14:24,180 --> 00:14:27,270
been showing you thus far, and
let's say we have our form

343
00:14:27,270 --> 00:14:30,210
built, that we had generated in
the previous code example.

344
00:14:30,210 --> 00:14:32,760
But now we want to have some
extra menu items there that

345
00:14:32,760 --> 00:14:35,710
allow me, has the form
maintainer, to quickly get a

346
00:14:35,710 --> 00:14:38,570
sense of what the responses
are like thus far.

347
00:14:38,570 --> 00:14:42,720
So I've injected an extra menu
here called Extras, and the

348
00:14:42,720 --> 00:14:44,210
code to do so is
pretty simple.

349
00:14:44,210 --> 00:14:46,270
It's basically just passing in
some strings, which is the

350
00:14:46,270 --> 00:14:50,210
text that should appear in the
menu, as well as the function

351
00:14:50,210 --> 00:14:52,760
that should be run when that
menu item is clicked, so it's

352
00:14:52,760 --> 00:14:56,990
very simple just to tie together
your code and a menu.

353
00:14:56,990 --> 00:15:00,160
So the two menu items I've added
here is one, to show me

354
00:15:00,160 --> 00:15:02,730
based on all the responses,
what's the best day thus far

355
00:15:02,730 --> 00:15:04,610
based on everyone's
submissions.

356
00:15:04,610 --> 00:15:06,900
And then maybe even just show
me a chart in case I want to

357
00:15:06,900 --> 00:15:11,490
analyze the relative popularity
of given days.

358
00:15:11,490 --> 00:15:14,020
So let's look at this first
one, showBestDay.

359
00:15:14,020 --> 00:15:17,240
So I have some Calculate Best
Day method here using my super

360
00:15:17,240 --> 00:15:19,560
secret algorithm that I have
not shown you, but

361
00:15:19,560 --> 00:15:21,190
essentially, once you've figured
out what your best day

362
00:15:21,190 --> 00:15:24,790
is, to actually expose that
to the user as an alert is

363
00:15:24,790 --> 00:15:27,540
basically just one long
line of code.

364
00:15:27,540 --> 00:15:30,310
You can even set custom buttons
so you can have a

365
00:15:30,310 --> 00:15:33,160
little bit of control over OK,
Cancel, Yes, No, things of

366
00:15:33,160 --> 00:15:34,860
that nature, and then
even react to

367
00:15:34,860 --> 00:15:37,640
which button they choose.

368
00:15:37,640 --> 00:15:40,090
Now, the other menu item was to
show a chart, and this is a

369
00:15:40,090 --> 00:15:41,700
little bit more of
a rich interface.

370
00:15:41,700 --> 00:15:44,640
It's not just a string, so it
requires you to use a custom

371
00:15:44,640 --> 00:15:47,340
dialog or sidebar.

372
00:15:47,340 --> 00:15:51,130
So in this case, I've built up
a user interface using the

373
00:15:51,130 --> 00:15:52,500
HTML service.

374
00:15:52,500 --> 00:15:55,150
Now, this is a little bit more
complicated and so I haven't

375
00:15:55,150 --> 00:15:57,140
shown the code here, but we
have some really great

376
00:15:57,140 --> 00:15:59,960
documentation in our Developer
Docs that show you exactly how

377
00:15:59,960 --> 00:16:01,740
to use the HTML service.

378
00:16:01,740 --> 00:16:05,280
So once you've gotten your HTML
page built up and your

379
00:16:05,280 --> 00:16:08,140
application is wired and ready
to go, to actually show it to

380
00:16:08,140 --> 00:16:10,510
the user in the Form Designer
is dead simple.

381
00:16:10,510 --> 00:16:13,170
It's just this one line,
showDialog, passing in your

382
00:16:13,170 --> 00:16:14,915
finished HTML object.

383
00:16:14,915 --> 00:16:18,070
It's the same thing for
showSidebar as well.

384
00:16:18,070 --> 00:16:22,130
And so in this case, I used some
very, very crude HTML and

385
00:16:22,130 --> 00:16:25,420
CSS to draw a little bar chart,
but you could imagine

386
00:16:25,420 --> 00:16:28,340
the possibilities that, once
you have the full HTML,

387
00:16:28,340 --> 00:16:31,260
JavaScript, and CSS stack in
front of you, the kind of rich

388
00:16:31,260 --> 00:16:32,830
user interfaces you could build

389
00:16:32,830 --> 00:16:34,080
directly into Google Forms.

390
00:16:34,080 --> 00:16:36,580

391
00:16:36,580 --> 00:16:38,390
MATTHEW ZIEGELBAUM: So finally,
we can now react to

392
00:16:38,390 --> 00:16:40,050
submissions.

393
00:16:40,050 --> 00:16:45,290
If you're familiar with the
Spreadsheets [INAUDIBLE], the

394
00:16:45,290 --> 00:16:47,870
Form Submit has always
been there but

395
00:16:47,870 --> 00:16:49,080
it hasn't been great.

396
00:16:49,080 --> 00:16:50,650
It's not rich.

397
00:16:50,650 --> 00:16:52,860
It's just been a key
value store.

398
00:16:52,860 --> 00:16:56,420
And so now, you can still
detect when a user has

399
00:16:56,420 --> 00:16:59,180
submitted a form and you can
read the data of the response,

400
00:16:59,180 --> 00:17:03,460
but you get a new, rich response
object out of it.

401
00:17:03,460 --> 00:17:06,490
So you can build complicated
workflows that react to

402
00:17:06,490 --> 00:17:07,530
submissions.

403
00:17:07,530 --> 00:17:10,930
You can send responses based
on the other response.

404
00:17:10,930 --> 00:17:15,230
You can build forms based
on forms based on forms.

405
00:17:15,230 --> 00:17:17,119
So back to dinner.

406
00:17:17,119 --> 00:17:20,190
You can see here a trigger,
and if you're not familiar

407
00:17:20,190 --> 00:17:24,890
with them, triggers are Apps
Script's way of hooking up one

408
00:17:24,890 --> 00:17:27,849
of your custom functions
to an event.

409
00:17:27,849 --> 00:17:32,030
So for every response that's
submitted, this onFormSubmit

410
00:17:32,030 --> 00:17:34,710
function will be called.

411
00:17:34,710 --> 00:17:38,700
Looking at the response from a
user, you can see that the

412
00:17:38,700 --> 00:17:41,415
response is easily parsed.

413
00:17:41,415 --> 00:17:44,670
You can get their email out
and you can see which days

414
00:17:44,670 --> 00:17:45,790
they're available.

415
00:17:45,790 --> 00:17:49,410
You can very easily, using the
DocumentApp, put their

416
00:17:49,410 --> 00:17:52,440
response into a document that
everyone who has responded can

417
00:17:52,440 --> 00:17:56,250
see, simplifying your life
because you're no longer the

418
00:17:56,250 --> 00:18:00,360
one person who knows all of the
information, and giving

419
00:18:00,360 --> 00:18:02,785
everyone this simple access
to this information.

420
00:18:02,785 --> 00:18:05,850

421
00:18:05,850 --> 00:18:07,970
ERIC KOLEDA: So we've shown you
the three basic components

422
00:18:07,970 --> 00:18:11,420
here of the interaction that you
can do with Google Forms--

423
00:18:11,420 --> 00:18:14,090
create, open, and edit, enhance
the designer, and

424
00:18:14,090 --> 00:18:15,370
react to submissions.

425
00:18:15,370 --> 00:18:16,960
Now we're going to go through
a little demo showing how we

426
00:18:16,960 --> 00:18:21,620
put them all together to address
a real, live use case.

427
00:18:21,620 --> 00:18:24,590
So something that's become
popular in college--

428
00:18:24,590 --> 00:18:27,135
a little after my time, though--
is these clickers.

429
00:18:27,135 --> 00:18:28,800
I don't know how many people
have seen these before.

430
00:18:28,800 --> 00:18:31,370
But essentially, it's a way
for a teacher to really

431
00:18:31,370 --> 00:18:33,940
quickly poll their students,
kind of give them

432
00:18:33,940 --> 00:18:35,130
an on the fly quiz.

433
00:18:35,130 --> 00:18:36,650
So they can ask a question.

434
00:18:36,650 --> 00:18:39,200
Students have a clicker in their
hand and just push A, B,

435
00:18:39,200 --> 00:18:42,310
or C, and then the teacher gets
a readout with how many

436
00:18:42,310 --> 00:18:44,660
students are correct, how many
people are actually getting

437
00:18:44,660 --> 00:18:46,430
the lecture.

438
00:18:46,430 --> 00:18:48,590
Now, there's a cost involved
here, and a lot of public

439
00:18:48,590 --> 00:18:51,020
schools, they don't have the
money to buy these for all

440
00:18:51,020 --> 00:18:52,150
their classrooms.

441
00:18:52,150 --> 00:18:56,230
And so one of our colleagues,
[INAUDIBLE], he's a PM focused

442
00:18:56,230 --> 00:18:59,450
on education within Google, the
EDU market, and actually a

443
00:18:59,450 --> 00:19:01,280
former teacher himself.

444
00:19:01,280 --> 00:19:04,970
He saw our new integration and
he thought this could be a way

445
00:19:04,970 --> 00:19:08,290
to solve that problem that's
completely free and built on

446
00:19:08,290 --> 00:19:09,680
Google apps.

447
00:19:09,680 --> 00:19:12,440
And so we're going to go
and show that demo now.

448
00:19:12,440 --> 00:19:15,220
The basic idea that he had was,
what if you could create

449
00:19:15,220 --> 00:19:18,440
a form that allowed you to
generate forms, kind of that

450
00:19:18,440 --> 00:19:20,720
meta universe that Matt
was talking about.

451
00:19:20,720 --> 00:19:24,550
So what we've built here is
the Quick Quiz Creator.

452
00:19:24,550 --> 00:19:27,560
So this is a form that the
teacher would fill out to on

453
00:19:27,560 --> 00:19:31,610
the fly generate a new quiz to
distribute to their students.

454
00:19:31,610 --> 00:19:35,140
So Matt's going to fill
out an I/O quiz here.

455
00:19:35,140 --> 00:19:37,680
So you give it a name
and a description.

456
00:19:37,680 --> 00:19:39,250
Those are optional.

457
00:19:39,250 --> 00:19:41,250
And then there's a bunch of
different text boxes that

458
00:19:41,250 --> 00:19:44,200
allow you to specify the
questions and then multiple

459
00:19:44,200 --> 00:19:46,740
choice answers.

460
00:19:46,740 --> 00:19:49,360
And the nice thing about this,
you could obviously create a

461
00:19:49,360 --> 00:19:53,020
custom UI that did all of this,
collecting data from a

462
00:19:53,020 --> 00:19:55,380
teacher, but once again, it
highlights that a teacher will

463
00:19:55,380 --> 00:19:58,110
be really familiar with
Google Forms itself.

464
00:19:58,110 --> 00:20:02,430
And so going in and creating a
quiz via a form is actually a

465
00:20:02,430 --> 00:20:05,680
low training, low effort way of
getting all of that data,

466
00:20:05,680 --> 00:20:09,490
and allows them to, right after
their class is over or

467
00:20:09,490 --> 00:20:12,520
after the lecture is over,
to sit down, throw a quiz

468
00:20:12,520 --> 00:20:16,930
together, and distribute it in
just a matter of seconds.

469
00:20:16,930 --> 00:20:19,700
So at the bottom here, we're
selecting which of our classes

470
00:20:19,700 --> 00:20:21,000
we want to submit this to,
and we have a little

471
00:20:21,000 --> 00:20:22,540
Other box as well.

472
00:20:22,540 --> 00:20:26,150
And then once you hit Submit,
you get a little message

473
00:20:26,150 --> 00:20:28,970
saying that your quiz is being
created, and this is where the

474
00:20:28,970 --> 00:20:29,710
Apps Script picks up.

475
00:20:29,710 --> 00:20:31,960
So now, we're in the part of
our script that's actually

476
00:20:31,960 --> 00:20:33,480
reacting to a form submission.

477
00:20:33,480 --> 00:20:35,710
We detected the submission,
and we're reacting.

478
00:20:35,710 --> 00:20:37,850
And what our action is going
to be is a couple things.

479
00:20:37,850 --> 00:20:41,520
We're building a brand new form
on the fly based on that

480
00:20:41,520 --> 00:20:45,000
form's responses, and then we
are sending out that form to

481
00:20:45,000 --> 00:20:45,710
the teacher.

482
00:20:45,710 --> 00:20:48,180
Now, we're sending it to the
teacher first because the

483
00:20:48,180 --> 00:20:50,500
teacher needs to give us
the correct answers.

484
00:20:50,500 --> 00:20:52,880
And so once again, we're using
the form as a way to get that

485
00:20:52,880 --> 00:20:54,490
information.

486
00:20:54,490 --> 00:20:58,090
So here, Matt, as the teacher,
is going to go in and fill out

487
00:20:58,090 --> 00:21:00,102
the correct answers
for his quiz.

488
00:21:00,102 --> 00:21:02,700

489
00:21:02,700 --> 00:21:04,780
So now this second form-- not
the original form-- this

490
00:21:04,780 --> 00:21:06,800
second form was just submitted,
but we also

491
00:21:06,800 --> 00:21:07,890
captured that event.

492
00:21:07,890 --> 00:21:10,510
So we have the ability to have
a single script react to the

493
00:21:10,510 --> 00:21:12,640
events of multiple
different forms.

494
00:21:12,640 --> 00:21:15,490
It's getting a little complex,
I know, but it's pretty cool.

495
00:21:15,490 --> 00:21:18,380
So now that that is done, we
should get an email here, and

496
00:21:18,380 --> 00:21:20,120
the second window on the
right is the student.

497
00:21:20,120 --> 00:21:24,150
So this is a separate account in
CS 101, which obviously is

498
00:21:24,150 --> 00:21:25,840
very concerned with
my shirt color.

499
00:21:25,840 --> 00:21:28,680
And now the student gets an
email saying, you've got a new

500
00:21:28,680 --> 00:21:29,920
quiz that you need to take.

501
00:21:29,920 --> 00:21:31,570
So they see the same form
again, but now they're

502
00:21:31,570 --> 00:21:33,950
choosing what their answers
are to the quiz.

503
00:21:33,950 --> 00:21:35,605
They're taking the quiz.

504
00:21:35,605 --> 00:21:37,750
MATTHEW ZIEGELBAUM: They're
not paying attention.

505
00:21:37,750 --> 00:21:40,530
ERIC KOLEDA: They're apparently
quite wrong.

506
00:21:40,530 --> 00:21:41,080
So that's great.

507
00:21:41,080 --> 00:21:43,260
So now we have the student
filling out the form, the

508
00:21:43,260 --> 00:21:44,550
teacher's got the
correct answers,

509
00:21:44,550 --> 00:21:45,610
everything's generated.

510
00:21:45,610 --> 00:21:47,890
But how do we then see how the
class is doing, what the

511
00:21:47,890 --> 00:21:49,440
responses are like thus far?

512
00:21:49,440 --> 00:21:51,700
So this is where we've then used
the Enhance the Designer

513
00:21:51,700 --> 00:21:53,960
integration that we talked about
before to add our own

514
00:21:53,960 --> 00:21:56,230
custom menu called
Quiz Results.

515
00:21:56,230 --> 00:21:58,940
And it just has one function,
Show Sidebar, which is going

516
00:21:58,940 --> 00:22:01,680
to pop up a sidebar that
shows the results of

517
00:22:01,680 --> 00:22:04,620
your quiz thus far.

518
00:22:04,620 --> 00:22:07,540
So this is a custom UI that
we've built using the HTML

519
00:22:07,540 --> 00:22:10,630
service, and you can see,
there is our I/O quiz.

520
00:22:10,630 --> 00:22:12,005
And in just a moment--

521
00:22:12,005 --> 00:22:14,550

522
00:22:14,550 --> 00:22:19,090
OK, so these zeros obviously
don't render quite as well.

523
00:22:19,090 --> 00:22:24,570
But if we give it some correct
answers, there we go.

524
00:22:24,570 --> 00:22:25,980
Now we're getting some
percentages.

525
00:22:25,980 --> 00:22:29,060
So we're drawing little bars and
updating the values about

526
00:22:29,060 --> 00:22:34,846
what the percentage correct is
on these different quizzes.

527
00:22:34,846 --> 00:22:35,680
So it's pretty cool.

528
00:22:35,680 --> 00:22:37,765
So as a teacher, you
really quickly, in

529
00:22:37,765 --> 00:22:38,800
just a matter of moments--

530
00:22:38,800 --> 00:22:40,690
you just thought of the
quiz just after

531
00:22:40,690 --> 00:22:41,860
finishing your lecture--

532
00:22:41,860 --> 00:22:44,310
filled out the form, filled out
the correct answers, sent

533
00:22:44,310 --> 00:22:46,950
it to your students, and have
live feedback about how

534
00:22:46,950 --> 00:22:48,120
they're doing.

535
00:22:48,120 --> 00:22:50,570
Now, we are actually interested
in seeing this

536
00:22:50,570 --> 00:22:54,060
happen live for the whole room,
so we prepared ahead of

537
00:22:54,060 --> 00:22:55,070
time a quiz.

538
00:22:55,070 --> 00:22:55,380
MATTHEW ZIEGELBAUM: Yeah.

539
00:22:55,380 --> 00:22:56,940
So if you have a laptop
out or you have your

540
00:22:56,940 --> 00:23:00,220
phone, get it ready.

541
00:23:00,220 --> 00:23:03,310
We've made this quiz for you.

542
00:23:03,310 --> 00:23:04,720
It's very hard.

543
00:23:04,720 --> 00:23:07,010
You have to figure out if
someone is a Turing Award

544
00:23:07,010 --> 00:23:11,120
winner or if it's
IKEA furniture.

545
00:23:11,120 --> 00:23:14,490
We've made the link a
short link for you.

546
00:23:14,490 --> 00:23:15,170
It's large.

547
00:23:15,170 --> 00:23:31,010
If you can't read it,
it's goo.gl/tPSCH.

548
00:23:31,010 --> 00:23:33,300
ERIC KOLEDA: So as responses
start streaming in, we should

549
00:23:33,300 --> 00:23:34,550
see this start to update.

550
00:23:34,550 --> 00:23:37,220

551
00:23:37,220 --> 00:23:39,040
Now, I know you actually took
this quiz multiple times.

552
00:23:39,040 --> 00:23:40,430
MATTHEW ZIEGELBAUM: I've taken
this quiz multiple times, but

553
00:23:40,430 --> 00:23:43,920
I still get things wrong
occasionally.

554
00:23:43,920 --> 00:23:45,170
ERIC KOLEDA: It is harder
than it looks.

555
00:23:45,170 --> 00:23:51,790

556
00:23:51,790 --> 00:23:53,040
Getting those answers in.

557
00:23:53,040 --> 00:23:57,810

558
00:23:57,810 --> 00:23:58,360
Are you guessing again?

559
00:23:58,360 --> 00:23:59,610
MATTHEW ZIEGELBAUM: I'm
guessing again.

560
00:23:59,610 --> 00:24:02,620

561
00:24:02,620 --> 00:24:03,080
ERIC KOLEDA: Just a moment.

562
00:24:03,080 --> 00:24:04,330
We're going to use the
mics for questions.

563
00:24:04,330 --> 00:24:08,350

564
00:24:08,350 --> 00:24:09,920
Not quite streaming
in there, huh?

565
00:24:09,920 --> 00:24:11,410
MATTHEW ZIEGELBAUM: Not quite.

566
00:24:11,410 --> 00:24:12,840
ERIC KOLEDA: Want to show the
sidebar again and see if we

567
00:24:12,840 --> 00:24:13,790
can load it up fresh?

568
00:24:13,790 --> 00:24:14,890
MATTHEW ZIEGELBAUM: Sure.

569
00:24:14,890 --> 00:24:16,150
ERIC KOLEDA: Close
that dialog, too.

570
00:24:16,150 --> 00:24:17,400
I think we're screwing it up.

571
00:24:17,400 --> 00:24:28,680

572
00:24:28,680 --> 00:24:29,900
MATTHEW ZIEGELBAUM: The
perils of live demos.

573
00:24:29,900 --> 00:24:30,635
ERIC KOLEDA: Yeah.

574
00:24:30,635 --> 00:24:32,578
I mean, if the keynote can't do
it, what chance do we have?

575
00:24:32,578 --> 00:24:38,210

576
00:24:38,210 --> 00:24:40,250
Well, we're going to keep this
up during the question and

577
00:24:40,250 --> 00:24:42,980
answer portion, so hopefully,
we can revisit back to what

578
00:24:42,980 --> 00:24:43,830
your answers are.

579
00:24:43,830 --> 00:24:47,110
But it is actually pretty cool
that we can collect all this

580
00:24:47,110 --> 00:24:49,590
information really quickly,
show it right into the

581
00:24:49,590 --> 00:24:52,250
designer, and kind of have just
one simple interface for

582
00:24:52,250 --> 00:24:54,740
a teacher to do these results.

583
00:24:54,740 --> 00:24:56,310
Here we go.

584
00:24:56,310 --> 00:24:57,453
MATTHEW ZIEGELBAUM: Still
nothing, though.

585
00:24:57,453 --> 00:24:58,360
ERIC KOLEDA: Wait, wait.

586
00:24:58,360 --> 00:24:59,030
There we go.

587
00:24:59,030 --> 00:24:59,770
MATTHEW ZIEGELBAUM:
And there we go.

588
00:24:59,770 --> 00:25:00,200
ERIC KOLEDA: 127.

589
00:25:00,200 --> 00:25:01,330
Wow, that was fast.

590
00:25:01,330 --> 00:25:01,655
MATTHEW ZIEGELBAUM: Yeah.

591
00:25:01,655 --> 00:25:02,841
You guys were fast.

592
00:25:02,841 --> 00:25:05,430
ERIC KOLEDA: Yeah.

593
00:25:05,430 --> 00:25:06,630
I think the correct answers--

594
00:25:06,630 --> 00:25:07,930
actually, I don't know if people
are still submitting,

595
00:25:07,930 --> 00:25:10,120
so I don't want to ruin it.

596
00:25:10,120 --> 00:25:11,310
We'll get to the correct answers
during the question

597
00:25:11,310 --> 00:25:13,080
and answer at the end.

598
00:25:13,080 --> 00:25:13,770
All right.

599
00:25:13,770 --> 00:25:14,630
Back to slides?

600
00:25:14,630 --> 00:25:17,140
MATTHEW ZIEGELBAUM: Yeah.

601
00:25:17,140 --> 00:25:17,910
ERIC KOLEDA: All right.

602
00:25:17,910 --> 00:25:20,720
So the takeaway from our
presentation, once again, is

603
00:25:20,720 --> 00:25:23,720
that Forms allows you to do
simple and scalable data

604
00:25:23,720 --> 00:25:26,720
collection, and then when you
combine that with Apps Script,

605
00:25:26,720 --> 00:25:29,780
our integrated, powerful
automation, you can really do

606
00:25:29,780 --> 00:25:33,100
some amazing things in a very
low tech way, in a way that's

607
00:25:33,100 --> 00:25:36,320
very friendly to everybody.

608
00:25:36,320 --> 00:25:39,030
MATTHEW ZIEGELBAUM: So I'm sure
you're all as excited

609
00:25:39,030 --> 00:25:41,890
about this as we are and you're
probably wondering how

610
00:25:41,890 --> 00:25:43,190
you can get started.

611
00:25:43,190 --> 00:25:46,550
So yesterday, we put up
a Forms Quickstart.

612
00:25:46,550 --> 00:25:48,540
It's an easy, five
minute tutorial.

613
00:25:48,540 --> 00:25:50,730
If you've ever done any of the
Apps Script Quickstarts, it

614
00:25:50,730 --> 00:25:52,430
should be pretty familiar.

615
00:25:52,430 --> 00:25:53,635
And you can get there by going
to developers/googl

616
00:25:53,635 --> 00:25:56,800
e.com/apps-script.

617
00:25:56,800 --> 00:25:58,420
It should be right at
the top of the page

618
00:25:58,420 --> 00:26:00,400
when you load it up.

619
00:26:00,400 --> 00:26:03,750
Second, as Eric mentioned
earlier, you already have Apps

620
00:26:03,750 --> 00:26:05,520
Script installed, so head to

621
00:26:05,520 --> 00:26:08,590
script.google.com and get going.

622
00:26:08,590 --> 00:26:10,660
Just try writing something.

623
00:26:10,660 --> 00:26:13,250
And finally, write
something cool.

624
00:26:13,250 --> 00:26:15,890
I'm sure some ideas
are bubbling.

625
00:26:15,890 --> 00:26:19,100
You've come up with something
maybe just watching us.

626
00:26:19,100 --> 00:26:21,300
And if you write something cool
and you come by the Apps

627
00:26:21,300 --> 00:26:24,380
Sandbox and show us, we'd like
to see it, and if we like it,

628
00:26:24,380 --> 00:26:26,000
you'll get a t-shirt.

629
00:26:26,000 --> 00:26:27,415
ERIC KOLEDA: These are some
really cool looking t-shirts,

630
00:26:27,415 --> 00:26:27,870
by the way.

631
00:26:27,870 --> 00:26:29,140
MATTHEW ZIEGELBAUM: Yeah.

632
00:26:29,140 --> 00:26:33,350
So thank you so much.

633
00:26:33,350 --> 00:26:35,820
And we're going to do some
question and answer.

634
00:26:35,820 --> 00:26:38,370
If you could try to come
up to the mics for the

635
00:26:38,370 --> 00:26:39,800
Q&A, that'd be great.

636
00:26:39,800 --> 00:26:42,692

637
00:26:42,692 --> 00:26:50,720
[APPLAUSE]

638
00:26:50,720 --> 00:26:51,580
AUDIENCE: So I had two.

639
00:26:51,580 --> 00:26:56,200
One, when you create a form
programatically, is every form

640
00:26:56,200 --> 00:26:59,340
persisted or do you have a way
to define whether it's

641
00:26:59,340 --> 00:27:03,560
temporary or just that once,
or does it live forever?

642
00:27:03,560 --> 00:27:05,050
MATTHEW ZIEGELBAUM: Every
form is persisted.

643
00:27:05,050 --> 00:27:08,110
It'll show up in your Drive.

644
00:27:08,110 --> 00:27:13,030
But you can use the Drive app
to delete forms that you no

645
00:27:13,030 --> 00:27:13,930
longer need.

646
00:27:13,930 --> 00:27:16,860
You can do it through
Drive itself.

647
00:27:16,860 --> 00:27:19,470
ERIC KOLEDA: Yeah, it is
possible to kind of script the

648
00:27:19,470 --> 00:27:22,520
finding of the forms you have as
well as the maintenance of

649
00:27:22,520 --> 00:27:23,510
them-- moving them
into folders,

650
00:27:23,510 --> 00:27:24,920
deleting them, et cetera.

651
00:27:24,920 --> 00:27:30,300
AUDIENCE: And how would you say
one should determine where

652
00:27:30,300 --> 00:27:31,930
the usage cutoff is here?

653
00:27:31,930 --> 00:27:35,650
A little five person business
as opposed to trying to use

654
00:27:35,650 --> 00:27:38,760
this on a massive scale?

655
00:27:38,760 --> 00:27:41,810
Where would we want
to cut that off?

656
00:27:41,810 --> 00:27:42,030
ERIC KOLEDA: Yeah.

657
00:27:42,030 --> 00:27:45,010
I mean, defining these
mini-workflows, I kind of made

658
00:27:45,010 --> 00:27:46,280
up the term myself.

659
00:27:46,280 --> 00:27:48,110
Figuring out where the
right technology

660
00:27:48,110 --> 00:27:49,170
is part of the challenge.

661
00:27:49,170 --> 00:27:51,060
There is a point in which a
custom application makes

662
00:27:51,060 --> 00:27:54,840
sense, but I think there is
a large middle ground.

663
00:27:54,840 --> 00:27:58,970
I've seen some very complex
form-related workflows, tiers

664
00:27:58,970 --> 00:28:01,350
and tiers of forms that all
interact with each other.

665
00:28:01,350 --> 00:28:05,010
And certainly, you have to weigh
the pros and cons, but I

666
00:28:05,010 --> 00:28:10,270
think that it's a pretty meaty
area to tackle with forms.

667
00:28:10,270 --> 00:28:11,330
Over here.

668
00:28:11,330 --> 00:28:16,330
AUDIENCE: You said you inserted
the script at the

669
00:28:16,330 --> 00:28:19,700
Form level, but you can insert
it in any of the other ways

670
00:28:19,700 --> 00:28:21,090
where we can create scripts.

671
00:28:21,090 --> 00:28:23,710
So I could have it in a web
app, I could have it in a

672
00:28:23,710 --> 00:28:26,320
spreadsheet, or is it
only limited there?

673
00:28:26,320 --> 00:28:29,150
And if it's not limited there,
where do you trap the

674
00:28:29,150 --> 00:28:32,570
onFormSubmit event
in that case?

675
00:28:32,570 --> 00:28:34,870
MATTHEW ZIEGELBAUM: So
regardless of where the script

676
00:28:34,870 --> 00:28:37,740
lives, whether it's attached to
a form or not, you can use

677
00:28:37,740 --> 00:28:40,700
the ScriptApps trigger builders
to listen to forms.

678
00:28:40,700 --> 00:28:44,070
So you can have one script
listening to many forms

679
00:28:44,070 --> 00:28:45,680
response events.

680
00:28:45,680 --> 00:28:47,750
ERIC KOLEDA: So you could use--
and I think we have some

681
00:28:47,750 --> 00:28:51,390
demos we've done in the past of
a spreadsheet bound script

682
00:28:51,390 --> 00:28:53,660
creating forms, or a
web app deployed

683
00:28:53,660 --> 00:28:54,800
script creating forms.

684
00:28:54,800 --> 00:28:56,460
It's really not tied.

685
00:28:56,460 --> 00:28:59,070
But when you are tied to a form,
it makes it a lot easier

686
00:28:59,070 --> 00:29:00,320
to access that form.

687
00:29:00,320 --> 00:29:02,420
We have a function,
getActiveForm, which just

688
00:29:02,420 --> 00:29:04,040
automatically finds and
accesses the form it's

689
00:29:04,040 --> 00:29:05,520
attached to.

690
00:29:05,520 --> 00:29:07,460
Over on this side?

691
00:29:07,460 --> 00:29:08,600
AUDIENCE: Thanks.

692
00:29:08,600 --> 00:29:11,230
So one of the things that you
guys had on your dinner form

693
00:29:11,230 --> 00:29:16,440
was putting in your information,
and that's

694
00:29:16,440 --> 00:29:19,590
actually a common thing that
I see all the time as well.

695
00:29:19,590 --> 00:29:21,900
OK, what's your name,
your email address.

696
00:29:21,900 --> 00:29:24,840
Is there any direction, or
maybe there is already a

697
00:29:24,840 --> 00:29:28,760
feature, to just sign in,
whether you have Google+ or

698
00:29:28,760 --> 00:29:33,470
something, and just say, OK,
this form, you have to sign in

699
00:29:33,470 --> 00:29:36,370
to use it and then take
it from there?

700
00:29:36,370 --> 00:29:39,250
MATTHEW ZIEGELBAUM: Right now,
if you are a Google Apps for

701
00:29:39,250 --> 00:29:44,310
your domain user or Apps for
Education user, you can

702
00:29:44,310 --> 00:29:49,630
enforce requiring sign in and
also collecting emails.

703
00:29:49,630 --> 00:29:52,680
If you're on a regular Gmail
account, you can't do that

704
00:29:52,680 --> 00:29:54,825
right now, but it is something
that we've heard from our

705
00:29:54,825 --> 00:29:57,350
users and we're going
to be looking into.

706
00:29:57,350 --> 00:29:59,510
AUDIENCE: Thank you.

707
00:29:59,510 --> 00:30:00,500
AUDIENCE: Thank you.

708
00:30:00,500 --> 00:30:02,000
I had a couple questions.

709
00:30:02,000 --> 00:30:03,220
The email validation--

710
00:30:03,220 --> 00:30:05,900
because I was creating a form
and then I realized it's an

711
00:30:05,900 --> 00:30:07,060
email address.

712
00:30:07,060 --> 00:30:11,290
Is that built into Google Forms
and can I use this to

713
00:30:11,290 --> 00:30:14,340
force it to look like
an email address?

714
00:30:14,340 --> 00:30:17,040
MATTHEW ZIEGELBAUM: That's
another big request from our

715
00:30:17,040 --> 00:30:21,370
users, and with the new version
of Forms that launched

716
00:30:21,370 --> 00:30:23,320
this past February, we're
looking to add a lot more

717
00:30:23,320 --> 00:30:27,250
features coming up, and so
it's something we're

718
00:30:27,250 --> 00:30:28,150
definitely looking at.

719
00:30:28,150 --> 00:30:30,190
AUDIENCE: Can I do it with
Apps Script with the

720
00:30:30,190 --> 00:30:31,362
integration?

721
00:30:31,362 --> 00:30:32,832
Can I get to that level?

722
00:30:32,832 --> 00:30:34,800
ERIC KOLEDA: One point to
clarify with how Apps Script

723
00:30:34,800 --> 00:30:38,200
and Forms interact is that you
have access to a couple

724
00:30:38,200 --> 00:30:41,380
different events you can tie
into when the Form Designer is

725
00:30:41,380 --> 00:30:44,830
opened, when the Form Designer
and Edit takes place, and when

726
00:30:44,830 --> 00:30:47,660
someone finishes the last page
of a form, when they hit the

727
00:30:47,660 --> 00:30:48,770
final Submit.

728
00:30:48,770 --> 00:30:51,070
But you cannot currently
use Apps Script in the

729
00:30:51,070 --> 00:30:53,660
intermediary processes of
filling out a form-- so when

730
00:30:53,660 --> 00:30:55,600
someone fills out a field
doing a validation

731
00:30:55,600 --> 00:30:58,300
immediately, or when someone
goes from one page to another,

732
00:30:58,300 --> 00:30:59,390
you don't have that
kind of a tie-in.

733
00:30:59,390 --> 00:31:01,980
So it is possible to build a
script that, when a form a

734
00:31:01,980 --> 00:31:05,210
submitted, you scan the data,
look for errors, and then send

735
00:31:05,210 --> 00:31:07,460
them a notification, but you
cannot do that while they're

736
00:31:07,460 --> 00:31:09,110
still in the form filling
out experience.

737
00:31:09,110 --> 00:31:10,290
AUDIENCE: But there's
a plan to add?

738
00:31:10,290 --> 00:31:13,230
Because there's a whole bunch
of validate cases that are

739
00:31:13,230 --> 00:31:16,590
missing in Google Forms,
like email?

740
00:31:16,590 --> 00:31:20,000
And another question
is, is there

741
00:31:20,000 --> 00:31:22,320
integration with Google Wallet?

742
00:31:22,320 --> 00:31:24,280
You talked about event
registration.

743
00:31:24,280 --> 00:31:26,640
You could actually use this,
integrate it with Google

744
00:31:26,640 --> 00:31:30,150
Wallet, have them fill out their
name and then pay, too.

745
00:31:30,150 --> 00:31:31,823
Is that possible today?

746
00:31:31,823 --> 00:31:32,550
ERIC KOLEDA: It's interesting.

747
00:31:32,550 --> 00:31:33,540
Not today, I don't think.

748
00:31:33,540 --> 00:31:35,290
MATTHEW ZIEGELBAUM: Not today.

749
00:31:35,290 --> 00:31:36,955
AUDIENCE: And another
question is mobile.

750
00:31:36,955 --> 00:31:43,420

751
00:31:43,420 --> 00:31:46,560
Let's say there's
20 questions.

752
00:31:46,560 --> 00:31:52,330
On mobile, there's already
a mobile version, right?

753
00:31:52,330 --> 00:31:52,460
MATTHEW ZIEGELBAUM: Yeah.

754
00:31:52,460 --> 00:31:55,230
So we already have a mobile
version of the

755
00:31:55,230 --> 00:31:56,350
Form Response page.

756
00:31:56,350 --> 00:31:59,680
It uses mobile friendly
CSS and HTML.

757
00:31:59,680 --> 00:32:03,372
And things like our new Date
Picker are using the HTML5

758
00:32:03,372 --> 00:32:06,410
Date Picker, so it works
really well on iPhones,

759
00:32:06,410 --> 00:32:10,270
Android devices, using the
Native OS level pickers.

760
00:32:10,270 --> 00:32:11,020
AUDIENCE: That's really good.

761
00:32:11,020 --> 00:32:11,820
Thank you.

762
00:32:11,820 --> 00:32:14,010
ERIC KOLEDA: Yes, over here?

763
00:32:14,010 --> 00:32:15,920
AUDIENCE: So I'm interested in
building an offline mobile

764
00:32:15,920 --> 00:32:17,140
client that talks to Forms.

765
00:32:17,140 --> 00:32:19,990
I'm wondering if this allows
me to do that through some

766
00:32:19,990 --> 00:32:23,220
sort of more reasonable API,
or is Forms going to get an

767
00:32:23,220 --> 00:32:24,780
API at some point
in the future?

768
00:32:24,780 --> 00:32:28,130
MATTHEW ZIEGELBAUM: So we do
have an API in Apps Script for

769
00:32:28,130 --> 00:32:31,340
constructing responses
and submitting them.

770
00:32:31,340 --> 00:32:34,490
So it's a pretty good API.

771
00:32:34,490 --> 00:32:37,170
It doesn't require you to do
what-- in the past, you'd have

772
00:32:37,170 --> 00:32:39,510
to construct your own
Post Request and

773
00:32:39,510 --> 00:32:40,890
send it to our server.

774
00:32:40,890 --> 00:32:47,450
Now, you can construct a first
level, good, rich response and

775
00:32:47,450 --> 00:32:48,320
submit it that way.

776
00:32:48,320 --> 00:32:50,420
AUDIENCE: But does the API allow
me to pull down what the

777
00:32:50,420 --> 00:32:51,760
form spec actually is?

778
00:32:51,760 --> 00:32:54,500
So can I load that form in an
offline client, fill it out,

779
00:32:54,500 --> 00:32:56,080
and then send it?

780
00:32:56,080 --> 00:32:59,830
Because right now, presumably,
I can just send a response,

781
00:32:59,830 --> 00:33:03,150
but if I don't know what that
form is, how do I do that?

782
00:33:03,150 --> 00:33:06,180
ERIC KOLEDA: If you're using
Apps Script at least, you can

783
00:33:06,180 --> 00:33:08,845
definitely read the structure
of the form, figure out what

784
00:33:08,845 --> 00:33:11,210
all the fields are, figure out
what all the options are, and

785
00:33:11,210 --> 00:33:14,760
then also very easily construct
a new response that

786
00:33:14,760 --> 00:33:16,180
you can then submit
to that form.

787
00:33:16,180 --> 00:33:17,310
So there's some capabilities
there.

788
00:33:17,310 --> 00:33:19,410
I don't know if it'll fit your
exact use case, but it's worth

789
00:33:19,410 --> 00:33:20,120
looking into.

790
00:33:20,120 --> 00:33:21,130
AUDIENCE: Thanks.

791
00:33:21,130 --> 00:33:21,940
ERIC KOLEDA: Over here?

792
00:33:21,940 --> 00:33:25,450
AUDIENCE: Kind of an aside to
scripts itself, with form

793
00:33:25,450 --> 00:33:27,910
submittal, is there going to
be any future plans to

794
00:33:27,910 --> 00:33:31,060
restrict submittal to circles,
groups, and OUs?

795
00:33:31,060 --> 00:33:32,210
Is that something
that we might be

796
00:33:32,210 --> 00:33:34,630
looking at in the future?

797
00:33:34,630 --> 00:33:36,500
Instead of just a global,
you're either inside the

798
00:33:36,500 --> 00:33:38,570
organization or you're outside
the organization, I'm just

799
00:33:38,570 --> 00:33:40,800
thinking specifically for
education, where you could

800
00:33:40,800 --> 00:33:43,250
restrict to a student
OU or a staff OU for

801
00:33:43,250 --> 00:33:45,530
those kind of things.

802
00:33:45,530 --> 00:33:46,510
MATTHEW ZIEGELBAUM: That's
interesting.

803
00:33:46,510 --> 00:33:50,020
Right now, we do only support
the organizational level

804
00:33:50,020 --> 00:33:52,100
restriction, but it's
definitely something

805
00:33:52,100 --> 00:33:54,015
interesting to look
at going forward.

806
00:33:54,015 --> 00:33:54,860
AUDIENCE: Thanks.

807
00:33:54,860 --> 00:33:56,470
MATTHEW ZIEGELBAUM: And once
again, using Apps Script, it's

808
00:33:56,470 --> 00:34:00,340
not as ideal, but for instance,
if you required the

809
00:34:00,340 --> 00:34:02,880
email address of your user,
you could then, after they

810
00:34:02,880 --> 00:34:05,100
submit the form, determine
whether or not they are in a

811
00:34:05,100 --> 00:34:07,550
certain group, determine if they
are in a certain circle.

812
00:34:07,550 --> 00:34:09,760
So you have to do it after the
submission, but you could

813
00:34:09,760 --> 00:34:12,603
then, perhaps, invalidate that
response or send them some

814
00:34:12,603 --> 00:34:13,430
sort of feedback.

815
00:34:13,430 --> 00:34:15,580
Just going to go to the
microphone over here.

816
00:34:15,580 --> 00:34:17,770
AUDIENCE: So I know you're
focused on mini-workflows, but

817
00:34:17,770 --> 00:34:21,650
sometimes forms can be pretty
lengthy and become medium

818
00:34:21,650 --> 00:34:25,280
workflows and there's some value
in users being able to

819
00:34:25,280 --> 00:34:26,150
save and come back.

820
00:34:26,150 --> 00:34:29,130
Do you have any best practice
or suggestion or any way at

821
00:34:29,130 --> 00:34:31,880
all to support a user to save
and come back, even if it

822
00:34:31,880 --> 00:34:34,246
required them authenticating?

823
00:34:34,246 --> 00:34:36,590
MATTHEW ZIEGELBAUM: So I've
actually, in playing with the

824
00:34:36,590 --> 00:34:41,800
API, written something that can
do this using the UI App

825
00:34:41,800 --> 00:34:46,770
or HTML service to build my own
version of the form with a

826
00:34:46,770 --> 00:34:49,620
little key that I made up
that allows the user to

827
00:34:49,620 --> 00:34:50,909
come back with it.

828
00:34:50,909 --> 00:34:53,679
But we don't have anything
that's first party as part of

829
00:34:53,679 --> 00:34:55,110
Apps Script and Forms itself.

830
00:34:55,110 --> 00:34:57,000
AUDIENCE: And you couldn't do
that with the regular Forms

831
00:34:57,000 --> 00:34:59,420
because you don't get to run
your JavaScript while the form

832
00:34:59,420 --> 00:35:00,200
is being filled out.

833
00:35:00,200 --> 00:35:01,360
MATTHEW ZIEGELBAUM: Correct.

834
00:35:01,360 --> 00:35:02,470
AUDIENCE: So no good
way right now.

835
00:35:02,470 --> 00:35:03,170
All right, thanks.

836
00:35:03,170 --> 00:35:05,010
ERIC KOLEDA: Yeah, no problem.

837
00:35:05,010 --> 00:35:06,390
Over here?

838
00:35:06,390 --> 00:35:08,880
AUDIENCE: So I'm going to speak
more from a start-up

839
00:35:08,880 --> 00:35:10,400
standpoint.

840
00:35:10,400 --> 00:35:12,850
You already mentioned about
the education part.

841
00:35:12,850 --> 00:35:16,440
So assistants or professors
needs students to fill forms,

842
00:35:16,440 --> 00:35:19,180
so let's say they don't have any
technical skills to create

843
00:35:19,180 --> 00:35:23,330
those forms and you create a UI
where they can create their

844
00:35:23,330 --> 00:35:25,450
own UI quizzes, et cetera.

845
00:35:25,450 --> 00:35:31,210
So my question is going to be,
is the API that good to create

846
00:35:31,210 --> 00:35:34,240
such elements on the fly,
meaning they will pick the

847
00:35:34,240 --> 00:35:38,420
questions, fill the forms they
want, radio buttons or select

848
00:35:38,420 --> 00:35:40,550
boxes, et cetera, that will be
able to will talk to the API

849
00:35:40,550 --> 00:35:42,500
and create those elements
for them?

850
00:35:42,500 --> 00:35:47,320
And then the emails that they
will receive the response to.

851
00:35:47,320 --> 00:35:51,020
Can this be also set separately
from my account?

852
00:35:51,020 --> 00:35:53,110
Let's say I have a Google
account but they don't, they

853
00:35:53,110 --> 00:35:54,760
will provide their email
addresses and they want to

854
00:35:54,760 --> 00:35:56,330
collect their responses
through that email.

855
00:35:56,330 --> 00:35:56,740
ERIC KOLEDA: Yeah.

856
00:35:56,740 --> 00:35:58,740
I'd say it sounds like we're
flexible enough to

857
00:35:58,740 --> 00:35:59,340
handle all of that.

858
00:35:59,340 --> 00:36:01,950
I mean, the key takeaway, I
think, for what the FormApp

859
00:36:01,950 --> 00:36:05,920
can do is currently everything
that you can do in the UI.

860
00:36:05,920 --> 00:36:09,125
So if there's check boxes in
the Designer, there's check

861
00:36:09,125 --> 00:36:10,720
boxes in Apps Script.

862
00:36:10,720 --> 00:36:12,370
AUDIENCE: But can this be
created by the API?

863
00:36:12,370 --> 00:36:13,510
That's my question.

864
00:36:13,510 --> 00:36:16,170
They want to create something
and as a developer, I'm just

865
00:36:16,170 --> 00:36:17,380
providing the service.

866
00:36:17,380 --> 00:36:21,450
They will pick the elements,
place it on the UI.

867
00:36:21,450 --> 00:36:25,930
Then I will take this UI,
programmatically, I'm going to

868
00:36:25,930 --> 00:36:28,820
create on the fly through
the API, and--

869
00:36:28,820 --> 00:36:31,330
ERIC KOLEDA: I think what we
showed today in our demo was

870
00:36:31,330 --> 00:36:34,740
using a form as that custom UI,
but you could build your

871
00:36:34,740 --> 00:36:38,270
own separate UI that's, let's
say, tailored to that specific

872
00:36:38,270 --> 00:36:40,850
kind of problem you're solving
where they just enter a lot

873
00:36:40,850 --> 00:36:43,520
less information and then you
take that information from

874
00:36:43,520 --> 00:36:45,830
your custom UI and use
it to create a form.

875
00:36:45,830 --> 00:36:48,140
So I think that definitely, all
the tools and the pieces

876
00:36:48,140 --> 00:36:49,490
are there to allow
you to do that.

877
00:36:49,490 --> 00:36:50,090
AUDIENCE: Thanks.

878
00:36:50,090 --> 00:36:51,990
ERIC KOLEDA: Yeah?

879
00:36:51,990 --> 00:36:54,550
AUDIENCE: You've been mentioning
the HTML service,

880
00:36:54,550 --> 00:36:58,210
and I'm not familiar with that
at all before today, and

881
00:36:58,210 --> 00:37:00,020
someone else just mentioned
JavaScript.

882
00:37:00,020 --> 00:37:03,290
Can you use that HTML service
to inject any client side to

883
00:37:03,290 --> 00:37:06,170
do validation of your own things
like that, right there

884
00:37:06,170 --> 00:37:08,180
in the browser?

885
00:37:08,180 --> 00:37:09,520
ERIC KOLEDA: I know we were
talking a little bit about

886
00:37:09,520 --> 00:37:10,170
this problem.

887
00:37:10,170 --> 00:37:11,890
It's definitely something a lot
of people want, is to do

888
00:37:11,890 --> 00:37:14,760
that validation during
the fill out flow.

889
00:37:14,760 --> 00:37:16,570
And so I think we're going
to think more about it.

890
00:37:16,570 --> 00:37:21,050
But currently today, the only
time we can inject is after

891
00:37:21,050 --> 00:37:21,850
the form's submitted.

892
00:37:21,850 --> 00:37:22,960
So it is a little limiting.

893
00:37:22,960 --> 00:37:27,490
You can't today use the HTML
service or use the JavaScript

894
00:37:27,490 --> 00:37:30,170
capabilities within the
form filling out flow.

895
00:37:30,170 --> 00:37:31,770
I think some of the right
technologies are there.

896
00:37:31,770 --> 00:37:33,040
We've just got to see if
they all fit together.

897
00:37:33,040 --> 00:37:35,670

898
00:37:35,670 --> 00:37:38,310
AUDIENCE: I work for a school
and we have a lot of external

899
00:37:38,310 --> 00:37:40,610
systems, and one of the biggest
questions I'm going to

900
00:37:40,610 --> 00:37:43,480
have is, what kind of
third party system

901
00:37:43,480 --> 00:37:44,310
can integrate with?

902
00:37:44,310 --> 00:37:45,770
Does it need a certain API?

903
00:37:45,770 --> 00:37:47,140
Does it need to be RESTful?

904
00:37:47,140 --> 00:37:49,690
What are the limitations
there?

905
00:37:49,690 --> 00:37:51,570
ERIC KOLEDA: So the different
connectors that we use and

906
00:37:51,570 --> 00:37:54,810
that are popular, the biggest
one is URL Fetch App.

907
00:37:54,810 --> 00:37:57,690
This allows you to make any sort
of Get Post request, you

908
00:37:57,690 --> 00:37:59,010
can pass your own
custom headers.

909
00:37:59,010 --> 00:38:02,710
You can therefore interact
with any HTTP-based

910
00:38:02,710 --> 00:38:04,850
API, any REST API.

911
00:38:04,850 --> 00:38:06,890
So it's the sky's
the limit there.

912
00:38:06,890 --> 00:38:10,550
You have to actually do the HTTP
requests, so you have to

913
00:38:10,550 --> 00:38:13,610
have some understanding of that,
but that opens it up to

914
00:38:13,610 --> 00:38:16,240
a really large number of APIs.

915
00:38:16,240 --> 00:38:19,650
We do have support for OAuth 1
currently, and we have some

916
00:38:19,650 --> 00:38:23,140
sample code showing how you can
use OAuth 2 based APIs.

917
00:38:23,140 --> 00:38:27,040
And then we also provide
connectors for SQL, so we have

918
00:38:27,040 --> 00:38:29,200
a JDBC connector that
allows you to

919
00:38:29,200 --> 00:38:30,680
connect to SQL databases.

920
00:38:30,680 --> 00:38:32,620
And then we also have
a SOAP connector.

921
00:38:32,620 --> 00:38:35,640
If you have a really old, legacy
SOAP service, you're

922
00:38:35,640 --> 00:38:37,530
probably unhappy that you still
have that service, but

923
00:38:37,530 --> 00:38:40,030
you can connect to it
via Apps Script.

924
00:38:40,030 --> 00:38:41,052
AUDIENCE: Is there any
plan for maybe

925
00:38:41,052 --> 00:38:43,240
an Oracle JDBC connector?

926
00:38:43,240 --> 00:38:43,520
ERIC KOLEDA: Yes.

927
00:38:43,520 --> 00:38:45,880
So I think the JDBC we have
today, if I remember

928
00:38:45,880 --> 00:38:49,660
correctly, is Oracle, MySQL, MS
SQL, so you should be good.

929
00:38:49,660 --> 00:38:53,040

930
00:38:53,040 --> 00:38:55,410
AUDIENCE: Not if you can send
somebody a document which

931
00:38:55,410 --> 00:38:56,690
executes scripts.

932
00:38:56,690 --> 00:38:59,860
Doesn't that open
a security risk?

933
00:38:59,860 --> 00:39:01,110
ERIC KOLEDA: Security risk.

934
00:39:01,110 --> 00:39:03,570

935
00:39:03,570 --> 00:39:05,700
MATTHEW ZIEGELBAUM: No,
I don't think so.

936
00:39:05,700 --> 00:39:08,120
ERIC KOLEDA: Especially within
an organization if you check

937
00:39:08,120 --> 00:39:10,310
the check box that says, only
people within my organization

938
00:39:10,310 --> 00:39:12,520
can fill it out, that definitely
limits the scope

939
00:39:12,520 --> 00:39:13,440
down a lot.

940
00:39:13,440 --> 00:39:15,410
But the other thing I guess is
being wary that if you have a

941
00:39:15,410 --> 00:39:17,950
public form and you have a
script that's reacting to it,

942
00:39:17,950 --> 00:39:19,790
that you understand
what you're doing.

943
00:39:19,790 --> 00:39:21,710
I guess one of the key points
about the triggers that we

944
00:39:21,710 --> 00:39:25,460
didn't go into too much detail
on is that when Matt creates a

945
00:39:25,460 --> 00:39:28,360
trigger on his form,
the trigger always

946
00:39:28,360 --> 00:39:30,250
runs as Matt's identity.

947
00:39:30,250 --> 00:39:32,710
So you're never taking the
identity of the person filling

948
00:39:32,710 --> 00:39:33,160
out the form.

949
00:39:33,160 --> 00:39:34,240
You don't have access to that.

950
00:39:34,240 --> 00:39:34,990
That is separate.

951
00:39:34,990 --> 00:39:37,100
So anyone in the world could
fill out your form with or

952
00:39:37,100 --> 00:39:38,250
without a Google account.

953
00:39:38,250 --> 00:39:40,330
Their information is
separate and safe.

954
00:39:40,330 --> 00:39:42,360
The trigger, when it runs,
it runs as Matt.

955
00:39:42,360 --> 00:39:44,380
It has access to Matt's
Calendar, Matt's

956
00:39:44,380 --> 00:39:45,750
Drive, Matt's Docs.

957
00:39:45,750 --> 00:39:49,360

958
00:39:49,360 --> 00:39:50,710
AUDIENCE: Hi.

959
00:39:50,710 --> 00:39:51,840
Just one question, also

960
00:39:51,840 --> 00:39:54,140
complements one of your answers.

961
00:39:54,140 --> 00:39:56,860
One question is, do think that
you're going to have a field

962
00:39:56,860 --> 00:39:59,650
sooner or later which allows you
to link to a Google Doc or

963
00:39:59,650 --> 00:40:03,050
upload a file of some sort and
store it in a Drive folder or

964
00:40:03,050 --> 00:40:03,950
something like that?

965
00:40:03,950 --> 00:40:04,440
ERIC KOLEDA: Gotcha.

966
00:40:04,440 --> 00:40:05,380
Upload.

967
00:40:05,380 --> 00:40:05,930
MATTHEW ZIEGELBAUM: Upload?

968
00:40:05,930 --> 00:40:07,190
ERIC KOLEDA: Yeah.

969
00:40:07,190 --> 00:40:08,430
MATTHEW ZIEGELBAUM: That would
definitely be cool.

970
00:40:08,430 --> 00:40:10,520
People have asked for it in the
past, so it's definitely

971
00:40:10,520 --> 00:40:13,630
something we've considered.

972
00:40:13,630 --> 00:40:14,820
But right now, we don't--

973
00:40:14,820 --> 00:40:15,120
AUDIENCE: Not.

974
00:40:15,120 --> 00:40:16,890
MATTHEW ZIEGELBAUM: It's
not launched right now.

975
00:40:16,890 --> 00:40:19,550
AUDIENCE: And also, just to
comment on one of your answers

976
00:40:19,550 --> 00:40:24,500
before about to figure out how
to scale this, at what point

977
00:40:24,500 --> 00:40:27,580
is it OK for a small
organization or go huge scale?

978
00:40:27,580 --> 00:40:31,120
The limitation there is on
the processing time.

979
00:40:31,120 --> 00:40:33,050
You have limitations
on Apps Script.

980
00:40:33,050 --> 00:40:34,390
I can't remember the
exact numbers.

981
00:40:34,390 --> 00:40:36,440
I think it's 60 minutes or
something a day or something,

982
00:40:36,440 --> 00:40:39,610
and after that, you need to
scale up to App Engine or

983
00:40:39,610 --> 00:40:40,700
something like that.

984
00:40:40,700 --> 00:40:41,380
ERIC KOLEDA: Yeah.

985
00:40:41,380 --> 00:40:43,310
So Apps Script does have
some limitations.

986
00:40:43,310 --> 00:40:45,500
I think what you're referring
to is they've got a five or

987
00:40:45,500 --> 00:40:49,220
six minute processing time
on a script reaction.

988
00:40:49,220 --> 00:40:51,860
So if you're doing more than
five or six minutes worth of

989
00:40:51,860 --> 00:40:54,430
work, you either have to try to
batch it up in some sort of

990
00:40:54,430 --> 00:40:56,350
away or maybe turn to
another solution.

991
00:40:56,350 --> 00:40:59,820

992
00:40:59,820 --> 00:41:01,880
And I think it's true with all
technologies, there's a time

993
00:41:01,880 --> 00:41:02,900
when you eventually
grow out of it.

994
00:41:02,900 --> 00:41:05,190
So I tried to show the
progression from email to

995
00:41:05,190 --> 00:41:07,350
spreadsheet to something else.

996
00:41:07,350 --> 00:41:09,782
I think people, the natural--
and I think probably correct

997
00:41:09,782 --> 00:41:11,510
tendency-- is to do the simplest
thing that solves

998
00:41:11,510 --> 00:41:14,390
your problem today, and then
when you grow out of it,

999
00:41:14,390 --> 00:41:15,630
migrate to another solution.

1000
00:41:15,630 --> 00:41:17,210
I don't think there's any
solution I've ever seen, a

1001
00:41:17,210 --> 00:41:19,890
technology, where it works just
as well for the simplest

1002
00:41:19,890 --> 00:41:21,810
case as it does for
the best case.

1003
00:41:21,810 --> 00:41:24,800
There's always going to be the
need to revise it, revamp it,

1004
00:41:24,800 --> 00:41:28,200
and restructure it as the
problem space grows.

1005
00:41:28,200 --> 00:41:30,650
And so I think with Forms and
Apps Script, you are going to

1006
00:41:30,650 --> 00:41:33,640
find that maybe someday, if it
blows up and it's the most

1007
00:41:33,640 --> 00:41:36,510
popular form we've ever seen,
that you may need to change

1008
00:41:36,510 --> 00:41:38,140
some things that you're doing.

1009
00:41:38,140 --> 00:41:40,620
But I'd say when you think about
the problems that you

1010
00:41:40,620 --> 00:41:43,822
have, you'll start to see ones
that make sense with Forms and

1011
00:41:43,822 --> 00:41:45,072
Apps Script.

1012
00:41:45,072 --> 00:41:47,020

1013
00:41:47,020 --> 00:41:49,310
AUDIENCE: I've got a slightly
more general question about

1014
00:41:49,310 --> 00:41:50,830
Apps Script.

1015
00:41:50,830 --> 00:41:54,770
One of the benefits that's often
touted is that you don't

1016
00:41:54,770 --> 00:41:59,880
need an IDE to use it, but I'm
quite attached to my IDE.

1017
00:41:59,880 --> 00:42:03,540
Is there any way to upload or
download Apps Scripts outside

1018
00:42:03,540 --> 00:42:05,930
of just copy and paste
in the browser?

1019
00:42:05,930 --> 00:42:06,110
ERIC KOLEDA: Yeah.

1020
00:42:06,110 --> 00:42:07,980
That's a very popular request
we've gotten.

1021
00:42:07,980 --> 00:42:09,720
People have definitely
been asking for that.

1022
00:42:09,720 --> 00:42:12,460
We've gotten some of the bits
in place right now.

1023
00:42:12,460 --> 00:42:15,360
It's not fully baked, but
hopefully in the coming weeks

1024
00:42:15,360 --> 00:42:16,730
and months, we'll have
some more good news

1025
00:42:16,730 --> 00:42:17,546
about that for you.

1026
00:42:17,546 --> 00:42:18,460
AUDIENCE: Thank you.

1027
00:42:18,460 --> 00:42:19,600
ERIC KOLEDA: I'm sorry, last
question in yellow because

1028
00:42:19,600 --> 00:42:22,650
we're out of time.

1029
00:42:22,650 --> 00:42:23,280
AUDIENCE: [INAUDIBLE]

1030
00:42:23,280 --> 00:42:26,560
someone else's question, with
Apps Script in general, could

1031
00:42:26,560 --> 00:42:30,500
you fire off some sort of a
set of codes that, say,

1032
00:42:30,500 --> 00:42:33,290
creates a Google Drive folder
and emails somebody a link to

1033
00:42:33,290 --> 00:42:35,510
that to provide an upload
process kind of

1034
00:42:35,510 --> 00:42:36,430
indirectly that way?

1035
00:42:36,430 --> 00:42:36,895
ERIC KOLEDA: Yeah.

1036
00:42:36,895 --> 00:42:37,360
MATTHEW ZIEGELBAUM: Yeah.

1037
00:42:37,360 --> 00:42:38,400
ERIC KOLEDA: Yeah, definitely.

1038
00:42:38,400 --> 00:42:40,350
Actually, talking about upload,
it's not going to be

1039
00:42:40,350 --> 00:42:41,950
in the form, so there's not
going to be a little Browse

1040
00:42:41,950 --> 00:42:44,760
button just yet, but because we
have all of these different

1041
00:42:44,760 --> 00:42:48,440
connectors into sending emails,
into getting URLs,

1042
00:42:48,440 --> 00:42:51,570
into creating shared folders,
I think there is some

1043
00:42:51,570 --> 00:42:55,440
capabilities to solve it in
more of a roundabout way.

1044
00:42:55,440 --> 00:42:56,960
Well, thank you everybody
for coming today.

1045
00:42:56,960 --> 00:42:58,000
We had a great time.

1046
00:42:58,000 --> 00:43:00,590
Once again, please come by the
Chrome and Apps booth, say

1047
00:43:00,590 --> 00:43:02,580
hello to us, show
us your script,

1048
00:43:02,580 --> 00:43:03,330
get an awesome t-shirt.

1049
00:43:03,330 --> 00:43:03,930
Thanks again.

1050
00:43:03,930 --> 00:43:11,370
[APPLAUSE]

