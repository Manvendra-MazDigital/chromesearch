1
00:00:00,000 --> 00:01:39,301
[MUSIC PLAYING]

2
00:01:39,301 --> 00:04:40,580

3
00:04:40,580 --> 00:04:41,740
Two minutes, everyone--

4
00:04:41,740 --> 00:04:43,569
take your seats, please.

5
00:04:43,569 --> 00:06:40,010
[MUSIC PLAYING]

6
00:06:40,010 --> 00:06:42,080
ANDREW BETTS: Can we get
the Real Time Data

7
00:06:42,080 --> 00:06:43,330
panel on the stage?

8
00:06:43,330 --> 00:06:54,340

9
00:06:54,340 --> 00:06:54,703
Great.

10
00:06:54,703 --> 00:06:55,850
SCOTT JENSON: John?

11
00:06:55,850 --> 00:06:56,900
John Fallows, right?

12
00:06:56,900 --> 00:06:59,154
Scott Jenson, nice
to meet you.

13
00:06:59,154 --> 00:07:01,850
HENRIK JORETEG: Any preference
to where I should sit?

14
00:07:01,850 --> 00:07:03,040
ANDREW BETTS: Sit wherever
you like.

15
00:07:03,040 --> 00:07:04,290
HENRIK JORETEG: OK.

16
00:07:04,290 --> 00:07:08,050

17
00:07:08,050 --> 00:07:09,300
[INTERPOSING VOICES]

18
00:07:09,300 --> 00:07:13,100

19
00:07:13,100 --> 00:07:14,960
SCOTT JENSON: What's this
less talk thing?

20
00:07:14,960 --> 00:07:17,410
ANDREW BETTS: Oh, you
can just turn it on.

21
00:07:17,410 --> 00:07:18,660
[INTERPOSING VOICES]

22
00:07:18,660 --> 00:07:31,140

23
00:07:31,140 --> 00:07:31,440
OK.

24
00:07:31,440 --> 00:07:31,920
Welcome back.

25
00:07:31,920 --> 00:07:34,030
So our next session
is Real Time Data.

26
00:07:34,030 --> 00:07:36,850

27
00:07:36,850 --> 00:07:39,300
This session is going to be
chaired by Mr. Scott Jenson.

28
00:07:39,300 --> 00:07:41,910
So please welcome the panel
for Real Time Data.

29
00:07:41,910 --> 00:07:43,160
SCOTT JENSON: Thank
you very much.

30
00:07:43,160 --> 00:07:45,777

31
00:07:45,777 --> 00:07:48,335
Can we bring up the QR
code for the session?

32
00:07:48,335 --> 00:07:52,020
Or is that something we have
to do next, after the talk?

33
00:07:52,020 --> 00:07:53,970
After the talk, so then
I will save my little

34
00:07:53,970 --> 00:07:56,050
talk for that later.

35
00:07:56,050 --> 00:07:58,860
We have a very good panel here
of people who are extremely

36
00:07:58,860 --> 00:08:02,150
experienced in, basically,
Real Time Data.

37
00:08:02,150 --> 00:08:03,880
strongly recommend that you
just read the panel

38
00:08:03,880 --> 00:08:05,440
introduction from all of them.

39
00:08:05,440 --> 00:08:08,800
We've got Henrik Joreteg, right
here, John Fallows,

40
00:08:08,800 --> 00:08:12,270
Wesley, who actually did this
lovely OnSlyde demonstration

41
00:08:12,270 --> 00:08:14,630
as well, which by the
way, is right there.

42
00:08:14,630 --> 00:08:19,990
And then to my left, we
have Martyn, and Rob.

43
00:08:19,990 --> 00:08:22,430
Sorry, welcome.

44
00:08:22,430 --> 00:08:24,560
Now that we have the OnSlyde
up, I really strongly

45
00:08:24,560 --> 00:08:25,630
recommend that you guys
take a look at

46
00:08:25,630 --> 00:08:27,530
that and get it started.

47
00:08:27,530 --> 00:08:30,985
As a perfect introduction to
this talk, if you are on and

48
00:08:30,985 --> 00:08:33,850
iPhone and you bring
up that web page,

49
00:08:33,850 --> 00:08:35,240
and it goes to sleep.

50
00:08:35,240 --> 00:08:37,640
You must refresh the page
because the website get close

51
00:08:37,640 --> 00:08:39,250
down automatically--

52
00:08:39,250 --> 00:08:42,320
perfect introduction as
to why we're here.

53
00:08:42,320 --> 00:08:44,760
I also would like to try using
it during this talk, so as

54
00:08:44,760 --> 00:08:47,100
many of you as possible can
bring it up, we'll ask some

55
00:08:47,100 --> 00:08:47,860
questions along the way.

56
00:08:47,860 --> 00:08:49,250
We'll see how it goes.

57
00:08:49,250 --> 00:08:51,060
But I think, right now, we need
a general introduction.

58
00:08:51,060 --> 00:08:52,900
That's what Henrik's here
for, so please.

59
00:08:52,900 --> 00:08:55,150
HENRIK JORETEG: All right.

60
00:08:55,150 --> 00:08:59,255
See if I can get my slides back
on the screen here maybe

61
00:08:59,255 --> 00:09:00,120
Here we go.

62
00:09:00,120 --> 00:09:01,400
OK.

63
00:09:01,400 --> 00:09:01,920
Hi, guys.

64
00:09:01,920 --> 00:09:03,280
My name is Henrik Joreteg.

65
00:09:03,280 --> 00:09:05,990
I work at a company
called &yet.

66
00:09:05,990 --> 00:09:08,810
And I've been building Real Time
web apps now for about

67
00:09:08,810 --> 00:09:10,140
four years.

68
00:09:10,140 --> 00:09:16,410
We started out using XMPP and
strophe.js and BOSH and all

69
00:09:16,410 --> 00:09:19,260
that stuff, back in the
day, long polling.

70
00:09:19,260 --> 00:09:22,110
Then WebSockets came out.

71
00:09:22,110 --> 00:09:25,620
We started messing with that,
socket.io and the like.

72
00:09:25,620 --> 00:09:28,490
Recently, I've gotten
really into WebRTC.

73
00:09:28,490 --> 00:09:30,570
I think it's useful, before we
get too into the technical

74
00:09:30,570 --> 00:09:34,460
stuff, to kind of step back a
minute and realize what this

75
00:09:34,460 --> 00:09:35,980
really does in terms
of the web.

76
00:09:35,980 --> 00:09:37,680
The web is really about
human communication.

77
00:09:37,680 --> 00:09:40,210
And so these are my kids.

78
00:09:40,210 --> 00:09:42,550
Aw.

79
00:09:42,550 --> 00:09:44,520
And they love their
grandparents.

80
00:09:44,520 --> 00:09:47,300
Problem is, their grandparents
live in Sweden.

81
00:09:47,300 --> 00:09:51,400
For those of with a typical
American geographic

82
00:09:51,400 --> 00:09:52,960
understanding, it's far away.

83
00:09:52,960 --> 00:09:57,500

84
00:09:57,500 --> 00:09:58,360
Sorry, that's low.

85
00:09:58,360 --> 00:09:59,200
I'm sorry.

86
00:09:59,200 --> 00:10:03,270
This is not this
crowd, I know.

87
00:10:03,270 --> 00:10:04,750
So we built an app called--

88
00:10:04,750 --> 00:10:08,530
Every Sunday, my kids get to
talk to my parents over an app

89
00:10:08,530 --> 00:10:11,710
we built called Talky.io,
that uses WebRTC.

90
00:10:11,710 --> 00:10:13,990
Talky.io is the first app I've
ever built that actually

91
00:10:13,990 --> 00:10:18,200
passed the mom test, meaning
my parents can use it.

92
00:10:18,200 --> 00:10:22,220
What it is, anytime you're on
the same URL, you're in the

93
00:10:22,220 --> 00:10:23,150
same conversation.

94
00:10:23,150 --> 00:10:24,230
That's all there is to it.

95
00:10:24,230 --> 00:10:27,390
So no login, no off, no
friending, nothing.

96
00:10:27,390 --> 00:10:28,350
And it's using WebRTC.

97
00:10:28,350 --> 00:10:29,700
There's nothing to install.

98
00:10:29,700 --> 00:10:31,760
It just works.

99
00:10:31,760 --> 00:10:34,880
So to me, it just serves as a
very kind of practical example

100
00:10:34,880 --> 00:10:37,955
for how, ultimately, these Real
Time technologies are

101
00:10:37,955 --> 00:10:40,050
actually bringing people
together and helping make the

102
00:10:40,050 --> 00:10:41,970
web better.

103
00:10:41,970 --> 00:10:44,010
So let's talk a little
bit about WebRTC.

104
00:10:44,010 --> 00:10:45,240
We're going to cover
other stuff too.

105
00:10:45,240 --> 00:10:47,490
But I want to focus on this a
bit because it's been kind of

106
00:10:47,490 --> 00:10:50,540
a recent focus of mine.

107
00:10:50,540 --> 00:10:54,310
WebRTC really is a lot more
than video in a browser.

108
00:10:54,310 --> 00:10:58,310
It's actually a low latency,
peer-to-peer networking.

109
00:10:58,310 --> 00:11:00,510
And that's really exciting.

110
00:11:00,510 --> 00:11:02,330
Some of the other cool examples
of what you can do

111
00:11:02,330 --> 00:11:06,510
with this technology is
the called PeerCDN.

112
00:11:06,510 --> 00:11:08,250
PeerCDN was actually built
by the same guy

113
00:11:08,250 --> 00:11:09,310
who did Google Instant.

114
00:11:09,310 --> 00:11:14,260
But it's this really cool
concept of where it actually

115
00:11:14,260 --> 00:11:17,460
uses data channels
to send files to

116
00:11:17,460 --> 00:11:19,450
other current visitors.

117
00:11:19,450 --> 00:11:22,680
So say, for instance, I'm
hosting like a simple little

118
00:11:22,680 --> 00:11:24,120
video site.

119
00:11:24,120 --> 00:11:25,430
I'm actually hosting
my own videos.

120
00:11:25,430 --> 00:11:27,520
All of a sudden, I'm on Reddit,

121
00:11:27,520 --> 00:11:28,700
and I'm getting slammed.

122
00:11:28,700 --> 00:11:31,470
So normally, that would be
expensive for bandwidth.

123
00:11:31,470 --> 00:11:34,560
But in this case, the kind of
swarm of people that are

124
00:11:34,560 --> 00:11:36,920
gathering on your site to
watch this footage can

125
00:11:36,920 --> 00:11:38,590
actually download it
from each other.

126
00:11:38,590 --> 00:11:45,480
So you kind of create this is
an ad hoc like BitTorrent

127
00:11:45,480 --> 00:11:47,455
network, which is really
fascinating.

128
00:11:47,455 --> 00:11:50,930
It's just kind of an example of
what you do with the stuff.

129
00:11:50,930 --> 00:11:58,230
Also, given recent stuff with
the NSA and with encryption,

130
00:11:58,230 --> 00:12:01,110
et cetera, et cetera, et cetera,
I actually think

131
00:12:01,110 --> 00:12:03,420
WebRTC is really important
for the web.

132
00:12:03,420 --> 00:12:04,370
It's decentralized.

133
00:12:04,370 --> 00:12:05,470
It's encrypted.

134
00:12:05,470 --> 00:12:06,950
Yes, maybe there are back
doors, who knows.

135
00:12:06,950 --> 00:12:09,990
But ultimately, this is stuff
that we should be doing.

136
00:12:09,990 --> 00:12:12,250
And it's a big win
for the web.

137
00:12:12,250 --> 00:12:13,650
So how we doing so far?

138
00:12:13,650 --> 00:12:15,790
Well, let's start
with a story.

139
00:12:15,790 --> 00:12:19,240
A year ago, at &yet,
we built att.js.

140
00:12:19,240 --> 00:12:23,750
Att.js was kind of a
demonstration used at CES by

141
00:12:23,750 --> 00:12:27,520
AT&T, to demonstrate making
and receiving actual phone

142
00:12:27,520 --> 00:12:30,910
calls in browsers, using
WebRTC, which is cool.

143
00:12:30,910 --> 00:12:33,175
We got it to work, but with
way too many caveats.

144
00:12:33,175 --> 00:12:36,370
It actually required running a
certain modified version of

145
00:12:36,370 --> 00:12:38,120
Chromium that the Ericsson
team was

146
00:12:38,120 --> 00:12:40,670
maintaining, not ideal.

147
00:12:40,670 --> 00:12:41,610
It's gotten better.

148
00:12:41,610 --> 00:12:44,480
So if you look at this, here,
what we actually have is a

149
00:12:44,480 --> 00:12:47,240
Nexus 4 running Firefox
Nightly.

150
00:12:47,240 --> 00:12:51,120
We've got a Nexus 7 running
Chrome for Android and then a

151
00:12:51,120 --> 00:12:54,570
desktop running Firefox Stable
and Chrome Stable, all in the

152
00:12:54,570 --> 00:12:56,060
same conversation at
the same time.

153
00:12:56,060 --> 00:12:58,410
So it's gotten better.

154
00:12:58,410 --> 00:13:01,250
It's available now on
some mobile devices.

155
00:13:01,250 --> 00:13:04,660
And interoperability is
improving for voice and video.

156
00:13:04,660 --> 00:13:05,170
Sweet, so we're good.

157
00:13:05,170 --> 00:13:06,010
We can all go home.

158
00:13:06,010 --> 00:13:07,663
We should just use
this, right?

159
00:13:07,663 --> 00:13:10,250
No.

160
00:13:10,250 --> 00:13:12,170
WebRTC is still quite finicky.

161
00:13:12,170 --> 00:13:14,180
And if you've tried to do
anything with it, you've

162
00:13:14,180 --> 00:13:15,550
probably discovered this.

163
00:13:15,550 --> 00:13:17,620
So just to give an example,
here's what you have to do to

164
00:13:17,620 --> 00:13:20,470
set up a video call, right
now, between two users.

165
00:13:20,470 --> 00:13:22,135
So first of all, getting
user media, it

166
00:13:22,135 --> 00:13:22,890
sounds really simple.

167
00:13:22,890 --> 00:13:25,105
You request access
to the camera and

168
00:13:25,105 --> 00:13:26,850
the microphone, right.

169
00:13:26,850 --> 00:13:27,976
You would think.

170
00:13:27,976 --> 00:13:29,870
The methods are still prefixed,
which is fine.

171
00:13:29,870 --> 00:13:31,375
I mean, that's to be expected.

172
00:13:31,375 --> 00:13:32,990
They throw very different
error types.

173
00:13:32,990 --> 00:13:35,810
So in Firefox, the error handler
that you give it will

174
00:13:35,810 --> 00:13:37,100
give you a string back.

175
00:13:37,100 --> 00:13:38,310
In Chrome, it will
give you an error

176
00:13:38,310 --> 00:13:39,520
object, as it's supposed.

177
00:13:39,520 --> 00:13:41,480
But neither quite follows a
spec, as far as telling you

178
00:13:41,480 --> 00:13:42,600
what went wrong.

179
00:13:42,600 --> 00:13:46,350
So in addition, specifying find
constraints for like,

180
00:13:46,350 --> 00:13:49,600
hey, I want a smaller video
is available, kind of with

181
00:13:49,600 --> 00:13:52,600
limited support in Chrome
and not at all in

182
00:13:52,600 --> 00:13:54,190
Firefox at the moment.

183
00:13:54,190 --> 00:13:56,930
Screen sharing, which is
actually really important for

184
00:13:56,930 --> 00:14:01,240
replacing something like Skype
or do Google Hangouts, is

185
00:14:01,240 --> 00:14:02,090
available in Chrome.

186
00:14:02,090 --> 00:14:05,740
But it's behind a flag, very
hard to detect air types,

187
00:14:05,740 --> 00:14:07,250
requires HTTPS.

188
00:14:07,250 --> 00:14:08,980
So even if you're running local
host and if you don't

189
00:14:08,980 --> 00:14:11,940
have your own self-signed cert
or something, it will just

190
00:14:11,940 --> 00:14:12,370
fail silently.

191
00:14:12,370 --> 00:14:15,000
And you won't know why.

192
00:14:15,000 --> 00:14:16,730
So as a result, what do we do?

193
00:14:16,730 --> 00:14:17,480
We create abstractions.

194
00:14:17,480 --> 00:14:21,800
So we wrote a getUserMedia model
to handle that part.

195
00:14:21,800 --> 00:14:23,320
Attaching media stream--

196
00:14:23,320 --> 00:14:26,130
so once you request media, you
have this stream object.

197
00:14:26,130 --> 00:14:28,540
And it's your job to then attach
that to, say, a video

198
00:14:28,540 --> 00:14:31,340
element or an audio element.

199
00:14:31,340 --> 00:14:32,380
This has gotten better.

200
00:14:32,380 --> 00:14:33,950
The APIs are more similar now.

201
00:14:33,950 --> 00:14:36,060
But you have to convert
it to a blob URL,

202
00:14:36,060 --> 00:14:38,320
attach it as a source.

203
00:14:38,320 --> 00:14:39,430
In Chrome, you set
autoplay to true.

204
00:14:39,430 --> 00:14:41,690
In Firefox, you attach
it and call play.

205
00:14:41,690 --> 00:14:43,960
Point is, there are
differences.

206
00:14:43,960 --> 00:14:46,770
And often, you want to mute the
user's own video, so they

207
00:14:46,770 --> 00:14:49,810
don't want echo back to
themselves, et cetera.

208
00:14:49,810 --> 00:14:52,440
So again, now, that's another
thing that should be simple

209
00:14:52,440 --> 00:14:55,920
now has become another module
that we are maintaining.

210
00:14:55,920 --> 00:15:00,050
So beyond that, the thing that
a lot of people don't

211
00:15:00,050 --> 00:15:02,980
understand about peer-to-peer
is, ultimately, you have to

212
00:15:02,980 --> 00:15:05,370
have some mechanism for
the two peers to

213
00:15:05,370 --> 00:15:06,640
discover each other.

214
00:15:06,640 --> 00:15:08,580
It's not like we just magically
know each other's

215
00:15:08,580 --> 00:15:12,180
external IPs, and we can just
send stuff directly.

216
00:15:12,180 --> 00:15:14,590
And this is not in
the spec at all.

217
00:15:14,590 --> 00:15:16,130
It's purposely left out.

218
00:15:16,130 --> 00:15:17,380
So it's totally green field.

219
00:15:17,380 --> 00:15:20,000
I actually think that's good.

220
00:15:20,000 --> 00:15:21,690
But that means, as a developer,
you have to do a

221
00:15:21,690 --> 00:15:22,240
lot more work.

222
00:15:22,240 --> 00:15:25,450
You have to help users
discover each other.

223
00:15:25,450 --> 00:15:28,430
You have to help them figure out
how to pass data messages

224
00:15:28,430 --> 00:15:31,230
directly to another user, which
is not something that's

225
00:15:31,230 --> 00:15:33,290
necessarily in the tool
belt of the average

226
00:15:33,290 --> 00:15:35,100
of JavaScript developer.

227
00:15:35,100 --> 00:15:37,910
So now you need some kind of
server technologies as well,

228
00:15:37,910 --> 00:15:39,510
to be able to handle this.

229
00:15:39,510 --> 00:15:40,860
With socket.io it's not hard.

230
00:15:40,860 --> 00:15:42,770
But it's still something
that's new

231
00:15:42,770 --> 00:15:45,220
for a lot of people.

232
00:15:45,220 --> 00:15:47,920
In addition, you have to do
some level of capabilities

233
00:15:47,920 --> 00:15:49,090
detection for certain things.

234
00:15:49,090 --> 00:15:53,340
So for example, if you do screen
sharing from Chrome, it

235
00:15:53,340 --> 00:15:55,820
won't appear for
a Firefox user.

236
00:15:55,820 --> 00:15:57,420
But there's no way that
you would know that,

237
00:15:57,420 --> 00:15:59,240
programmatically, without
specifying through the

238
00:15:59,240 --> 00:15:59,890
signaling channel.

239
00:15:59,890 --> 00:16:01,550
But hey, you've got users
in this chat, who

240
00:16:01,550 --> 00:16:03,330
are actually in Firefox.

241
00:16:03,330 --> 00:16:05,750
So there are just a few
oddities like that.

242
00:16:05,750 --> 00:16:09,430
So then, we write a
signaling server.

243
00:16:09,430 --> 00:16:11,690
So peer connection-- so this
is kind of the mother.

244
00:16:11,690 --> 00:16:15,220
This is like the thing that
does it all, right.

245
00:16:15,220 --> 00:16:16,560
This has some quirks as well.

246
00:16:16,560 --> 00:16:19,320
So first of all, they're
prefixed, which is, again, to

247
00:16:19,320 --> 00:16:20,260
be expected.

248
00:16:20,260 --> 00:16:22,850
I don't think that's
a bad thing.

249
00:16:22,850 --> 00:16:23,780
CreateDataChannel--

250
00:16:23,780 --> 00:16:26,080
so this is the data stuff that
we're going to talk about.

251
00:16:26,080 --> 00:16:28,910
This is extremely finicky
at the moment.

252
00:16:28,910 --> 00:16:31,600
So you have to pass a very
specific set of options to

253
00:16:31,600 --> 00:16:34,860
create a reliable channel versus
an unreliable channel.

254
00:16:34,860 --> 00:16:36,810
It's supposed to be reliable
true or false, but that

255
00:16:36,810 --> 00:16:40,260
doesn't actually work
in either browser.

256
00:16:40,260 --> 00:16:43,230
As I was just talking to Kyle
about, there is an upload

257
00:16:43,230 --> 00:16:46,140
limitation in the default
settings for Chrome.

258
00:16:46,140 --> 00:16:50,800
So in order to actually
get this to work--

259
00:16:50,800 --> 00:16:53,530
if you want to pass a file
around, it actually modified

260
00:16:53,530 --> 00:16:55,230
the FTP that you send.

261
00:16:55,230 --> 00:16:57,320
Tricky stuff.

262
00:16:57,320 --> 00:16:59,510
So anyway, we wrote a
wrapper for that.

263
00:16:59,510 --> 00:17:00,310
Other challenges--

264
00:17:00,310 --> 00:17:03,700
data channels are currently not
all interoperable between

265
00:17:03,700 --> 00:17:05,170
Chrome and Firefox.

266
00:17:05,170 --> 00:17:08,240
You can only do one video
stream per connection.

267
00:17:08,240 --> 00:17:10,460
And all of this is just--

268
00:17:10,460 --> 00:17:12,520
there are other browsers
that will do this.

269
00:17:12,520 --> 00:17:14,640
So it's not going to
get any better.

270
00:17:14,640 --> 00:17:17,140
WebRTC is also unique, in that,
this is actually the

271
00:17:17,140 --> 00:17:19,650
first time I know of where
browsers have to speak

272
00:17:19,650 --> 00:17:21,470
directly to each other.

273
00:17:21,470 --> 00:17:22,480
There's no intermediary.

274
00:17:22,480 --> 00:17:25,230
So once you set up a signaling
channel, they better be

275
00:17:25,230 --> 00:17:25,570
interoperable.

276
00:17:25,570 --> 00:17:27,859
And that's a whole new level
of spec compliance that's

277
00:17:27,859 --> 00:17:30,520
required, in order to
make that work.

278
00:17:30,520 --> 00:17:33,630
And I can only imagine how
interesting it will be if

279
00:17:33,630 --> 00:17:36,140
Microsoft and Internet
Explorer decide

280
00:17:36,140 --> 00:17:38,840
to do this as well.

281
00:17:38,840 --> 00:17:41,400
So I wrote a library
SimpleWebRTC.

282
00:17:41,400 --> 00:17:43,520
Just basically, you provide
a container for local.

283
00:17:43,520 --> 00:17:45,840
You provide a container
for remote videos.

284
00:17:45,840 --> 00:17:48,305
And when it's ready, you join
the room, and it works.

285
00:17:48,305 --> 00:17:50,280
It makes a bunch of assumption,
but this is the

286
00:17:50,280 --> 00:17:51,900
kind of stuff you need, in order
to actually make this

287
00:17:51,900 --> 00:17:53,480
approachable.

288
00:17:53,480 --> 00:17:54,820
There's alternatives,
obviously.

289
00:17:54,820 --> 00:17:58,860
There's PeerJS, focused on
data channels, OpenTok.

290
00:17:58,860 --> 00:18:01,060
And then there's another guy
who's done a bunch of

291
00:18:01,060 --> 00:18:02,340
interesting experiments.

292
00:18:02,340 --> 00:18:05,440
I'm kind of running
out of time here.

293
00:18:05,440 --> 00:18:09,320
Anyway, the big thing I think
that's really important is,

294
00:18:09,320 --> 00:18:11,830
tinkerability is actually what
drives adoption of new

295
00:18:11,830 --> 00:18:12,810
technologies.

296
00:18:12,810 --> 00:18:16,400
So we like to play with new
stuff, and not everybody does.

297
00:18:16,400 --> 00:18:19,350
So in the same way that jQuery
made the DOM accessible to

298
00:18:19,350 --> 00:18:21,950
lots of people, socket.io
made WebSockets

299
00:18:21,950 --> 00:18:23,770
accessible to a lot of people.

300
00:18:23,770 --> 00:18:25,790
Abstraction library, such
as simpleWebRTC--

301
00:18:25,790 --> 00:18:27,900
I don't care if it's that or
something else-- but hopefully

302
00:18:27,900 --> 00:18:31,410
makes it accessible to
more people as well.

303
00:18:31,410 --> 00:18:34,470
And we really just need more
Open Web hackers to really get

304
00:18:34,470 --> 00:18:36,810
into this stuff and build
things with it.

305
00:18:36,810 --> 00:18:38,620
If not, it's going to be
relegated into one of these

306
00:18:38,620 --> 00:18:39,850
like, hey, this would
have a nice.

307
00:18:39,850 --> 00:18:41,610
And it never actually works.

308
00:18:41,610 --> 00:18:43,730
I really think that if you
haven't been playing with

309
00:18:43,730 --> 00:18:46,500
WebRTC, get in there, built
stuff with it, make it happen.

310
00:18:46,500 --> 00:18:48,450
It's phenomenal technology.

311
00:18:48,450 --> 00:18:51,720
It just needs people
to make it work.

312
00:18:51,720 --> 00:18:55,020
So file, feedback, improve
APIs, push for

313
00:18:55,020 --> 00:18:57,480
interoperability.

314
00:18:57,480 --> 00:18:59,760
We made a little site with
the compatibility chart.

315
00:18:59,760 --> 00:19:03,200
We're also piping kind of
feedback data from actual

316
00:19:03,200 --> 00:19:06,670
humans about the quality
of the connections.

317
00:19:06,670 --> 00:19:08,320
But I encourage you
to get involved.

318
00:19:08,320 --> 00:19:10,690
Let's make the Open Web even
more awesome with WebRTC.

319
00:19:10,690 --> 00:19:12,090
Thanks, guys.

320
00:19:12,090 --> 00:19:12,770
SCOTT JENSON: Excellent.

321
00:19:12,770 --> 00:19:17,580
[APPLAUSE]

322
00:19:17,580 --> 00:19:17,940
OK.

323
00:19:17,940 --> 00:19:18,725
First is a test.

324
00:19:18,725 --> 00:19:23,490
Can we bring up the moderator
screen again?

325
00:19:23,490 --> 00:19:24,260
OK.

326
00:19:24,260 --> 00:19:24,850
I want to see.

327
00:19:24,850 --> 00:19:26,390
We have quite a bit of people
connected right now.

328
00:19:26,390 --> 00:19:28,020
Let's just do a quick test.

329
00:19:28,020 --> 00:19:30,840
How many of you would
be lying if you said

330
00:19:30,840 --> 00:19:34,090
you liked the talk?

331
00:19:34,090 --> 00:19:35,360
This is a test.

332
00:19:35,360 --> 00:19:38,140
I just want to see.

333
00:19:38,140 --> 00:19:39,650
It was just a logic
question, guys.

334
00:19:39,650 --> 00:19:42,890
Work with me here.

335
00:19:42,890 --> 00:19:43,580
Excellent.

336
00:19:43,580 --> 00:19:45,520
Good, I just wanted to see if
we've got lots of numbers.

337
00:19:45,520 --> 00:19:46,410
That's all I wanted to see.

338
00:19:46,410 --> 00:19:50,340
So OK, now that's working, I
would like to follow what

339
00:19:50,340 --> 00:19:52,440
Steve said, which is to have
each person take about 60

340
00:19:52,440 --> 00:19:55,050
seconds to say any comments,
things you'd like to add onto

341
00:19:55,050 --> 00:19:56,140
Henrik's introductory talk.

342
00:19:56,140 --> 00:19:58,958
So if we start with Martyn--

343
00:19:58,958 --> 00:20:00,360
MARTYN LOUGHRAN: Is
this working?

344
00:20:00,360 --> 00:20:01,045
SCOTT JENSON: Yeah.

345
00:20:01,045 --> 00:20:04,200
MARTYN LOUGHRAN: So Henrik
has dome some

346
00:20:04,200 --> 00:20:05,340
great work on WebRTC.

347
00:20:05,340 --> 00:20:07,740
And it's very interesting,
especially the data channel

348
00:20:07,740 --> 00:20:09,860
stuff, in my opinion.

349
00:20:09,860 --> 00:20:12,750
But I think we shouldn't
forget about other

350
00:20:12,750 --> 00:20:16,255
technologies, WebSockets
is only two years old.

351
00:20:16,255 --> 00:20:17,930
It's only just now
becoming really

352
00:20:17,930 --> 00:20:19,670
available in a lot of browsers.

353
00:20:19,670 --> 00:20:22,080
And there's a huge amount of
stuff we can do the TCP

354
00:20:22,080 --> 00:20:24,610
connection to the browser.

355
00:20:24,610 --> 00:20:26,126
SCOTT JENSON: OK, Rob.

356
00:20:26,126 --> 00:20:28,700
ROB HAWKES: Yes, there's not a
huge amount to add to that.

357
00:20:28,700 --> 00:20:31,450
But from my point of view, I
think what's most interesting,

358
00:20:31,450 --> 00:20:33,470
particularly with WebRTC,
is the use

359
00:20:33,470 --> 00:20:34,980
beyond audio and video.

360
00:20:34,980 --> 00:20:39,390
So I'm keen to discuss a bit
more into those kind of use

361
00:20:39,390 --> 00:20:43,440
cases, perhaps games, the CDN
stuff and just hearing a bit

362
00:20:43,440 --> 00:20:46,360
more about what's next.

363
00:20:46,360 --> 00:20:47,780
I mean, we have the
implementation today.

364
00:20:47,780 --> 00:20:48,950
And yes, there are isssues
with that.

365
00:20:48,950 --> 00:20:51,000
But what could we do next
to make things better?

366
00:20:51,000 --> 00:20:52,140
SCOTT JENSON: Excellent.

367
00:20:52,140 --> 00:20:52,627
John--

368
00:20:52,627 --> 00:20:56,330
JOHN FALLOWS: Yes, so I agree
with the point made earlier

369
00:20:56,330 --> 00:20:59,310
about other technologies being
highly relevant here.

370
00:20:59,310 --> 00:21:02,200
I think they're each set out to
solve different problems.

371
00:21:02,200 --> 00:21:06,690
And the point about signaling
channels, I think, going

372
00:21:06,690 --> 00:21:09,640
through a server intermediary,
technologies like WebSockets

373
00:21:09,640 --> 00:21:11,250
are ideally suited to that.

374
00:21:11,250 --> 00:21:13,700
And WebRTC, of course, is
ideally targeted at the

375
00:21:13,700 --> 00:21:15,270
peer-to-peer direct
connectivity.

376
00:21:15,270 --> 00:21:18,310
So I see it as a very powerful
blend of technologies as the

377
00:21:18,310 --> 00:21:19,690
web evolves, going forward.

378
00:21:19,690 --> 00:21:20,600
WESLEY HALES And Wesley--

379
00:21:20,600 --> 00:21:24,385
WESLEY HALES Yes, I see the
centralized part is little--

380
00:21:24,385 --> 00:21:25,590
we've got to get past that.

381
00:21:25,590 --> 00:21:29,310
But for instance, for this tool,
all the remotes you're

382
00:21:29,310 --> 00:21:31,030
holding in your hand, it would
be cool if we could pull up

383
00:21:31,030 --> 00:21:33,430
WebRTC to use the mic.

384
00:21:33,430 --> 00:21:35,660
And that way, you wouldn't have
people running around

385
00:21:35,660 --> 00:21:36,430
handing mics out.

386
00:21:36,430 --> 00:21:40,060
So there are so many use cases,
so many possibilities.

387
00:21:40,060 --> 00:21:41,360
SCOTT JENSON: Excellent.

388
00:21:41,360 --> 00:21:44,570
OK, I think we'd like to move
to our first question.

389
00:21:44,570 --> 00:21:46,860
I think that's Andrew Betts,
if you'd like to--

390
00:21:46,860 --> 00:21:52,172

391
00:21:52,172 --> 00:21:53,930
Do we have a microphone
for Andrew?

392
00:21:53,930 --> 00:21:55,910
ANDREW BETTS: I've actually
got the lapel mic.

393
00:21:55,910 --> 00:21:57,575
So I should be fine.

394
00:21:57,575 --> 00:22:00,780

395
00:22:00,780 --> 00:22:01,710
I've got 100 notes here.

396
00:22:01,710 --> 00:22:05,080
So just bear with me
a second, right.

397
00:22:05,080 --> 00:22:07,630
So WebSockets and other Real
Time protocols are commonly

398
00:22:07,630 --> 00:22:09,270
blocked by corporate
proxies and

399
00:22:09,270 --> 00:22:11,040
content inspection firewalls.

400
00:22:11,040 --> 00:22:13,950
And that's a particular problem
for the sort of

401
00:22:13,950 --> 00:22:15,910
customers that we
have at the FT.

402
00:22:15,910 --> 00:22:17,940
How much is this a stifling
adoption?

403
00:22:17,940 --> 00:22:19,711
And what can we do about it?

404
00:22:19,711 --> 00:22:21,600
SCOTT JENSON: Would anyone
like to take that?

405
00:22:21,600 --> 00:22:22,370
OK, John.

406
00:22:22,370 --> 00:22:26,100
JOHN FALLOWS: So I think, just
taking a little step back into

407
00:22:26,100 --> 00:22:30,130
history, when WebSocket was
first added to the HTML5

408
00:22:30,130 --> 00:22:33,010
specification, it wasn't
even called WebSocket.

409
00:22:33,010 --> 00:22:35,190
It was called TCP connection.

410
00:22:35,190 --> 00:22:38,960
And when we saw that show up, we
decided to hop on that and

411
00:22:38,960 --> 00:22:42,340
try to improve the protocol,
to make it web-centric and

412
00:22:42,340 --> 00:22:44,190
bring HTTP to bear.

413
00:22:44,190 --> 00:22:46,230
So it's actually a
web-compatible handshake.

414
00:22:46,230 --> 00:22:49,490
And the reason that we did that
was to avoid tripping

415
00:22:49,490 --> 00:22:51,400
over some of the problems we've
seen before on plug-in

416
00:22:51,400 --> 00:22:53,130
technologies getting defeated
by corporate firewalls.

417
00:22:53,130 --> 00:22:56,230
So we felt that was a huge step
in the right direction.

418
00:22:56,230 --> 00:23:00,010
Now, even given that, we still
find situations where, even

419
00:23:00,010 --> 00:23:03,481
though all the traffic might be
over port 80 and 443, even

420
00:23:03,481 --> 00:23:05,780
with recrypting firewalls and
things like that, that they

421
00:23:05,780 --> 00:23:07,590
can still intercept.

422
00:23:07,590 --> 00:23:09,260
But it's definitely a much
better situation

423
00:23:09,260 --> 00:23:09,910
than it used to be.

424
00:23:09,910 --> 00:23:13,270
And in our particular case, at
Kaazing, we've implemented

425
00:23:13,270 --> 00:23:17,440
some heavy lifting on the
emulation side, to even be

426
00:23:17,440 --> 00:23:20,000
resilient in those situations.

427
00:23:20,000 --> 00:23:23,180
Initially, we wrote the
emulation stuff to kind of

428
00:23:23,180 --> 00:23:26,240
precede the adoption of the
standard, so we could get

429
00:23:26,240 --> 00:23:29,110
started with WebSocket
architectures,

430
00:23:29,110 --> 00:23:30,240
over five years ago.

431
00:23:30,240 --> 00:23:34,020
But moving forward, it tends
to become something that's

432
00:23:34,020 --> 00:23:36,940
still there to support older
clients but also to address

433
00:23:36,940 --> 00:23:38,060
any introduce intermediaries
that might be

434
00:23:38,060 --> 00:23:38,670
getting in the way.

435
00:23:38,670 --> 00:23:40,120
SCOTT JENSON: Are you saying
it's not a problem?

436
00:23:40,120 --> 00:23:41,045
Or it's easy to work around?

437
00:23:41,045 --> 00:23:45,460
JOHN FALLOWS: On the vanilla RFC
support for the protocol,

438
00:23:45,460 --> 00:23:47,660
encryption is a big help.

439
00:23:47,660 --> 00:23:49,740
But even in those situations,
there can be intermediaries

440
00:23:49,740 --> 00:23:52,065
that will decrypt and recrypt
on the critical path and can

441
00:23:52,065 --> 00:23:53,270
still intercept.

442
00:23:53,270 --> 00:23:55,750
And then, there's also a many
web sockets that don't want to

443
00:23:55,750 --> 00:23:57,630
be encrypted for other
reasons, in terms of

444
00:23:57,630 --> 00:23:59,290
performance and things
like that.

445
00:23:59,290 --> 00:24:02,680
From our perspective, we've
seen it be an issue in the

446
00:24:02,680 --> 00:24:08,700
wild, for non-compliant
browsers

447
00:24:08,700 --> 00:24:09,720
trying to do emulation.

448
00:24:09,720 --> 00:24:11,520
We've found ways in our
emulation technique to address

449
00:24:11,520 --> 00:24:11,995
those shortcomings.

450
00:24:11,995 --> 00:24:14,005
SCOTT JENSON: Any
other comments?

451
00:24:14,005 --> 00:24:16,280
MARTYN LOUGHRAN: I'll just
make one little comment.

452
00:24:16,280 --> 00:24:19,930
I would say, for this
kind of audience,

453
00:24:19,930 --> 00:24:21,330
there's very little barrier.

454
00:24:21,330 --> 00:24:23,780
You can jump on with
WebSockets.

455
00:24:23,780 --> 00:24:27,180
But if you really want to
address all use cases, as John

456
00:24:27,180 --> 00:24:29,170
says, SSL does help.

457
00:24:29,170 --> 00:24:32,760
But you need to think about
other fallback strategies.

458
00:24:32,760 --> 00:24:35,620
One of the things that would
really help and we maybe could

459
00:24:35,620 --> 00:24:38,970
think about is, we
do [INAUDIBLE]

460
00:24:38,970 --> 00:24:44,550
a lot of work to try and reuse
successful transports again.

461
00:24:44,550 --> 00:24:46,880
But we don't really have enough
information about the

462
00:24:46,880 --> 00:24:49,920
browser's network connection,
to be always able to make

463
00:24:49,920 --> 00:24:51,010
connections.

464
00:24:51,010 --> 00:24:54,670
So maybe that's something we can
talk about later, how we

465
00:24:54,670 --> 00:24:56,310
can discover--

466
00:24:56,310 --> 00:24:59,990
like in the Responsive Images
discussion this morning, we

467
00:24:59,990 --> 00:25:02,630
were saying, the browser has
more information than the web

468
00:25:02,630 --> 00:25:03,300
application.

469
00:25:03,300 --> 00:25:06,100
This is a case where the web
application could do with some

470
00:25:06,100 --> 00:25:08,260
more information really.

471
00:25:08,260 --> 00:25:10,010
SCOTT JENSON: The audience
clearly likes that

472
00:25:10,010 --> 00:25:11,314
comment, by the way.

473
00:25:11,314 --> 00:25:13,835

474
00:25:13,835 --> 00:25:16,625
[AUDIENCE LAUGHING]

475
00:25:16,625 --> 00:25:18,202
That was awesome.

476
00:25:18,202 --> 00:25:20,110
WESLEY HALES OK, keep that up.

477
00:25:20,110 --> 00:25:21,040
That was awesome.

478
00:25:21,040 --> 00:25:25,020
SCOTT JENSON: One of the
comments on the Google Monitor

479
00:25:25,020 --> 00:25:27,820
said that TLS actually is an
effective way around this.

480
00:25:27,820 --> 00:25:29,790
Just any comments on
TLS a useful thing?

481
00:25:29,790 --> 00:25:31,790
MARTYN LOUGHRAN: Yes,
John just said that.

482
00:25:31,790 --> 00:25:34,020
I mean, yes, we find that.

483
00:25:34,020 --> 00:25:36,250
But unfortunately, there
are examples.

484
00:25:36,250 --> 00:25:38,820
For us, we've had schools,
for example.

485
00:25:38,820 --> 00:25:41,050
And they often block SSL.

486
00:25:41,050 --> 00:25:43,120
And they've got a kind of
a pretty bad situation.

487
00:25:43,120 --> 00:25:44,425
SCOTT JENSON: OK.

488
00:25:44,425 --> 00:25:47,130
Any other comments-- can we move
on to the next question?

489
00:25:47,130 --> 00:25:48,540
HENRIK JORETEG: Well, this
problem is very relevant to

490
00:25:48,540 --> 00:25:49,980
WebRTC as well.

491
00:25:49,980 --> 00:25:52,820
The whole concept of punching
through a firewall to get

492
00:25:52,820 --> 00:25:55,290
something that you can push
directly to an end user is

493
00:25:55,290 --> 00:25:56,280
actually really difficult.

494
00:25:56,280 --> 00:26:00,310
And this is something that the
likes of Apple and Skype have

495
00:26:00,310 --> 00:26:02,810
spent lots and lots of money
trying to solve.

496
00:26:02,810 --> 00:26:05,620
And I would really love to see
some of these technologies be

497
00:26:05,620 --> 00:26:07,580
more broadly available.

498
00:26:07,580 --> 00:26:09,110
There's a few open
source projects.

499
00:26:09,110 --> 00:26:13,490
There's a server called STUN
D. But a lot of these are

500
00:26:13,490 --> 00:26:15,170
really difficult problems.

501
00:26:15,170 --> 00:26:18,310
And I wish that they were more
openly well-documented

502
00:26:18,310 --> 00:26:21,290
solutions to dealing with this,
rather than having to,

503
00:26:21,290 --> 00:26:24,470
as a blog post that came out
yesterday did, actually try to

504
00:26:24,470 --> 00:26:26,690
decrypt what's going on with
FaceTime and what they're

505
00:26:26,690 --> 00:26:29,150
doing to multiplex ports
and all kinds of stuff.

506
00:26:29,150 --> 00:26:30,500
This is not my area
of expertise.

507
00:26:30,500 --> 00:26:32,640
But I know there are people here
who are really good at

508
00:26:32,640 --> 00:26:33,400
this stuff.

509
00:26:33,400 --> 00:26:34,980
And please, please
share your work.

510
00:26:34,980 --> 00:26:39,942
This stuff is needed, in order
to make WebRTC good.

511
00:26:39,942 --> 00:26:41,060
SCOTT JENSON: OK.

512
00:26:41,060 --> 00:26:44,160
The next question is
up by someone.

513
00:26:44,160 --> 00:26:46,460
Is it Gus Gussins?

514
00:26:46,460 --> 00:26:48,510
If we can get him
a mic, please--

515
00:26:48,510 --> 00:26:57,972

516
00:26:57,972 --> 00:26:59,760
AUDIENCE: Hi.

517
00:26:59,760 --> 00:27:02,290
There seems to be some
functional overlap between web

518
00:27:02,290 --> 00:27:05,660
circuits and WebRTC.

519
00:27:05,660 --> 00:27:07,570
When should you use
one or the other?

520
00:27:07,570 --> 00:27:11,202

521
00:27:11,202 --> 00:27:13,270
JOHN FALLOWS: I can take that.

522
00:27:13,270 --> 00:27:16,200
So the fundamental difference
of WebRTC is, it is designed

523
00:27:16,200 --> 00:27:17,800
to be peer-to-peer.

524
00:27:17,800 --> 00:27:21,660
So WebSockets, if you're
going server to client.

525
00:27:21,660 --> 00:27:26,550
That a better use for that.

526
00:27:26,550 --> 00:27:29,060
I think, really, where the
comparison comes from is the

527
00:27:29,060 --> 00:27:31,520
fact that, once you've
established a data channel,

528
00:27:31,520 --> 00:27:33,910
it's largely the same API.

529
00:27:33,910 --> 00:27:36,610
Beyond that, they're different
technologies--

530
00:27:36,610 --> 00:27:38,640
so if you're going peer-to-peer,
WebRTC, if

531
00:27:38,640 --> 00:27:42,370
you're going through a server,
then WebSockets.

532
00:27:42,370 --> 00:27:43,580
SCOTT JENSON: Yes,
go ahead, please.

533
00:27:43,580 --> 00:27:46,190
ROB HAWKES: I was going to say,
one of the other major

534
00:27:46,190 --> 00:27:48,610
differences as well, is again,
looking at beyond

535
00:27:48,610 --> 00:27:49,600
just video and audio.

536
00:27:49,600 --> 00:27:52,020
So for example, multiplayer
games--

537
00:27:52,020 --> 00:27:55,140
WebSockets and WebRTC are
incredibly different because

538
00:27:55,140 --> 00:27:56,510
one is UDP and one is TCP.

539
00:27:56,510 --> 00:27:59,010
So you have unreliable data
connections and reliable data

540
00:27:59,010 --> 00:28:03,650
connections, which just allow
for a very different way of

541
00:28:03,650 --> 00:28:06,070
doing multiplayer
communication.

542
00:28:06,070 --> 00:28:08,620
You just cannot do a
twitch-based multiplayer game

543
00:28:08,620 --> 00:28:11,140
using WebSockets, because you
have to wait for things to

544
00:28:11,140 --> 00:28:12,280
come through.

545
00:28:12,280 --> 00:28:16,520
But WebRTC is allowing us to
use technologies that we've

546
00:28:16,520 --> 00:28:17,985
been using in native
environments.

547
00:28:17,985 --> 00:28:19,250
SCOTT JENSON: You want
to jump in on that?

548
00:28:19,250 --> 00:28:20,330
HENRIK JORETEG: I was just going
to say, the support is a

549
00:28:20,330 --> 00:28:24,070
little flaky for reliable and
unreliable data channels.

550
00:28:24,070 --> 00:28:28,510
But it's part of the spec to
include both, so hopefully,

551
00:28:28,510 --> 00:28:30,735
that becomes easier
to use soon.

552
00:28:30,735 --> 00:28:32,250
MARTYN LOUGHRAN: And one of the
things I think that we're

553
00:28:32,250 --> 00:28:35,840
likely to see, as the unreliable
data channels

554
00:28:35,840 --> 00:28:40,310
become reliable is that,
actually, people will want to

555
00:28:40,310 --> 00:28:42,050
implement this on
the server side.

556
00:28:42,050 --> 00:28:45,190
And so to be able to communicate
with a game server

557
00:28:45,190 --> 00:28:48,385
via UDP from a browser is
a pretty big thing.

558
00:28:48,385 --> 00:28:50,390
JOHN FALLOWS: Yeah, I think
that's a very point.

559
00:28:50,390 --> 00:28:53,830
And also, I think we touched on
it earlier as well, about

560
00:28:53,830 --> 00:28:57,930
using WebSocket server-centric
strategies for signaling and

561
00:28:57,930 --> 00:29:02,540
set up around WebRTC, is another
interesting variant.

562
00:29:02,540 --> 00:29:05,380
One other thing I would
mention as well, in

563
00:29:05,380 --> 00:29:07,590
deployments in certain
industries, obviously, the

564
00:29:07,590 --> 00:29:10,390
security boundaries of these
things often crop up.

565
00:29:10,390 --> 00:29:13,400
So it's a very interesting
challenge to address some of

566
00:29:13,400 --> 00:29:17,770
those boundaries of where the
trust boundaries reside,

567
00:29:17,770 --> 00:29:20,530
amongst the users and amongst
the server, in a consistent

568
00:29:20,530 --> 00:29:22,825
manner, across both
technologies.

569
00:29:22,825 --> 00:29:26,190
SCOTT JENSON: Isn't there a
perception that this is like a

570
00:29:26,190 --> 00:29:28,730
classic web thing, where we've
got one standard that doesn't

571
00:29:28,730 --> 00:29:29,260
quite work?

572
00:29:29,260 --> 00:29:31,640
So we come up with another
standard that overlaps a bit.

573
00:29:31,640 --> 00:29:33,710
And it's just kind of confusing,
because they kind

574
00:29:33,710 --> 00:29:35,090
of are somewhat related.

575
00:29:35,090 --> 00:29:37,450
Or can we really say that
there's a pure vision of each

576
00:29:37,450 --> 00:29:37,970
one of these things?

577
00:29:37,970 --> 00:29:42,408
And they can both be parallel,
and it's OK.

578
00:29:42,408 --> 00:29:44,270
JOHN FALLOWS: As I said earlier,
I think these are

579
00:29:44,270 --> 00:29:47,660
complimentary technologies
that create a powerful

580
00:29:47,660 --> 00:29:49,050
combination as we
move forward.

581
00:29:49,050 --> 00:29:51,420
And I think they have
well-suited

582
00:29:51,420 --> 00:29:52,840
purposes in each way.

583
00:29:52,840 --> 00:29:58,070
I also think that, there are
certain issues, like the

584
00:29:58,070 --> 00:30:00,340
ability to successfully
navigate through these

585
00:30:00,340 --> 00:30:03,210
firewalls and proxies
on the WebRTC side.

586
00:30:03,210 --> 00:30:07,100
In some of the fallback cases
for WebRTC for reachability,

587
00:30:07,100 --> 00:30:09,285
WebSocket can potentially
lend a hand there too.

588
00:30:09,285 --> 00:30:12,150
SCOTT JENSON: Cool, excellent.

589
00:30:12,150 --> 00:30:14,630
We have another question then,
from the Matthias--

590
00:30:14,630 --> 00:30:15,880
is it Coutsman?

591
00:30:15,880 --> 00:30:20,670

592
00:30:20,670 --> 00:30:25,590
AUDIENCE: My question is, will
WebSockets protocol replace

593
00:30:25,590 --> 00:30:28,130
Server-Sent Events
in the future?

594
00:30:28,130 --> 00:30:31,260
Why must we have both specs, if
WebSockets can accomplish

595
00:30:31,260 --> 00:30:34,474
the same tasks that
SSE does and more?

596
00:30:34,474 --> 00:30:36,300
HENRIK JORETEG: I believe
there's another example of

597
00:30:36,300 --> 00:30:37,060
possible overlap.

598
00:30:37,060 --> 00:30:38,840
MARTYN LOUGHRAN: I can take
this, if you like.

599
00:30:38,840 --> 00:30:39,200
HENRIK JORETEG: Please.

600
00:30:39,200 --> 00:30:42,240
MARTYN LOUGHRAN: I would say,
the Server-Sent Events is a

601
00:30:42,240 --> 00:30:44,330
very simple protocol.

602
00:30:44,330 --> 00:30:47,370
And so I think that drives a
lot of adoption early on.

603
00:30:47,370 --> 00:30:49,800
But I think what we'll see,
especially as the WebSockets

604
00:30:49,800 --> 00:30:54,680
spec gets more widely adopted
and a lot of some of the

605
00:30:54,680 --> 00:30:56,680
missing features become
available, for example,

606
00:30:56,680 --> 00:30:59,850
encryption is currently possible
with Server-Sent

607
00:30:59,850 --> 00:31:00,620
Events but not WebSockets.

608
00:31:00,620 --> 00:31:03,010
HENRIK JORETEG: Bi-directional.

609
00:31:03,010 --> 00:31:04,960
MARTYN LOUGHRAN: Yes, of course,
they're an extra

610
00:31:04,960 --> 00:31:05,760
functionality.

611
00:31:05,760 --> 00:31:09,150
But I think the question is,
for just the use cases that

612
00:31:09,150 --> 00:31:13,140
one would currently use
Server-Sent Events, what's

613
00:31:13,140 --> 00:31:14,520
likely to happen.

614
00:31:14,520 --> 00:31:17,890
For example, multiplexing is
another thing that might allow

615
00:31:17,890 --> 00:31:23,360
people to use a single
connection to address many use

616
00:31:23,360 --> 00:31:24,820
cases on the page.

617
00:31:24,820 --> 00:31:27,670
JOHN FALLOWS: Just to add to
that, thinking back to you

618
00:31:27,670 --> 00:31:31,050
when we were working on the spec
on this stuff, Comet was

619
00:31:31,050 --> 00:31:33,810
the flavor of the day.

620
00:31:33,810 --> 00:31:36,090
Server-Sent Events was being
standardized as a way to

621
00:31:36,090 --> 00:31:39,930
effectively standardize Comet
behavior, several years ago.

622
00:31:39,930 --> 00:31:42,480
And around that time, WebSocket
was starting up too.

623
00:31:42,480 --> 00:31:44,710
So this exact question
came up during

624
00:31:44,710 --> 00:31:46,200
standardization process.

625
00:31:46,200 --> 00:31:49,530
And apart from the points that
have been made already, one of

626
00:31:49,530 --> 00:31:54,090
the overarching arguments that
was left was that, by having a

627
00:31:54,090 --> 00:31:58,990
simplified interaction with
Server-Sent Events, it created

628
00:31:58,990 --> 00:32:01,230
a surface area where the browser
had more control over

629
00:32:01,230 --> 00:32:02,620
the actual behavior.

630
00:32:02,620 --> 00:32:05,530
And the idea was that, on mobile
platforms, this might

631
00:32:05,530 --> 00:32:08,770
actually allow the same
abstraction to be retargeted

632
00:32:08,770 --> 00:32:11,350
at mobile-specific solutions
that didn't necessarily

633
00:32:11,350 --> 00:32:14,060
involve making a traditional
HTTP request over a

634
00:32:14,060 --> 00:32:16,410
traditional TCP connection
and getting a stream of

635
00:32:16,410 --> 00:32:19,740
information coming
back down it.

636
00:32:19,740 --> 00:32:22,620
So there are different
implementations strategies for

637
00:32:22,620 --> 00:32:23,190
the abstraction.

638
00:32:23,190 --> 00:32:26,150
If the abstraction is left
high, the versatility of

639
00:32:26,150 --> 00:32:28,560
WebSocket, obviously means that
you can cover that use

640
00:32:28,560 --> 00:32:30,501
case and many more.

641
00:32:30,501 --> 00:32:32,560
SCOTT JENSON: And Wesley, you
actually had a comment

642
00:32:32,560 --> 00:32:35,190
earlier, when we were talking
about possibly SPDY push.

643
00:32:35,190 --> 00:32:36,860
It just adds to this layering.

644
00:32:36,860 --> 00:32:37,260
WESLEY HALES: Yes.

645
00:32:37,260 --> 00:32:40,720
So the way we send data to the
client, there's bidirectional.

646
00:32:40,720 --> 00:32:41,950
There's with WebSockets.

647
00:32:41,950 --> 00:32:44,880
There's SSE.

648
00:32:44,880 --> 00:32:47,460
And now we've got HTTP
2.0 coming out.

649
00:32:47,460 --> 00:32:50,700
And we've got, right now, what
we can implement is speedy.

650
00:32:50,700 --> 00:32:52,780
And that's available.

651
00:32:52,780 --> 00:32:55,600
And I know Node and Jetty
and other servers.

652
00:32:55,600 --> 00:33:00,420
So we've got these three
options, to choose how to push

653
00:33:00,420 --> 00:33:02,270
data to the client.

654
00:33:02,270 --> 00:33:06,920
And so with HTTP 2.0, is
there going to be--

655
00:33:06,920 --> 00:33:09,600
is it going to be WebSockets
layered over SPDY?

656
00:33:09,600 --> 00:33:11,340
Is that going to be
the approach?

657
00:33:11,340 --> 00:33:13,175
Or is it going to be
pure WebSockets?

658
00:33:13,175 --> 00:33:15,910
Or is Speedy going to have a
mechanism to do bidirectional,

659
00:33:15,910 --> 00:33:17,900
like push and then also receive

660
00:33:17,900 --> 00:33:20,780
messages on one channel?

661
00:33:20,780 --> 00:33:23,700
That was kind of my question,
which I don't

662
00:33:23,700 --> 00:33:25,591
know the answer to.

663
00:33:25,591 --> 00:33:28,315
HENRIK JORETEG: Are there any
HTTP 2.0 experts in the crowd?

664
00:33:28,315 --> 00:33:29,240
SCOTT JENSON: Yeah.

665
00:33:29,240 --> 00:33:31,795
HENRIK JORETEG: That would
be really interesting.

666
00:33:31,795 --> 00:33:34,844
SCOTT JENSON: Don't be shy.

667
00:33:34,844 --> 00:33:37,340
What do you think?

668
00:33:37,340 --> 00:33:39,730
JOHN FALLOWS: Based on what I've
seen so far with SPDY,

669
00:33:39,730 --> 00:33:42,875
I'd expect it to play out where
HTTP and WebSocket go

670
00:33:42,875 --> 00:33:46,130
and parallel it with the same
enveloped SPDY connection, as

671
00:33:46,130 --> 00:33:47,470
at least an option.

672
00:33:47,470 --> 00:33:51,770
Because the to keep WebSockets
out of that would be to create

673
00:33:51,770 --> 00:33:53,970
additional resource hog on that
and the client end server

674
00:33:53,970 --> 00:33:55,360
connection for the
TCP endpoint.

675
00:33:55,360 --> 00:33:59,550
So this seems like a very
natural consequence of having

676
00:33:59,550 --> 00:34:02,180
selected an HTTP handshake to
get started on WebSocket, to

677
00:34:02,180 --> 00:34:04,695
let them all play
nicely together.

678
00:34:04,695 --> 00:34:06,420
SCOTT JENSON: Cool.

679
00:34:06,420 --> 00:34:08,570
Any other comments people
want to make about this?

680
00:34:08,570 --> 00:34:10,179
OK.

681
00:34:10,179 --> 00:34:13,580
Christopher Froelick, you've
got a question

682
00:34:13,580 --> 00:34:16,000
number four coming up.

683
00:34:16,000 --> 00:34:17,250
Christopher--

684
00:34:17,250 --> 00:34:22,227

685
00:34:22,227 --> 00:34:26,010
AUDIENCE: So the WebRTC spec
has driven centralized

686
00:34:26,010 --> 00:34:29,980
solutions, PubNub, et cetera
to a decentralized problem.

687
00:34:29,980 --> 00:34:31,429
What we do to bring a secure,

688
00:34:31,429 --> 00:34:33,420
fully-decentralized solution to bear?

689
00:34:33,420 --> 00:34:36,857

690
00:34:36,857 --> 00:34:40,460
HENRIK JORETEG: That's tricky,
because ultimately, you have

691
00:34:40,460 --> 00:34:41,579
to have some discovery
mechanism.

692
00:34:41,579 --> 00:34:43,150
Right?

693
00:34:43,150 --> 00:34:44,290
There are some attempts--

694
00:34:44,290 --> 00:34:45,800
I forget the name of
the developer now.

695
00:34:45,800 --> 00:34:49,230
There's a project where,
basically, you end up copying

696
00:34:49,230 --> 00:34:52,020
and pasting STP blobs back and
forth over whatever mechanism

697
00:34:52,020 --> 00:34:52,429
you choose.

698
00:34:52,429 --> 00:34:53,100
It could be email.

699
00:34:53,100 --> 00:34:54,330
It could be whatever.

700
00:34:54,330 --> 00:34:58,610
And it still uses STUN, ICE, and
TURN to actually connect.

701
00:34:58,610 --> 00:35:00,780
And with firewalls, I
see that going away.

702
00:35:00,780 --> 00:35:02,290
I mean, I don't know how
to solve that problem.

703
00:35:02,290 --> 00:35:03,540
I would love to see
a solution.

704
00:35:03,540 --> 00:35:07,615

705
00:35:07,615 --> 00:35:09,310
SCOTT JENSON: I want to make
sure we also encourage people

706
00:35:09,310 --> 00:35:11,720
to ask questions.

707
00:35:11,720 --> 00:35:13,630
We're running through our
questions just fine.

708
00:35:13,630 --> 00:35:16,630
But feel free to just jump in
and get on the delegate list,

709
00:35:16,630 --> 00:35:18,530
if you'd like.

710
00:35:18,530 --> 00:35:20,470
Do anybody want to add anything
to that question

711
00:35:20,470 --> 00:35:21,670
about centralized servers?

712
00:35:21,670 --> 00:35:22,130
[INAUDIBLE].

713
00:35:22,130 --> 00:35:26,360
MARTYN LOUGHRAN: I suppose one
of the questions is when do

714
00:35:26,360 --> 00:35:29,190
you need a decentralized
solution, and when do you not

715
00:35:29,190 --> 00:35:31,440
need a decentralized solution?

716
00:35:31,440 --> 00:35:35,940
I mean, I'm not quite clear
on what exactly you mean.

717
00:35:35,940 --> 00:35:40,810
What are the benefits that
you'd want to see from a

718
00:35:40,810 --> 00:35:42,060
decentralized solution?

719
00:35:42,060 --> 00:35:45,180

720
00:35:45,180 --> 00:35:48,420
AUDIENCE: So the first example
that comes to mind is video

721
00:35:48,420 --> 00:35:49,230
collaboration.

722
00:35:49,230 --> 00:35:53,530
So my family and I, we've all
got smartphones, high

723
00:35:53,530 --> 00:35:55,050
resolution cameras
in our pockets.

724
00:35:55,050 --> 00:35:58,040
And we'd like to be able to
share and collaborate on video

725
00:35:58,040 --> 00:35:58,920
together in real time.

726
00:35:58,920 --> 00:36:03,410
And the overhead in trying to
figure out where we are, out

727
00:36:03,410 --> 00:36:08,660
and back down to each other,
seems like a lot, when you

728
00:36:08,660 --> 00:36:12,760
just want a simple way to
connect people that want to.

729
00:36:12,760 --> 00:36:13,850
MARTYN LOUGHRAN: OK.

730
00:36:13,850 --> 00:36:17,110
That's a perfect example
for WebRTC.

731
00:36:17,110 --> 00:36:20,630
When you need that mean super
low latency in the UDP, you

732
00:36:20,630 --> 00:36:22,310
kind of start a communication.

733
00:36:22,310 --> 00:36:23,660
It makes perfect sense.

734
00:36:23,660 --> 00:36:25,370
HENRIK JORETEG: Well, in theory,
STUN and ICE should

735
00:36:25,370 --> 00:36:28,860
help you locate and figure out
that those they are in fact on

736
00:36:28,860 --> 00:36:32,270
the same network and then be
able to connect the two.

737
00:36:32,270 --> 00:36:33,580
That's not a complete
solution.

738
00:36:33,580 --> 00:36:34,830
But it's something.

739
00:36:34,830 --> 00:36:41,086

740
00:36:41,086 --> 00:36:41,730
AUDIENCE: Sure.

741
00:36:41,730 --> 00:36:47,450
So just to antagonize that
point a bit, if we're all

742
00:36:47,450 --> 00:36:51,620
intimately connected, say, via
mobile data, so we're not on

743
00:36:51,620 --> 00:36:53,030
the same network.

744
00:36:53,030 --> 00:36:57,440
And we're using just a plain
vanilla web app.

745
00:36:57,440 --> 00:37:03,880
There's no clear path to a
central server, necessarily,

746
00:37:03,880 --> 00:37:05,780
in a quick and easy-to-use
way.

747
00:37:05,780 --> 00:37:06,520
HENRIK JORETEG: Right.

748
00:37:06,520 --> 00:37:08,650
Now you're talking about
connecting devices that really

749
00:37:08,650 --> 00:37:09,910
are not on the same
network at all.

750
00:37:09,910 --> 00:37:13,850
And that's a whole different
type of problem, I think.

751
00:37:13,850 --> 00:37:15,510
I think that would be
awesome, but I don't

752
00:37:15,510 --> 00:37:16,940
know quite how that--

753
00:37:16,940 --> 00:37:18,875
I don't know how to
fix that one.

754
00:37:18,875 --> 00:37:22,080

755
00:37:22,080 --> 00:37:26,010
SCOTT JENSON: Kyle actually, I
believe, has got a question.

756
00:37:26,010 --> 00:37:27,510
Let's make sure that
he get the mic.

757
00:37:27,510 --> 00:37:28,760
Is he sitting over there?

758
00:37:28,760 --> 00:37:32,180

759
00:37:32,180 --> 00:37:34,600
This is a delegate, so we can
make sure we get him up there.

760
00:37:34,600 --> 00:37:37,740
AUDIENCE: So it seems like
there's two major reasons why

761
00:37:37,740 --> 00:37:39,310
centralization still happens.

762
00:37:39,310 --> 00:37:41,590
The first one is
discoverability, obviously.

763
00:37:41,590 --> 00:37:44,950
If we don't have any way for
two different people to get

764
00:37:44,950 --> 00:37:47,020
hooked up on a blind date,
then they don't know what

765
00:37:47,020 --> 00:37:48,310
restaurant to show up at.

766
00:37:48,310 --> 00:37:50,220
So somebody has to introduce
the two.

767
00:37:50,220 --> 00:37:52,600
But that seems like that should
be solvable through

768
00:37:52,600 --> 00:37:53,420
other bands.

769
00:37:53,420 --> 00:37:56,020
Like, there's been other
peer-to-peer networks, music

770
00:37:56,020 --> 00:37:58,940
sharing and BitTorrent and
other things like that.

771
00:37:58,940 --> 00:38:01,050
It seems like there should
be ways to sort

772
00:38:01,050 --> 00:38:01,850
of solve that problem.

773
00:38:01,850 --> 00:38:04,970
But there's another problem
that, one of the reasons why

774
00:38:04,970 --> 00:38:06,170
people centralize stuff
is because they

775
00:38:06,170 --> 00:38:06,960
want to bill for it.

776
00:38:06,960 --> 00:38:10,300
So when companies are creating
products around this stuff, if

777
00:38:10,300 --> 00:38:12,710
we truly completely
decentralized and everything

778
00:38:12,710 --> 00:38:15,130
was peer-to-peer, nobody would
know that was happening.

779
00:38:15,130 --> 00:38:16,580
And nobody could make
a buck off of that.

780
00:38:16,580 --> 00:38:20,400
So how do you see that sort of
tension happening, where we do

781
00:38:20,400 --> 00:38:22,150
want to get rid of
centralization, but we don't

782
00:38:22,150 --> 00:38:26,910
want to not be able to charge
for it, for instance?

783
00:38:26,910 --> 00:38:29,470
HENRIK JORETEG: I can
comment on that.

784
00:38:29,470 --> 00:38:32,320
So in my opinion, the telecoms
of the future are Google,

785
00:38:32,320 --> 00:38:34,830
Facebook, and the like.

786
00:38:34,830 --> 00:38:37,310
The old, traditional telecom
system is likely

787
00:38:37,310 --> 00:38:39,280
not to stick around.

788
00:38:39,280 --> 00:38:42,600
Somebody didn't like that.

789
00:38:42,600 --> 00:38:46,150
But really, I mean, if you think
about it, the reason

790
00:38:46,150 --> 00:38:47,900
phones are so successful and
they're so prevalent is

791
00:38:47,900 --> 00:38:49,240
because I can call anybody.

792
00:38:49,240 --> 00:38:50,170
I have an AT&T phone.

793
00:38:50,170 --> 00:38:51,690
I can call somebody
on Verizon.

794
00:38:51,690 --> 00:38:54,060
Why can't I call somebody
from Google+ on

795
00:38:54,060 --> 00:38:55,640
from my Facebook account?

796
00:38:55,640 --> 00:38:57,540
The whole concept of federation
does not currently

797
00:38:57,540 --> 00:39:00,820
really exist, in a broadly
accepted way, in the web.

798
00:39:00,820 --> 00:39:04,350
And I think the reason
is, no one is pissed.

799
00:39:04,350 --> 00:39:08,910
I think, that's something that,
if it was retroactively

800
00:39:08,910 --> 00:39:11,520
imposed on--

801
00:39:11,520 --> 00:39:12,860
now people are pissed.

802
00:39:12,860 --> 00:39:14,294
Here we go.

803
00:39:14,294 --> 00:39:16,845
ANDREW BETTS: So getting
[INAUDIBLE] web standards is a

804
00:39:16,845 --> 00:39:19,071
bunch of really angry people
getting together.

805
00:39:19,071 --> 00:39:20,030
HENRIK JORETEG: I guess.

806
00:39:20,030 --> 00:39:21,110
I don't know.

807
00:39:21,110 --> 00:39:23,220
So I don't know.

808
00:39:23,220 --> 00:39:25,630
I mean, I think that's why
there's kind of this whole

809
00:39:25,630 --> 00:39:26,700
silo effect going on.

810
00:39:26,700 --> 00:39:28,780
SCOTT JENSON: But is WebRTC
architectured

811
00:39:28,780 --> 00:39:29,680
to solve that problem?

812
00:39:29,680 --> 00:39:30,460
Is that part of the issue?

813
00:39:30,460 --> 00:39:31,000
HENRIK JORETEG: Yes.

814
00:39:31,000 --> 00:39:31,560
SCOTT JENSON: Is it solvable?

815
00:39:31,560 --> 00:39:33,660
HENRIK JORETEG: Yeah, certainly,
it's providing just

816
00:39:33,660 --> 00:39:35,550
a very base level of technology,
as far as the

817
00:39:35,550 --> 00:39:36,450
communication piece.

818
00:39:36,450 --> 00:39:43,010
But in order to actually connect
the two, you need

819
00:39:43,010 --> 00:39:44,040
other technologies on top.

820
00:39:44,040 --> 00:39:45,230
You need the discoverability
piece.

821
00:39:45,230 --> 00:39:46,190
You need the addressability.

822
00:39:46,190 --> 00:39:48,740
You need a strong identity,
so you can say,

823
00:39:48,740 --> 00:39:49,770
I am a Google user.

824
00:39:49,770 --> 00:39:53,810
You can reach me at my Google
account, that sort of thing.

825
00:39:53,810 --> 00:39:56,120
So WebRTC is one
of the pieces.

826
00:39:56,120 --> 00:39:57,200
It's not all of it.

827
00:39:57,200 --> 00:39:59,550
MARTYN LOUGHRAN: The great about
WebRTC see is that, it's

828
00:39:59,550 --> 00:40:02,520
enabling all the web developers
in the world.

829
00:40:02,520 --> 00:40:05,300
It's removing a huge number of
barriers, from being able to

830
00:40:05,300 --> 00:40:06,980
actually innovate
in that space.

831
00:40:06,980 --> 00:40:09,630
For too long, we've had
dressed-up applications that

832
00:40:09,630 --> 00:40:11,665
have not been able to.

833
00:40:11,665 --> 00:40:14,080
ROB HAWKES: I think the
discoverability side of things

834
00:40:14,080 --> 00:40:14,920
as well is a big problem.

835
00:40:14,920 --> 00:40:17,920
Because right now, it's just
sort of, like you said, up to

836
00:40:17,920 --> 00:40:19,060
developers and stuff
like that.

837
00:40:19,060 --> 00:40:20,510
And there are so many
ways to do it.

838
00:40:20,510 --> 00:40:22,850
I mean, you could manually paste
these blobs and stuff,

839
00:40:22,850 --> 00:40:23,860
which is stupid.

840
00:40:23,860 --> 00:40:25,530
But you can do it.

841
00:40:25,530 --> 00:40:29,160
But I mean, there are ways that
we need to look at how to

842
00:40:29,160 --> 00:40:31,950
better solve those kinds of
problems as well, like

843
00:40:31,950 --> 00:40:33,740
preparing devices or
things like that.

844
00:40:33,740 --> 00:40:36,030
So it's not always two people
that are trying to connect.

845
00:40:36,030 --> 00:40:39,530
It might be one person trying
to connect two devices.

846
00:40:39,530 --> 00:40:41,230
So for example, I might be
trying to connect a mobile

847
00:40:41,230 --> 00:40:43,455
device to a TV, to remote
control it.

848
00:40:43,455 --> 00:40:45,360
The discovery mechanisms for
that are going to be

849
00:40:45,360 --> 00:40:47,560
incredibly different than
connecting two people who have

850
00:40:47,560 --> 00:40:50,600
full control over processing and
can just doing a chat room

851
00:40:50,600 --> 00:40:52,160
or something.

852
00:40:52,160 --> 00:40:53,510
So those are the kind of
problems I want to

853
00:40:53,510 --> 00:40:55,100
see solve a lot more.

854
00:40:55,100 --> 00:40:56,710
And people are kind of
approaching that.

855
00:40:56,710 --> 00:40:59,070
And there's a few solutions
with trying to replicate

856
00:40:59,070 --> 00:41:02,160
things like Apple Bonjour and
stuff, in the browser and

857
00:41:02,160 --> 00:41:03,660
requesting that from the
browser vendors.

858
00:41:03,660 --> 00:41:04,920
But there has not
been significant

859
00:41:04,920 --> 00:41:05,740
traction on that yet.

860
00:41:05,740 --> 00:41:06,790
SCOTT JENSON: Well, It sounds
to me like there is going to

861
00:41:06,790 --> 00:41:08,940
be a whole topology of
applications, like an awful

862
00:41:08,940 --> 00:41:11,420
lot of websites could just put
in video chat to our tech

863
00:41:11,420 --> 00:41:11,950
support line.

864
00:41:11,950 --> 00:41:13,890
That will be a trivial thing for
them to do, because it's

865
00:41:13,890 --> 00:41:15,010
entirely through their
own stack.

866
00:41:15,010 --> 00:41:16,880
Then it's about getting
bigger.

867
00:41:16,880 --> 00:41:20,020
And are you trying say that we
need more standards for the

868
00:41:20,020 --> 00:41:21,050
bigger to happen?

869
00:41:21,050 --> 00:41:22,710
HENRIK JORETEG: These
things have existed

870
00:41:22,710 --> 00:41:23,400
for quite some time.

871
00:41:23,400 --> 00:41:26,170
XMPP is extremely stable and
extremely well used.

872
00:41:26,170 --> 00:41:28,240
And it's not something that
web developers like.

873
00:41:28,240 --> 00:41:31,000
But they've gotten really good
at solving these problems.

874
00:41:31,000 --> 00:41:33,850
And there are some efforts under
way, two specifically.

875
00:41:33,850 --> 00:41:38,170
One is stanza.io, which is
basically the attempt to give

876
00:41:38,170 --> 00:41:40,770
a clean JavaScript
API to XMPP.

877
00:41:40,770 --> 00:41:46,130
And another one is XMPP
FTW for the web.

878
00:41:46,130 --> 00:41:51,390
And thinking of things like
browser ID as a potential

879
00:41:51,390 --> 00:41:53,980
alternative to identify, to be
able to provide that strong

880
00:41:53,980 --> 00:41:54,640
identity piece.

881
00:41:54,640 --> 00:41:56,850
Because once you have that
addressability, it actually

882
00:41:56,850 --> 00:42:01,090
becomes fairly simple, in
terms of, once you know

883
00:42:01,090 --> 00:42:02,050
how to reach you.

884
00:42:02,050 --> 00:42:03,640
MARTYN LOUGHRAN: But these
solutions are all very

885
00:42:03,640 --> 00:42:07,040
heavyweight solutions, all the
XMPP, even if it has a nice

886
00:42:07,040 --> 00:42:09,520
JavaScript API one day.

887
00:42:09,520 --> 00:42:11,450
I think what Rob is talking
about is just saying, well,

888
00:42:11,450 --> 00:42:13,690
you've got two devices
next to each other.

889
00:42:13,690 --> 00:42:16,610
Can they just make it a little
kind of chirp or some video

890
00:42:16,610 --> 00:42:18,840
communication or something
like that, to

891
00:42:18,840 --> 00:42:20,045
discover each other.

892
00:42:20,045 --> 00:42:23,180
ROB HAWKES: I think we're kind
of seeing people approach

893
00:42:23,180 --> 00:42:26,160
those problems, and very, very
slightly at the moment, like

894
00:42:26,160 --> 00:42:28,430
the whole idea of using audio
to connect two devices.

895
00:42:28,430 --> 00:42:29,690
SCOTT JENSON: Boris [INAUDIBLE]
did that

896
00:42:29,690 --> 00:42:30,790
ultrasonic demo.

897
00:42:30,790 --> 00:42:32,040
Right, exactly.

898
00:42:32,040 --> 00:42:33,800
ROB HAWKES: So there are people
already exploring and,

899
00:42:33,800 --> 00:42:36,400
potentially, not exactly
in this area.

900
00:42:36,400 --> 00:42:38,710
But there are solutions
around right now.

901
00:42:38,710 --> 00:42:40,720
We've got solutions for pairing
Bluetooth devices and

902
00:42:40,720 --> 00:42:41,830
stuff like that.

903
00:42:41,830 --> 00:42:43,200
Like, there are methods
and means.

904
00:42:43,200 --> 00:42:45,540
I think we've not seen people
use them just yet.

905
00:42:45,540 --> 00:42:48,300
And we will, as people
start using WebRTC,

906
00:42:48,300 --> 00:42:49,520
beyond audio and video.

907
00:42:49,520 --> 00:42:51,942
And that will just
come in time.

908
00:42:51,942 --> 00:42:54,810
SCOTT JENSON: We've got a
question waiting, from David,

909
00:42:54,810 --> 00:42:59,260
actually, from the audience.

910
00:42:59,260 --> 00:43:00,510
David Stickler--

911
00:43:00,510 --> 00:43:03,370

912
00:43:03,370 --> 00:43:05,290
and then, we'll go on to
Natasha's question.

913
00:43:05,290 --> 00:43:08,002

914
00:43:08,002 --> 00:43:11,320
AUDIENCE: We see a rise of
security issues, where people

915
00:43:11,320 --> 00:43:14,330
are actually trying to open too
many TCP connections to a

916
00:43:14,330 --> 00:43:14,770
web server.

917
00:43:14,770 --> 00:43:17,135
And they're actually killing the
web server, by opening too

918
00:43:17,135 --> 00:43:18,220
many TCP connections.

919
00:43:18,220 --> 00:43:22,210
So people tend to actually
remove keepalive, to avoid

920
00:43:22,210 --> 00:43:22,900
these kind of issues.

921
00:43:22,900 --> 00:43:25,160
What do you think about web
circuit and security for this

922
00:43:25,160 --> 00:43:26,200
kind of problem?

923
00:43:26,200 --> 00:43:27,450
And how can we solve this?

924
00:43:27,450 --> 00:43:30,632

925
00:43:30,632 --> 00:43:35,830
JOHN FALLOWS: Well, one of the
things that was put into this,

926
00:43:35,830 --> 00:43:41,540
back towards the end of its
finalization of the standard,

927
00:43:41,540 --> 00:43:45,350
was a clarification on, what's
the maximum upper bound on the

928
00:43:45,350 --> 00:43:48,180
number of web sockets that can
hit a server at a time.

929
00:43:48,180 --> 00:43:52,130
And it was unspecified, so we
wanted to get that cleared.

930
00:43:52,130 --> 00:43:56,380
And at the time, a decision was
made to not limit it but

931
00:43:56,380 --> 00:44:00,410
also to add a caveat to that,
that only one handshake could

932
00:44:00,410 --> 00:44:01,930
be outstanding to
the same target

933
00:44:01,930 --> 00:44:03,580
server at the same time.

934
00:44:03,580 --> 00:44:08,780
So from a browser invocation
standpoint, spinning up lots

935
00:44:08,780 --> 00:44:13,220
and lots of WebSockets in rapid
succession would give

936
00:44:13,220 --> 00:44:17,280
the server an opportunity to
intercept and potentially

937
00:44:17,280 --> 00:44:21,640
detect repeated attempts, and
therefore, mitigate that.

938
00:44:21,640 --> 00:44:25,460
In general, I think things like
SPDYs and Nvelope, as we

939
00:44:25,460 --> 00:44:27,990
touched on earlier, underneath
these things, tends to

940
00:44:27,990 --> 00:44:31,580
mitigate some of that, at
the physical TCP layer.

941
00:44:31,580 --> 00:44:35,160
And also, having higher-level
abstractions on top of the

942
00:44:35,160 --> 00:44:38,660
WebSocket going forward,
that's more of like a

943
00:44:38,660 --> 00:44:40,570
publishing subscriber and
event-driven more

944
00:44:40,570 --> 00:44:42,010
architectural approach
to things.

945
00:44:42,010 --> 00:44:45,130
It allows you to partition
up the universe of

946
00:44:45,130 --> 00:44:45,810
addressability.

947
00:44:45,810 --> 00:44:48,250
So you don't just think of as
connecting directly to the

948
00:44:48,250 --> 00:44:49,995
thing you want to speak to, just
because that's the end of

949
00:44:49,995 --> 00:44:50,580
the WebSocket.

950
00:44:50,580 --> 00:44:52,320
Once you're attached to the
architecture, then you can

951
00:44:52,320 --> 00:44:54,230
reach a whole myriad
of services,

952
00:44:54,230 --> 00:44:55,565
through that same channel.

953
00:44:55,565 --> 00:44:56,892
SCOTT JENSON: Cool.

954
00:44:56,892 --> 00:44:59,570
I think the next question is
actually quite high level,

955
00:44:59,570 --> 00:45:00,640
about [INAUDIBLE].

956
00:45:00,640 --> 00:45:03,096
Natasha, if we can give
you that one--

957
00:45:03,096 --> 00:45:04,050
AUDIENCE: Thanks.

958
00:45:04,050 --> 00:45:07,020
So this question if from
an anonymous sender.

959
00:45:07,020 --> 00:45:09,230
Bandwidth throttling, especially
for multiple HD

960
00:45:09,230 --> 00:45:12,120
video streams, is extremely
hard to do properly.

961
00:45:12,120 --> 00:45:15,400
Is there any risk that WebRTC
will vary greatly by

962
00:45:15,400 --> 00:45:17,260
implementation?

963
00:45:17,260 --> 00:45:19,850
SCOTT JENSON: I think, most
likely, I'm assuming this is

964
00:45:19,850 --> 00:45:21,260
about one to one is one thing.

965
00:45:21,260 --> 00:45:24,040
If you're doing one to four, one
to five, I think it gets

966
00:45:24,040 --> 00:45:24,590
to be much harder.

967
00:45:24,590 --> 00:45:27,690
And are we going to see,
possibly, it just fall over

968
00:45:27,690 --> 00:45:30,412
because Firefox doesn't do it
as well as say, Chrome?

969
00:45:30,412 --> 00:45:32,270
HENRIK JORETEG: This
is actually--

970
00:45:32,270 --> 00:45:34,170
in my opinion, it's
two problems.

971
00:45:34,170 --> 00:45:37,260
One is, for example, Skype what
they will do, from what I

972
00:45:37,260 --> 00:45:39,700
understand, they will elect
the strongest connection.

973
00:45:39,700 --> 00:45:40,975
And it's not just connection.

974
00:45:40,975 --> 00:45:42,850
It's about the ability
to encode and decode

975
00:45:42,850 --> 00:45:43,660
video really quickly.

976
00:45:43,660 --> 00:45:46,620
So you need a strong device and
strong connection, to kind

977
00:45:46,620 --> 00:45:49,280
of be able to serve as
a rebroadcaster.

978
00:45:49,280 --> 00:45:51,110
And currently, that's kind
of part of the spec.

979
00:45:51,110 --> 00:45:52,550
But it's not really there yet.

980
00:45:52,550 --> 00:45:54,990
Like, if you take a media
stream from one user and

981
00:45:54,990 --> 00:45:57,630
attach it to another, it
just doesn't work.

982
00:45:57,630 --> 00:46:00,840
And that's absolutely crucial
for the stuff to be able to be

983
00:46:00,840 --> 00:46:05,080
usable for handling these other
interesting network

984
00:46:05,080 --> 00:46:05,610
topologies.

985
00:46:05,610 --> 00:46:09,420
Mesh is only good for so many,
because you're uploading your

986
00:46:09,420 --> 00:46:12,120
video to each person that you're
connected to and so is

987
00:46:12,120 --> 00:46:12,820
everybody else.

988
00:46:12,820 --> 00:46:16,274
So your upload bandwidth becomes
a huge bottleneck.

989
00:46:16,274 --> 00:46:18,610
SCOTT JENSON: And didn't you
say that WebRTC doesn't

990
00:46:18,610 --> 00:46:19,610
throttle down?

991
00:46:19,610 --> 00:46:22,340
HENRIK JORETEG: So yeah, there
needs to be control mechanisms

992
00:46:22,340 --> 00:46:23,290
for adjusting bandwidth.

993
00:46:23,290 --> 00:46:25,440
And they just are not in place,
as far as I can tell.

994
00:46:25,440 --> 00:46:26,835
Nothing I've tried has worked.

995
00:46:26,835 --> 00:46:30,250
SCOTT JENSON: Well, I actually
was working at a video

996
00:46:30,250 --> 00:46:30,780
conferencing company.

997
00:46:30,780 --> 00:46:32,790
And that was probably the
biggest aspect of our secret

998
00:46:32,790 --> 00:46:35,500
sauce, to throttle bandwidth
properly.

999
00:46:35,500 --> 00:46:38,780
So WebRTC isn't thinking about
it, it seems like it's kind of

1000
00:46:38,780 --> 00:46:39,970
heading for a bit of
a train wreck.

1001
00:46:39,970 --> 00:46:41,300
HENRIK JORETEG: I don't think
it's not thinking about it.

1002
00:46:41,300 --> 00:46:42,510
I think it's just, the
implementations

1003
00:46:42,510 --> 00:46:43,840
aren't quite there yet.

1004
00:46:43,840 --> 00:46:45,700
That's my impression.

1005
00:46:45,700 --> 00:46:47,620
I've kind of raised it to some
of the Google folks who are

1006
00:46:47,620 --> 00:46:48,740
working on this stuff.

1007
00:46:48,740 --> 00:46:50,280
And that's kind of the
answer I get back.

1008
00:46:50,280 --> 00:46:51,660
It's like, yeah, we know
this is a thing

1009
00:46:51,660 --> 00:46:52,560
we've got to deal with.

1010
00:46:52,560 --> 00:46:54,350
I mean, Google Hangouts,
they're well aware.

1011
00:46:54,350 --> 00:46:55,810
There's a low bandwidth
mode for that.

1012
00:46:55,810 --> 00:46:57,940
And we need to be able to do
the same kinds of things,

1013
00:46:57,940 --> 00:47:01,070
without re-requesting a
smaller video size.

1014
00:47:01,070 --> 00:47:02,980
We need to be able to just kind
of adjust them, based on

1015
00:47:02,980 --> 00:47:04,286
quality and lost packets.

1016
00:47:04,286 --> 00:47:05,490
SCOTT JENSON: Over here.

1017
00:47:05,490 --> 00:47:08,680
ROB HAWKES: This kind of problem
as well, particularly

1018
00:47:08,680 --> 00:47:11,590
the one to many kind of
bandwidth problem is

1019
00:47:11,590 --> 00:47:12,680
applicable in games as well.

1020
00:47:12,680 --> 00:47:14,710
So that's where the background
is, from my point of view.

1021
00:47:14,710 --> 00:47:17,720
But if you're building
multiplayer games, you're

1022
00:47:17,720 --> 00:47:20,090
quickly going to come
over that problem.

1023
00:47:20,090 --> 00:47:24,190
And it's not something you can
necessarily avoid in that

1024
00:47:24,190 --> 00:47:26,615
circumstance, because you have
to be communicating out to

1025
00:47:26,615 --> 00:47:28,090
these multiple players
in the game.

1026
00:47:28,090 --> 00:47:30,910
But people have solved these
problems before.

1027
00:47:30,910 --> 00:47:33,990
And there are ways to sort
of reduce the amount of

1028
00:47:33,990 --> 00:47:35,000
information you're sending.

1029
00:47:35,000 --> 00:47:37,840
So for example, in a game, you
don't send updates to people

1030
00:47:37,840 --> 00:47:40,130
that aren't necessary
in your vicinity or

1031
00:47:40,130 --> 00:47:40,900
something like that.

1032
00:47:40,900 --> 00:47:43,430
So it's not always a
technology problem.

1033
00:47:43,430 --> 00:47:46,630
It's just a creative way of
thinking about how the data is

1034
00:47:46,630 --> 00:47:48,570
being sent to all the
different people.

1035
00:47:48,570 --> 00:47:50,290
And are you sending it
to the right people?

1036
00:47:50,290 --> 00:47:51,490
There may be 100 people
in the game.

1037
00:47:51,490 --> 00:47:54,320
But there might only be two that
are actually applicable

1038
00:47:54,320 --> 00:47:56,945
and need the updates that
you're sending.

1039
00:47:56,945 --> 00:48:00,230
MARTYN LOUGHRAN: Another
separate point to that is, I

1040
00:48:00,230 --> 00:48:03,490
think we might need to-- it's
only the very early days, in

1041
00:48:03,490 --> 00:48:06,670
terms of peer-to-peer
connections on the web.

1042
00:48:06,670 --> 00:48:09,240
So if you look at, historically,
you'd have

1043
00:48:09,240 --> 00:48:14,120
clients like Skype that are open
for many hours, unstable

1044
00:48:14,120 --> 00:48:15,270
broadband connections.

1045
00:48:15,270 --> 00:48:18,080
What happens, for example, on
battery life on a mobile

1046
00:48:18,080 --> 00:48:21,070
device, when suddenly, you've
got four different

1047
00:48:21,070 --> 00:48:21,600
connections.

1048
00:48:21,600 --> 00:48:23,760
And it's sending the data four
times, sending the video to

1049
00:48:23,760 --> 00:48:25,620
four different clients.

1050
00:48:25,620 --> 00:48:27,690
And you said earlier about
strong peers--

1051
00:48:27,690 --> 00:48:29,540
is that actually realistic
on the web?

1052
00:48:29,540 --> 00:48:32,800
I mean, are tabs open
long enough

1053
00:48:32,800 --> 00:48:34,730
for that to be realistic?

1054
00:48:34,730 --> 00:48:36,490
I don't know the answer
to these questions.

1055
00:48:36,490 --> 00:48:38,370
WESLEY HALES: Yeah, it's
a big push too.

1056
00:48:38,370 --> 00:48:42,550
I mean, you have around 50
people connected here, all day

1057
00:48:42,550 --> 00:48:44,650
long, using a WebSocket
connection.

1058
00:48:44,650 --> 00:48:45,940
And I mean, let's see.

1059
00:48:45,940 --> 00:48:48,300
My battery life, I've
got about 25% left.

1060
00:48:48,300 --> 00:48:52,090
So this is the same thing.

1061
00:48:52,090 --> 00:48:52,880
People are connected.

1062
00:48:52,880 --> 00:48:56,080
They're using this protocol
all day long at this

1063
00:48:56,080 --> 00:48:56,630
conference.

1064
00:48:56,630 --> 00:48:59,090
And it's draining the battery.

1065
00:48:59,090 --> 00:49:01,380
MARTYN LOUGHRAN: And that's
one to one, to a server.

1066
00:49:01,380 --> 00:49:04,780
What happens if it's a one to
many, with a WebRTC data

1067
00:49:04,780 --> 00:49:05,170
connection?

1068
00:49:05,170 --> 00:49:06,722
WESLEY HALES: Right.

1069
00:49:06,722 --> 00:49:08,890
HENRIK JORETEG: It also takes
a lot of power to encode and

1070
00:49:08,890 --> 00:49:12,780
decode video that fast and to do
it with multiple people at

1071
00:49:12,780 --> 00:49:13,300
the same time.

1072
00:49:13,300 --> 00:49:15,950
So that's a huge drain
on power right there.

1073
00:49:15,950 --> 00:49:18,280
I know my laptop fans start
going crazy, when I'm testing

1074
00:49:18,280 --> 00:49:19,300
with like five people.

1075
00:49:19,300 --> 00:49:21,440
So it's a big problem.

1076
00:49:21,440 --> 00:49:23,320
MARTYN LOUGHRAN: And this seems
to be back to the kind

1077
00:49:23,320 --> 00:49:25,000
of discussion this morning
about images.

1078
00:49:25,000 --> 00:49:29,060
I mean, for Real Time Data, do
we need to change the way to

1079
00:49:29,060 --> 00:49:31,610
the data is delivered for
someone who's batter is

1080
00:49:31,610 --> 00:49:35,232
constrained versus a PC?

1081
00:49:35,232 --> 00:49:37,110
HENRIK JORETEG: Yeah, I could
see the same thing, for

1082
00:49:37,110 --> 00:49:39,125
responsive video, essentially.

1083
00:49:39,125 --> 00:49:40,900
ROB HAWKES: Again, this
comes back to games.

1084
00:49:40,900 --> 00:49:43,450
These kind of problems are being
solved in games, in the

1085
00:49:43,450 --> 00:49:46,820
way you sort throttle the
communication, depending on

1086
00:49:46,820 --> 00:49:48,980
the bandwidth capabilities
of each person

1087
00:49:48,980 --> 00:49:49,760
and stuff like that.

1088
00:49:49,760 --> 00:49:52,710
So there's a lot of lessons
we can take

1089
00:49:52,710 --> 00:49:53,530
from things like games.

1090
00:49:53,530 --> 00:49:57,440
And this is why I'm so adamant
on not focusing so much on

1091
00:49:57,440 --> 00:49:58,160
audio and video.

1092
00:49:58,160 --> 00:50:00,410
Although, yes, that is the
use case right now.

1093
00:50:00,410 --> 00:50:03,040
Some of the problems that we're
approaching are being

1094
00:50:03,040 --> 00:50:04,870
solved or being looked
at in other areas.

1095
00:50:04,870 --> 00:50:07,290
And I think it's just
interlinking the two and

1096
00:50:07,290 --> 00:50:09,750
trying to sort of combine them
and come up with a solution.

1097
00:50:09,750 --> 00:50:11,640
SCOTT JENSON: I am surprised
that, maybe as a web

1098
00:50:11,640 --> 00:50:13,480
community, we always kind of
wring our hands a little bit

1099
00:50:13,480 --> 00:50:15,920
about saying, everybody and
inclusiveness and so forth.

1100
00:50:15,920 --> 00:50:19,710
And Sugar Crush doesn't give
a damn about battery life.

1101
00:50:19,710 --> 00:50:21,610
they're just like, you want to
play it, then just plug the

1102
00:50:21,610 --> 00:50:22,780
damn thing in, right.

1103
00:50:22,780 --> 00:50:24,350
And now, I'm not saying
that's correct.

1104
00:50:24,350 --> 00:50:26,660
But to a certain extent, the
native community kind of

1105
00:50:26,660 --> 00:50:28,270
washes their hands of
this a little bit.

1106
00:50:28,270 --> 00:50:31,570
Are we trying too hard,
just saying?

1107
00:50:31,570 --> 00:50:37,210

1108
00:50:37,210 --> 00:50:39,700
HENRIK JORETEG: I think enabling
mobile is really,

1109
00:50:39,700 --> 00:50:42,070
really, really important.

1110
00:50:42,070 --> 00:50:46,810
Because I think certain things
don't matter, obviously.

1111
00:50:46,810 --> 00:50:48,700
If your playing some hardcore
game, you not going to be

1112
00:50:48,700 --> 00:50:49,540
sitting there forever maybe.

1113
00:50:49,540 --> 00:50:52,160
But to not take it into
consideration when these are

1114
00:50:52,160 --> 00:50:54,100
the actual physical hardware
limitations that we're dealing

1115
00:50:54,100 --> 00:50:56,610
with, I think is selling
ourselves short.

1116
00:50:56,610 --> 00:51:01,000
JOHN FALLOWS: And I also think
it's important that you've got

1117
00:51:01,000 --> 00:51:04,080
things in place to avoid
accidentally doing it.

1118
00:51:04,080 --> 00:51:06,260
So we want to make sure that
developers aren't accidentally

1119
00:51:06,260 --> 00:51:07,780
draining their battery.

1120
00:51:07,780 --> 00:51:09,400
If it's a deliberate decision,
that's one thing.

1121
00:51:09,400 --> 00:51:12,600
But if they just happen to be
on the end of a bandwidth

1122
00:51:12,600 --> 00:51:15,160
connection that's a little less
capable, we want to be

1123
00:51:15,160 --> 00:51:15,890
able to react to that.

1124
00:51:15,890 --> 00:51:18,140
ROB HAWKES: I think that we
have. we're getting the APIs

1125
00:51:18,140 --> 00:51:19,850
to play with this kind
of stuff as well now.

1126
00:51:19,850 --> 00:51:22,320
And actually, I'm not seeing
people implementing this yet,

1127
00:51:22,320 --> 00:51:25,060
but for example, using the
battery API, and actually, if

1128
00:51:25,060 --> 00:51:27,520
the battery level is at a
certain point, changing the

1129
00:51:27,520 --> 00:51:29,540
way you're communicating
and stuff like that.

1130
00:51:29,540 --> 00:51:30,820
SCOTT JENSON: Yeah.

1131
00:51:30,820 --> 00:51:32,740
I've My point, by the way,
wasn't to seriously say, we

1132
00:51:32,740 --> 00:51:35,370
don't care but to say, it is
interesting that some apps

1133
00:51:35,370 --> 00:51:36,420
don't care.

1134
00:51:36,420 --> 00:51:38,620
And we just do seem to be a
little holier than thou

1135
00:51:38,620 --> 00:51:41,500
sometimes, which is actually
good to have that aspiration.

1136
00:51:41,500 --> 00:51:43,200
JOHN FALLOWS: I think that
may very well just be the

1137
00:51:43,200 --> 00:51:45,470
difference between thinking of
it in a platform perspective

1138
00:51:45,470 --> 00:51:47,606
versus thinking of it as an
application perspective.

1139
00:51:47,606 --> 00:51:49,206
SCOTT JENSON: Yeah, OK.

1140
00:51:49,206 --> 00:51:52,240

1141
00:51:52,240 --> 00:51:53,210
Actually, question number
six, I think

1142
00:51:53,210 --> 00:51:56,200
we've already answered.

1143
00:51:56,200 --> 00:51:59,070
I believe Steve Thayer
has a question.

1144
00:51:59,070 --> 00:52:00,645
Right here, he needs
a microphone.

1145
00:52:00,645 --> 00:52:04,830

1146
00:52:04,830 --> 00:52:06,740
AUDIENCE: Actually, I think
Rob has actually

1147
00:52:06,740 --> 00:52:08,420
just touched on this.

1148
00:52:08,420 --> 00:52:10,620
WebRTC seems to have
focused more on the

1149
00:52:10,620 --> 00:52:12,350
audio and video streams.

1150
00:52:12,350 --> 00:52:14,420
And data channels are
a special case.

1151
00:52:14,420 --> 00:52:16,710
Shouldn't all peer-to-peer
communication just be data

1152
00:52:16,710 --> 00:52:19,090
streams where the different data
types can be interpreted

1153
00:52:19,090 --> 00:52:20,340
as appropriate?

1154
00:52:20,340 --> 00:52:22,210

1155
00:52:22,210 --> 00:52:27,030
ROB HAWKES: Not all
peer-to-peer is--

1156
00:52:27,030 --> 00:52:30,880
how do you mean, like should
they will be the same, just

1157
00:52:30,880 --> 00:52:32,190
data channels?

1158
00:52:32,190 --> 00:52:33,050
AUDIENCE: Yeah.

1159
00:52:33,050 --> 00:52:37,192
I think the question was
sort of saying--

1160
00:52:37,192 --> 00:52:40,510
I'm just trying to find
a way to rephrase it.

1161
00:52:40,510 --> 00:52:44,020

1162
00:52:44,020 --> 00:52:45,750
Most of the panel has just
purely been talking about

1163
00:52:45,750 --> 00:52:46,540
audio and video.

1164
00:52:46,540 --> 00:52:50,120
But audio and video are
just a type of data.

1165
00:52:50,120 --> 00:52:52,830
OK, it has specific
characteristics.

1166
00:52:52,830 --> 00:52:55,760
Why is the focus purely focusing
on m rather than just

1167
00:52:55,760 --> 00:52:59,280
coming up with a more generic
data channel?

1168
00:52:59,280 --> 00:53:00,350
HENRIK JORETEG: I was just
going to-- a quick little

1169
00:53:00,350 --> 00:53:03,850
one-liner, I think it makes a
better demo, which is why it

1170
00:53:03,850 --> 00:53:04,520
landed first.

1171
00:53:04,520 --> 00:53:06,200
That's my opinion.

1172
00:53:06,200 --> 00:53:09,230
It's also kind of special case,
in certain ways, that

1173
00:53:09,230 --> 00:53:12,970
you're trying to negotiate
encoding types, et cetera.

1174
00:53:12,970 --> 00:53:14,520
But yeah, fundamentally,
I agree with you.

1175
00:53:14,520 --> 00:53:17,030
I think peer connections,
you're still

1176
00:53:17,030 --> 00:53:17,650
doing the same thing.

1177
00:53:17,650 --> 00:53:19,200
You establish a single
peer connection.

1178
00:53:19,200 --> 00:53:20,380
You add and remove
data channels.

1179
00:53:20,380 --> 00:53:22,360
You add and remove video
and audio channels.

1180
00:53:22,360 --> 00:53:23,390
It's still one peer
connection.

1181
00:53:23,390 --> 00:53:24,950
At least, that's the way it's
written in the spec.

1182
00:53:24,950 --> 00:53:27,150
So hopefully.

1183
00:53:27,150 --> 00:53:28,005
It's actually--

1184
00:53:28,005 --> 00:53:28,370
I don't know.

1185
00:53:28,370 --> 00:53:29,830
Go ahead.

1186
00:53:29,830 --> 00:53:31,770
ROB HAWKES: I mean,
generally, yes.

1187
00:53:31,770 --> 00:53:32,900
They are types of data.

1188
00:53:32,900 --> 00:53:35,780
But the media streaming is
incredibly different and much

1189
00:53:35,780 --> 00:53:37,510
more complicated than
just sending sort

1190
00:53:37,510 --> 00:53:38,910
of basic data across.

1191
00:53:38,910 --> 00:53:40,980
So there is a reason why
they are separated.

1192
00:53:40,980 --> 00:53:43,930
But I truly do think that the
data channel side of things,

1193
00:53:43,930 --> 00:53:47,090
like sending generic, non-audio,
non-video kind of

1194
00:53:47,090 --> 00:53:50,220
data is where WebRTC has an
incredible amount of strength

1195
00:53:50,220 --> 00:53:52,370
and where we're not really
focusing on yet.

1196
00:53:52,370 --> 00:53:55,480
So right now, we're not
exploring that too much.

1197
00:53:55,480 --> 00:53:58,600
But I'm very interested to
see how that is exposed.

1198
00:53:58,600 --> 00:54:01,460
Because audio and video is
the interesting thing.

1199
00:54:01,460 --> 00:54:03,250
And that's kind why WebRTC
was created.

1200
00:54:03,250 --> 00:54:04,970
And that's the exciting thing.

1201
00:54:04,970 --> 00:54:06,880
I mean, imagining be able to
call Skype from a browser.

1202
00:54:06,880 --> 00:54:09,550
That's incredible use case.

1203
00:54:09,550 --> 00:54:12,020
But it's now where do we
take that technology.

1204
00:54:12,020 --> 00:54:12,890
And what's next?

1205
00:54:12,890 --> 00:54:14,330
And I think the data
channels is where

1206
00:54:14,330 --> 00:54:15,615
that's sort of hiding.

1207
00:54:15,615 --> 00:54:17,700
MARTYN LOUGHRAN: And of
course, as far as I

1208
00:54:17,700 --> 00:54:21,890
understand, there's some thought
of bringing in other

1209
00:54:21,890 --> 00:54:24,490
media streams, not just
audio and video.

1210
00:54:24,490 --> 00:54:26,880
What about temperature
information or sensor

1211
00:54:26,880 --> 00:54:28,160
information?

1212
00:54:28,160 --> 00:54:29,640
I don't know if anything
is happening there.

1213
00:54:29,640 --> 00:54:30,260
I don't really know.

1214
00:54:30,260 --> 00:54:32,660
But I've heard it mooted
as a possibility.

1215
00:54:32,660 --> 00:54:34,340
SCOTT JENSON: Well actually,
there's one comment I wanted

1216
00:54:34,340 --> 00:54:36,720
to make, which is that, so
often, we expect these specs

1217
00:54:36,720 --> 00:54:37,210
to be perfect.

1218
00:54:37,210 --> 00:54:38,860
And if they're not perfect, we
get really upset at them.

1219
00:54:38,860 --> 00:54:40,310
Look how bad the web
is and so forth.

1220
00:54:40,310 --> 00:54:44,630
But shouldn't we just maybe cut
WebRTC and maybe others a

1221
00:54:44,630 --> 00:54:47,040
little bit of slack and say,
maybe to your point, what can

1222
00:54:47,040 --> 00:54:49,520
we do as a community, to kind
of exercise things and then

1223
00:54:49,520 --> 00:54:50,330
give some feedback.

1224
00:54:50,330 --> 00:54:51,610
What can we do just
to do that?

1225
00:54:51,610 --> 00:54:52,790
HENRIK JORETEG: I mean,
definitely.

1226
00:54:52,790 --> 00:54:55,190
I would suggest to everybody in
here, if you haven't, start

1227
00:54:55,190 --> 00:54:56,440
playing with the stuff.

1228
00:54:56,440 --> 00:54:58,840

1229
00:54:58,840 --> 00:55:00,010
It's very, very--

1230
00:55:00,010 --> 00:55:01,050
I hate the word disruptive.

1231
00:55:01,050 --> 00:55:04,610
But it's a ridiculously
disruptive technology.

1232
00:55:04,610 --> 00:55:07,410
I mean, I seriously built my
own telecom to call my mom

1233
00:55:07,410 --> 00:55:08,050
with in Sweden.

1234
00:55:08,050 --> 00:55:10,720
I mean, come on.

1235
00:55:10,720 --> 00:55:12,190
I'm not supposed to be
able to do that.

1236
00:55:12,190 --> 00:55:14,230
So this is the kind of power
that it provides you.

1237
00:55:14,230 --> 00:55:16,630
And I would love to see
everybody here really get in

1238
00:55:16,630 --> 00:55:17,880
and hacking on this stuff.

1239
00:55:17,880 --> 00:55:20,440

1240
00:55:20,440 --> 00:55:21,690
SCOTT JENSON: Stephen--

1241
00:55:21,690 --> 00:55:25,976

1242
00:55:25,976 --> 00:55:28,670
STEPHEN THAYER: Well, I guess,
just on that last point, just

1243
00:55:28,670 --> 00:55:30,650
what you said there, if we could
quickly poll the panel.

1244
00:55:30,650 --> 00:55:31,480
You say, this is awesome.

1245
00:55:31,480 --> 00:55:34,260
Like, what other use cases would
the panel have, if you

1246
00:55:34,260 --> 00:55:37,250
could each nominate a use case
for WebRTC of something cool

1247
00:55:37,250 --> 00:55:38,705
that you'd like to see
that you think

1248
00:55:38,705 --> 00:55:39,655
this technology enables?

1249
00:55:39,655 --> 00:55:40,685
SCOTT JENSON: Excellent
question.

1250
00:55:40,685 --> 00:55:43,956
Can we just go through?

1251
00:55:43,956 --> 00:55:45,350
WESLEY HALES: Video
conferencing--

1252
00:55:45,350 --> 00:55:46,600
no.

1253
00:55:46,600 --> 00:55:50,490

1254
00:55:50,490 --> 00:55:51,180
Yeah.

1255
00:55:51,180 --> 00:55:55,040
So it would be cool if the
remotes that you guys are

1256
00:55:55,040 --> 00:55:57,100
using, like I said earlier,
you could just

1257
00:55:57,100 --> 00:55:58,410
pull Get User Media.

1258
00:55:58,410 --> 00:56:00,800
And we wouldn't have
to hand you a mic.

1259
00:56:00,800 --> 00:56:02,050
You could just speak
to your phone

1260
00:56:02,050 --> 00:56:03,790
microphone and be broadcast.

1261
00:56:03,790 --> 00:56:06,440
So that would require hooking
up to the AV here.

1262
00:56:06,440 --> 00:56:08,500
It will require writing
the code to

1263
00:56:08,500 --> 00:56:10,810
handle the binary data.

1264
00:56:10,810 --> 00:56:13,456

1265
00:56:13,456 --> 00:56:18,890
And then, there's a lot of
in-room geolocation.

1266
00:56:18,890 --> 00:56:21,190
Like, there's been a lot of
investments made in companies

1267
00:56:21,190 --> 00:56:24,870
doing this lately, where you
actually can find devices in

1268
00:56:24,870 --> 00:56:31,960
the room with much greater
granularity, using a

1269
00:56:31,960 --> 00:56:33,930
geolocation API.

1270
00:56:33,930 --> 00:56:36,650
So with WebRTC, you
could say, OK.

1271
00:56:36,650 --> 00:56:40,040

1272
00:56:40,040 --> 00:56:42,180
I guess you'd have to have some
centralized mechanism.

1273
00:56:42,180 --> 00:56:44,225
But you could find out
all the people who

1274
00:56:44,225 --> 00:56:45,060
like the color blue.

1275
00:56:45,060 --> 00:56:48,280
And then, you would be able to
pull up a video chat with them

1276
00:56:48,280 --> 00:56:51,210
in this room, using that
newer technology.

1277
00:56:51,210 --> 00:56:55,030
So there are complementary
technologies, I guess, that

1278
00:56:55,030 --> 00:56:56,560
would be required for
that use case.

1279
00:56:56,560 --> 00:56:57,560
But that's an idea.

1280
00:56:57,560 --> 00:56:58,662
SCOTT JENSON: OK, John.

1281
00:56:58,662 --> 00:57:03,620
JOHN FALLOWS: Yeah, I think just
enabling the internet of

1282
00:57:03,620 --> 00:57:06,460
things, machine of things
kind of stuff.

1283
00:57:06,460 --> 00:57:09,480
Because a lot of times, with a
centralized model, we assume

1284
00:57:09,480 --> 00:57:11,760
that, even though these devices
may be talking to one

1285
00:57:11,760 --> 00:57:16,590
another, that they're actually
able to potentially mediate or

1286
00:57:16,590 --> 00:57:20,530
coordinate against a connected
server system.

1287
00:57:20,530 --> 00:57:23,930
So just not having to rely on
that always being around, but

1288
00:57:23,930 --> 00:57:26,780
still that blending these two
worlds together seamlessly, I

1289
00:57:26,780 --> 00:57:29,350
think that's a tough challenge
to do well.

1290
00:57:29,350 --> 00:57:31,020
But just raising the abstraction
a little bit, so

1291
00:57:31,020 --> 00:57:32,440
it makes these things easy.

1292
00:57:32,440 --> 00:57:34,390
And get it out of the developers
hands, who are

1293
00:57:34,390 --> 00:57:37,110
trying to solve all these
complex problems.

1294
00:57:37,110 --> 00:57:39,760
At Kaazing, we call these things
the web of things,

1295
00:57:39,760 --> 00:57:40,660
instead of the internet
of things.

1296
00:57:40,660 --> 00:57:43,270
Because we think that a lot of
the challenges that we see, in

1297
00:57:43,270 --> 00:57:46,100
trying to connect together
those IP or lower-level

1298
00:57:46,100 --> 00:57:50,650
protocols with WebRTC, that we
don't actually see so much in

1299
00:57:50,650 --> 00:57:52,770
the WebSocket because
it's web centric.

1300
00:57:52,770 --> 00:57:54,840
It's achieved by raising the
bar a little bit and

1301
00:57:54,840 --> 00:57:57,060
connecting everything together
at the web level, instead of

1302
00:57:57,060 --> 00:57:58,060
thinking at the internet
level.

1303
00:57:58,060 --> 00:57:59,080
So we say, web of things.

1304
00:57:59,080 --> 00:58:00,290
SCOTT JENSON: Cool, Henrik.

1305
00:58:00,290 --> 00:58:03,640
HENRIK JORETEG: I would love
to see peer distributed

1306
00:58:03,640 --> 00:58:05,300
rebroadcasting.

1307
00:58:05,300 --> 00:58:09,500
Why couldn't I pull up my phone
and be able to stream

1308
00:58:09,500 --> 00:58:11,860
something just off my phone
to the entire internet?

1309
00:58:11,860 --> 00:58:15,550
If you have a proper
rebroadcasting ability, where

1310
00:58:15,550 --> 00:58:19,590
a peer could relay that feed,
you could basically turn every

1311
00:58:19,590 --> 00:58:22,270
person on the planet with
a smartphone into a news

1312
00:58:22,270 --> 00:58:25,460
reporter, capable of live
broadcast, which is

1313
00:58:25,460 --> 00:58:26,530
phenomenal.

1314
00:58:26,530 --> 00:58:28,310
And again, that's
video and audio.

1315
00:58:28,310 --> 00:58:31,136
But I think that particular
one is really interesting.

1316
00:58:31,136 --> 00:58:32,880
Of course, you could do the
exact same thing with any of

1317
00:58:32,880 --> 00:58:35,360
other type of data.

1318
00:58:35,360 --> 00:58:37,955
Examples, I can't think
of anything off

1319
00:58:37,955 --> 00:58:38,940
the top of my head.

1320
00:58:38,940 --> 00:58:40,295
I've been too focused
on the video stuff.

1321
00:58:40,295 --> 00:58:40,920
SCOTT JENSON: Cool.

1322
00:58:40,920 --> 00:58:43,480
ROB HAWKES: I've got to say,
I mean, the simplest one is

1323
00:58:43,480 --> 00:58:45,970
games and how that's going to
completely change, now we've

1324
00:58:45,970 --> 00:58:47,530
got UDP and unreliable data.

1325
00:58:47,530 --> 00:58:50,700
But the second one is the web
of things, like these

1326
00:58:50,700 --> 00:58:53,600
interconnected devices and
actually having the non-human

1327
00:58:53,600 --> 00:58:57,990
interaction and devices talking
to each That's where

1328
00:58:57,990 --> 00:58:58,960
it gets really interesting.

1329
00:58:58,960 --> 00:59:01,140
We have phones powered
by JavaScript.

1330
00:59:01,140 --> 00:59:03,320
The entire operating system
is written in JavaScript.

1331
00:59:03,320 --> 00:59:04,750
That's incredible.

1332
00:59:04,750 --> 00:59:08,110
We now have Arduino devices
powered by JavaScript and

1333
00:59:08,110 --> 00:59:09,080
stuff like that.

1334
00:59:09,080 --> 00:59:11,190
And how are things
going to change?

1335
00:59:11,190 --> 00:59:13,030
And how could we use
WebRTC to see to

1336
00:59:13,030 --> 00:59:14,100
interlink those devices?

1337
00:59:14,100 --> 00:59:15,650
And what does that now
allow us to do that

1338
00:59:15,650 --> 00:59:17,690
we couldn't do before?

1339
00:59:17,690 --> 00:59:20,830
Using web technologies that
already are interoperable with

1340
00:59:20,830 --> 00:59:23,260
all of the other things that we
have available to us, like

1341
00:59:23,260 --> 00:59:26,630
the hardware APIs and just all
the other web APIs, that's

1342
00:59:26,630 --> 00:59:28,700
where things are very,
very interesting.

1343
00:59:28,700 --> 00:59:30,170
WESLEY HALES: Yeah, I
think I would just

1344
00:59:30,170 --> 00:59:31,360
reiterate that point.

1345
00:59:31,360 --> 00:59:32,620
It's enabling--

1346
00:59:32,620 --> 00:59:35,410
it's disrupting the control.

1347
00:59:35,410 --> 00:59:40,380
And when you need an ultra-low
latency connection between two

1348
00:59:40,380 --> 00:59:43,000
objects, it's now possible
for web developers

1349
00:59:43,000 --> 00:59:44,330
to build those things.

1350
00:59:44,330 --> 00:59:46,660
So you have a control
surface for a

1351
00:59:46,660 --> 00:59:47,730
quadrocopter or something.

1352
00:59:47,730 --> 00:59:49,385
You can now build that
in a web browser.

1353
00:59:49,385 --> 00:59:50,150
It's amazing.

1354
00:59:50,150 --> 00:59:52,350
SCOTT JENSON: But isn't it going
to be an issue that not

1355
00:59:52,350 --> 00:59:55,230
too many adruinos will be
running Chrome right now?

1356
00:59:55,230 --> 00:59:59,334
So how do we get WebRTC into
these lower-level devices?

1357
00:59:59,334 --> 01:00:00,930
ROB HAWKES: Someone
needs to built it.

1358
01:00:00,930 --> 01:00:01,640
SCOTT JENSON: OK.

1359
01:00:01,640 --> 01:00:03,640
I mean, I was making sure I was
following what you said.

1360
01:00:03,640 --> 01:00:05,110
Because what you said is
great, but there's no

1361
01:00:05,110 --> 01:00:06,250
immediate way for us do that.

1362
01:00:06,250 --> 01:00:06,460
Correct?

1363
01:00:06,460 --> 01:00:09,540
JOHN FALLOWS: This is a room
of developers, right?

1364
01:00:09,540 --> 01:00:10,480
Somebody can do it.

1365
01:00:10,480 --> 01:00:14,060
ROB HAWKES: This is partly why
we're asking about WebRTC on

1366
01:00:14,060 --> 01:00:15,360
the server and things
like that.

1367
01:00:15,360 --> 01:00:16,310
Once you can get it
into things like

1368
01:00:16,310 --> 01:00:17,925
node.js, then this is--

1369
01:00:17,925 --> 01:00:18,920
SCOTT JENSON: It will be huge.

1370
01:00:18,920 --> 01:00:20,550
I think we have a few
minutes left.

1371
01:00:20,550 --> 01:00:23,290
And Christopher has
been patient.

1372
01:00:23,290 --> 01:00:24,970
We'll do him and then,
I think, you.

1373
01:00:24,970 --> 01:00:26,470
OK?

1374
01:00:26,470 --> 01:00:29,421
Christopher-- no, that
Christopher.

1375
01:00:29,421 --> 01:00:31,660
AUDIENCE: So I apologize if I
sound like a broken record.

1376
01:00:31,660 --> 01:00:37,940
But as soon as just said,
enabling technology, I'm

1377
01:00:37,940 --> 01:00:39,060
brought back again
to the idea of

1378
01:00:39,060 --> 01:00:41,570
decentralizing the solutions.

1379
01:00:41,570 --> 01:00:45,280
You think of dissident
suppression,

1380
01:00:45,280 --> 01:00:46,720
say, in Arab Spring.

1381
01:00:46,720 --> 01:00:49,900
And the raw potential that
exists in the phone to

1382
01:00:49,900 --> 01:00:52,780
directly connect people.

1383
01:00:52,780 --> 01:00:54,030
Without a central network

1384
01:00:54,030 --> 01:00:55,060
connection, that isn't possible.

1385
01:00:55,060 --> 01:00:59,370
Or emergency response as
earthquakes, hurricanes take

1386
01:00:59,370 --> 01:01:01,910
out centralized communications,
it seems like

1387
01:01:01,910 --> 01:01:05,330
the technology exists to solve
to help solve these

1388
01:01:05,330 --> 01:01:07,560
communication problems.

1389
01:01:07,560 --> 01:01:09,010
It's really just a comment.

1390
01:01:09,010 --> 01:01:11,100
ROB HAWKES: That's a really
interesting problem.

1391
01:01:11,100 --> 01:01:14,450
And that's something I've not
developed for, but I've been

1392
01:01:14,450 --> 01:01:15,330
thinking about a little bit.

1393
01:01:15,330 --> 01:01:19,670
And the whole idea of creating
mesh networks out of nowhere,

1394
01:01:19,670 --> 01:01:21,880
using these technologies,
is incredibly powerful.

1395
01:01:21,880 --> 01:01:26,670
The ability to then spread
communication amongst an ad

1396
01:01:26,670 --> 01:01:28,430
hoc local network is crazy.

1397
01:01:28,430 --> 01:01:31,250
You have to get over the actual
connecting the two

1398
01:01:31,250 --> 01:01:32,290
devices together problem.

1399
01:01:32,290 --> 01:01:34,850
But if we can solve that, then
what you can actually do with

1400
01:01:34,850 --> 01:01:35,890
that is incredibly powerful.

1401
01:01:35,890 --> 01:01:37,080
MARTYN LOUGHRAN: It's kind of
like the only way you could do

1402
01:01:37,080 --> 01:01:39,890
that now is to carry around some
extra little antenna with

1403
01:01:39,890 --> 01:01:42,200
you , with an extra
power supply and

1404
01:01:42,200 --> 01:01:43,410
create your own network.

1405
01:01:43,410 --> 01:01:46,510
That would have to be standard
issue for emergencies.

1406
01:01:46,510 --> 01:01:48,590
Yeah, I mean, that's today.

1407
01:01:48,590 --> 01:01:51,450
But your phone cannot power that
kind of transmission and

1408
01:01:51,450 --> 01:01:53,180
that and that findability.

1409
01:01:53,180 --> 01:01:55,060
SCOTT JENSON: And you've been
patient, one more question.

1410
01:01:55,060 --> 01:02:00,270
AUDIENCE: I was going to say, it
doesn't seem that you need

1411
01:02:00,270 --> 01:02:05,310
a web browser, in order
to have WebRTC.

1412
01:02:05,310 --> 01:02:09,440
You could always do it through
Node or through a JavaScript

1413
01:02:09,440 --> 01:02:11,526
on chip device.

1414
01:02:11,526 --> 01:02:14,190
SCOTT JENSON: Right, it's a
simple matter of programming.

1415
01:02:14,190 --> 01:02:16,016
ROB HAWKES: It just doesn't
exist at the moment.

1416
01:02:16,016 --> 01:02:17,600
HENRIK JORETEG: There have
been some efforts.

1417
01:02:17,600 --> 01:02:18,890
There's actually a [INAUDIBLE]

1418
01:02:18,890 --> 01:02:21,060
library that attempted
to bind to libjingle.

1419
01:02:21,060 --> 01:02:23,240
And I don't quite know
the status of that.

1420
01:02:23,240 --> 01:02:24,920
It hasn't had much activity.

1421
01:02:24,920 --> 01:02:26,820
SCOTT JENSON: I think we've
got the wrap up.

1422
01:02:26,820 --> 01:02:27,580
So thank you very much.

1423
01:02:27,580 --> 01:02:29,280
If you liked the session,
please give us a vote.

1424
01:02:29,280 --> 01:02:32,580
And if you don't, just
give us a vote.

1425
01:02:32,580 --> 01:02:34,820
WESLEY HALES: Whoever is writing
the script to do like

1426
01:02:34,820 --> 01:02:39,365
50 votes, just go ahead
up that to 100.

1427
01:02:39,365 --> 01:02:39,950
SCOTT JENSON: Awesome.

1428
01:02:39,950 --> 01:02:40,610
Thanks very much.

1429
01:02:40,610 --> 01:02:51,018
[APPLAUSE]

1430
01:02:51,018 --> 01:02:53,710
JOHN FALLOWS: Good job, whoever
wrote that for loop.

1431
01:02:53,710 --> 01:02:55,900
ANDREW BETTS: Does anyone
want to admit to

1432
01:02:55,900 --> 01:02:59,360
hacking the voting system?

1433
01:02:59,360 --> 01:03:00,300
No?

1434
01:03:00,300 --> 01:03:00,705
OK.

1435
01:03:00,705 --> 01:03:02,540
WESLEY HALES: His name
is [INAUDIBLE].

1436
01:03:02,540 --> 01:03:03,780
ANDREW BETTS: His name
is [INAUDIBLE]

1437
01:03:03,780 --> 01:03:04,280
apparently.

1438
01:03:04,280 --> 01:03:05,890
OK.

1439
01:03:05,890 --> 01:03:10,840
So our next panel is
the Offline panel.

1440
01:03:10,840 --> 01:03:13,640
This is actually a panel we're
reprising from Edge 1.

1441
01:03:13,640 --> 01:03:19,380
Because we didn't fix it then,
so we're going to try again.

1442
01:03:19,380 --> 01:03:21,560
Also, a lot has change
in offline.

1443
01:03:21,560 --> 01:03:25,400
We have the solution that was
called Navigation Trawler,

1444
01:03:25,400 --> 01:03:28,830
which was then called Event
Worker, which was then called

1445
01:03:28,830 --> 01:03:29,640
Service Worker.

1446
01:03:29,640 --> 01:03:31,333
And what is it called now?

1447
01:03:31,333 --> 01:03:32,390
AUDIENCE: Service Worker.

1448
01:03:32,390 --> 01:03:34,680
ANDREW BETTS: Service
Worker, excellent.

1449
01:03:34,680 --> 01:03:38,070
So I think everyone needs a bit
of a refresher on where we

1450
01:03:38,070 --> 01:03:39,340
are with offline.

1451
01:03:39,340 --> 01:03:45,328
And so we have a great panel
of people to discuss that.

1452
01:03:45,328 --> 01:03:48,200
The chair for the session is
Jake Archibald from Google.

1453
01:03:48,200 --> 01:03:51,140
And I will hand it over to Jake,
as soon as he's ready.

1454
01:03:51,140 --> 01:03:52,468
Are you ready?

1455
01:03:52,468 --> 01:03:53,444
JAKE ARCHIBALD: Yeah.

1456
01:03:53,444 --> 01:03:55,980
And Alex, you can get set up
while I'm doing the intro.

1457
01:03:55,980 --> 01:03:56,890
Hello, everyone.

1458
01:03:56,890 --> 01:04:00,130
Welcome to the Offline panel.

1459
01:04:00,130 --> 01:04:03,210
Most of us, as web developers,
I think it's fair to say that

1460
01:04:03,210 --> 01:04:06,790
we declare, game over, when
there's no network connection

1461
01:04:06,790 --> 01:04:09,710
available or when it's faulty.

1462
01:04:09,710 --> 01:04:13,740
But if we want to compete with
the creme of native apps, then

1463
01:04:13,740 --> 01:04:15,490
having the networks
as a dependency is

1464
01:04:15,490 --> 01:04:16,850
simply not good enough.

1465
01:04:16,850 --> 01:04:21,870
But the five brave souls in
front of you today, they laugh

1466
01:04:21,870 --> 01:04:24,060
in the face of zero bars
of connectivity.

1467
01:04:24,060 --> 01:04:26,670
And they do not want your wallet
to be drained, when you

1468
01:04:26,670 --> 01:04:27,440
are roaming.

1469
01:04:27,440 --> 01:04:31,120
And they do not want to give up
on you, when your ISP has.

1470
01:04:31,120 --> 01:04:34,550
We have Matt Andrews from the
"Financial Times." We've got

1471
01:04:34,550 --> 01:04:36,040
Craig Cavalier from
LiquidFrameworks.

1472
01:04:36,040 --> 01:04:38,880
We've got Calvin Spielman
from Cactus Consulting.

1473
01:04:38,880 --> 01:04:42,720
These guys have been building
stuff with the current crop of

1474
01:04:42,720 --> 01:04:46,090
inadequate APIs that
we have on the web.

1475
01:04:46,090 --> 01:04:47,220
But they've suffered
through that.

1476
01:04:47,220 --> 01:04:49,660
So give them a hug afterwards,
because they've

1477
01:04:49,660 --> 01:04:50,990
been damaged by that.

1478
01:04:50,990 --> 01:04:54,340
But we also have Anne Van
Kesteren from Mozilla and Alex

1479
01:04:54,340 --> 01:04:55,560
Russell from Google.

1480
01:04:55,560 --> 01:04:58,010
And these guys been working on
the future APIs that are going

1481
01:04:58,010 --> 01:05:00,050
to solve of all of our
worldly problems.

1482
01:05:00,050 --> 01:05:00,850
Is that fair to say?

1483
01:05:00,850 --> 01:05:01,740
Yeah.

1484
01:05:01,740 --> 01:05:03,000
OK, that's good

1485
01:05:03,000 --> 01:05:05,080
So we're hoping that, in the
future, making a site work

1486
01:05:05,080 --> 01:05:08,460
offline is not going to be an
act of self-flagellation.

1487
01:05:08,460 --> 01:05:11,220
And on that note, Alex, I
believe you're going to

1488
01:05:11,220 --> 01:05:12,910
introduce the topic.

1489
01:05:12,910 --> 01:05:14,255
Are you good to go?

1490
01:05:14,255 --> 01:05:15,505
ALEX RUSSELL: Sure.

1491
01:05:15,505 --> 01:05:17,800

1492
01:05:17,800 --> 01:05:19,050
As Jake says, I'm Alex.

1493
01:05:19,050 --> 01:05:21,680

1494
01:05:21,680 --> 01:05:22,805
Do we have slides?

1495
01:05:22,805 --> 01:05:26,660
Did I fail at this
miserably, again?

1496
01:05:26,660 --> 01:05:27,910
So good at this--

1497
01:05:27,910 --> 01:05:33,731

1498
01:05:33,731 --> 01:05:36,910
JAKE ARCHIBALD: So yeah, we've
changed the name of the new

1499
01:05:36,910 --> 01:05:39,620
stuff a couple of
times recently.

1500
01:05:39,620 --> 01:05:42,810
It offers navigation control.

1501
01:05:42,810 --> 01:05:43,620
But it's been expanded.

1502
01:05:43,620 --> 01:05:46,270
It spent a little bit time
as Event Worker.

1503
01:05:46,270 --> 01:05:47,700
Now it's Service Worker.

1504
01:05:47,700 --> 01:05:51,340
But it has been pointed out by
Lady Ada King, on Twitter,

1505
01:05:51,340 --> 01:05:54,180
that Service Worker does sound
somewhat like the oldest

1506
01:05:54,180 --> 01:05:57,010
profession in the world.

1507
01:05:57,010 --> 01:05:58,750
So I don't know.

1508
01:05:58,750 --> 01:06:00,780
We kind of thought maybe
Service Controller.

1509
01:06:00,780 --> 01:06:02,230
but does that sound
like a pimp?

1510
01:06:02,230 --> 01:06:04,130
I don't know.

1511
01:06:04,130 --> 01:06:06,190
But then App Pimp, that's
pretty cool.

1512
01:06:06,190 --> 01:06:07,930
We all want to use
an App Pimp.

1513
01:06:07,930 --> 01:06:10,500
So maybe we'll go with
that, pimp our apps.

1514
01:06:10,500 --> 01:06:12,450
That could be cool.

1515
01:06:12,450 --> 01:06:14,040
So yeah, we're going to have
to find a name for it that

1516
01:06:14,040 --> 01:06:16,860
doesn't evoke that kind
of a negative thing.

1517
01:06:16,860 --> 01:06:18,790
But how are you doing, Alex?

1518
01:06:18,790 --> 01:06:20,040
Because I'm running
out of filler.

1519
01:06:20,040 --> 01:06:22,840

1520
01:06:22,840 --> 01:06:24,170
Is it because it doesn't
work offline?

1521
01:06:24,170 --> 01:06:25,420
Is that your problem?

1522
01:06:25,420 --> 01:06:29,110

1523
01:06:29,110 --> 01:06:32,460
That might actually be it.

1524
01:06:32,460 --> 01:06:37,660
ALEX RUSSELL: Yes, so as
Jake says, I am Alex.

1525
01:06:37,660 --> 01:06:39,820
And I am rescaling the
slides as we speak.

1526
01:06:39,820 --> 01:06:43,030
So I spend a lot of
time offline.

1527
01:06:43,030 --> 01:06:46,090
I most recently lived in London
before I returned to

1528
01:06:46,090 --> 01:06:46,720
San Francisco.

1529
01:06:46,720 --> 01:06:51,130
And they did something in the
tube for the Olympics, where

1530
01:06:51,130 --> 01:06:53,980
they said they were going to put
Wi-Fi in all the stations,

1531
01:06:53,980 --> 01:06:56,350
which technically speaking
is accurate.

1532
01:06:56,350 --> 01:07:00,100
They did happen to put Wi-Fi
transmitters and receivers in

1533
01:07:00,100 --> 01:07:01,820
all of the stations.

1534
01:07:01,820 --> 01:07:04,360
But one of my most frequent tube
journeys was to and from

1535
01:07:04,360 --> 01:07:06,280
airports because I spend a
lot of time on airplanes.

1536
01:07:06,280 --> 01:07:10,190
And it always seemed
really punitive.

1537
01:07:10,190 --> 01:07:13,050
Because you would get to a
station, and for about 20

1538
01:07:13,050 --> 01:07:17,090
seconds, while people were
loading and unloading, you

1539
01:07:17,090 --> 01:07:22,000
wireless, Wi-Fi radio would
be attempting to connect,

1540
01:07:22,000 --> 01:07:23,380
frantically to the thing.

1541
01:07:23,380 --> 01:07:25,900
And you'd be trying to log in
a little bit, so you could

1542
01:07:25,900 --> 01:07:27,560
just download the next--

1543
01:07:27,560 --> 01:07:27,870
no!

1544
01:07:27,870 --> 01:07:29,120
Fuck, we're moving.

1545
01:07:29,120 --> 01:07:33,560

1546
01:07:33,560 --> 01:07:36,630
So I got really good at figuring
out how to turn off

1547
01:07:36,630 --> 01:07:38,850
the Wi-Fi on my device, because
the network just

1548
01:07:38,850 --> 01:07:40,090
wasn't reliable.

1549
01:07:40,090 --> 01:07:42,690
Even when I absolutely wanted
it, I wanted to see the news.

1550
01:07:42,690 --> 01:07:44,400
I wanted to get the latest
"Times" or "Guardian" or

1551
01:07:44,400 --> 01:07:44,740
whatever it is.

1552
01:07:44,740 --> 01:07:46,560
OK, I've outed myself
as a lefty, fine.

1553
01:07:46,560 --> 01:07:49,360

1554
01:07:49,360 --> 01:07:52,720
And the end of this journey, of
course, ends you up in an

1555
01:07:52,720 --> 01:07:58,580
airport, where you are at the
whim of whoever happens to

1556
01:07:58,580 --> 01:08:03,610
have the crappy Wi-Fi in
whatever bit of hell you've

1557
01:08:03,610 --> 01:08:06,590
ended yourself up in,
with the captive

1558
01:08:06,590 --> 01:08:07,980
portal and all the rest.

1559
01:08:07,980 --> 01:08:10,370
So these are hostile network
environments.

1560
01:08:10,370 --> 01:08:12,150
And they mediate our lives.

1561
01:08:12,150 --> 01:08:15,310
I think the work environment and
the home environment are

1562
01:08:15,310 --> 01:08:18,729
special cases of how we
interact with the

1563
01:08:18,729 --> 01:08:19,520
stuff around us.

1564
01:08:19,520 --> 01:08:21,350
And it's in those environments--
the airport,

1565
01:08:21,350 --> 01:08:23,550
the tube, the ones that are
really stressful, where you're

1566
01:08:23,550 --> 01:08:24,560
trying to get some place.

1567
01:08:24,560 --> 01:08:25,310
You've got a thing.

1568
01:08:25,310 --> 01:08:26,859
Where the heck was I going?

1569
01:08:26,859 --> 01:08:28,550
What's this thing I'm trying
to do right now?

1570
01:08:28,550 --> 01:08:29,250
I don't remember.

1571
01:08:29,250 --> 01:08:31,810
I look at my phone and---

1572
01:08:31,810 --> 01:08:36,750
It's that environment that we,
as a technology stack, fail at

1573
01:08:36,750 --> 01:08:40,600
miserably, largely because we
have built ourselves the

1574
01:08:40,600 --> 01:08:44,120
assumption that what
is remote is cheap.

1575
01:08:44,120 --> 01:08:45,210
Because everything
is remote, right.

1576
01:08:45,210 --> 01:08:47,810
The web is designed around the
idea of the URL, the thing

1577
01:08:47,810 --> 01:08:49,920
that is over there, that's
cheap to do.

1578
01:08:49,920 --> 01:08:53,180
And that little, tiny anchor
tag makes it look like

1579
01:08:53,180 --> 01:08:55,740
everything is connected
to you, all the time.

1580
01:08:55,740 --> 01:08:57,899
a href is the most innocent
thing you

1581
01:08:57,899 --> 01:08:59,220
can possibly imagine.

1582
01:08:59,220 --> 01:09:01,370
And at the same time,
the implications

1583
01:09:01,370 --> 01:09:03,109
of a href are massive.

1584
01:09:03,109 --> 01:09:04,520
It says nothing about
whether or not you

1585
01:09:04,520 --> 01:09:05,649
can get to the network.

1586
01:09:05,649 --> 01:09:09,439
And the tube gives us a good
window into what it means to

1587
01:09:09,439 --> 01:09:11,189
know whether or not
you're online.

1588
01:09:11,189 --> 01:09:15,790
So we keep getting requests for
you a bandwidth property

1589
01:09:15,790 --> 01:09:16,930
in the browser.

1590
01:09:16,930 --> 01:09:18,000
Tell me what my bandwidth is.

1591
01:09:18,000 --> 01:09:20,140
Tell me what my available
bandwidth is.

1592
01:09:20,140 --> 01:09:21,510
There's no way to
actually know.

1593
01:09:21,510 --> 01:09:25,620
So if I show up at a conference
and there's a

1594
01:09:25,620 --> 01:09:27,700
captive portal to go
get me my thing.

1595
01:09:27,700 --> 01:09:29,430
My bandwidth to a thing
which does nothing I

1596
01:09:29,430 --> 01:09:31,740
want might be infinite.

1597
01:09:31,740 --> 01:09:33,920
Whereas, my bandwidth to all the
services I actually care

1598
01:09:33,920 --> 01:09:36,010
about might be negative.

1599
01:09:36,010 --> 01:09:40,770
So we find ourselves in
this situation a lot.

1600
01:09:40,770 --> 01:09:43,550
And it's very difficult from the
browser's perspective to

1601
01:09:43,550 --> 01:09:45,859
say anything meaningful
about your connection.

1602
01:09:45,859 --> 01:09:49,380
Saying something other than,
I can't do anything because

1603
01:09:49,380 --> 01:09:51,479
there's no radio turned on,
and it's not connected

1604
01:09:51,479 --> 01:09:54,240
anything, is a very difficult
call to make.

1605
01:09:54,240 --> 01:09:57,180
So we've put ourselves in a
situation on the web where

1606
01:09:57,180 --> 01:09:59,830
we've architected an entire
stack of stuff around the idea

1607
01:09:59,830 --> 01:10:02,270
that, the thing that's over
there is really cheap or at

1608
01:10:02,270 --> 01:10:03,910
least as cheap as everything
else is.

1609
01:10:03,910 --> 01:10:06,820
And the thing that's local
is unreliable.

1610
01:10:06,820 --> 01:10:08,470
Caches are things that
get evicted.

1611
01:10:08,470 --> 01:10:09,590
They're things that
you can't trust.

1612
01:10:09,590 --> 01:10:11,550
They're things you
can't rely on.

1613
01:10:11,550 --> 01:10:14,430
And this isn't how we build
anything, anywhere else.

1614
01:10:14,430 --> 01:10:15,830
I would never build a
browser on top of

1615
01:10:15,830 --> 01:10:17,100
this technology stack.

1616
01:10:17,100 --> 01:10:20,020
And I don't mean that in the
sense that, there are things

1617
01:10:20,020 --> 01:10:21,170
that you can't do.

1618
01:10:21,170 --> 01:10:24,560
I mean, you'd never put up with
the idea that the Close

1619
01:10:24,560 --> 01:10:27,170
Tab icon might be evicted.

1620
01:10:27,170 --> 01:10:29,260
That's not a thing that you
would ever put up with.

1621
01:10:29,260 --> 01:10:33,730
So let's think through
how we got here.

1622
01:10:33,730 --> 01:10:38,440
So imagine a little website
that's a little, tiny two-man

1623
01:10:38,440 --> 01:10:43,980
agency, two-person agency,
two-alien agency, two beings.

1624
01:10:43,980 --> 01:10:46,530
And they're trying to put
together a website.

1625
01:10:46,530 --> 01:10:48,910
And it's the simplest thing
that could possibly work.

1626
01:10:48,910 --> 01:10:50,910
And if you sort of deconstruct
this layout, it tells you kind

1627
01:10:50,910 --> 01:10:52,410
of everything you
need to know.

1628
01:10:52,410 --> 01:10:54,370
This is really, really simple.

1629
01:10:54,370 --> 01:10:56,830
This is static content,
effectively.

1630
01:10:56,830 --> 01:10:58,800
And it probably will bit rot.

1631
01:10:58,800 --> 01:11:00,850
You know, they're probably not
going to change their team

1632
01:11:00,850 --> 01:11:02,900
website, if they're even
moderately successful.

1633
01:11:02,900 --> 01:11:04,590
Because it will strip their
ability to actually build

1634
01:11:04,590 --> 01:11:06,400
websites for themselves, because
they'll be doing it

1635
01:11:06,400 --> 01:11:07,350
for clients.

1636
01:11:07,350 --> 01:11:07,970
OK.

1637
01:11:07,970 --> 01:11:10,350
So this is going to be
effectively unmaintained.

1638
01:11:10,350 --> 01:11:12,940
And if you look at how it's
built, you can sort of get a

1639
01:11:12,940 --> 01:11:17,140
sense for what it takes to
get started on the web.

1640
01:11:17,140 --> 01:11:18,810
You have some resources.

1641
01:11:18,810 --> 01:11:20,620
You have some HTML files.

1642
01:11:20,620 --> 01:11:23,650
And when you really start out,
it's copy and paste.

1643
01:11:23,650 --> 01:11:26,230
If you're going to get advance
for $19.95, you'll eventually

1644
01:11:26,230 --> 01:11:28,300
configure Apache to do
server-side includes.

1645
01:11:28,300 --> 01:11:32,200
And you'll change these to
.SHTML, thank you very much.

1646
01:11:32,200 --> 01:11:33,700
And you'll have your server-side
includes for the

1647
01:11:33,700 --> 01:11:36,260
navigations and the footers
at the top and the bottom.

1648
01:11:36,260 --> 01:11:37,480
And you will have whacked
all that in.

1649
01:11:37,480 --> 01:11:39,960
And so now we're starting to see
that there is a repeated

1650
01:11:39,960 --> 01:11:42,820
bit of content around some
of the things that we're

1651
01:11:42,820 --> 01:11:44,820
addressing with URLs.

1652
01:11:44,820 --> 01:11:47,190
So I have a blog, right.

1653
01:11:47,190 --> 01:11:48,822
Please don't read it.

1654
01:11:48,822 --> 01:11:50,550
I'll save you time and
embarrassment.

1655
01:11:50,550 --> 01:11:52,860
But that blog is much more
sophisticated than that little

1656
01:11:52,860 --> 01:11:59,010
tiny way layout for a static
website, effectively, like a

1657
01:11:59,010 --> 01:12:04,010
brochure ware site, largely
because the location of my

1658
01:12:04,010 --> 01:12:07,410
domain in frequently.org has
nothing to do with an

1659
01:12:07,410 --> 01:12:09,210
individual but bit of content.

1660
01:12:09,210 --> 01:12:11,120
It's not addressing some
bit of content.

1661
01:12:11,120 --> 01:12:16,250
It's addressing a database
query, a reverse chronological

1662
01:12:16,250 --> 01:12:19,810
order query across
these tables.

1663
01:12:19,810 --> 01:12:22,060
And when we ship this stuff down
to the client, we don't

1664
01:12:22,060 --> 01:12:23,770
ship those tables.

1665
01:12:23,770 --> 01:12:25,670
We explode a bunch of
that stuff out.

1666
01:12:25,670 --> 01:12:29,150
We denormalize it entirely,
serialize it, through

1667
01:12:29,150 --> 01:12:33,030
templates, and then
spit it all out.

1668
01:12:33,030 --> 01:12:35,610
But if you go look at any
individual article, it sort of

1669
01:12:35,610 --> 01:12:37,930
corresponds to one item in
one of those tables.

1670
01:12:37,930 --> 01:12:40,480
And then, we take all the whole
machinery again, which

1671
01:12:40,480 --> 01:12:42,980
is the shell around that little
bit of content that

1672
01:12:42,980 --> 01:12:44,330
we're addressing with the URL.

1673
01:12:44,330 --> 01:12:46,270
And we explode it all out.

1674
01:12:46,270 --> 01:12:50,170
And we ship this huge bundle
of content down, which

1675
01:12:50,170 --> 01:12:51,290
effectively wraps the stuff.

1676
01:12:51,290 --> 01:12:53,650
And if you look at the HTML,
that's actually what happens.

1677
01:12:53,650 --> 01:12:57,770
It's just document and then tons
and tons of stuff around

1678
01:12:57,770 --> 01:12:59,730
it and then this thing that we
were actually putting in the

1679
01:12:59,730 --> 01:13:02,360
center of this template thing,
which is what the URL is kind

1680
01:13:02,360 --> 01:13:03,270
of actually pointing at.

1681
01:13:03,270 --> 01:13:05,500
When we talk about meaningful
URLs, we tend to mean

1682
01:13:05,500 --> 01:13:08,820
meaningful, with regards to the
thing that's the primary

1683
01:13:08,820 --> 01:13:11,030
thing you, as a user,
would focus on.

1684
01:13:11,030 --> 01:13:13,870
It's a very subjective view,
because it's about what the

1685
01:13:13,870 --> 01:13:15,790
user is experiencing about that

1686
01:13:15,790 --> 01:13:18,590
location, about that state.

1687
01:13:18,590 --> 01:13:21,880
So if you think about
it, what is the URL

1688
01:13:21,880 --> 01:13:24,330
actually talking about?

1689
01:13:24,330 --> 01:13:26,300
We start to get this idea that
what we've done for a couple

1690
01:13:26,300 --> 01:13:30,840
of decades now is to take
server-side graphs of state

1691
01:13:30,840 --> 01:13:34,820
and pre-explode them for
digestion by the client.

1692
01:13:34,820 --> 01:13:37,240
And that pre-explosion means
that, HTML is something that's

1693
01:13:37,240 --> 01:13:39,990
incredibly powerful and
effectively display only.

1694
01:13:39,990 --> 01:13:42,150
And it gets really confused, as
soon as you start talking

1695
01:13:42,150 --> 01:13:43,700
about doing dynamic stuff.

1696
01:13:43,700 --> 01:13:46,130
Because there's that big model
over on the server which is

1697
01:13:46,130 --> 01:13:47,310
written in--

1698
01:13:47,310 --> 01:13:52,680
at least in the cases of
Wordpress, it's PHP and MySQL.

1699
01:13:52,680 --> 01:13:54,840
These are two technologies
which, without extraordinary

1700
01:13:54,840 --> 01:13:59,780
acts of inhuman and inhumane
technology, are not going to

1701
01:13:59,780 --> 01:14:02,170
be running in my browser
anytime soon.

1702
01:14:02,170 --> 01:14:04,500
I'm sure there's a scum
VM that would run

1703
01:14:04,500 --> 01:14:05,880
something like this.

1704
01:14:05,880 --> 01:14:07,130
But today, we're
not doing that.

1705
01:14:07,130 --> 01:14:09,890

1706
01:14:09,890 --> 01:14:11,930
And the latency characteristics
haven't been

1707
01:14:11,930 --> 01:14:13,420
set up to do it.

1708
01:14:13,420 --> 01:14:18,460
So let's imagine the next sort
of leap, from little, tiny

1709
01:14:18,460 --> 01:14:21,150
blogware, or sorry, brochureware
thing to blog,

1710
01:14:21,150 --> 01:14:24,750
which is a moderately
complicated CMS to the biggest

1711
01:14:24,750 --> 01:14:26,800
thing we can think of that's
still effectively static

1712
01:14:26,800 --> 01:14:30,230
content, infrequently updated
static content.

1713
01:14:30,230 --> 01:14:32,620
I submit Wikipedia.

1714
01:14:32,620 --> 01:14:36,610
So the question becomes, if
you're building Wikipedia as

1715
01:14:36,610 --> 01:14:40,200
an app or if you're trying to
make it possible for me, while

1716
01:14:40,200 --> 01:14:41,990
sitting on a tube--

1717
01:14:41,990 --> 01:14:44,950
20 seconds at the time of
connectivity, if I'm lucky--

1718
01:14:44,950 --> 01:14:48,410
to go and read an article and
click on a link to go to the

1719
01:14:48,410 --> 01:14:52,270
next article, what is required
for us to think about making

1720
01:14:52,270 --> 01:14:54,930
that a meaningful thing to do.

1721
01:14:54,930 --> 01:14:57,760
It turns out, the thing that you
really require is the help

1722
01:14:57,760 --> 01:14:58,710
of the user.

1723
01:14:58,710 --> 01:15:01,650
Because it's not possible to
think through this whole

1724
01:15:01,650 --> 01:15:05,570
system and say, I'm going
to go grab all of it.

1725
01:15:05,570 --> 01:15:06,900
My blog is relatively small.

1726
01:15:06,900 --> 01:15:08,560
You could maybe fetch it all.

1727
01:15:08,560 --> 01:15:10,170
But you couldn't fetch
all of Wikipedia.

1728
01:15:10,170 --> 01:15:11,200
I've tried this.

1729
01:15:11,200 --> 01:15:14,730
Decompressing this takes about
20 minutes in an i7, a really

1730
01:15:14,730 --> 01:15:15,510
ballsy laptop.

1731
01:15:15,510 --> 01:15:17,910
Now, downloading it took
a couple minutes too.

1732
01:15:17,910 --> 01:15:19,550
So think about Gmail.

1733
01:15:19,550 --> 01:15:21,990
What am I indexing when I
go to one of these URLs?

1734
01:15:21,990 --> 01:15:25,500
Or when I go to a music site,
could I possibly download that

1735
01:15:25,500 --> 01:15:27,130
entire library?

1736
01:15:27,130 --> 01:15:28,400
My Gmail is really,
really full.

1737
01:15:28,400 --> 01:15:29,780
I don't want the entire
contents.

1738
01:15:29,780 --> 01:15:31,520
In fact, I want some
subset of that.

1739
01:15:31,520 --> 01:15:33,870
And I, as the user, am willing
to help you go figure

1740
01:15:33,870 --> 01:15:34,800
out what that is.

1741
01:15:34,800 --> 01:15:38,040
And as the media size, the
atomic size of the media gets

1742
01:15:38,040 --> 01:15:40,420
bigger and the more of it that
I've got, the more that

1743
01:15:40,420 --> 01:15:41,610
pressure builds up on us.

1744
01:15:41,610 --> 01:15:43,640
We don't really have a way
of thinking about it.

1745
01:15:43,640 --> 01:15:47,120
So the way I've phrased this
now is that, there's an

1746
01:15:47,120 --> 01:15:50,240
application that you'd like to
think about, which is what

1747
01:15:50,240 --> 01:15:52,800
helps the browser
render content.

1748
01:15:52,800 --> 01:15:53,960
And then there's content.

1749
01:15:53,960 --> 01:15:57,590
And in the old days,
quote-unquote "old days," we

1750
01:15:57,590 --> 01:15:59,120
tried to conflate the two
as much as possible.

1751
01:15:59,120 --> 01:16:03,030
We would smoosh the shell into
the content with server-side

1752
01:16:03,030 --> 01:16:04,390
includes and CGI.

1753
01:16:04,390 --> 01:16:06,900
And as we get more sophisticated
and more

1754
01:16:06,900 --> 01:16:09,520
dynamic, we have to serve the
shell and think about the

1755
01:16:09,520 --> 01:16:10,810
shell differently
to the content.

1756
01:16:10,810 --> 01:16:13,190
They're different entities.

1757
01:16:13,190 --> 01:16:17,180
So it turns out the offline
problem is actually about

1758
01:16:17,180 --> 01:16:19,310
making applications that can
bootstrap themselves.

1759
01:16:19,310 --> 01:16:23,720
It's not about this, how do I
transparently turn the thing

1760
01:16:23,720 --> 01:16:25,250
that I've got into that other
thing over there.

1761
01:16:25,250 --> 01:16:27,390
It's about the data model
and where it's split.

1762
01:16:27,390 --> 01:16:29,300
Who owns the data, and
where does it live?

1763
01:16:29,300 --> 01:16:33,050
Am I doing synchronization over
a thing that I've synched

1764
01:16:33,050 --> 01:16:34,820
part of to the client?

1765
01:16:34,820 --> 01:16:37,890
Or am I shipping a series
of pre-exploded pages?

1766
01:16:37,890 --> 01:16:40,610
That's kind of the
core problem that

1767
01:16:40,610 --> 01:16:41,935
we have with offline.

1768
01:16:41,935 --> 01:16:46,160
So a service worker is an
attempt to get us through--

1769
01:16:46,160 --> 01:16:49,150
oh, went too far--

1770
01:16:49,150 --> 01:16:52,460
a couple of these problems, by
saying that, we don't know the

1771
01:16:52,460 --> 01:16:54,290
answer for your application.

1772
01:16:54,290 --> 01:16:55,960
But what we do know is that,
you don't have enough

1773
01:16:55,960 --> 01:16:57,830
control right now.

1774
01:16:57,830 --> 01:16:59,470
We spend a lot of time
looking through it.

1775
01:16:59,470 --> 01:17:02,980
And basically, it's an
in-browser proxy that you can

1776
01:17:02,980 --> 01:17:05,430
install from the perspective
of your origin.

1777
01:17:05,430 --> 01:17:08,210
And when you do, at some point
later when it finishes

1778
01:17:08,210 --> 01:17:11,470
installing, you'll get notified
and the ability to

1779
01:17:11,470 --> 01:17:15,360
proxy, do whatever you like,
with the response for any

1780
01:17:15,360 --> 01:17:17,180
request those documents make.

1781
01:17:17,180 --> 01:17:20,850
You get to own the request.

1782
01:17:20,850 --> 01:17:23,310
Cross domain, same origin,
you name it.

1783
01:17:23,310 --> 01:17:26,130
And it gives you programmatic
control over a series of

1784
01:17:26,130 --> 01:17:27,730
caches as well.

1785
01:17:27,730 --> 01:17:30,180
So it's relatively simple.

1786
01:17:30,180 --> 01:17:31,390
You say, I would like
to register for

1787
01:17:31,390 --> 01:17:32,920
one of these things.

1788
01:17:32,920 --> 01:17:34,300
And it gives you
a promise back.

1789
01:17:34,300 --> 01:17:36,560
Yes, promises are coming
to the dome.

1790
01:17:36,560 --> 01:17:39,860
You can thank some
people later.

1791
01:17:39,860 --> 01:17:43,270
And you can actually compose
stuff, from third parties.

1792
01:17:43,270 --> 01:17:48,010
You can pull in resources to use
with these cache objects.

1793
01:17:48,010 --> 01:17:50,720
And then, this add event
listener for fetches actually

1794
01:17:50,720 --> 01:17:52,980
gives you the ability to
go and construct--

1795
01:17:52,980 --> 01:17:55,880
you see that e.respond with new
SameOrigin response there

1796
01:17:55,880 --> 01:17:56,670
toward the bottom.

1797
01:17:56,670 --> 01:18:00,680
That's actually creating a
response out of whole cloth.

1798
01:18:00,680 --> 01:18:03,160
You're just programmatically
saying, this is the content

1799
01:18:03,160 --> 01:18:05,220
that you should send back
to this document.

1800
01:18:05,220 --> 01:18:06,270
That's the idea.

1801
01:18:06,270 --> 01:18:07,580
You've never been able
to do this before,

1802
01:18:07,580 --> 01:18:08,460
except on the server.

1803
01:18:08,460 --> 01:18:09,720
What if we could do this
on the client?

1804
01:18:09,720 --> 01:18:12,070
And why can't we, by the way?

1805
01:18:12,070 --> 01:18:14,240
You can imagine another
couple of ideas.

1806
01:18:14,240 --> 01:18:19,280
I would like to, when I'm
offline, serve some fallback.

1807
01:18:19,280 --> 01:18:23,640
Or if I've got pictures of cats,
and I would like them to

1808
01:18:23,640 --> 01:18:25,370
be responsive cats.

1809
01:18:25,370 --> 01:18:29,080
I would like you to, through
some magical API, figure out

1810
01:18:29,080 --> 01:18:31,260
what we've already stored about
the client, what we

1811
01:18:31,260 --> 01:18:34,500
know, the device pixel width,
the aspect ratio that we

1812
01:18:34,500 --> 01:18:36,290
probably are displaying at,
the kinds of things that a

1813
01:18:36,290 --> 01:18:38,660
document could tell us, while
it's populating the service

1814
01:18:38,660 --> 01:18:42,270
worker and then have the service
worker respond with

1815
01:18:42,270 --> 01:18:44,520
the correct one, as opposed to
trying to figure it all out

1816
01:18:44,520 --> 01:18:46,860
preemptively upfront
and make CSS do the

1817
01:18:46,860 --> 01:18:48,600
heavy lifting for us.

1818
01:18:48,600 --> 01:18:49,600
I'm actually getting
to the end.

1819
01:18:49,600 --> 01:18:55,430
So there are a bunch of big
implications for this design.

1820
01:18:55,430 --> 01:18:59,220
What does it mean to have real
URLs in these applications,

1821
01:18:59,220 --> 01:19:01,220
when we think of a shell
that boots up but

1822
01:19:01,220 --> 01:19:02,940
then mediates content?

1823
01:19:02,940 --> 01:19:03,870
What does the URL mean?

1824
01:19:03,870 --> 01:19:07,340
It means something that's
interpreted by the shell.

1825
01:19:07,340 --> 01:19:09,020
Can we build transparent
caching proxies?

1826
01:19:09,020 --> 01:19:09,640
The answer is yes.

1827
01:19:09,640 --> 01:19:10,920
It's the simplest thing
to possibly do.

1828
01:19:10,920 --> 01:19:13,640
You actually just populate
a new thing in this cache

1829
01:19:13,640 --> 01:19:15,590
object, every time you
get a request.

1830
01:19:15,590 --> 01:19:17,800
And then, suddenly, things
mostly work offline.

1831
01:19:17,800 --> 01:19:18,310
Is that good?

1832
01:19:18,310 --> 01:19:19,160
Is that bad?

1833
01:19:19,160 --> 01:19:19,990
We're not sure yet.

1834
01:19:19,990 --> 01:19:22,430
We don't know.

1835
01:19:22,430 --> 01:19:26,025
And we don't really have good

1836
01:19:26,025 --> 01:19:28,130
synchronization technology today.

1837
01:19:28,130 --> 01:19:29,520
There's some work happening.

1838
01:19:29,520 --> 01:19:31,140
I know the media guys are
spending a lot of time on

1839
01:19:31,140 --> 01:19:32,890
operational transform.

1840
01:19:32,890 --> 01:19:34,600
And the Ember guys are
looking at it.

1841
01:19:34,600 --> 01:19:37,890
But synchronization technology
is not our lingua Franca.

1842
01:19:37,890 --> 01:19:39,620
This is not how we have
thought about

1843
01:19:39,620 --> 01:19:41,220
building the web.

1844
01:19:41,220 --> 01:19:42,630
And it's the sort of thing that
we're going to have to

1845
01:19:42,630 --> 01:19:45,260
get good at, if we really bite
off this idea of building

1846
01:19:45,260 --> 01:19:47,890
applications that are shells,
that boot up to mediate

1847
01:19:47,890 --> 01:19:51,690
content and not simply documents
which happen to be

1848
01:19:51,690 --> 01:19:55,670
fully-formed things, sprung
from the head of Zeus.

1849
01:19:55,670 --> 01:19:57,880
So there's a bunch of
open questions.

1850
01:19:57,880 --> 01:20:00,430
And I guess it's time for
us talk about it.

1851
01:20:00,430 --> 01:20:02,340
ANDREW BETTS: And then that's
his out of time.

1852
01:20:02,340 --> 01:20:03,590
Thank you very much, good-bye.

1853
01:20:03,590 --> 01:20:08,740

1854
01:20:08,740 --> 01:20:11,250
No, the underground example
is a very good one.

1855
01:20:11,250 --> 01:20:13,840
When I was building lanyards,
the underground was the most

1856
01:20:13,840 --> 01:20:15,420
convenient place to
go and test a

1857
01:20:15,420 --> 01:20:17,300
real-world, offline situation.

1858
01:20:17,300 --> 01:20:19,710
Because you know, turning things
on to airplane mode is

1859
01:20:19,710 --> 01:20:20,870
not quite sufficient.

1860
01:20:20,870 --> 01:20:23,470
But I remember I was there
with five mobile phones.

1861
01:20:23,470 --> 01:20:24,930
And one of the staff
came up to me.

1862
01:20:24,930 --> 01:20:26,590
And he just stood there
staring at me.

1863
01:20:26,590 --> 01:20:27,700
I looked behind me.

1864
01:20:27,700 --> 01:20:30,000
And I was standing in front of
a poster, which essentially

1865
01:20:30,000 --> 01:20:32,430
said, if you see someone with
more than one mobile phone,

1866
01:20:32,430 --> 01:20:33,810
they're probably a terrorist.

1867
01:20:33,810 --> 01:20:37,290
And you should deal with them.

1868
01:20:37,290 --> 01:20:39,630
So first, before we go to the
first question, do any of the

1869
01:20:39,630 --> 01:20:43,340
panelists have anything to say
about what Alex was talking

1870
01:20:43,340 --> 01:20:45,320
about there in the intro?

1871
01:20:45,320 --> 01:20:47,630
CALVIN SPEALMAN: I had just one
comment, which is, I do

1872
01:20:47,630 --> 01:20:51,280
wonder how many people working
on the service navigator,

1873
01:20:51,280 --> 01:20:53,410
controller, whatever the
eventual name is-- how many

1874
01:20:53,410 --> 01:20:56,360
are the same people who built
Google Gears, which I think

1875
01:20:56,360 --> 01:20:58,830
had almost exactly the same
mechanism for dealing with

1876
01:20:58,830 --> 01:21:02,150
offline, just insert a proxy
into the browser?

1877
01:21:02,150 --> 01:21:03,070
Is there a connection there?

1878
01:21:03,070 --> 01:21:04,910
ALEX RUSSELL: So it's
a good question.

1879
01:21:04,910 --> 01:21:08,030
So Michael Nordman was
on the Gears team.

1880
01:21:08,030 --> 01:21:09,740
And he's one of the people who's
helping us implement the

1881
01:21:09,740 --> 01:21:11,810
Service Worker.

1882
01:21:11,810 --> 01:21:15,350
We've tried to at least twice
before, from the Chrome

1883
01:21:15,350 --> 01:21:15,970
perspective.

1884
01:21:15,970 --> 01:21:18,330
Before there was Chrome, it was
Gears-- and then inside of

1885
01:21:18,330 --> 01:21:20,140
Chrome, with application
cache--

1886
01:21:20,140 --> 01:21:22,700
to give you tools to make
things work offline.

1887
01:21:22,700 --> 01:21:25,470
And we have failed
miserably twice.

1888
01:21:25,470 --> 01:21:29,640
And Gears wasn't what
you thought it was.

1889
01:21:29,640 --> 01:21:32,000
So if you go back and you pull
the documentation out of the

1890
01:21:32,000 --> 01:21:34,700
internet archive, what you'll
find is that, Gears has a

1891
01:21:34,700 --> 01:21:37,885
thing called--

1892
01:21:37,885 --> 01:21:39,120
JAKE ARCHIBALD: Local
server, isn't it?

1893
01:21:39,120 --> 01:21:40,250
ALEX RUSSELL: Yeah,
local server.

1894
01:21:40,250 --> 01:21:43,510
And the local server wasn't a
server that you could script.

1895
01:21:43,510 --> 01:21:47,800
You couldn't ever give it a bit
of code and say, please go

1896
01:21:47,800 --> 01:21:50,360
run this, whenever I
request a resource.

1897
01:21:50,360 --> 01:21:52,690
That never happened in Gears.

1898
01:21:52,690 --> 01:21:55,770
You give it a manifest, a
declarative format, which is

1899
01:21:55,770 --> 01:21:58,670
exactly what we did in the
application cache too.

1900
01:21:58,670 --> 01:22:04,130
And in both cases, they were,
like Jake put it at Edge in

1901
01:22:04,130 --> 01:22:08,660
London, like playing a game
where you can see the effects

1902
01:22:08,660 --> 01:22:10,050
of what you're doing a couple
of turns later.

1903
01:22:10,050 --> 01:22:13,400
But you can't actually
control any of it.

1904
01:22:13,400 --> 01:22:15,700
And as a result, we don't have
a lot of data about what you

1905
01:22:15,700 --> 01:22:16,390
actually need.

1906
01:22:16,390 --> 01:22:18,320
We've never giving you the
primitives that you need to go

1907
01:22:18,320 --> 01:22:21,980
build the stuff you want and
evolve and iterate on that.

1908
01:22:21,980 --> 01:22:25,080
And I think they're just
hasn't been a lot of

1909
01:22:25,080 --> 01:22:25,790
exploration.

1910
01:22:25,790 --> 01:22:28,430
Because it takes a
lot to get going.

1911
01:22:28,430 --> 01:22:29,460
And there hasn't been
the ability to

1912
01:22:29,460 --> 01:22:30,280
explore these patterns.

1913
01:22:30,280 --> 01:22:32,080
JAKE ARCHIBALD: I think his was
essentially the precursor

1914
01:22:32,080 --> 01:22:34,070
to App Cache, rather than
the precursor to this

1915
01:22:34,070 --> 01:22:35,070
thing we have now.

1916
01:22:35,070 --> 01:22:37,110
I think we should go to
the first question.

1917
01:22:37,110 --> 01:22:39,380
And if I'm reading the right
documents, that's from some

1918
01:22:39,380 --> 01:22:41,580
chap called Andrew Betts,
never heard of him.

1919
01:22:41,580 --> 01:22:42,300
Where are you, Andrew?

1920
01:22:42,300 --> 01:22:43,560
Can someone get Andrew
a microphone?

1921
01:22:43,560 --> 01:22:44,560
There he is.

1922
01:22:44,560 --> 01:22:46,840
ANDREW BETTS: OK.

1923
01:22:46,840 --> 01:22:49,410
Currently offline data may be
evicted at any time by the

1924
01:22:49,410 --> 01:22:50,920
user agent.

1925
01:22:50,920 --> 01:22:53,410
Can we have storage persistence
guarantees or at

1926
01:22:53,410 --> 01:22:55,920
least provide hints to the
user agent to tell it to

1927
01:22:55,920 --> 01:22:58,020
prioritize app logic
over content data?

1928
01:22:58,020 --> 01:22:59,700
JAKE ARCHIBALD: Yes, this is
a very interesting question

1929
01:22:59,700 --> 01:23:02,620
because the whole thing about
using an airport.

1930
01:23:02,620 --> 01:23:05,830
I mean, if we make a guarantee
that, yes, as a user, your

1931
01:23:05,830 --> 01:23:08,750
data of when you're flight is
going to be will be available

1932
01:23:08,750 --> 01:23:09,510
to you offline.

1933
01:23:09,510 --> 01:23:11,845
The spec does not currently let
us make that guarantee.

1934
01:23:11,845 --> 01:23:14,240
It can chuck all the data
under a bus, whenever

1935
01:23:14,240 --> 01:23:15,932
it feels like it.

1936
01:23:15,932 --> 01:23:17,020
CRAIG CAVALIER: This is really

1937
01:23:17,020 --> 01:23:20,320
important for us as a business.

1938
01:23:20,320 --> 01:23:22,990
To give a bit of background, I
work with field engineers.

1939
01:23:22,990 --> 01:23:24,780
And they work on
oil refineries.

1940
01:23:24,780 --> 01:23:26,430
And they write up their
invoices and

1941
01:23:26,430 --> 01:23:27,540
their equipment tracking.

1942
01:23:27,540 --> 01:23:30,360
We can't have their data just
disappearing on them as

1943
01:23:30,360 --> 01:23:31,770
they're writing up these
new invoices.

1944
01:23:31,770 --> 01:23:33,350
We don't want to
lose that data.

1945
01:23:33,350 --> 01:23:35,490
So that's a really important
problem for us

1946
01:23:35,490 --> 01:23:36,520
that we need to solve.

1947
01:23:36,520 --> 01:23:38,090
JAKE ARCHIBALD: Is this a
problem that you actually

1948
01:23:38,090 --> 01:23:39,840
encountered in the FT?

1949
01:23:39,840 --> 01:23:42,570
Or is this do a problem
you encountered, data

1950
01:23:42,570 --> 01:23:43,510
disappearing like that?

1951
01:23:43,510 --> 01:23:45,210
Or is it just a theoretical
problem?

1952
01:23:45,210 --> 01:23:46,930
CRAIG CAVALIER: It's a
theoretical problem at this

1953
01:23:46,930 --> 01:23:47,590
point, for us.

1954
01:23:47,590 --> 01:23:50,850
MATT ANDREWS: We have real
experience, in particular--

1955
01:23:50,850 --> 01:23:52,380
I can't say this on record.

1956
01:23:52,380 --> 01:23:53,600
Oh, dammit.

1957
01:23:53,600 --> 01:23:57,580
iOS 5, we suspect strongly that,
occasionally, it wiped

1958
01:23:57,580 --> 01:24:01,180
our apps in certain situations,
but not sure,

1959
01:24:01,180 --> 01:24:02,620
can't prove it.

1960
01:24:02,620 --> 01:24:05,746
But we have strong suspicions.

1961
01:24:05,746 --> 01:24:08,330
CALVIN SPEALMAN: I'd like to
add the, I think, the most

1962
01:24:08,330 --> 01:24:11,320
important aspect of this is how
the user understands where

1963
01:24:11,320 --> 01:24:13,980
the data is and when the
browser may evict it.

1964
01:24:13,980 --> 01:24:16,450
We can't tell the browser that
they can evict something.

1965
01:24:16,450 --> 01:24:18,030
Only users should be
able to say that.

1966
01:24:18,030 --> 01:24:21,230
We have ways those installing an
app in an implicit way that

1967
01:24:21,230 --> 01:24:23,500
the user is invisible to.

1968
01:24:23,500 --> 01:24:25,660
And the data should
be tied to that.

1969
01:24:25,660 --> 01:24:28,430
So the user might say, this is
an app I want to keep around.

1970
01:24:28,430 --> 01:24:30,710
And therefore, they're opting
in to keep that data.

1971
01:24:30,710 --> 01:24:32,880
And then, it would be
safe to not evict.

1972
01:24:32,880 --> 01:24:35,010
So I think a bigger problem here
is not so much the APIs

1973
01:24:35,010 --> 01:24:38,020
we have, but the way
that the browser

1974
01:24:38,020 --> 01:24:39,715
presents that to the user.

1975
01:24:39,715 --> 01:24:44,140
JAKE ARCHIBALD: So to say that
the user has to be responsible

1976
01:24:44,140 --> 01:24:46,530
for the removing of data, they
have to be responsible for the

1977
01:24:46,530 --> 01:24:47,690
adding of the data as well.

1978
01:24:47,690 --> 01:24:50,240
CRAIG CAVALIER: Yeah, and if the
user hasn't said, I want

1979
01:24:50,240 --> 01:24:53,580
this app to stay available and
its data to stay available.

1980
01:24:53,580 --> 01:24:54,480
Then, it's safe to evict.

1981
01:24:54,480 --> 01:24:56,370
And so they need to
opt in to this.

1982
01:24:56,370 --> 01:24:59,100
JAKE ARCHIBALD: Anne, Alex, I'm
looking at the wrong one,

1983
01:24:59,100 --> 01:25:00,516
when I say that.

1984
01:25:00,516 --> 01:25:02,540
ANNE VAN KESTEREN: So we've
been looking into this for

1985
01:25:02,540 --> 01:25:05,080
Firefox OS as well, because the
problem comes up there as

1986
01:25:05,080 --> 01:25:08,110
well, for apps.

1987
01:25:08,110 --> 01:25:11,980
And it's really hard, because
once you get through

1988
01:25:11,980 --> 01:25:14,870
persistence, it becomes
a UX problem.

1989
01:25:14,870 --> 01:25:16,900
So we have this sort of concept
of, you have temporary

1990
01:25:16,900 --> 01:25:18,980
storage, which you can just
grant to everyone.

1991
01:25:18,980 --> 01:25:21,860
We'll just grant you a slot,
so you can use it.

1992
01:25:21,860 --> 01:25:24,170
And the other concept would
be persistent storage.

1993
01:25:24,170 --> 01:25:26,420
But that is much harder, because
the user sort of has

1994
01:25:26,420 --> 01:25:27,410
to be aware of it.

1995
01:25:27,410 --> 01:25:30,070
But then, most users are not
really aware of storage and

1996
01:25:30,070 --> 01:25:32,500
how that is allocated for apps
and how that works across

1997
01:25:32,500 --> 01:25:33,145
their device.

1998
01:25:33,145 --> 01:25:34,410
JAKE ARCHIBALD: It's not
a problem with a

1999
01:25:34,410 --> 01:25:34,980
phone though, right.

2000
01:25:34,980 --> 01:25:37,460
Because if my phone tells me I'm
low on space, I can go to

2001
01:25:37,460 --> 01:25:37,990
the apps menu.

2002
01:25:37,990 --> 01:25:40,280
And it says, oh, this game
you don't care about

2003
01:25:40,280 --> 01:25:41,730
is using 200 megabytes.

2004
01:25:41,730 --> 01:25:43,880
And this one you really care
about is using less than that.

2005
01:25:43,880 --> 01:25:45,470
So I can throw one of
them out the window.

2006
01:25:45,470 --> 01:25:46,190
ANNE VAN KESTEREN: Yes.

2007
01:25:46,190 --> 01:25:48,540
So I think we have to sort of
evolve it into that direction.

2008
01:25:48,540 --> 01:25:52,890
And yeah, so it has to be-- the
thing is, do you ask the

2009
01:25:52,890 --> 01:25:55,730
user right up front?

2010
01:25:55,730 --> 01:25:57,320
And which apps do
you grant space?

2011
01:25:57,320 --> 01:26:02,300
Or do all apps have to ask for
persistent storage or not?

2012
01:26:02,300 --> 01:26:07,390
Whenever you sort of hit the
UX side of things, with

2013
01:26:07,390 --> 01:26:10,520
standards, it becomes a lot
harder to get things done.

2014
01:26:10,520 --> 01:26:13,780
JAKE ARCHIBALD: Is there an API
or a standard that this

2015
01:26:13,780 --> 01:26:14,870
kind of work fits in?

2016
01:26:14,870 --> 01:26:15,760
Is it the Quota API?

2017
01:26:15,760 --> 01:26:17,060
Is that the plan?

2018
01:26:17,060 --> 01:26:18,700
ALEX RUSSELL: Yes, so there
is a Quota API.

2019
01:26:18,700 --> 01:26:21,820
And it does have this idea
of persistent storage and

2020
01:26:21,820 --> 01:26:23,410
ephemeral storage.

2021
01:26:23,410 --> 01:26:26,070
And right, persistent storage
is only available in Chrome

2022
01:26:26,070 --> 01:26:29,990
for certain file system calls.

2023
01:26:29,990 --> 01:26:32,980
You can't, in a granular way,
opt some bit of your cookies

2024
01:26:32,980 --> 01:26:39,230
and your local storage and your
index TP into persistent

2025
01:26:39,230 --> 01:26:40,640
storage and then say,
this other stuff, I

2026
01:26:40,640 --> 01:26:41,420
don't really need.

2027
01:26:41,420 --> 01:26:44,310
And there's no clear way, in
the UX, to communicate to

2028
01:26:44,310 --> 01:26:45,710
users about what
they're doing.

2029
01:26:45,710 --> 01:26:47,520
It feels to me like
Anne was saying.

2030
01:26:47,520 --> 01:26:51,310
There's a very clear missing
moment of intent, where you

2031
01:26:51,310 --> 01:26:52,930
give users the power to
say, no, I really want

2032
01:26:52,930 --> 01:26:53,570
to keep this thing.

2033
01:26:53,570 --> 01:26:55,170
I like this a lot.

2034
01:26:55,170 --> 01:26:56,510
I would like to get back
to this easily.

2035
01:26:56,510 --> 01:26:59,660
I would like to bless it with
the ability to keep all of its

2036
01:26:59,660 --> 01:27:00,610
data around.

2037
01:27:00,610 --> 01:27:02,480
And we don't have
that moment yet.

2038
01:27:02,480 --> 01:27:05,840
We are missing what is
effectively a very small

2039
01:27:05,840 --> 01:27:08,430
manifest and then some
UI, to let users say,

2040
01:27:08,430 --> 01:27:09,110
yeah, I like this.

2041
01:27:09,110 --> 01:27:09,840
I want to keep this.

2042
01:27:09,840 --> 01:27:12,200
And once users have said they
like it, I don't see why we

2043
01:27:12,200 --> 01:27:14,460
should ever be second
guessing them.

2044
01:27:14,460 --> 01:27:17,710
I trust myself to be mediating
the content of my phone, in a

2045
01:27:17,710 --> 01:27:19,160
lot of cases.

2046
01:27:19,160 --> 01:27:21,110
And in many cases, that means
throwing out an application.

2047
01:27:21,110 --> 01:27:24,300
And I like doing that, not
getting so annoyed by an

2048
01:27:24,300 --> 01:27:25,660
application that
I uninstall it.

2049
01:27:25,660 --> 01:27:28,660
But I like the ability to do
that and reason about that, at

2050
01:27:28,660 --> 01:27:29,455
that level.

2051
01:27:29,455 --> 01:27:33,160
MATT ANDREWS: Don't we sort of
have this already, with web

2052
01:27:33,160 --> 01:27:36,620
apps on iOS, where you add the
web app to your home screen?

2053
01:27:36,620 --> 01:27:39,850
So that's kind of similar to
saying, I want to keep this

2054
01:27:39,850 --> 01:27:40,750
app around.

2055
01:27:40,750 --> 01:27:42,940
I know Firefox as well,
I think, you can--

2056
01:27:42,940 --> 01:27:46,832
it asks you, when you load the
web page, it's got an app

2057
01:27:46,832 --> 01:27:48,990
cache, whether it you want it
to stay around offline.

2058
01:27:48,990 --> 01:27:49,740
And you can say, no.

2059
01:27:49,740 --> 01:27:51,820
And the website will continue
being a website.

2060
01:27:51,820 --> 01:27:52,555
Isn't that equivalent?

2061
01:27:52,555 --> 01:27:54,630
ALEX RUSSELL: Yeah, I think
that's a great point.

2062
01:27:54,630 --> 01:27:57,630
And I think that's kind of the
direction that we all need to

2063
01:27:57,630 --> 01:27:59,025
figure out a way to get to.

2064
01:27:59,025 --> 01:28:00,800
And someone asked about
the Quota API.

2065
01:28:00,800 --> 01:28:03,580
The Quota API is probably
something that we definitely

2066
01:28:03,580 --> 01:28:06,120
need to integrate into the
Service Worker design.

2067
01:28:06,120 --> 01:28:09,410
We've talked to the folks who
are in charge of the Quota API

2068
01:28:09,410 --> 01:28:10,840
about this.

2069
01:28:10,840 --> 01:28:13,330
Because it should also be the
case that, when applications

2070
01:28:13,330 --> 01:28:15,690
get under pressure, you should
be able to give an application

2071
01:28:15,690 --> 01:28:17,770
the ability to say, hey,
I'm about to ask you

2072
01:28:17,770 --> 01:28:19,330
for this much storage.

2073
01:28:19,330 --> 01:28:21,740
You need to figure out where
it's going to come from.

2074
01:28:21,740 --> 01:28:24,540
And if you don't do that, maybe
we evict you entirely.

2075
01:28:24,540 --> 01:28:28,380
But one of the nice bits about
the Service Worker design

2076
01:28:28,380 --> 01:28:32,320
versus the HTTP cache today is
that it's not HTTP cache.

2077
01:28:32,320 --> 01:28:34,810
Once resources are there, unless
you pull them out,

2078
01:28:34,810 --> 01:28:37,320
they're there, for the last
time of the thing.

2079
01:28:37,320 --> 01:28:40,580
It'll get evicted as a bundle,
but it's up to you as an

2080
01:28:40,580 --> 01:28:43,850
application to make smart
decisions about what you

2081
01:28:43,850 --> 01:28:44,836
prioritize.

2082
01:28:44,836 --> 01:28:47,240
ANNE VAN KESTEREN: Yeah, and
it's a little bit harder.

2083
01:28:47,240 --> 01:28:49,080
Like you can put it on
the home screen,

2084
01:28:49,080 --> 01:28:51,100
but it doesn't mean--

2085
01:28:51,100 --> 01:28:53,370
how much storage were
you granted then?

2086
01:28:53,370 --> 01:28:54,110
It might need two gigabytes.

2087
01:28:54,110 --> 01:28:55,060
It might need four.

2088
01:28:55,060 --> 01:28:57,830
It might get most of
your hard drive.

2089
01:28:57,830 --> 01:28:59,320
And is the user comfortable
with that?

2090
01:28:59,320 --> 01:29:00,700
Does the user even know
what that means?

2091
01:29:00,700 --> 01:29:04,393

2092
01:29:04,393 --> 01:29:06,350
MATT ANDREWS: One of the points
we have when we were

2093
01:29:06,350 --> 01:29:10,080
developing the HTML5 app for the
economists was, in IE10,

2094
01:29:10,080 --> 01:29:12,860
you can actually configure
exactly how much space you can

2095
01:29:12,860 --> 01:29:14,080
give to a web app.

2096
01:29:14,080 --> 01:29:15,000
You can make that
one megabyte.

2097
01:29:15,000 --> 01:29:18,390
So for us, that's far,
far not enough.

2098
01:29:18,390 --> 01:29:21,300
So we have to detect how
much space we have.

2099
01:29:21,300 --> 01:29:24,730
So I think too much control
can also be a bad

2100
01:29:24,730 --> 01:29:26,350
thing, quite limiting.

2101
01:29:26,350 --> 01:29:29,520
JAKE ARCHIBALD: So if you did
this installable app thing, is

2102
01:29:29,520 --> 01:29:32,630
that going to replace the number
of tool bars we get for

2103
01:29:32,630 --> 01:29:33,540
each permission?

2104
01:29:33,540 --> 01:29:34,850
What's that going to
replace it with?

2105
01:29:34,850 --> 01:29:37,080
Are we going to get the sort
of Android solution, where,

2106
01:29:37,080 --> 01:29:38,960
upfront, you get the list
of permissions.

2107
01:29:38,960 --> 01:29:40,640
And you just ignore
it and click Next.

2108
01:29:40,640 --> 01:29:43,282
Is that the kind of model that
we see working on the web?

2109
01:29:43,282 --> 01:29:46,260
ALEX RUSSELL: If I had my
druthers, it would be a system

2110
01:29:46,260 --> 01:29:51,320
where the user can
always say no.

2111
01:29:51,320 --> 01:29:54,480
And to the extent that they've
said, yes, they've said, yes.

2112
01:29:54,480 --> 01:29:55,810
But they can change
their mind later.

2113
01:29:55,810 --> 01:29:59,090
So the Android model of a bundle
of permissions which

2114
01:29:59,090 --> 01:30:02,420
can't be split apart from each
other sort of implies APIs

2115
01:30:02,420 --> 01:30:03,650
that aren't allowed to fail.

2116
01:30:03,650 --> 01:30:06,590
There's only a return true.

2117
01:30:06,590 --> 01:30:08,560
There's never some sort
of a failure case.

2118
01:30:08,560 --> 01:30:12,640
And I think the web has gotten
a long way on the basis of

2119
01:30:12,640 --> 01:30:14,260
APIs that can fail.

2120
01:30:14,260 --> 01:30:15,790
That's how we adapt.

2121
01:30:15,790 --> 01:30:17,890
It's the ability for the
environment to just not be

2122
01:30:17,890 --> 01:30:23,560
there or for feature detection
to help us understand and live

2123
01:30:23,560 --> 01:30:25,926
within the contours of whatever
the runtime is.

2124
01:30:25,926 --> 01:30:27,840
JAKE ARCHIBALD: So I think it's
about time we moved on to

2125
01:30:27,840 --> 01:30:28,540
the next question.

2126
01:30:28,540 --> 01:30:30,170
And this one's from
Natasha Rooney.

2127
01:30:30,170 --> 01:30:31,855
So if we can get Natasha
a microphone.

2128
01:30:31,855 --> 01:30:35,698

2129
01:30:35,698 --> 01:30:36,470
AUDIENCE: Hi.

2130
01:30:36,470 --> 01:30:37,740
Thank you very much.

2131
01:30:37,740 --> 01:30:41,050
So should network information
APIs be extended to include

2132
01:30:41,050 --> 01:30:43,960
triggers for a user having less
than optimal connection

2133
01:30:43,960 --> 01:30:47,470
speeds and not just offline
or online triggers?

2134
01:30:47,470 --> 01:30:50,375
Could this help developers
code for content caching?

2135
01:30:50,375 --> 01:30:52,950
JAKE ARCHIBALD: So this is
a question that came at

2136
01:30:52,950 --> 01:30:55,030
the last Edge Conf.

2137
01:30:55,030 --> 01:30:57,190
And this was voted up quite
high in the Moderator.

2138
01:30:57,190 --> 01:30:59,550
But I also had some people
coming up to me and saying,

2139
01:30:59,550 --> 01:31:02,650
this just really went on too
long and was really boring, at

2140
01:31:02,650 --> 01:31:04,710
the last Edge Conf, this kind of
debate whether we should be

2141
01:31:04,710 --> 01:31:07,150
offering the developer
information about the

2142
01:31:07,150 --> 01:31:07,860
connection speed.

2143
01:31:07,860 --> 01:31:10,510
So as a compromise, I'd like
each of the panelists to

2144
01:31:10,510 --> 01:31:12,180
answer the question, making
only a sound.

2145
01:31:12,180 --> 01:31:15,360

2146
01:31:15,360 --> 01:31:19,800
So in a sound, should the
developer be given details on

2147
01:31:19,800 --> 01:31:21,340
the current connection speed?

2148
01:31:21,340 --> 01:31:23,250
ALEX RUSSELL: Nah.

2149
01:31:23,250 --> 01:31:24,170
CRAIG CAVALIER: Doesn't
bother me.

2150
01:31:24,170 --> 01:31:26,200
JAKE ARCHIBALD: That's
not a sound.

2151
01:31:26,200 --> 01:31:27,882
You can leave now.

2152
01:31:27,882 --> 01:31:28,870
MATT ANDREWS: Error callback.

2153
01:31:28,870 --> 01:31:29,900
JAKE ARCHIBALD: That's
not a sound.

2154
01:31:29,900 --> 01:31:31,055
CALVIN SPEALMAN: Eh.

2155
01:31:31,055 --> 01:31:31,865
ANNE VAN KESTEREN: Eh.

2156
01:31:31,865 --> 01:31:32,440
JAKE ARCHIBALD: OK.

2157
01:31:32,440 --> 01:31:33,940
That's a good percentage of the

2158
01:31:33,940 --> 01:31:36,300
panelists, kind of you know.

2159
01:31:36,300 --> 01:31:38,810
But we should have a serious
discussion about the-- we've

2160
01:31:38,810 --> 01:31:42,160
got these online-offline
event triggers.

2161
01:31:42,160 --> 01:31:44,440
And so how should we be
using them to make

2162
01:31:44,440 --> 01:31:45,350
something work offline?

2163
01:31:45,350 --> 01:31:48,560
Should we build, assuming the
network is there and then fall

2164
01:31:48,560 --> 01:31:49,830
back, using this method?

2165
01:31:49,830 --> 01:31:52,230
Or should we build the machine
offline, and it's there?

2166
01:31:52,230 --> 01:31:55,875
And you had an example, Alex,
with using offline detection.

2167
01:31:55,875 --> 01:31:58,940
ALEX RUSSELL: The online
thing is a lie.

2168
01:31:58,940 --> 01:32:00,810
I think that's really what
it boils down to.

2169
01:32:00,810 --> 01:32:02,340
It's a dirty, nasty,
terrible lie.

2170
01:32:02,340 --> 01:32:05,290
And the only thing that you'll
ever be able to do, that's

2171
01:32:05,290 --> 01:32:07,880
meaningful, is to ping
your service.

2172
01:32:07,880 --> 01:32:09,960
You'll be able to send a request
out to your service.

2173
01:32:09,960 --> 01:32:12,190
And if you get a response back
under deadline-- like, let's

2174
01:32:12,190 --> 01:32:13,300
say you've got a performance
guarantee

2175
01:32:13,300 --> 01:32:13,930
that you need to meet.

2176
01:32:13,930 --> 01:32:16,580
And if you get a response back
under deadline, from your

2177
01:32:16,580 --> 01:32:17,850
service, great.

2178
01:32:17,850 --> 01:32:18,900
So it's over HTTPS.

2179
01:32:18,900 --> 01:32:20,060
It's from your service.

2180
01:32:20,060 --> 01:32:21,190
Things look legit.

2181
01:32:21,190 --> 01:32:23,670
Any other case is failure.

2182
01:32:23,670 --> 01:32:28,810
It's just a giant panoply of
potential failure cases, that

2183
01:32:28,810 --> 01:32:31,240
would all be online.

2184
01:32:31,240 --> 01:32:33,480
Under some strict definition of,
I connected to the radio.

2185
01:32:33,480 --> 01:32:34,410
And I got a PCP stock.

2186
01:32:34,410 --> 01:32:34,980
It warmed up.

2187
01:32:34,980 --> 01:32:38,280
JAKE ARCHIBALD: Craig, Calvin,
Matt, did you use the online

2188
01:32:38,280 --> 01:32:39,380
in anything you were doing?

2189
01:32:39,380 --> 01:32:41,020
Or did you want that
kind of extra

2190
01:32:41,020 --> 01:32:42,822
detection around the network?

2191
01:32:42,822 --> 01:32:46,240
CRAIG CAVALIER: We've made use
of the online and offline.

2192
01:32:46,240 --> 01:32:49,310
We don't have so many
requirements for the grey area

2193
01:32:49,310 --> 01:32:53,270
of not having a decent
amount of connection.

2194
01:32:53,270 --> 01:32:56,760
So for us, we tell the user
whether they can sync or not,

2195
01:32:56,760 --> 01:32:59,230
based on whether they have
this online or offline.

2196
01:32:59,230 --> 01:33:03,200
But as he said, in a lot of
cases, online is bit of a lie.

2197
01:33:03,200 --> 01:33:06,380
But for our users, when they
have a connection, they have a

2198
01:33:06,380 --> 01:33:06,810
connection.

2199
01:33:06,810 --> 01:33:09,630
It's often that they've come
back off of a rig.

2200
01:33:09,630 --> 01:33:10,810
And they're in a hotel.

2201
01:33:10,810 --> 01:33:13,470
And they're making use of
the connection there.

2202
01:33:13,470 --> 01:33:17,180
So for us, just having the
yes and no is enough.

2203
01:33:17,180 --> 01:33:19,690
JAKE ARCHIBALD: I think we'll
take a question from the

2204
01:33:19,690 --> 01:33:21,723
audience, from Schabse.

2205
01:33:21,723 --> 01:33:24,090
ANNE VAN KESTEREN: Just to add,
I think it will also get

2206
01:33:24,090 --> 01:33:28,330
easier once browsers and OSes
get more capable at detecting

2207
01:33:28,330 --> 01:33:29,850
captive portals.

2208
01:33:29,850 --> 01:33:33,340
And I know, Mozilla, we're going
to add this to Firefox,

2209
01:33:33,340 --> 01:33:36,490
in case the OS falls through and
figuring out if you're in

2210
01:33:36,490 --> 01:33:40,550
a captive portal and then tell
the web pages they're offline

2211
01:33:40,550 --> 01:33:43,200
and not give them a false
impression and stuff.

2212
01:33:43,200 --> 01:33:46,300
AUDIENCE: When caching app logic
within content, is there

2213
01:33:46,300 --> 01:33:48,310
a way to cache per-JITted
code.

2214
01:33:48,310 --> 01:33:50,460
A, so you don't need a JIT
for faster start up.

2215
01:33:50,460 --> 01:33:53,050
And B, as JITters get more
intelligent, so that you can

2216
01:33:53,050 --> 01:33:56,010
re-use what the JITter learned
about how your app behaved for

2217
01:33:56,010 --> 01:33:59,380
the last five hours of usage,
both for offline and for

2218
01:33:59,380 --> 01:34:02,333
online scenarios, for
faster start up.

2219
01:34:02,333 --> 01:34:04,217
JAKE ARCHIBALD: Does anyone
want to take that?

2220
01:34:04,217 --> 01:34:05,650
CALVIN SPEALMAN: No.

2221
01:34:05,650 --> 01:34:09,250
That actually was an issue that
come up, I know, in the

2222
01:34:09,250 --> 01:34:10,810
assembly drive JS project.

2223
01:34:10,810 --> 01:34:13,800
There is a very bad problem
there with the time it takes

2224
01:34:13,800 --> 01:34:19,210
to compile, especially large
demos, even the actual

2225
01:34:19,210 --> 01:34:21,530
function, parsing, and compiling
is all synchronous

2226
01:34:21,530 --> 01:34:22,090
and blocking.

2227
01:34:22,090 --> 01:34:23,980
So that's the issue that came
up there, not necessarily

2228
01:34:23,980 --> 01:34:26,150
being offline or reused, but
just the time it takes.

2229
01:34:26,150 --> 01:34:27,230
And could it be asynchronous?

2230
01:34:27,230 --> 01:34:31,900
And I know from that, right now,
the only thing is parsing

2231
01:34:31,900 --> 01:34:34,460
it from the raw JavaScript and
compiling at the time.

2232
01:34:34,460 --> 01:34:38,060
It would be, I think, a really
important thing to look into,

2233
01:34:38,060 --> 01:34:40,450
if they're going to look into
an asynchronous API, to also

2234
01:34:40,450 --> 01:34:41,930
have a way to then reuse
that result.

2235
01:34:41,930 --> 01:34:43,750
JAKE ARCHIBALD: So back
onto the kind of

2236
01:34:43,750 --> 01:34:44,880
network state stuff.

2237
01:34:44,880 --> 01:34:47,660
I mean, if I'm asking the
browser, am I online.

2238
01:34:47,660 --> 01:34:49,880
It's going to say, yes.

2239
01:34:49,880 --> 01:34:52,090
And what we're going to end up
with is, it could just have

2240
01:34:52,090 --> 01:34:55,640
one bar or a kind of intimate
bar of data, which eventually

2241
01:34:55,640 --> 01:34:57,450
is just going to take five
minutes to try getting

2242
01:34:57,450 --> 01:34:59,680
something from the network
and then ultimately fail.

2243
01:34:59,680 --> 01:35:03,210
Anne, you're saying, is that
something that is solvable as

2244
01:35:03,210 --> 01:35:05,812
it was a problem.

2245
01:35:05,812 --> 01:35:08,020
ANNE VAN KESTEREN: That might
be harder, the case where a

2246
01:35:08,020 --> 01:35:09,520
captive portal gives
you a time out.

2247
01:35:09,520 --> 01:35:13,110
But yeah, you would have to
do like periodic checks or

2248
01:35:13,110 --> 01:35:15,270
something like that.

2249
01:35:15,270 --> 01:35:19,650
I think, it might be there
forever, until captive portals

2250
01:35:19,650 --> 01:35:22,210
actually start returning
different status codes.

2251
01:35:22,210 --> 01:35:25,460
There is some kind of RFC that
makes captive portals actually

2252
01:35:25,460 --> 01:35:29,720
part of the network stack,
instead of just a hack.

2253
01:35:29,720 --> 01:35:32,260
You would still have some logic
in your application that

2254
01:35:32,260 --> 01:35:33,670
detects it as well.

2255
01:35:33,670 --> 01:35:36,330
It's hard to get away from,
given the legacy.

2256
01:35:36,330 --> 01:35:38,470
MATT ANDREWS: I think a whole
analogue kind of quality of

2257
01:35:38,470 --> 01:35:41,160
connection over the past
X period of time

2258
01:35:41,160 --> 01:35:41,840
will be more useful.

2259
01:35:41,840 --> 01:35:44,590
But really, most of the time, as
long as you're implementing

2260
01:35:44,590 --> 01:35:47,760
error callbacks, you can always
try and fail gracefully

2261
01:35:47,760 --> 01:35:50,870
or offer something to the user
first and then fall back to

2262
01:35:50,870 --> 01:35:51,560
something else.

2263
01:35:51,560 --> 01:35:52,960
I think that's a much
better pattern.

2264
01:35:52,960 --> 01:35:54,840
JAKE ARCHIBALD: I think
we've got a follow up

2265
01:35:54,840 --> 01:35:56,112
question from Natasha.

2266
01:35:56,112 --> 01:35:59,000

2267
01:35:59,000 --> 01:36:00,600
AUDIENCE: Yes, sorry.

2268
01:36:00,600 --> 01:36:04,450
So just to give a proper use
case from the reason why I ask

2269
01:36:04,450 --> 01:36:07,110
the particular question, which
might be able to help.

2270
01:36:07,110 --> 01:36:10,090
And actually, subscription
models is probably the best

2271
01:36:10,090 --> 01:36:12,490
one to go on, which I know
is important for any

2272
01:36:12,490 --> 01:36:16,450
publications, like "FT" and
other such newspapers.

2273
01:36:16,450 --> 01:36:18,790
What a user who was on a
subscription method and that

2274
01:36:18,790 --> 01:36:20,160
meant that they capped out.

2275
01:36:20,160 --> 01:36:22,140
Say the read 10 articles.

2276
01:36:22,140 --> 01:36:25,190
They read that on the tube,
which I'm also a tube user.

2277
01:36:25,190 --> 01:36:27,400
So they will read
out on the tube.

2278
01:36:27,400 --> 01:36:29,530
They consume that, and then
they violate their

2279
01:36:29,530 --> 01:36:29,990
subscription.

2280
01:36:29,990 --> 01:36:31,260
They've gone, right.

2281
01:36:31,260 --> 01:36:33,230
So they shouldn't be able
to read any more.

2282
01:36:33,230 --> 01:36:36,260
So some trigger has to happen
at some point, for it to go

2283
01:36:36,260 --> 01:36:38,080
back to the server to
say, this user has

2284
01:36:38,080 --> 01:36:39,400
gone over their limit.

2285
01:36:39,400 --> 01:36:40,880
Don't give them anymore.

2286
01:36:40,880 --> 01:36:43,950
So my real idea is trying to
understand how that can

2287
01:36:43,950 --> 01:36:45,690
happen, because that
has massive

2288
01:36:45,690 --> 01:36:47,460
implications for some markets.

2289
01:36:47,460 --> 01:36:49,250
I'm talking videos as
well as publication.

2290
01:36:49,250 --> 01:36:51,170
JAKE ARCHIBALD: So this is
offering the user a different

2291
01:36:51,170 --> 01:36:53,460
experience, if they are on
some kind of metered

2292
01:36:53,460 --> 01:36:56,020
connection, where it's going
to disappear after certain

2293
01:36:56,020 --> 01:36:59,970
points, or potentially bring
a financial situation.

2294
01:36:59,970 --> 01:37:05,190
Does the phone even know if the
user is in that situation?

2295
01:37:05,190 --> 01:37:07,620
CRAIG CAVALIER: A lot of times
I've found that it's not

2296
01:37:07,620 --> 01:37:10,750
necessarily the technology that
has to care about that.

2297
01:37:10,750 --> 01:37:13,020
There's usually a business
process around this.

2298
01:37:13,020 --> 01:37:16,860
So for instance, if you're not
in a banking system, you're

2299
01:37:16,860 --> 01:37:17,860
going to cash point.

2300
01:37:17,860 --> 01:37:19,730
And you withdraw some cash.

2301
01:37:19,730 --> 01:37:23,090
If your spouse has gone to
another cash point and

2302
01:37:23,090 --> 01:37:26,150
withdrawn that amount as well,
and that would take you over

2303
01:37:26,150 --> 01:37:27,050
your overdraft.

2304
01:37:27,050 --> 01:37:29,070
They've got this concept of
overdraft in banking.

2305
01:37:29,070 --> 01:37:32,530
So they've got to a set
way of handling that.

2306
01:37:32,530 --> 01:37:35,200
And usually, in these business
scenarios, there are business

2307
01:37:35,200 --> 01:37:37,100
processes for handling
those cases.

2308
01:37:37,100 --> 01:37:40,290
So for instance, in the case of
your videos, I've watched a

2309
01:37:40,290 --> 01:37:41,690
couple of videos offline.

2310
01:37:41,690 --> 01:37:43,990
Someone else has used
my account to

2311
01:37:43,990 --> 01:37:45,780
watch a few more offline.

2312
01:37:45,780 --> 01:37:48,220
Then there must be some kind of
consolidation, some kind of

2313
01:37:48,220 --> 01:37:51,590
process to pick up those pieces
and then trace that

2314
01:37:51,590 --> 01:37:52,870
back to the billing.

2315
01:37:52,870 --> 01:37:55,100
JAKE ARCHIBALD: Are we
collectively happy with a

2316
01:37:55,100 --> 01:37:58,840
mobile site or app sending
us into our overdraft?

2317
01:37:58,840 --> 01:38:01,090
ANNE VAN KESTEREN: I think we're
collectively unhappy

2318
01:38:01,090 --> 01:38:05,190
about that even being
a possibility.

2319
01:38:05,190 --> 01:38:09,880
The whole bandwidth cap thing is
like bullshit and should be

2320
01:38:09,880 --> 01:38:11,205
gone at some point.

2321
01:38:11,205 --> 01:38:13,130
JAKE ARCHIBALD: I've been in
situations where my phone

2322
01:38:13,130 --> 01:38:17,090
knows that I'm roaming, but I've
actually managed to get a

2323
01:38:17,090 --> 01:38:20,380
deal with the provider where
I essentially have the same

2324
01:38:20,380 --> 01:38:22,690
quality and amount of data
that I have at home.

2325
01:38:22,690 --> 01:38:25,210
I guess, if an app at this point
was to serve me lower

2326
01:38:25,210 --> 01:38:27,520
quality content, I'd be a
bit annoyed about that.

2327
01:38:27,520 --> 01:38:29,440
I'm being treated as a
second-class citizen, when I'm

2328
01:38:29,440 --> 01:38:31,040
not in that situation.

2329
01:38:31,040 --> 01:38:35,070
So do we need an option to--
is this going to be a

2330
01:38:35,070 --> 01:38:37,550
site-per-site option to say, can
you be easy on the data.

2331
01:38:37,550 --> 01:38:40,405
Or should sites just be doing
easy on data, by default?

2332
01:38:40,405 --> 01:38:42,770
ALEX RUSSELL: I think there was
a billing issue, not so

2333
01:38:42,770 --> 01:38:44,530
much about the data that Natasha
was bringing up.

2334
01:38:44,530 --> 01:38:51,940
But there's some non-packet
based metric for use.

2335
01:38:51,940 --> 01:38:54,790
So the question I always
ask is, what

2336
01:38:54,790 --> 01:38:56,040
is a Wikipedia article.

2337
01:38:56,040 --> 01:38:57,140
Is it the text?

2338
01:38:57,140 --> 01:38:58,160
Is it the history?

2339
01:38:58,160 --> 01:39:00,270
Is it all the images that
are part of it?

2340
01:39:00,270 --> 01:39:01,710
Is it the set of things
that it's linked to?

2341
01:39:01,710 --> 01:39:03,130
Is it the URL?

2342
01:39:03,130 --> 01:39:07,270
It's actually probably a bundle
of binary resources and

2343
01:39:07,270 --> 01:39:11,040
then some ephemeral metadata
around it.

2344
01:39:11,040 --> 01:39:12,380
And so you're talking
about consuming one

2345
01:39:12,380 --> 01:39:13,450
of those at a time.

2346
01:39:13,450 --> 01:39:15,915
So if I'm on the "FT" or the
"New York Times" or whatever,

2347
01:39:15,915 --> 01:39:16,750
and I'm clicking through.

2348
01:39:16,750 --> 01:39:18,400
How do I get to my limit?

2349
01:39:18,400 --> 01:39:19,730
And then how do I
enforce that?

2350
01:39:19,730 --> 01:39:22,840
Not to go design a solution for
enforcement for anybody,

2351
01:39:22,840 --> 01:39:25,080
but you can imagine a relatively
straightforward

2352
01:39:25,080 --> 01:39:32,040
sort of soft landing for users,
where there's a bit of

2353
01:39:32,040 --> 01:39:34,490
code on the client that's
watching usage and then

2354
01:39:34,490 --> 01:39:37,860
attempts to enforce some
soft limit, with a cap,

2355
01:39:37,860 --> 01:39:39,120
with one or two extra.

2356
01:39:39,120 --> 01:39:43,210
And then, at some point later,
if you haven't synced in n

2357
01:39:43,210 --> 01:39:45,920
number of days, then maybe the
content becomes inaccessible.

2358
01:39:45,920 --> 01:39:49,400
I mean, those are the sorts of
solutions that folks who have

2359
01:39:49,400 --> 01:39:53,050
to implement CRM are doing
today, for things like my

2360
01:39:53,050 --> 01:39:55,030
synced Spotify offline data.

2361
01:39:55,030 --> 01:39:57,410
You have to it you have to show
that you're willing to be

2362
01:39:57,410 --> 01:39:59,010
part of the ecosystem for
some period of time.

2363
01:39:59,010 --> 01:40:02,530
Otherwise, the device itself
decides to stop playing.

2364
01:40:02,530 --> 01:40:03,490
JAKE ARCHIBALD: I think
we'll take another

2365
01:40:03,490 --> 01:40:04,470
question from the audience.

2366
01:40:04,470 --> 01:40:05,460
Hendrick, whereabouts are you?

2367
01:40:05,460 --> 01:40:07,175
Can we get that man
a microphone?

2368
01:40:07,175 --> 01:40:11,620

2369
01:40:11,620 --> 01:40:12,360
Just throw it.

2370
01:40:12,360 --> 01:40:13,010
ALEX RUSSELL: It's
a good question.

2371
01:40:13,010 --> 01:40:15,661
JAKE ARCHIBALD: It'll be safe.

2372
01:40:15,661 --> 01:40:19,530
AUDIENCE: So this is kind of
back at the permission models.

2373
01:40:19,530 --> 01:40:21,970
It seems like, at the point,
you're going offline, you're

2374
01:40:21,970 --> 01:40:23,510
making a fundamentally
different type

2375
01:40:23,510 --> 01:40:24,760
of app than a website.

2376
01:40:24,760 --> 01:40:26,310
There's a distinction
between a site and a

2377
01:40:26,310 --> 01:40:27,110
website at that point.

2378
01:40:27,110 --> 01:40:29,270
It's very clearly an app.

2379
01:40:29,270 --> 01:40:30,540
And then you're talking
about requesting

2380
01:40:30,540 --> 01:40:31,890
permission for storage.

2381
01:40:31,890 --> 01:40:34,950
But also, that's a perfect time
to ask for permission for

2382
01:40:34,950 --> 01:40:35,830
other things as well.

2383
01:40:35,830 --> 01:40:38,340
So there's this kind of whole
installable model that you're

2384
01:40:38,340 --> 01:40:40,610
seeing a little bit in
Android and Chrome

2385
01:40:40,610 --> 01:40:41,890
installed apps as well.

2386
01:40:41,890 --> 01:40:45,930
But is there standards efforts
to really unify that

2387
01:40:45,930 --> 01:40:46,610
experience?

2388
01:40:46,610 --> 01:40:49,730
And for example, if I'm going to
do video conferencing, why

2389
01:40:49,730 --> 01:40:52,960
shouldn't I be able to ask for
that upfront, as a mandatory

2390
01:40:52,960 --> 01:40:54,220
requirement?

2391
01:40:54,220 --> 01:40:55,510
And if they say,
no, then sorry.

2392
01:40:55,510 --> 01:40:56,770
I can't install the app.

2393
01:40:56,770 --> 01:40:57,550
I mean, whatever.

2394
01:40:57,550 --> 01:41:00,670
That's just an example, but
unifying that, standardizing

2395
01:41:00,670 --> 01:41:03,700
that process, and seeing that as
the permission point, where

2396
01:41:03,700 --> 01:41:05,810
you ask for everything
that you need.

2397
01:41:05,810 --> 01:41:07,890
JAKE ARCHIBALD: I feel like I
could sink the rest of the

2398
01:41:07,890 --> 01:41:11,170
panel into a discussion of, do
apps actually exist as a term.

2399
01:41:11,170 --> 01:41:13,985
Or is it just a bit of marketing
fluff, like web 2.0?

2400
01:41:13,985 --> 01:41:15,420
MATT ANDREWS: That's not fair.

2401
01:41:15,420 --> 01:41:17,200
JAKE ARCHIBALD: But we're
not going to go there.

2402
01:41:17,200 --> 01:41:18,780
ANNE VAN KESTEREN: I feel
Alex already answered

2403
01:41:18,780 --> 01:41:19,820
his question earlier.

2404
01:41:19,820 --> 01:41:25,600
Like he said, on the web, you
want to feel gracefully for

2405
01:41:25,600 --> 01:41:28,250
each of the things.

2406
01:41:28,250 --> 01:41:32,310
So you don't want to bundle and
then get the users to give

2407
01:41:32,310 --> 01:41:35,300
up his location data, all his
storage, and all those things.

2408
01:41:35,300 --> 01:41:39,670
You want to let the user be in
control, which sort of argues

2409
01:41:39,670 --> 01:41:44,620
in the way of doing a
per-feature grant.

2410
01:41:44,620 --> 01:41:47,095
AUDIENCE: But isn't that always
going to make you a

2411
01:41:47,095 --> 01:41:48,940
second-class citizen to
an installed app?

2412
01:41:48,940 --> 01:41:49,930
ALEX RUSSELL: I don't
think so.

2413
01:41:49,930 --> 01:41:51,340
So just to answer directly, I
don't think that makes you a

2414
01:41:51,340 --> 01:41:54,220
second-class citizen to the
installed applications, for a

2415
01:41:54,220 --> 01:41:54,760
couple of reasons.

2416
01:41:54,760 --> 01:41:58,580
One, it leaves it up to the
system to mediate the length

2417
01:41:58,580 --> 01:42:01,090
and breadth of that grant.

2418
01:42:01,090 --> 01:42:02,560
So you can imagine that--

2419
01:42:02,560 --> 01:42:05,240
iOS versus Android, running the
same application, as long

2420
01:42:05,240 --> 01:42:07,090
as the API is the same, they
can make different choices

2421
01:42:07,090 --> 01:42:09,240
about how often to prompt
someone about a thing.

2422
01:42:09,240 --> 01:42:13,400
Secondly, you can imagine this
being a consent in review kind

2423
01:42:13,400 --> 01:42:16,150
of a system, where users are
always able to see the list of

2424
01:42:16,150 --> 01:42:18,110
permissions that are currently
granted to a thing and maybe

2425
01:42:18,110 --> 01:42:21,050
choose to give it forever
or revoke it entirely.

2426
01:42:21,050 --> 01:42:23,520
And as long as the API allows
revocation to happen--

2427
01:42:23,520 --> 01:42:24,570
you say, you demand
this thing.

2428
01:42:24,570 --> 01:42:27,760
Well, I think it's not
reasonable to demand the thing

2429
01:42:27,760 --> 01:42:28,500
at install time.

2430
01:42:28,500 --> 01:42:31,940
I think it's reasonable to try
to explain that behavior in

2431
01:42:31,940 --> 01:42:33,550
context of use.

2432
01:42:33,550 --> 01:42:37,040
I click on a link to go do
a thing, and you say, no.

2433
01:42:37,040 --> 01:42:37,700
OK, great.

2434
01:42:37,700 --> 01:42:39,780
I did a thing, and then we had
a conversation about it.

2435
01:42:39,780 --> 01:42:41,470
And then you can tell me
why you need me to do

2436
01:42:41,470 --> 01:42:42,460
that thing for you.

2437
01:42:42,460 --> 01:42:43,790
It's not foolproof.

2438
01:42:43,790 --> 01:42:45,320
And it may train users
the wrong way.

2439
01:42:45,320 --> 01:42:47,290
But it's at least a start of
having a conversation about

2440
01:42:47,290 --> 01:42:49,780
why you want permissions.

2441
01:42:49,780 --> 01:42:51,640
ANNE VAN KESTEREN: I can maybe
see, in a way, how it's second

2442
01:42:51,640 --> 01:42:53,390
class from a developer's
perspective.

2443
01:42:53,390 --> 01:42:55,560
But I think, from a user's
perspective, it's

2444
01:42:55,560 --> 01:42:58,780
a way better deal.

2445
01:42:58,780 --> 01:43:00,140
JAKE ARCHIBALD: Can we get the
microphone to Kyle Simpson for

2446
01:43:00,140 --> 01:43:00,740
the next question?

2447
01:43:00,740 --> 01:43:03,910
But first, Matt, you, with the
Financial Times, taking that

2448
01:43:03,910 --> 01:43:05,150
stuff offline, some of
that stuff was quite

2449
01:43:05,150 --> 01:43:07,170
heavy, due to imagery.

2450
01:43:07,170 --> 01:43:09,650
Did you deal with that in any
particular Way did you ask the

2451
01:43:09,650 --> 01:43:11,850
user, within your app,
before doing that?

2452
01:43:11,850 --> 01:43:12,430
MATT ANDREWS: Yes.

2453
01:43:12,430 --> 01:43:15,070
So when you first let out the
app, originally, it was

2454
01:43:15,070 --> 01:43:15,940
designed for iOS.

2455
01:43:15,940 --> 01:43:20,010
And the limitation on iOS is,
you can have five megabytes of

2456
01:43:20,010 --> 01:43:21,540
storage, without
any permission.

2457
01:43:21,540 --> 01:43:24,050
So we first give them five
megabytes of data, which what

2458
01:43:24,050 --> 01:43:25,120
they asked for basically.

2459
01:43:25,120 --> 01:43:27,425
And once they've used
the app a bit.

2460
01:43:27,425 --> 01:43:29,215
Or it pinches their
homescreen and

2461
01:43:29,215 --> 01:43:29,940
actually using it properly.

2462
01:43:29,940 --> 01:43:31,740
We then ask for more.

2463
01:43:31,740 --> 01:43:35,020
So I think you can definitely
design your applications so

2464
01:43:35,020 --> 01:43:39,240
that you have a certain number
of mandatory requirements and

2465
01:43:39,240 --> 01:43:41,850
then add things on.

2466
01:43:41,850 --> 01:43:43,810
I mean, it's starts
off as a website.

2467
01:43:43,810 --> 01:43:46,150
You can always fall back
to being a website.

2468
01:43:46,150 --> 01:43:47,230
All this stuff is extra.

2469
01:43:47,230 --> 01:43:49,910
JAKE ARCHIBALD: I just caught
myself on the screen looking

2470
01:43:49,910 --> 01:43:51,550
like I'm advertising the
thing I'm drinking.

2471
01:43:51,550 --> 01:43:53,500
So I'm going to balance it out
by saying, it's actually quite

2472
01:43:53,500 --> 01:43:55,074
disgusting.

2473
01:43:55,074 --> 01:43:57,195
We've got a question
now, from Kyle.

2474
01:43:57,195 --> 01:44:02,100

2475
01:44:02,100 --> 01:44:03,350
Kyle is over there.

2476
01:44:03,350 --> 01:44:05,590

2477
01:44:05,590 --> 01:44:09,490
AUDIENCE: So usually, I am the
one who's screaming for more

2478
01:44:09,490 --> 01:44:11,860
APIs, more functionality
to be given to us.

2479
01:44:11,860 --> 01:44:15,250
But I'm going to flip the table
here and say, going with

2480
01:44:15,250 --> 01:44:17,740
the theme that browsers are
generally better at a lot of

2481
01:44:17,740 --> 01:44:22,780
these tasks, as a developer of
apps and sites, one thing I'd

2482
01:44:22,780 --> 01:44:25,670
really not like to deal
with is the idea

2483
01:44:25,670 --> 01:44:27,200
of online and offline.

2484
01:44:27,200 --> 01:44:29,550
So one idea that I would just
wanted to bounce and see if

2485
01:44:29,550 --> 01:44:31,910
you think would be possible--

2486
01:44:31,910 --> 01:44:35,160
we've talked a lot about
persisting the actual app, the

2487
01:44:35,160 --> 01:44:36,660
files that make the app run.

2488
01:44:36,660 --> 01:44:38,160
But what about all the
network requests?

2489
01:44:38,160 --> 01:44:42,420
Could the browser proxy the
request that I'm making for me

2490
01:44:42,420 --> 01:44:44,865
and then, when I come back
online, prompt me and say, do

2491
01:44:44,865 --> 01:44:46,190
you want to still send
these Tweets.

2492
01:44:46,190 --> 01:44:46,970
Do you want to still send

2493
01:44:46,970 --> 01:44:49,200
these emails, because
you requested that

2494
01:44:49,200 --> 01:44:50,600
a few minutes ago?

2495
01:44:50,600 --> 01:44:52,690
That way, I, as an app
developer, don't have to think

2496
01:44:52,690 --> 01:44:53,890
about those details.

2497
01:44:53,890 --> 01:44:56,450
I just make the app assume
online, and let the browser

2498
01:44:56,450 --> 01:44:58,146
take care of it.

2499
01:44:58,146 --> 01:45:01,010
CALVIN SPEALMAN: I think there's
actually two areas

2500
01:45:01,010 --> 01:45:02,750
there that need to be addressed
differently, which

2501
01:45:02,750 --> 01:45:06,010
is a things and things
you do--

2502
01:45:06,010 --> 01:45:09,610
keeping the data locally first
and allowing synchronization

2503
01:45:09,610 --> 01:45:11,280
to happen separate
from your app.

2504
01:45:11,280 --> 01:45:14,710
For example, CouchDB has a
PouchDB layer that will be

2505
01:45:14,710 --> 01:45:16,160
implemented inside
the browser.

2506
01:45:16,160 --> 01:45:18,510
And you have all your
local data.

2507
01:45:18,510 --> 01:45:21,110
And the transition happens
in a separate process.

2508
01:45:21,110 --> 01:45:23,560
Synchronizing API calls, like
Tweets and things, I don't

2509
01:45:23,560 --> 01:45:26,300
think it makes sense to do
separately or to queue up in

2510
01:45:26,300 --> 01:45:26,900
the background.

2511
01:45:26,900 --> 01:45:29,550
Because the user needs to know
that hasn't happened yet.

2512
01:45:29,550 --> 01:45:32,090
You can't just make the Tweet
and say, here's my API call.

2513
01:45:32,090 --> 01:45:34,050
I hope the browser did it
sometime later, maybe.

2514
01:45:34,050 --> 01:45:38,200
You have to tell the browser
user, this hasn't sent yet.

2515
01:45:38,200 --> 01:45:39,510
This hasn't completed.

2516
01:45:39,510 --> 01:45:41,346
They have to know
what's going on.

2517
01:45:41,346 --> 01:45:43,450
ALEX RUSSELL: There's a related
issue, which is, what

2518
01:45:43,450 --> 01:45:46,620
does it mean to get success
back from an API.

2519
01:45:46,620 --> 01:45:53,120
If I get a 200 response and the
return content is error.

2520
01:45:53,120 --> 01:45:54,890
How do I cut the browser
into the

2521
01:45:54,890 --> 01:45:58,216
conversation, so that it retries?

2522
01:45:58,216 --> 01:46:01,600
AUDIENCE: So I was under the
assumption that a browser

2523
01:46:01,600 --> 01:46:03,890
knows that it doesn't
have connectivity.

2524
01:46:03,890 --> 01:46:06,130
It tries to talk to the radio,
an d the radio doesn't give

2525
01:46:06,130 --> 01:46:07,610
any sort of response back.

2526
01:46:07,610 --> 01:46:10,000
But also, there's plenty of UIs
that we do this already.

2527
01:46:10,000 --> 01:46:12,520
When I'm downloading files,
there are UIs that tell me the

2528
01:46:12,520 --> 01:46:14,530
status of my downloads and
let me unpause it.

2529
01:46:14,530 --> 01:46:17,270
So I don't understand why the
same sort of API couldn't

2530
01:46:17,270 --> 01:46:20,370
present to me, the user,
that here's the

2531
01:46:20,370 --> 01:46:21,330
request that I've made.

2532
01:46:21,330 --> 01:46:22,060
And I want to say, yes.

2533
01:46:22,060 --> 01:46:24,220
These are OK to make, now
that you're back online.

2534
01:46:24,220 --> 01:46:26,760
No, that Tweet is not one I want
to send out or whatever.

2535
01:46:26,760 --> 01:46:29,890
JAKE ARCHIBALD: It sounds like
a difference between adaptive

2536
01:46:29,890 --> 01:46:32,720
requests and predictive
requests, in terms of what we

2537
01:46:32,720 --> 01:46:34,600
expect to get from
the network.

2538
01:46:34,600 --> 01:46:36,730
Is that something that
comes into this?

2539
01:46:36,730 --> 01:46:39,256
Are we going to have
APIs around that?

2540
01:46:39,256 --> 01:46:40,850
ALEX RUSSELL: I think there's
a fundamental difference

2541
01:46:40,850 --> 01:46:45,210
between the download case that
you just tried to outline and

2542
01:46:45,210 --> 01:46:46,590
these other cases.

2543
01:46:46,590 --> 01:46:49,500
It is that, in the download
case, we're talking in terms

2544
01:46:49,500 --> 01:46:51,280
of a single resource
that the browser

2545
01:46:51,280 --> 01:46:52,460
knows everything about.

2546
01:46:52,460 --> 01:46:53,890
The browser knows the
entire protocol for

2547
01:46:53,890 --> 01:46:55,200
downloading a file.

2548
01:46:55,200 --> 01:46:57,100
And in fact, it's the thing
giving you the UI for

2549
01:46:57,100 --> 01:46:58,290
downloading the file.

2550
01:46:58,290 --> 01:47:01,000
This is a situation in which
we're asking the browser to

2551
01:47:01,000 --> 01:47:03,170
coordinate with the application
that its hosting,

2552
01:47:03,170 --> 01:47:06,350
to talk about mediating that
conversation about content.

2553
01:47:06,350 --> 01:47:08,520
It's running the application and
saying, hey application,

2554
01:47:08,520 --> 01:47:09,520
you're doing stuff.

2555
01:47:09,520 --> 01:47:10,880
The user intends
to do a thing.

2556
01:47:10,880 --> 01:47:12,770
You're going to tell me what
that thing is and then tell me

2557
01:47:12,770 --> 01:47:14,500
how that relates to the
rest of the world.

2558
01:47:14,500 --> 01:47:17,030
And we don't have any
higher-level semantic

2559
01:47:17,030 --> 01:47:18,030
equivalents.

2560
01:47:18,030 --> 01:47:19,680
There's no way to tell the
browser, oh, this thing is

2561
01:47:19,680 --> 01:47:20,340
sending a tweet.

2562
01:47:20,340 --> 01:47:23,160
Browsers don't know
what Tweets are.

2563
01:47:23,160 --> 01:47:24,790
These are just different
data types.

2564
01:47:24,790 --> 01:47:26,890
One of them is a composite data
type, and one of them is

2565
01:47:26,890 --> 01:47:27,460
a primitive.

2566
01:47:27,460 --> 01:47:29,990
And browsers are OK at
primitives they understand.

2567
01:47:29,990 --> 01:47:31,820
But when it comes to composites,
we have to give

2568
01:47:31,820 --> 01:47:34,404
applications control.

2569
01:47:34,404 --> 01:47:35,700
JAKE ARCHIBALD: I think
we're going to move

2570
01:47:35,700 --> 01:47:36,600
on to the next topic.

2571
01:47:36,600 --> 01:47:38,420
The next question is
from Nick Molineau.

2572
01:47:38,420 --> 01:47:39,310
Whereabouts are you hiding?

2573
01:47:39,310 --> 01:47:41,320
Over there, can we get a
microphone over there?

2574
01:47:41,320 --> 01:47:44,860

2575
01:47:44,860 --> 01:47:45,870
Oh, someone was just going
to the toilet.

2576
01:47:45,870 --> 01:47:47,100
I thought they were
asking a question.

2577
01:47:47,100 --> 01:47:50,970
Never mind, I should ask them a
question anyway, serve them

2578
01:47:50,970 --> 01:47:52,400
right for getting up.

2579
01:47:52,400 --> 01:47:56,140
AUDIENCE: So users only expect
offline behavior from apps

2580
01:47:56,140 --> 01:47:57,680
downloaded from their
app store.

2581
01:47:57,680 --> 01:48:01,880
Will initiatives like iOS's
Start Up image and Touch icon

2582
01:48:01,880 --> 01:48:05,040
ever be expanded to include a
full metadata set, suitable

2583
01:48:05,040 --> 01:48:08,040
for web apps to finally be
included in app stores?

2584
01:48:08,040 --> 01:48:09,680
JAKE ARCHIBALD: I think this is
a very important question.

2585
01:48:09,680 --> 01:48:12,540
Because even if we solve all the
API issues, we still have

2586
01:48:12,540 --> 01:48:14,890
that user expectation that they
do not think they can go

2587
01:48:14,890 --> 01:48:17,160
into the browser, type in the
URL, and expect it to work,

2588
01:48:17,160 --> 01:48:19,440
when they know they have
no connectivity.

2589
01:48:19,440 --> 01:48:21,900
So the guys who have been
building stuff using the

2590
01:48:21,900 --> 01:48:25,740
current set of APIs, what did
you do to let the user know

2591
01:48:25,740 --> 01:48:28,045
that, yeah, this is
going to work?

2592
01:48:28,045 --> 01:48:29,830
CALVIN SPEALMAN: Well, I first
started looking at these

2593
01:48:29,830 --> 01:48:31,540
offline apps in Firefox 3.

2594
01:48:31,540 --> 01:48:33,970
So my choice then was, I'm just
not going to use this.

2595
01:48:33,970 --> 01:48:35,730
Because there's no solution.

2596
01:48:35,730 --> 01:48:38,190
And the point of that was,
it's been a long time.

2597
01:48:38,190 --> 01:48:39,520
We should have solved
this by now.

2598
01:48:39,520 --> 01:48:44,320
We do have a mechanism for users
to the access to an app

2599
01:48:44,320 --> 01:48:47,260
or a website and to indicate
to the browser that it's

2600
01:48:47,260 --> 01:48:49,360
important to them and to
remember to come back to it.

2601
01:48:49,360 --> 01:48:50,260
It's the bookmark.

2602
01:48:50,260 --> 01:48:51,340
And we have this.

2603
01:48:51,340 --> 01:48:52,210
And it's barely used.

2604
01:48:52,210 --> 01:48:54,990
And it makes a lot of sense
to connect that into the

2605
01:48:54,990 --> 01:48:58,010
permissions, into quotas, into
all these things we need to

2606
01:48:58,010 --> 01:48:59,830
remember about a website.

2607
01:48:59,830 --> 01:49:03,100
JAKE ARCHIBALD: So Craig, you
kind of specialized that for a

2608
01:49:03,100 --> 01:49:04,410
particular set of people.

2609
01:49:04,410 --> 01:49:07,070
How did you communicate to them
that, though this is a

2610
01:49:07,070 --> 01:49:08,890
browser, this is
going to work?

2611
01:49:08,890 --> 01:49:10,980
This is going to work for you.

2612
01:49:10,980 --> 01:49:14,200
CRAIG CAVALIER: We go about this
in different approaches,

2613
01:49:14,200 --> 01:49:21,140
depending on the different
requirements for the hardware.

2614
01:49:21,140 --> 01:49:25,660
So one of the nice things about
iOS is, you can add apps

2615
01:49:25,660 --> 01:49:26,590
to your home screen.

2616
01:49:26,590 --> 01:49:29,060
And that becomes kind
of difficult in some

2617
01:49:29,060 --> 01:49:29,660
of the other browsers.

2618
01:49:29,660 --> 01:49:33,340
I think you can do, add
to home screen in

2619
01:49:33,340 --> 01:49:35,900
other browsers as well.

2620
01:49:35,900 --> 01:49:38,920
It's a bit shaky.

2621
01:49:38,920 --> 01:49:43,220
So yeah, it would be nice if
there were some way of saying,

2622
01:49:43,220 --> 01:49:44,600
hey, I want to be able
to install this.

2623
01:49:44,600 --> 01:49:47,690
I know Firefox has made some
progress in that direction,

2624
01:49:47,690 --> 01:49:49,840
with the manifest file.

2625
01:49:49,840 --> 01:49:52,310
So you can specify things that
your application needs when

2626
01:49:52,310 --> 01:49:53,970
you install.

2627
01:49:53,970 --> 01:49:56,600
I think having some
standardization around this

2628
01:49:56,600 --> 01:49:59,040
kind of processes is going
to help companies like

2629
01:49:59,040 --> 01:50:01,490
us make that work.

2630
01:50:01,490 --> 01:50:04,780
JAKE ARCHIBALD: So Matt, your
site was open to all users.

2631
01:50:04,780 --> 01:50:07,010
You had to explain to them
that this was possible.

2632
01:50:07,010 --> 01:50:07,920
How do you do that?

2633
01:50:07,920 --> 01:50:11,540
MATT ANDREWS: Well, iOS,
like you say, is easy.

2634
01:50:11,540 --> 01:50:13,310
The best of them,
we just don't.

2635
01:50:13,310 --> 01:50:16,170
And unfortunately, this is one
of the reasons why we don't

2636
01:50:16,170 --> 01:50:18,945
see that many users on Chrome
for Android, even though the

2637
01:50:18,945 --> 01:50:21,810
app works absolutely
brilliantly on it.

2638
01:50:21,810 --> 01:50:24,710
And the Chrome Web Store, you
said, there were two ways of

2639
01:50:24,710 --> 01:50:27,290
making web apps work offline,
the Google Gaze and AppCache.

2640
01:50:27,290 --> 01:50:29,840
There's also, the Chrome
Web Store offers

2641
01:50:29,840 --> 01:50:32,320
an alternative approach.

2642
01:50:32,320 --> 01:50:36,840
And you can use that to get
your app icon on the dock

2643
01:50:36,840 --> 01:50:37,950
called Start Menu.

2644
01:50:37,950 --> 01:50:39,880
And I think that would be really
nice to make that more

2645
01:50:39,880 --> 01:50:41,920
open and accessible
to other places.

2646
01:50:41,920 --> 01:50:43,440
JAKE ARCHIBALD: Is there
anything in the spec that's

2647
01:50:43,440 --> 01:50:45,290
going to make this better?

2648
01:50:45,290 --> 01:50:47,370
Or how can we communicate this
better to users, that the web

2649
01:50:47,370 --> 01:50:48,470
will work offline?

2650
01:50:48,470 --> 01:50:50,110
ANNE VAN KESTEREN: So we've been
looking into the manifest

2651
01:50:50,110 --> 01:50:51,810
thing and making that better.

2652
01:50:51,810 --> 01:50:55,620
But I think a lot of the
standards, how they've evolved

2653
01:50:55,620 --> 01:50:57,770
is in small, incremental
steps.

2654
01:50:57,770 --> 01:50:59,390
So first, we need to
solve this offline

2655
01:50:59,390 --> 01:51:00,590
thing and get it right.

2656
01:51:00,590 --> 01:51:03,020
And then people can start
building apps.

2657
01:51:03,020 --> 01:51:05,470
And then we can start thinking
about how to improve bookmarks

2658
01:51:05,470 --> 01:51:07,090
to make that work better.

2659
01:51:07,090 --> 01:51:09,190
And then, long term, hopefully,
we can obsolete the

2660
01:51:09,190 --> 01:51:11,460
concept of app stores entirely,
because you can just

2661
01:51:11,460 --> 01:51:13,810
browse the web and bookmark
things to your home screen and

2662
01:51:13,810 --> 01:51:14,630
know that we need those.

2663
01:51:14,630 --> 01:51:16,600
JAKE ARCHIBALD: Can we get this
right before we have the

2664
01:51:16,600 --> 01:51:19,570
mechanism for users to
realize it works?

2665
01:51:19,570 --> 01:51:21,320
Because we don't know we've got
it right, until we've got

2666
01:51:21,320 --> 01:51:22,810
users using it.

2667
01:51:22,810 --> 01:51:24,840
We see the behavior patterns,
and we see the bits of the

2668
01:51:24,840 --> 01:51:26,930
APIs that aren't working.

2669
01:51:26,930 --> 01:51:28,680
ANNE VAN KESTEREN: Chicken-egg,
I guess.

2670
01:51:28,680 --> 01:51:31,830
You have to grow into
getting there.

2671
01:51:31,830 --> 01:51:35,180
You can't really just design the
whole thing up front and

2672
01:51:35,180 --> 01:51:35,840
then present it.

2673
01:51:35,840 --> 01:51:36,680
And it just works.

2674
01:51:36,680 --> 01:51:38,460
MATT ANDREWS: When you say
getting offline working right,

2675
01:51:38,460 --> 01:51:42,740
you mean the terminology
formerly called navigation

2676
01:51:42,740 --> 01:51:43,455
controller, right?

2677
01:51:43,455 --> 01:51:44,880
ANNE VAN KESTEREN: Yeah.

2678
01:51:44,880 --> 01:51:47,820
Well, I'm hoping Service
Worker is the answer.

2679
01:51:47,820 --> 01:51:48,990
We'll have to find out.

2680
01:51:48,990 --> 01:51:49,630
We have to test.

2681
01:51:49,630 --> 01:51:52,020
We have to incrementally
evolve.

2682
01:51:52,020 --> 01:51:54,610
We're at prototyping stage
now, so it's early days.

2683
01:51:54,610 --> 01:51:56,430
MATT ANDREWS: But from the
user's perspective, as much

2684
01:51:56,430 --> 01:51:59,610
AppCache is a bit loathed,
it does kind of work.

2685
01:51:59,610 --> 01:52:00,870
It will give you an

2686
01:52:00,870 --> 01:52:02,305
application that works offline.

2687
01:52:02,305 --> 01:52:05,080
Can we not just fill in
that little step to

2688
01:52:05,080 --> 01:52:05,990
get the icon in there?

2689
01:52:05,990 --> 01:52:07,070
And then it will be compatible
with both.

2690
01:52:07,070 --> 01:52:09,190
ANNE VAN KESTEREN: The problem
with AppCache is that, we got

2691
01:52:09,190 --> 01:52:11,260
a sort of universal no
back from developers.

2692
01:52:11,260 --> 01:52:13,520
So people don't really want to
experiment with it and roll it

2693
01:52:13,520 --> 01:52:14,770
out on their sites.

2694
01:52:14,770 --> 01:52:17,460

2695
01:52:17,460 --> 01:52:19,470
And if there's no adoption, then
we can't really further

2696
01:52:19,470 --> 01:52:21,175
experiment with other things.

2697
01:52:21,175 --> 01:52:23,030
JAKE ARCHIBALD: So Alex, it
seems like the sentiment of

2698
01:52:23,030 --> 01:52:25,080
the rest of the panel is that
Chrome for Android is doing

2699
01:52:25,080 --> 01:52:28,870
this very badly, that the
installed home screen this is

2700
01:52:28,870 --> 01:52:30,320
great for iOS.

2701
01:52:30,320 --> 01:52:31,120
Where is it?

2702
01:52:31,120 --> 01:52:32,640
ALEX RUSSELL: That's
a great question.

2703
01:52:32,640 --> 01:52:35,355
John--

2704
01:52:35,355 --> 01:52:36,770
JAKE ARCHIBALD: Are you prepared
to answer this, John?

2705
01:52:36,770 --> 01:52:39,520

2706
01:52:39,520 --> 01:52:40,780
We'll get a microphone
to John anyway.

2707
01:52:40,780 --> 01:52:41,940
And he can at least
tell us that he's

2708
01:52:41,940 --> 01:52:42,790
not allowed to answer.

2709
01:52:42,790 --> 01:52:43,810
ALEX RUSSELL: If I had
my druthers, we would

2710
01:52:43,810 --> 01:52:44,990
absolutely have that.

2711
01:52:44,990 --> 01:52:46,690
I mean, I think that's
a reasonable

2712
01:52:46,690 --> 01:52:47,960
thing to want to have.

2713
01:52:47,960 --> 01:52:50,540
My personal view-- and I'm not
speaking for Google here-- is

2714
01:52:50,540 --> 01:52:53,500
that, the manifest destiny of
web apps is that, they can do

2715
01:52:53,500 --> 01:52:54,970
everything that apps can do.

2716
01:52:54,970 --> 01:52:56,720
Everything that your system
application should be able to

2717
01:52:56,720 --> 01:52:58,960
do, you should be able to
write as web page first.

2718
01:52:58,960 --> 01:53:00,810
And then you should be able to
transition to a world that's

2719
01:53:00,810 --> 01:53:02,670
much more powerful.

2720
01:53:02,670 --> 01:53:05,070
And that just depends on getting
users to a point where

2721
01:53:05,070 --> 01:53:06,700
they believe that's a
safe thing to do.

2722
01:53:06,700 --> 01:53:09,390
And if that's saying no to
some permissions to get

2723
01:53:09,390 --> 01:53:11,050
others, that sounds good.

2724
01:53:11,050 --> 01:53:13,820
Or asking users to install or
bless a thing, that seems

2725
01:53:13,820 --> 01:53:14,280
reasonable.

2726
01:53:14,280 --> 01:53:16,830
But yeah I want it.

2727
01:53:16,830 --> 01:53:19,730
JAKE ARCHIBALD: John, do you
have a comment or no comment?

2728
01:53:19,730 --> 01:53:20,620
JOHN: I'm with Alex.

2729
01:53:20,620 --> 01:53:23,580
I think we have a lot more
to do in this space.

2730
01:53:23,580 --> 01:53:30,160
And to make it, with apps, more
capable, we're putting

2731
01:53:30,160 --> 01:53:30,880
friends only.

2732
01:53:30,880 --> 01:53:32,280
We'll see what happens.

2733
01:53:32,280 --> 01:53:33,580
JAKE ARCHIBALD: We'll
take one more

2734
01:53:33,580 --> 01:53:34,400
question from the audience.

2735
01:53:34,400 --> 01:53:37,670
CRAIG CAVALIER: One more thing
to add on there, Binfire for

2736
01:53:37,670 --> 01:53:44,020
Chrome for Android, the
installable apps is

2737
01:53:44,020 --> 01:53:46,855
only part of that.

2738
01:53:46,855 --> 01:53:49,420
And we found that, actually,
Chrome for Android has the

2739
01:53:49,420 --> 01:53:52,570
best support for things like
IndexDB, which we don't get on

2740
01:53:52,570 --> 01:53:55,910
other devices, like
Safari on iOS.

2741
01:53:55,910 --> 01:53:59,400
So we need to have that problem
solved consistently

2742
01:53:59,400 --> 01:54:00,090
across browsers.

2743
01:54:00,090 --> 01:54:03,900
Because at the moment we have to
rely on things like shims,

2744
01:54:03,900 --> 01:54:09,360
to fall back to Web SQL with
iOS7 and the five meg cap that

2745
01:54:09,360 --> 01:54:13,110
we have for the user prompt,
that now it's really important

2746
01:54:13,110 --> 01:54:14,865
to get that piece of
the puzzle solved.

2747
01:54:14,865 --> 01:54:15,800
JAKE ARCHIBALD: Thanks
for that.

2748
01:54:15,800 --> 01:54:18,190
We can declare one all, between
iOS and Android now.

2749
01:54:18,190 --> 01:54:19,100
That's pretty good.

2750
01:54:19,100 --> 01:54:20,240
We're going to take one question
from the audience,

2751
01:54:20,240 --> 01:54:21,780
before we move topic.

2752
01:54:21,780 --> 01:54:24,070
Eric Shepherd, whereabouts
are you?

2753
01:54:24,070 --> 01:54:25,842
Get a microphone over here--

2754
01:54:25,842 --> 01:54:28,210
AUDIENCE: This is sort of a
follow up, the flip side of

2755
01:54:28,210 --> 01:54:30,290
the payment question
from earlier.

2756
01:54:30,290 --> 01:54:33,550
For the number of issues, there
are a whole host of

2757
01:54:33,550 --> 01:54:36,540
other things that you may want
to know about that, if people

2758
01:54:36,540 --> 01:54:38,910
start using the web offline
in large numbers,

2759
01:54:38,910 --> 01:54:41,670
we're going to lose.

2760
01:54:41,670 --> 01:54:44,640
Third-party networks want to
know things, for tracking

2761
01:54:44,640 --> 01:54:47,130
purposes, for re-marketing
purposes.

2762
01:54:47,130 --> 01:54:49,660
We want to know what people
are looking at.

2763
01:54:49,660 --> 01:54:52,700
So that when we're giving
more and more customized

2764
01:54:52,700 --> 01:54:56,690
recommendations in e-commerce or
article recommendations in

2765
01:54:56,690 --> 01:54:59,340
publishing, those are things
we want to know about too.

2766
01:54:59,340 --> 01:55:02,480
Are any of the ad networks or
anyone looking into possible

2767
01:55:02,480 --> 01:55:05,770
APIs for how to deal with
this kind of stuff?

2768
01:55:05,770 --> 01:55:08,480
ALEX RUSSELL: I haven't been
talking to them and probably

2769
01:55:08,480 --> 01:55:10,930
should be, with regards to the
Service Worker design.

2770
01:55:10,930 --> 01:55:13,540
But I can only talk about
the thing I'm working

2771
01:55:13,540 --> 01:55:15,460
on, which is that.

2772
01:55:15,460 --> 01:55:18,415
And it allows you to--

2773
01:55:18,415 --> 01:55:23,810
a thing we've put on the screen
oh so briefly was the

2774
01:55:23,810 --> 01:55:26,750
Import Scripts API,
which allows--

2775
01:55:26,750 --> 01:55:28,020
these things are
just workers--

2776
01:55:28,020 --> 01:55:31,040
a worker of any kind to just go
out and import some other

2777
01:55:31,040 --> 01:55:35,510
script, like a require call in
AMD, something like that.

2778
01:55:35,510 --> 01:55:39,810
So you can compose behavior
from multiple origins.

2779
01:55:39,810 --> 01:55:43,930
So that if you're working with
a third party, you could

2780
01:55:43,930 --> 01:55:46,300
include their offline
handling code too.

2781
01:55:46,300 --> 01:55:50,000
And because the Service Worker
sees requests for all origins,

2782
01:55:50,000 --> 01:55:52,460
including those third party
ones, you can write your

2783
01:55:52,460 --> 01:55:55,820
handlers in such a way that
well-behaved Service Worker

2784
01:55:55,820 --> 01:55:58,380
scripts will only pay attention
to the requests for

2785
01:55:58,380 --> 01:56:00,770
their origin and do the
right thing by them.

2786
01:56:00,770 --> 01:56:04,430
And you can import scripts
from other origins to do

2787
01:56:04,430 --> 01:56:07,250
things like handling those kinds
of tracking and counting

2788
01:56:07,250 --> 01:56:08,000
when offline.

2789
01:56:08,000 --> 01:56:10,620
And they get the ability to run
when you're online too.

2790
01:56:10,620 --> 01:56:12,500
So they'll be able to do their
own synchronization.

2791
01:56:12,500 --> 01:56:16,640
It does require kind of the
global coordination thing that

2792
01:56:16,640 --> 01:56:19,790
we love so much about
JavaScript.

2793
01:56:19,790 --> 01:56:22,110
And so we get ES6 modules, but
I think that's kind of going

2794
01:56:22,110 --> 01:56:24,530
to be the state of the
art for a while.

2795
01:56:24,530 --> 01:56:26,340
It's possible it will
require care.

2796
01:56:26,340 --> 01:56:27,090
JAKE ARCHIBALD: OK.

2797
01:56:27,090 --> 01:56:28,900
We're going to move on
to the next question.

2798
01:56:28,900 --> 01:56:32,470
And the next question is asked
by Jake Archibald--

2799
01:56:32,470 --> 01:56:34,110
oh, not that guy again.

2800
01:56:34,110 --> 01:56:34,620
OK.

2801
01:56:34,620 --> 01:56:36,400
Well, this is a bit
weird, so I should

2802
01:56:36,400 --> 01:56:37,420
probably ask the question.

2803
01:56:37,420 --> 01:56:38,230
Oh, John's back.

2804
01:56:38,230 --> 01:56:39,110
Hello.

2805
01:56:39,110 --> 01:56:41,090
JOHN: This on?

2806
01:56:41,090 --> 01:56:42,320
Yes.

2807
01:56:42,320 --> 01:56:44,770
We are actually working on
adding an [INAUDIBLE] feature

2808
01:56:44,770 --> 01:56:45,770
to Chrome for Android.

2809
01:56:45,770 --> 01:56:49,930
It's a public commit, so I can
talk about it, excellent--

2810
01:56:49,930 --> 01:56:51,160
coming soon, hopefully.

2811
01:56:51,160 --> 01:56:53,430
I think we added an About
flag recently.

2812
01:56:53,430 --> 01:56:54,560
It's in [INAUDIBLE]

2813
01:56:54,560 --> 01:56:55,600
probably.

2814
01:56:55,600 --> 01:56:57,040
JAKE ARCHIBALD: Declassified,
excellent.

2815
01:56:57,040 --> 01:57:01,148

2816
01:57:01,148 --> 01:57:03,705
JOHN: Oh, and I think
Vivian was asking--

2817
01:57:03,705 --> 01:57:06,245

2818
01:57:06,245 --> 01:57:09,490
AUDIENCE: I'm interested in
knowing if developers want to

2819
01:57:09,490 --> 01:57:12,890
have a similar API like iOS that
allows you to have API

2820
01:57:12,890 --> 01:57:18,095
access, to prompt the user to
install on the home screen.

2821
01:57:18,095 --> 01:57:21,510
MATT ANDREWS: Yes.

2822
01:57:21,510 --> 01:57:22,250
JAKE ARCHIBALD: OK.

2823
01:57:22,250 --> 01:57:24,300
I'll take that as a whole
panel's opinion.

2824
01:57:24,300 --> 01:57:28,392
So on to the question from
this Jake Archibald guy.

2825
01:57:28,392 --> 01:57:30,460
I'm going to try and read it in
a different accent, so it

2826
01:57:30,460 --> 01:57:31,530
doesn't seem super weird.

2827
01:57:31,530 --> 01:57:33,170
Maybe that will make it
seems even weirder.

2828
01:57:33,170 --> 01:57:35,040
I'll sit over here slightly.

2829
01:57:35,040 --> 01:57:37,070
So I'll do an American accent.

2830
01:57:37,070 --> 01:57:38,270
I'll try and do your accent.

2831
01:57:38,270 --> 01:57:38,590
[AMERICAN ACCENT]

2832
01:57:38,590 --> 01:57:44,080
So currently, if a post fails, I
can stick it in the Index DB

2833
01:57:44,080 --> 01:57:46,400
and post it later.

2834
01:57:46,400 --> 01:57:49,570
But if the user has to visit
the site later, to actually

2835
01:57:49,570 --> 01:57:52,240
send that data.

2836
01:57:52,240 --> 01:57:53,630
How can I do that?

2837
01:57:53,630 --> 01:57:55,300
Is there a better
way for that?

2838
01:57:55,300 --> 01:57:56,460
That's a very good
question, Jake.

2839
01:57:56,460 --> 01:57:59,140
Yeah, we're going to put that to
the whole panel right now.

2840
01:57:59,140 --> 01:58:01,910
So yeah, we don't have
anything to do

2841
01:58:01,910 --> 01:58:02,950
synchronization.

2842
01:58:02,950 --> 01:58:04,640
Is there a sync API coming?

2843
01:58:04,640 --> 01:58:06,370
Can we do this, when the
user is not actually

2844
01:58:06,370 --> 01:58:08,112
sitting on the site?

2845
01:58:08,112 --> 01:58:14,850
CRAIG CAVALIER: So I think
that there are background

2846
01:58:14,850 --> 01:58:18,760
needs for APIs added in Firefox
OS, for things like

2847
01:58:18,760 --> 01:58:21,880
push notifications, and that
there is a definite

2848
01:58:21,880 --> 01:58:24,580
possibility of integrating the
need for to happen in the

2849
01:58:24,580 --> 01:58:26,870
background, whenever you don't
even have the tab open, to

2850
01:58:26,870 --> 01:58:31,950
also be built upon to have
some kind of synchronized

2851
01:58:31,950 --> 01:58:34,930
process or cron jobs
for your website.

2852
01:58:34,930 --> 01:58:36,660
JAKE ARCHIBALD: So Craig,
you had this

2853
01:58:36,660 --> 01:58:37,920
specific problem, right?

2854
01:58:37,920 --> 01:58:39,380
CRAIG CAVALIER: We do.

2855
01:58:39,380 --> 01:58:43,370
Going back to the question of
having it running in the

2856
01:58:43,370 --> 01:58:45,790
background, it's
kind of tricky.

2857
01:58:45,790 --> 01:58:50,230
Because firstly, you've got
situations like, actually,

2858
01:58:50,230 --> 01:58:52,390
does the user really want
to be syncing when

2859
01:58:52,390 --> 01:58:54,490
they don't know it.

2860
01:58:54,490 --> 01:58:57,960
I mean, we could be eating up
all of their bandwidth, for

2861
01:58:57,960 --> 01:58:59,510
roaming, for instance.

2862
01:58:59,510 --> 01:59:02,790
So in some cases, it makes a lot
more sense for it to be an

2863
01:59:02,790 --> 01:59:04,290
explicit question for them.

2864
01:59:04,290 --> 01:59:08,280
But in other cases, also, and
particularly for business

2865
01:59:08,280 --> 01:59:13,180
data, you have this process of
making business decisions when

2866
01:59:13,180 --> 01:59:14,880
merge conflicts happen.

2867
01:59:14,880 --> 01:59:18,860
So for us, we do something
that's kind of similar to a

2868
01:59:18,860 --> 01:59:20,840
Git rebase, when we're
synchronizing.

2869
01:59:20,840 --> 01:59:26,280
So we actually can prompt the
user and say, hey, we've

2870
01:59:26,280 --> 01:59:27,980
detected that these two
events happened.

2871
01:59:27,980 --> 01:59:29,020
And they conflict
with each other.

2872
01:59:29,020 --> 01:59:30,200
And you need to take
some action.

2873
01:59:30,200 --> 01:59:31,450
So that's running in
the background.

2874
01:59:31,450 --> 01:59:32,610
That becomes kind of tricky.

2875
01:59:32,610 --> 01:59:34,280
JAKE ARCHIBALD: So Alex
and Anne, you guys

2876
01:59:34,280 --> 01:59:35,140
are from the future.

2877
01:59:35,140 --> 01:59:38,076
What's in the future for us?

2878
01:59:38,076 --> 01:59:40,553
ALEX RUSSELL: You have to
do this in his accent.

2879
01:59:40,553 --> 01:59:42,135
ANNE VAN KESTEREN: I'm not
sure I can do that.

2880
01:59:42,135 --> 01:59:45,320

2881
01:59:45,320 --> 01:59:46,990
I think push notifications
will have to be opt-in.

2882
01:59:46,990 --> 01:59:52,280
I think background updates for
apps, like for your caches and

2883
01:59:52,280 --> 01:59:56,940
stuff, we can do, if the user
is connected to wireless.

2884
01:59:56,940 --> 01:59:58,700
I guess, in that case, we can
sort of assume there won't be

2885
01:59:58,700 --> 02:00:01,390
a cap, although it's not
universally true.

2886
02:00:01,390 --> 02:00:05,630
In Russia and stuff, they have
still quite low caps, even on

2887
02:00:05,630 --> 02:00:06,370
those kind of connections.

2888
02:00:06,370 --> 02:00:09,770
So that might have to be a
preference of sorts, like do

2889
02:00:09,770 --> 02:00:12,930
you want to allow apps to update
in the background.

2890
02:00:12,930 --> 02:00:15,900
And it could even be a
preference that the user wants

2891
02:00:15,900 --> 02:00:19,300
his apps always up-to-date,
even on 3G or 4G.

2892
02:00:19,300 --> 02:00:21,450
And the browser will just, every
now and then, wake up

2893
02:00:21,450 --> 02:00:25,200
the worker and give it the
event to start updating.

2894
02:00:25,200 --> 02:00:27,010
And then the work does
its updates and

2895
02:00:27,010 --> 02:00:27,730
then shuts down again.

2896
02:00:27,730 --> 02:00:29,910
And then, when the user next
visits the site, he'll get the

2897
02:00:29,910 --> 02:00:30,950
latest stuff.

2898
02:00:30,950 --> 02:00:32,540
JAKE ARCHIBALD: So we are going
to go to the audience

2899
02:00:32,540 --> 02:00:33,100
for the next question.

2900
02:00:33,100 --> 02:00:36,300
Jeffrey Burtoft, whereabouts
are you?

2901
02:00:36,300 --> 02:00:37,550
Down here--

2902
02:00:37,550 --> 02:00:40,680

2903
02:00:40,680 --> 02:00:43,270
AUDIENCE: Yeah, I guess this
ties in a little bit more with

2904
02:00:43,270 --> 02:00:44,040
the last question.

2905
02:00:44,040 --> 02:00:48,180
But there are always a lot of
developers in Microsoft

2906
02:00:48,180 --> 02:00:51,560
platform who are developing for
both our store apps, which

2907
02:00:51,560 --> 02:00:54,500
are HTML5-based, and then for
the web apps and trying to

2908
02:00:54,500 --> 02:00:55,790
bring those closer together.

2909
02:00:55,790 --> 02:00:59,230
One of the questions I hear a
lot about web apps is about

2910
02:00:59,230 --> 02:01:04,750
the safety of the data that is
stored, which I think tends to

2911
02:01:04,750 --> 02:01:06,840
push us more towards developing

2912
02:01:06,840 --> 02:01:08,750
in the native space.

2913
02:01:08,750 --> 02:01:12,830
What are we doing to make sure
that data can be trusted, can

2914
02:01:12,830 --> 02:01:16,950
be safely encrypted and meet the
needs of different types

2915
02:01:16,950 --> 02:01:17,710
of developers.

2916
02:01:17,710 --> 02:01:19,560
JAKE ARCHIBALD: So if we're
storing something like credit

2917
02:01:19,560 --> 02:01:22,730
card data or people's contact
information, what can we do to

2918
02:01:22,730 --> 02:01:24,820
make sure that other app
can't sneak in there

2919
02:01:24,820 --> 02:01:26,120
and get that data.

2920
02:01:26,120 --> 02:01:28,420
Is that something
we do already?

2921
02:01:28,420 --> 02:01:30,560
CRAIG CAVALIER: I think there
is a certain amount of that.

2922
02:01:30,560 --> 02:01:34,300
I mean, you have to be on the
same domain to be able to

2923
02:01:34,300 --> 02:01:35,890
access things like
local store.

2924
02:01:35,890 --> 02:01:40,350
So there's a certain amount
of security in place.

2925
02:01:40,350 --> 02:01:44,100
There's only so much you can do,
I think, with these kind

2926
02:01:44,100 --> 02:01:44,610
of devices.

2927
02:01:44,610 --> 02:01:46,130
ANNE VAN KESTEREN:
I'm not sure.

2928
02:01:46,130 --> 02:01:47,900
Is the question about what
the origin can access?

2929
02:01:47,900 --> 02:01:52,090
Or if someone has physical
access to the device, they can

2930
02:01:52,090 --> 02:01:54,430
access the local stored data
because it's not encrypted.

2931
02:01:54,430 --> 02:01:57,880
So in that case, it depends on
the security characteristics

2932
02:01:57,880 --> 02:01:59,430
provide by the OS.

2933
02:01:59,430 --> 02:02:03,170
And I think, in a lot of cases,
browsers default to

2934
02:02:03,170 --> 02:02:08,430
what the OS provides and don't
have additional layers on top.

2935
02:02:08,430 --> 02:02:10,170
Because if the OS is not
secure, then you're

2936
02:02:10,170 --> 02:02:11,866
compromised anyway.

2937
02:02:11,866 --> 02:02:15,510
ALEX RUSSELL: It depends on the
threat model, obviously.

2938
02:02:15,510 --> 02:02:19,840
But there is an API called Web
Crypto API, which Microsoft is

2939
02:02:19,840 --> 02:02:22,440
heavily involved in, working
with Netflix and eBay and

2940
02:02:22,440 --> 02:02:24,850
Google and a bunch
of other people.

2941
02:02:24,850 --> 02:02:28,630
And one of the key aspects of
Web Crypto API is that, it

2942
02:02:28,630 --> 02:02:31,550
allows you to have wrapped
keys, which are to say,

2943
02:02:31,550 --> 02:02:34,980
hardware tokens or tokens
protected by the OS, which are

2944
02:02:34,980 --> 02:02:37,130
not owned by user space code.

2945
02:02:37,130 --> 02:02:39,170
So you can't actually see the
key material, and you can do

2946
02:02:39,170 --> 02:02:40,280
operations with that.

2947
02:02:40,280 --> 02:02:43,060
So in that world, as long as you
trust the OS, you should

2948
02:02:43,060 --> 02:02:47,730
be able to get encrypted content
stored and allow that

2949
02:02:47,730 --> 02:02:49,470
to be trusted all the way
through the cert chain, back

2950
02:02:49,470 --> 02:02:50,540
to the server.

2951
02:02:50,540 --> 02:02:53,270
And I think that's a pretty
deft answer, actually.

2952
02:02:53,270 --> 02:02:55,420
I think it gives you most of
the control that you want,

2953
02:02:55,420 --> 02:02:57,400
without giving you most of the
complexity that you would like

2954
02:02:57,400 --> 02:02:58,470
not to have.

2955
02:02:58,470 --> 02:03:01,470
JAKE ARCHIBALD: And I think
that takes us out of time.

2956
02:03:01,470 --> 02:03:05,630
I know, the bathrooms at Google
UK are completely out

2957
02:03:05,630 --> 02:03:07,770
of Wi-Fi and cellular data.

2958
02:03:07,770 --> 02:03:09,990
So it sounds like, if we can get
all this stuff sorted, I

2959
02:03:09,990 --> 02:03:13,090
can be a lot more productive
than I am, currently, in my

2960
02:03:13,090 --> 02:03:14,570
spare time.

2961
02:03:14,570 --> 02:03:18,540
But if you're interested in any
of this stuff and want to

2962
02:03:18,540 --> 02:03:23,160
look at the spec as it is
currently, it's github.com/--

2963
02:03:23,160 --> 02:03:26,460
ALEX RUSSELL: slightlyoff/--

2964
02:03:26,460 --> 02:03:27,260
JAKE ARCHIBALD: serviceworker,
right?

2965
02:03:27,260 --> 02:03:28,340
ANNE VAN KESTEREN:
serviceworker, yes.

2966
02:03:28,340 --> 02:03:29,210
JAKE ARCHIBALD: Excellent.

2967
02:03:29,210 --> 02:03:30,615
MATT ANDREWS: When will we
get that in a browser?

2968
02:03:30,615 --> 02:03:33,750
ALEX RUSSELL: So I can't speak
for Firefox, but I know that

2969
02:03:33,750 --> 02:03:35,820
there are prototypes happening
on the Mozilla side.

2970
02:03:35,820 --> 02:03:37,550
And on the Chrome side,
we've built a

2971
02:03:37,550 --> 02:03:38,680
prototype which does work.

2972
02:03:38,680 --> 02:03:41,256
And we're in the process
of implementing now.

2973
02:03:41,256 --> 02:03:43,718
JAKE ARCHIBALD: Excellent. thank
you very much, everyone.

2974
02:03:43,718 --> 02:03:53,505
[APPLAUSE]

2975
02:03:53,505 --> 02:03:55,830
ANDREW BETTS: Thanks, Jake.

2976
02:03:55,830 --> 02:03:57,300
I can't remember what
we're doing now.

2977
02:03:57,300 --> 02:03:59,468
Do we have a break now?

2978
02:03:59,468 --> 02:04:02,926
So we have a 15 minute
break now, everyone.

2979
02:04:02,926 --> 02:04:05,396
There are still some more
snacks at the back.

2980
02:04:05,396 --> 02:04:06,384
Use the restrooms.

2981
02:04:06,384 --> 02:04:08,360
Come back in 15 minutes.

2982
02:04:08,360 --> 02:04:14,102

2983
02:04:14,102 --> 02:07:05,876
[MUSIC PLAYING]

2984
02:07:05,876 --> 02:08:45,177

2985
02:08:45,177 --> 02:12:02,290

2986
02:12:02,290 --> 02:16:56,770

2987
02:16:56,770 --> 02:16:58,180
ANDREW BETTS: Hi, everyone.

2988
02:16:58,180 --> 02:17:02,170
We'll be starting again in five
minutes, so please retake

2989
02:17:02,170 --> 02:17:02,670
your seats.

2990
02:17:02,670 --> 02:17:03,580
Thanks.

2991
02:17:03,580 --> 02:18:11,540
[MUSIC PLAYING]

2992
02:18:11,540 --> 02:20:23,430

2993
02:20:23,430 --> 02:20:24,940
OK, everyone.

2994
02:20:24,940 --> 02:20:26,140
We're going to get
started now.

2995
02:20:26,140 --> 02:20:28,116
So please take your seats.

2996
02:20:28,116 --> 02:20:50,710

2997
02:20:50,710 --> 02:20:51,740
Yeah, I knew it was that.

2998
02:20:51,740 --> 02:20:54,570
Someone said to me on Twitter,
they could see me here.

2999
02:20:54,570 --> 02:20:57,990
OK, so our next--

3000
02:20:57,990 --> 02:21:00,260
what happened?

3001
02:21:00,260 --> 02:21:05,160
Our next and penultimate session
is Legacy Clients,

3002
02:21:05,160 --> 02:21:08,746
which is, I think, something
which we can all relate to as

3003
02:21:08,746 --> 02:21:11,400
a big challenge that we have
to deal with every day and

3004
02:21:11,400 --> 02:21:13,890
which makes our job much, much
more difficult than we would

3005
02:21:13,890 --> 02:21:15,460
like it to be.

3006
02:21:15,460 --> 02:21:19,060
So we have a panel of very
experienced people in this

3007
02:21:19,060 --> 02:21:22,310
area, to discuss the topic,
led by Mr. Paul Irish, who

3008
02:21:22,310 --> 02:21:24,680
probably needs no introduction
to any of you.

3009
02:21:24,680 --> 02:21:26,210
So I will let him take over.

3010
02:21:26,210 --> 02:21:27,460
Thanks very much.

3011
02:21:27,460 --> 02:21:30,910

3012
02:21:30,910 --> 02:21:32,450
PAUL IRISH: All right.

3013
02:21:32,450 --> 02:21:34,325
So I'm really excited
about this.

3014
02:21:34,325 --> 02:21:37,730
Edge Conf is kind of like the
focal point of a discussion

3015
02:21:37,730 --> 02:21:42,290
around using cutting edge
technologies to build amazing

3016
02:21:42,290 --> 02:21:43,650
user experiences.

3017
02:21:43,650 --> 02:21:47,640
But I think the elephant in
the room is, it's great to

3018
02:21:47,640 --> 02:21:49,230
learn all about all these
new technologies.

3019
02:21:49,230 --> 02:21:52,690
But what about older browsers,
browsers that are less

3020
02:21:52,690 --> 02:21:55,130
capable, that cannot
take advantage of

3021
02:21:55,130 --> 02:21:56,280
some of these things?

3022
02:21:56,280 --> 02:21:59,560
So this session is an
opportunity to kind of discuss

3023
02:21:59,560 --> 02:22:01,750
some of those challenges that
we've had for a long time and

3024
02:22:01,750 --> 02:22:03,460
what we can do about them now.

3025
02:22:03,460 --> 02:22:06,900
We have a really powerful
panel up here, so let me

3026
02:22:06,900 --> 02:22:09,030
quickly introduce everyone.

3027
02:22:09,030 --> 02:22:13,160
Over here, to my right,
is Shwetank Dixit.

3028
02:22:13,160 --> 02:22:16,350
He has been on the Operator
Developer Relations team and

3029
02:22:16,350 --> 02:22:20,860
Open Web team for a while now,
working a lot on compatibility

3030
02:22:20,860 --> 02:22:22,340
of all sorts of sites.

3031
02:22:22,340 --> 02:22:25,710
So whether they have willy-nilly
Reg Xs that are

3032
02:22:25,710 --> 02:22:30,380
blocking the Opera and such,
also a member of the Web

3033
02:22:30,380 --> 02:22:33,360
Education Community group and
the Mobile Web for Social

3034
02:22:33,360 --> 02:22:36,930
Development group
and at the W3C.

3035
02:22:36,930 --> 02:22:41,900
To my left, Tomomi Imura, so she
has been kind of fighting

3036
02:22:41,900 --> 02:22:44,830
for the mobile web for a long
time, ever since 2005, when

3037
02:22:44,830 --> 02:22:48,186
she was leading the
mobile yahoo.com.

3038
02:22:48,186 --> 02:22:50,540
TOMOMI IMURA: [INAUDIBLE].

3039
02:22:50,540 --> 02:22:51,950
PAUL IRISH: yahoo.com?

3040
02:22:51,950 --> 02:22:53,200
And yahoo.com, yes.

3041
02:22:53,200 --> 02:22:55,710

3042
02:22:55,710 --> 02:22:58,930
She also was using [INAUDIBLE]

3043
02:22:58,930 --> 02:23:03,330
to great success, trying to
wrangle all sorts of kind of

3044
02:23:03,330 --> 02:23:06,860
tricky little mobile devices
coming over there, worked at

3045
02:23:06,860 --> 02:23:08,450
WebOS and is now at Nokia.

3046
02:23:08,450 --> 02:23:09,450
TOMOMI IMURA: That's right.

3047
02:23:09,450 --> 02:23:11,770
PAUL IRISH: Cool.

3048
02:23:11,770 --> 02:23:14,320
On her left is Ed Sowden.

3049
02:23:14,320 --> 02:23:18,700
Ed works for the Government
Digital Service.

3050
02:23:18,700 --> 02:23:23,940
And the GDS finished a big,
huge redesign of gov.uk, a

3051
02:23:23,940 --> 02:23:27,520
kind of much-lauded, progressive
enhancement

3052
02:23:27,520 --> 02:23:30,310
redesign, bringing all of the
UK's government online.

3053
02:23:30,310 --> 02:23:32,830
And they're now continuing to
bring more departments online.

3054
02:23:32,830 --> 02:23:36,830
They've done a really good job
presenting the best way to do

3055
02:23:36,830 --> 02:23:39,650
progressive enhancement and
documenting their strategies

3056
02:23:39,650 --> 02:23:43,820
and methodologies and also
providing a very transparent

3057
02:23:43,820 --> 02:23:46,560
development process, blogging,
documenting, guidelines

3058
02:23:46,560 --> 02:23:47,490
everywhere--

3059
02:23:47,490 --> 02:23:49,690
really fantastic job.

3060
02:23:49,690 --> 02:23:53,000
And our opening speaker,
Tom Maslen--

3061
02:23:53,000 --> 02:23:58,890
Tom is the tech lead for BBC
News Visual Journalism and has

3062
02:23:58,890 --> 02:24:01,920
been leading the client-side
team for the mobile BBC News

3063
02:24:01,920 --> 02:24:05,370
team for a while, has been
kind of a standards-based

3064
02:24:05,370 --> 02:24:08,600
developer, knows browser
performance and JavaScript

3065
02:24:08,600 --> 02:24:12,240
extremely well and also, a while
ago, worked on the team

3066
02:24:12,240 --> 02:24:15,530
that built and open-sourced the
Glow JavaScript library.

3067
02:24:15,530 --> 02:24:16,680
TOM MASLEN: Small
part of that--

3068
02:24:16,680 --> 02:24:18,560
PAUL IRISH: Blast from the
past, all right, cool.

3069
02:24:18,560 --> 02:24:21,240
So Tom, if you want to take
it away, would be great.

3070
02:24:21,240 --> 02:24:22,530
TOM MASLEN: Hi, hello.

3071
02:24:22,530 --> 02:24:24,970
And can I have my slides?

3072
02:24:24,970 --> 02:24:27,550

3073
02:24:27,550 --> 02:24:31,570
Hi, hello, and welcome to the
introduction talk, Legacy

3074
02:24:31,570 --> 02:24:33,580
Clients, by me, Tom Maslen.

3075
02:24:33,580 --> 02:24:38,710
Or as I think this talk should
really be called, yay, I'm so

3076
02:24:38,710 --> 02:24:41,070
excited there are going to be
five versions of Internet

3077
02:24:41,070 --> 02:24:43,660
Explorer for me to support
next year.

3078
02:24:43,660 --> 02:24:46,480
I'm 34 years old.

3079
02:24:46,480 --> 02:24:51,280
Back in my arrogant 20s, I saw
myself as a bit of a Han Solo,

3080
02:24:51,280 --> 02:24:54,920
flying around the office, saving
princess's websites,

3081
02:24:54,920 --> 02:24:56,250
fixing bugs.

3082
02:24:56,250 --> 02:24:59,130
My job used to be easy.

3083
02:24:59,130 --> 02:25:01,970
I had four rendering
engines to support.

3084
02:25:01,970 --> 02:25:04,580
And yet, I also had to worry
about accessibility.

3085
02:25:04,580 --> 02:25:07,990
But writing my code semantically
fixed that.

3086
02:25:07,990 --> 02:25:10,275
And I also had to concern
myself about SEO.

3087
02:25:10,275 --> 02:25:12,620
But that's essentially
accessibility for search

3088
02:25:12,620 --> 02:25:13,420
engines, right.

3089
02:25:13,420 --> 02:25:16,360
So my semantic code
sorted that too.

3090
02:25:16,360 --> 02:25:19,280
This was a time when we could
all afford to be a little Han

3091
02:25:19,280 --> 02:25:22,460
Solos, quickly putting
sites together.

3092
02:25:22,460 --> 02:25:26,550
But then, in 2007, all that
changed, when Steve Jobs

3093
02:25:26,550 --> 02:25:28,890
invented the bloody iPhone.

3094
02:25:28,890 --> 02:25:31,860
Shit got more complicated.

3095
02:25:31,860 --> 02:25:35,350
Suddenly, we had mobiles with
very slow connection speeds

3096
02:25:35,350 --> 02:25:38,990
and phones with different sized
screens, new types of

3097
02:25:38,990 --> 02:25:40,620
interactions.

3098
02:25:40,620 --> 02:25:43,630
Smartphones started to appear,
with pathetic little

3099
02:25:43,630 --> 02:25:46,065
processors and tiny amounts
of RAM that ran

3100
02:25:46,065 --> 02:25:48,910
my code really slowly.

3101
02:25:48,910 --> 02:25:52,090
And PPK also pointed out that
there were like 100 different

3102
02:25:52,090 --> 02:25:53,900
versions of WebKits
to support.

3103
02:25:53,900 --> 02:25:56,750
But all of these problems were
nothing compared to what was

3104
02:25:56,750 --> 02:25:58,980
about to wash over us--

3105
02:25:58,980 --> 02:26:02,650
an avalanche of devices.

3106
02:26:02,650 --> 02:26:04,240
Being confident little
Han Solos

3107
02:26:04,240 --> 02:26:05,970
wasn't good enough anymore.

3108
02:26:05,970 --> 02:26:11,540
Instead, we've all had to become
intelligent, clever

3109
02:26:11,540 --> 02:26:14,310
Spocks, who can balance all of
these issues against getting

3110
02:26:14,310 --> 02:26:16,130
our job done correctly.

3111
02:26:16,130 --> 02:26:18,070
As developers, this is
the biggest problem

3112
02:26:18,070 --> 02:26:19,390
that we have today--

3113
02:26:19,390 --> 02:26:23,920
balancing agility, getting the
stuff done quickly versus

3114
02:26:23,920 --> 02:26:27,610
robustness, getting
the stuff right.

3115
02:26:27,610 --> 02:26:31,000
Now, in this paradigm that we
find ourselves in, it's very

3116
02:26:31,000 --> 02:26:34,010
easy to concentrate on this
issue so much that we forget

3117
02:26:34,010 --> 02:26:40,940
about boring, old issues like
supporting IE 7 and 8.

3118
02:26:40,940 --> 02:26:43,790
I can test in IE 8 and
7, using a virtual

3119
02:26:43,790 --> 02:26:45,040
machine on my Mac.

3120
02:26:45,040 --> 02:26:47,320

3121
02:26:47,320 --> 02:26:49,120
But it's really hard to do.

3122
02:26:49,120 --> 02:26:53,330
The experience is slow, and the
dev tools are terrible.

3123
02:26:53,330 --> 02:26:58,220
Trying to get IE 7 dev tools to
i1 is like asking a wookie

3124
02:26:58,220 --> 02:27:01,710
who's wearing boxing gloves
to wipe my bottom clean.

3125
02:27:01,710 --> 02:27:06,790
It's a terrible situation that
normally ends up covering you

3126
02:27:06,790 --> 02:27:08,040
in something.

3127
02:27:08,040 --> 02:27:11,740

3128
02:27:11,740 --> 02:27:14,490
Some bugs, I just give up on,
because it's not worth

3129
02:27:14,490 --> 02:27:20,240
spending the time required
to fix a problem for

3130
02:27:20,240 --> 02:27:21,630
such a small audience.

3131
02:27:21,630 --> 02:27:24,250
It raises questions about
whether we should actually

3132
02:27:24,250 --> 02:27:25,080
support these browsers.

3133
02:27:25,080 --> 02:27:28,170
I'd argue that, sometimes
it depends.

3134
02:27:28,170 --> 02:27:30,420
While the challenges surrounding
client support

3135
02:27:30,420 --> 02:27:33,340
have increased, web development
itself has become

3136
02:27:33,340 --> 02:27:34,030
more popular.

3137
02:27:34,030 --> 02:27:36,040
It's entered the mainstream.

3138
02:27:36,040 --> 02:27:39,650
Everyone from schoolchildren
to contestants on "The

3139
02:27:39,650 --> 02:27:41,980
Apprentice" are now
making web pages.

3140
02:27:41,980 --> 02:27:46,060
And the act of making a web page
is actually pretty easy,

3141
02:27:46,060 --> 02:27:48,910
build something to, look
at it in your browser.

3142
02:27:48,910 --> 02:27:49,520
There you go.

3143
02:27:49,520 --> 02:27:50,080
It's done.

3144
02:27:50,080 --> 02:27:50,700
It's very fast.

3145
02:27:50,700 --> 02:27:53,620
But as I've just shown you,
the practice of web

3146
02:27:53,620 --> 02:27:56,040
development is the complete
opposite.

3147
02:27:56,040 --> 02:27:59,470
It's actually really
hard to do right.

3148
02:27:59,470 --> 02:28:03,840
Anyone can pick up a book or
read an article online that

3149
02:28:03,840 --> 02:28:06,320
teaches you how to
make a web page.

3150
02:28:06,320 --> 02:28:10,350
How to write HTML5 or CSS or
JavaScript, these things are

3151
02:28:10,350 --> 02:28:11,710
hard to master.

3152
02:28:11,710 --> 02:28:14,960
But they're easy
to start doing.

3153
02:28:14,960 --> 02:28:17,880
What is hard to learn, though,
is how to scale your website

3154
02:28:17,880 --> 02:28:19,570
up from a single user, ie

3155
02:28:19,570 --> 02:28:23,210
yourself, to a larger audience.

3156
02:28:23,210 --> 02:28:26,940
These things here, they help
you to scale your audience.

3157
02:28:26,940 --> 02:28:30,470
But learning them is much
harder, because to understand

3158
02:28:30,470 --> 02:28:34,390
these, you have to change the
context of your thinking away

3159
02:28:34,390 --> 02:28:36,300
from what's in front of you.

3160
02:28:36,300 --> 02:28:38,950
As a developer, I often
find myself having to

3161
02:28:38,950 --> 02:28:40,380
defend these things.

3162
02:28:40,380 --> 02:28:44,310
But ultimately, the web
isn't about these.

3163
02:28:44,310 --> 02:28:45,240
They're important.

3164
02:28:45,240 --> 02:28:48,220
But we don't do accessibility
for the sake of accessibility.

3165
02:28:48,220 --> 02:28:53,330
And we don't make sites fast or
SEO-friendly or work about

3166
02:28:53,330 --> 02:28:55,270
JavaScript because it's nice.

3167
02:28:55,270 --> 02:28:57,730
What we're trying to
achieve, our actual

3168
02:28:57,730 --> 02:29:00,660
end goal, is ubiquity.

3169
02:29:00,660 --> 02:29:04,170
We want as many people as
possible to see our site.

3170
02:29:04,170 --> 02:29:07,110
The web should be inclusive,
not exclusive.

3171
02:29:07,110 --> 02:29:10,350
I mean, nobody would be build
a shop that only the dwarf

3172
02:29:10,350 --> 02:29:12,300
from "Game of Thrones" could
get into, right.

3173
02:29:12,300 --> 02:29:15,780
Shops have doors that are wide
and as tall as possible.

3174
02:29:15,780 --> 02:29:19,560
Websites should be the same.

3175
02:29:19,560 --> 02:29:21,530
An easier way to think
of ubiquity is to

3176
02:29:21,530 --> 02:29:22,970
call it browser support.

3177
02:29:22,970 --> 02:29:25,910
When people talk about web
browser support, they think,

3178
02:29:25,910 --> 02:29:27,370
well, how far back
should we go--

3179
02:29:27,370 --> 02:29:29,165
IE 6, IE 7.

3180
02:29:29,165 --> 02:29:31,910

3181
02:29:31,910 --> 02:29:34,620
In the website versus native
apps debate, the reason why

3182
02:29:34,620 --> 02:29:38,090
website wins is because
apps are binary.

3183
02:29:38,090 --> 02:29:40,070
They either work,
or they don't.

3184
02:29:40,070 --> 02:29:42,570
An iOS app works on
an iPhone, but it

3185
02:29:42,570 --> 02:29:44,210
doesn't work on an Android.

3186
02:29:44,210 --> 02:29:47,440
However, your site will
work on both.

3187
02:29:47,440 --> 02:29:50,600
And even better, if you build it
properly, it will work to a

3188
02:29:50,600 --> 02:29:53,240
certain degree on pretty
much anything.

3189
02:29:53,240 --> 02:29:55,500
It's the ubiquity of the
website that wins.

3190
02:29:55,500 --> 02:29:58,150

3191
02:29:58,150 --> 02:30:01,700
So to go back to the original
problem I defined, this job is

3192
02:30:01,700 --> 02:30:05,180
also harder because the problem
is continuing to

3193
02:30:05,180 --> 02:30:06,900
increase in complexity.

3194
02:30:06,900 --> 02:30:10,660
And we have to balance that
against getting stuff done

3195
02:30:10,660 --> 02:30:12,580
fast and robustly.

3196
02:30:12,580 --> 02:30:16,050
What we shouldn't do is fight
that complexity with ever more

3197
02:30:16,050 --> 02:30:17,870
complex solutions.

3198
02:30:17,870 --> 02:30:20,330
People who build responsive
websites that are really just

3199
02:30:20,330 --> 02:30:23,810
a collection of smaller
websites within it are

3200
02:30:23,810 --> 02:30:26,000
creating more problems
for themselves.

3201
02:30:26,000 --> 02:30:29,510
When a problem grows to a
certain size, the problem

3202
02:30:29,510 --> 02:30:30,950
changes into something else.

3203
02:30:30,950 --> 02:30:34,640
And to survive, you have to
change how you think as well.

3204
02:30:34,640 --> 02:30:36,840
We did that at BBC News.

3205
02:30:36,840 --> 02:30:40,570
We turned the problem of browser
support upside down.

3206
02:30:40,570 --> 02:30:43,690
Instead of thinking about how
far back we should go, we

3207
02:30:43,690 --> 02:30:46,120
decided to support everything.

3208
02:30:46,120 --> 02:30:50,620
We call this technique
cutting the mustard.

3209
02:30:50,620 --> 02:30:54,020
The responsive site has a very
basic core experience, that

3210
02:30:54,020 --> 02:30:58,390
has a simple layout, is
very fast, and is

3211
02:30:58,390 --> 02:31:00,340
delivered to all browsers.

3212
02:31:00,340 --> 02:31:04,330
The core experience is good
enough to allow everyone to

3213
02:31:04,330 --> 02:31:06,310
consume the news.

3214
02:31:06,310 --> 02:31:09,450
On top of this, we built an
enhanced experience using

3215
02:31:09,450 --> 02:31:12,220
JavaScript and Modern CSS.

3216
02:31:12,220 --> 02:31:13,120
Pardon me.

3217
02:31:13,120 --> 02:31:17,670
It has a complex layout and
is very functional.

3218
02:31:17,670 --> 02:31:20,830
This is only delivered
to modern browsers.

3219
02:31:20,830 --> 02:31:23,640
It's conditionally loaded by
checking for the existence of

3220
02:31:23,640 --> 02:31:24,890
specific features.

3221
02:31:24,890 --> 02:31:28,120

3222
02:31:28,120 --> 02:31:30,610
All browsers that cut the
mustard have great JavaScript

3223
02:31:30,610 --> 02:31:31,870
and CSS support.

3224
02:31:31,870 --> 02:31:35,320
They have fast-rendering engines
and are less buggy.

3225
02:31:35,320 --> 02:31:38,140
This technique is robust because
it supports a massive

3226
02:31:38,140 --> 02:31:39,860
amount of browsers.

3227
02:31:39,860 --> 02:31:43,310
It's also agile, as you're
building the enhanced

3228
02:31:43,310 --> 02:31:46,520
experience using modern
coding practices.

3229
02:31:46,520 --> 02:31:51,360
But IE 7 and 8 only get
the core experience.

3230
02:31:51,360 --> 02:31:53,610
Now, this might be good enough
for you, if these browsers

3231
02:31:53,610 --> 02:31:56,400
don't bring a significant
amount of traffic.

3232
02:31:56,400 --> 02:31:58,950
Or you might decide that these
browsers need more than just

3233
02:31:58,950 --> 02:32:00,750
the core experience.

3234
02:32:00,750 --> 02:32:01,850
How do you do that?

3235
02:32:01,850 --> 02:32:03,630
Well, with two ways--

3236
02:32:03,630 --> 02:32:05,870
we can edit the cuts the
mustard test to load an

3237
02:32:05,870 --> 02:32:09,995
alternative JavaScript, the
app specifically just

3238
02:32:09,995 --> 02:32:11,300
for IE 7 and 8.

3239
02:32:11,300 --> 02:32:13,550
We can then cherry pick what
features of the enhanced

3240
02:32:13,550 --> 02:32:16,890
experience we give them,
like a two-column

3241
02:32:16,890 --> 02:32:18,180
layout or video support.

3242
02:32:18,180 --> 02:32:21,270

3243
02:32:21,270 --> 02:32:24,420
We also need to give these
browsers better CSS.

3244
02:32:24,420 --> 02:32:29,380
With Mobile First CSS, IE 7 and
8 only render the smallest

3245
02:32:29,380 --> 02:32:32,190
view, because they don't
understand media queries.

3246
02:32:32,190 --> 02:32:35,210
But with the CSS pre-processor,
you can output

3247
02:32:35,210 --> 02:32:37,920
a version of a site style
at any defined width,

3248
02:32:37,920 --> 02:32:40,326
specifically for
these browsers.

3249
02:32:40,326 --> 02:32:44,290
The panelist Ed Sowden has
already implemented this, for

3250
02:32:44,290 --> 02:32:46,650
the UK government website.

3251
02:32:46,650 --> 02:32:48,620
And here is one example
of how you can do it.

3252
02:32:48,620 --> 02:32:52,090

3253
02:32:52,090 --> 02:32:55,300
Instead of writing media queries
directly into a SCSS,

3254
02:32:55,300 --> 02:32:58,190
use this mixing instead.

3255
02:32:58,190 --> 02:33:02,520
Then make a new SCSS file that
sets a variable with value the

3256
02:33:02,520 --> 02:33:05,240
width value that you want IE 7
and 8 to render the desktop

3257
02:33:05,240 --> 02:33:09,530
view to, import the main
SCSS file into this.

3258
02:33:09,530 --> 02:33:12,510
And it will render out an
alternative desktop-only

3259
02:33:12,510 --> 02:33:15,950
version of your CSS
into a new file.

3260
02:33:15,950 --> 02:33:20,730
You should add the legacy IE
style sheet into the pages in

3261
02:33:20,730 --> 02:33:22,340
the conditional comment.

3262
02:33:22,340 --> 02:33:26,670
Now, however, you have to be
careful now, as IE 7 and 8

3263
02:33:26,670 --> 02:33:28,980
will be exposed to
your Modern CSS.

3264
02:33:28,980 --> 02:33:31,590
And there's lots of selectors
and properties that you need

3265
02:33:31,590 --> 02:33:32,860
to watch out for.

3266
02:33:32,860 --> 02:33:36,650
If you're lucky, you may find
IE 7 and 8 will be rendering

3267
02:33:36,650 --> 02:33:40,080
your Modern CCC onto the page
in a way that reminds you of

3268
02:33:40,080 --> 02:33:42,980
how Donald Trump's hair renders
itself onto his head.

3269
02:33:42,980 --> 02:33:46,210

3270
02:33:46,210 --> 02:33:50,700
So to summarize, how do you
support legacy clients?

3271
02:33:50,700 --> 02:33:54,340
I'd say, don't think about
stretching your code across an

3272
02:33:54,340 --> 02:33:57,390
ever-increasing browser
support list.

3273
02:33:57,390 --> 02:34:00,350
The problem is only ever going
to get more complex.

3274
02:34:00,350 --> 02:34:02,060
And you can't keep up
by making an ever

3275
02:34:02,060 --> 02:34:04,320
more complex solution.

3276
02:34:04,320 --> 02:34:07,670
If you keep thinking like a
Han Solo, eventually, this

3277
02:34:07,670 --> 02:34:09,530
problem will get
on top of you.

3278
02:34:09,530 --> 02:34:11,900
Instead, I think the best
way to solve this

3279
02:34:11,900 --> 02:34:13,760
is with team work.

3280
02:34:13,760 --> 02:34:16,080
Use a solid base of progressive
enhancement as a

3281
02:34:16,080 --> 02:34:19,180
springboard for your JavaScript
and treat each

3282
02:34:19,180 --> 02:34:22,610
feature on your website like an
away mission, deciding when

3283
02:34:22,610 --> 02:34:25,190
to send these aging browsers
to the fall.

3284
02:34:25,190 --> 02:34:27,110
So that's enough from me.

3285
02:34:27,110 --> 02:34:28,530
Let's chat about it.

3286
02:34:28,530 --> 02:34:38,220
[APPLAUSE]

3287
02:34:38,220 --> 02:34:39,470
PAUL IRISH: Very nice.

3288
02:34:39,470 --> 02:34:41,770

3289
02:34:41,770 --> 02:34:42,220
I'm sorry.

3290
02:34:42,220 --> 02:34:43,591
TOM MASLEN: Gee, thanks.

3291
02:34:43,591 --> 02:34:45,876
[LAUGHING]

3292
02:34:45,876 --> 02:34:47,250
PAUL IRISH: All right.

3293
02:34:47,250 --> 02:34:48,380
Thank you very much, Tom.

3294
02:34:48,380 --> 02:34:49,440
That was great.

3295
02:34:49,440 --> 02:34:52,210
So we'll go to our
first question.

3296
02:34:52,210 --> 02:34:57,080
Our first question delivered
by Hakim, there.

3297
02:34:57,080 --> 02:35:03,249

3298
02:35:03,249 --> 02:35:06,250
AUDIENCE: Hello.

3299
02:35:06,250 --> 02:35:07,790
Anonymous question--

3300
02:35:07,790 --> 02:35:10,220
why should there be a stigma
attached to not supporting

3301
02:35:10,220 --> 02:35:11,210
older clients?

3302
02:35:11,210 --> 02:35:13,850
If the developer knows their
audience and they all have the

3303
02:35:13,850 --> 02:35:16,150
latest clients, what's
the problem?

3304
02:35:16,150 --> 02:35:19,400
I think that should be, why is
there a stigma attached, not

3305
02:35:19,400 --> 02:35:20,850
why should there be.

3306
02:35:20,850 --> 02:35:23,056
So I'll rephrase that.

3307
02:35:23,056 --> 02:35:28,320
PAUL IRISH: So Shwetank, do
you want to take this?

3308
02:35:28,320 --> 02:35:29,910
Why is there a stigma
attached to not

3309
02:35:29,910 --> 02:35:32,075
supporting older browsers?

3310
02:35:32,075 --> 02:35:33,080
SHWETANK DIXIT: There is.

3311
02:35:33,080 --> 02:35:37,880
But they shouldn't be, mainly
because when it comes to older

3312
02:35:37,880 --> 02:35:42,550
browsers, there's a lot of
reason to actually support

3313
02:35:42,550 --> 02:35:43,070
older browsers.

3314
02:35:43,070 --> 02:35:46,500
Because there are a lot of times
in which the user cannot

3315
02:35:46,500 --> 02:35:50,740
update their browser, whether
it's because the system

3316
02:35:50,740 --> 02:35:55,310
administrator doesn't allow it
or because, many times, the

3317
02:35:55,310 --> 02:35:56,660
user doesn't know what
a browser is.

3318
02:35:56,660 --> 02:36:00,310
So if you say, update
your browser.

3319
02:36:00,310 --> 02:36:01,810
How could I update my browser?

3320
02:36:01,810 --> 02:36:03,520
I don't know what it is.

3321
02:36:03,520 --> 02:36:05,890
So that's one thing.

3322
02:36:05,890 --> 02:36:09,870
Second things are that,
sometimes people know what a

3323
02:36:09,870 --> 02:36:10,480
browser is.

3324
02:36:10,480 --> 02:36:12,640
They're fully aware of how
did to update it, but

3325
02:36:12,640 --> 02:36:15,400
they don't want to.

3326
02:36:15,400 --> 02:36:19,200
Sometimes it's because they're
using a phone, and they have a

3327
02:36:19,200 --> 02:36:20,540
very crappy network.

3328
02:36:20,540 --> 02:36:23,900
And they might use a proxy
browser, instead of something

3329
02:36:23,900 --> 02:36:27,540
which is like a full-fledged
browser.

3330
02:36:27,540 --> 02:36:32,090
And proxy browsers are tricky,
as we'll see later on.

3331
02:36:32,090 --> 02:36:35,250
Sometimes, people have very
limited data plans.

3332
02:36:35,250 --> 02:36:37,570
I know people in Europe
who have 30 MB

3333
02:36:37,570 --> 02:36:38,730
data plans for a month.

3334
02:36:38,730 --> 02:36:40,190
And if you exceed that,
then you'll get

3335
02:36:40,190 --> 02:36:43,580
charged very, very highly.

3336
02:36:43,580 --> 02:36:46,820
So there are multiple of the
reasons and genuine reasons

3337
02:36:46,820 --> 02:36:52,790
why you should support older
or proxy browsers.

3338
02:36:52,790 --> 02:36:57,130
And they shouldn't be any stigma
attached, as such.

3339
02:36:57,130 --> 02:37:01,000
I mean, we all like to play with
the greatest and the most

3340
02:37:01,000 --> 02:37:02,160
cutting-edge stuff.

3341
02:37:02,160 --> 02:37:04,970
But the reality of the
world is, we need to

3342
02:37:04,970 --> 02:37:06,600
deal with every one.

3343
02:37:06,600 --> 02:37:14,340
And sometimes, there's also
regulation or some laws

3344
02:37:14,340 --> 02:37:18,240
regarding accessibility and
stuff like that as well, which

3345
02:37:18,240 --> 02:37:21,260
need to be considered as well.

3346
02:37:21,260 --> 02:37:24,120
PAUL IRISH: So I wonder--

3347
02:37:24,120 --> 02:37:28,410
so the second part is, if we do
know what your clients are,

3348
02:37:28,410 --> 02:37:31,120
if you're looking at analytics
and numbers, and they're

3349
02:37:31,120 --> 02:37:35,420
indicating that you're OK on
dropping support for IE 6 and

3350
02:37:35,420 --> 02:37:37,656
7 and potentially 8.

3351
02:37:37,656 --> 02:37:38,980
Is that fine?

3352
02:37:38,980 --> 02:37:42,770
TOM MASLEN: I think it depends
on the context of the content.

3353
02:37:42,770 --> 02:37:47,620
I think, if you're making a
government website, then there

3354
02:37:47,620 --> 02:37:49,530
definitely is a stigma,
because these

3355
02:37:49,530 --> 02:37:51,850
services are mandatory.

3356
02:37:51,850 --> 02:37:55,100
They have to be viewable
by anyone.

3357
02:37:55,100 --> 02:37:58,300
But if you're making an
application like Gmail, then

3358
02:37:58,300 --> 02:38:02,230
probably not, because somebody
with IE 7 won't give you that

3359
02:38:02,230 --> 02:38:03,835
much benefit.

3360
02:38:03,835 --> 02:38:10,070
PAUL IRISH: Ed, is there legal
legislation that requires the

3361
02:38:10,070 --> 02:38:12,490
accessibility to old browsers?

3362
02:38:12,490 --> 02:38:16,600
ED SOWDEN: So the only legal
legislation or legal things

3363
02:38:16,600 --> 02:38:20,240
that exist for older browsers
are accessibility.

3364
02:38:20,240 --> 02:38:23,940
You can be sued for not having
an accessible website.

3365
02:38:23,940 --> 02:38:29,150
But that's not for the user to
determine what accessible is.

3366
02:38:29,150 --> 02:38:31,420
The stigma that we have, this
industry seems to have this

3367
02:38:31,420 --> 02:38:32,330
horrible stigma.

3368
02:38:32,330 --> 02:38:33,970
You can't drop support
for old browsers.

3369
02:38:33,970 --> 02:38:35,950
You can't drop support for--

3370
02:38:35,950 --> 02:38:37,780
you've got to go back to the
question, what is supporting

3371
02:38:37,780 --> 02:38:40,110
an old browser.

3372
02:38:40,110 --> 02:38:42,360
Supporting an old browser for
most of us means that we're

3373
02:38:42,360 --> 02:38:43,960
going to test in it.

3374
02:38:43,960 --> 02:38:45,450
So that's not support at all.

3375
02:38:45,450 --> 02:38:47,370
That means you're testing
in these browsers.

3376
02:38:47,370 --> 02:38:50,740
Supporting is actually, if
anyone has a problem, you'll

3377
02:38:50,740 --> 02:38:52,380
go and to fix it for them.

3378
02:38:52,380 --> 02:38:54,170
That's support.

3379
02:38:54,170 --> 02:38:56,530
So if someone has a problem
using your website, yeah, you

3380
02:38:56,530 --> 02:38:57,900
want to help that person out.

3381
02:38:57,900 --> 02:39:00,190
But there shouldn't be
any stigma attached

3382
02:39:00,190 --> 02:39:03,080
with helping someone.

3383
02:39:03,080 --> 02:39:06,010
But if you want to spend time
making sure ahead of time that

3384
02:39:06,010 --> 02:39:08,510
those people won't have
problems, then that's how you

3385
02:39:08,510 --> 02:39:09,330
spend your time.

3386
02:39:09,330 --> 02:39:10,320
PAUL IRISH: I see.

3387
02:39:10,320 --> 02:39:13,730
TOMOMI IMURA: The one problem
I've see is that--

3388
02:39:13,730 --> 02:39:18,930
let's say, maybe with their
statistics, each company's

3389
02:39:18,930 --> 02:39:19,830
services stat.

3390
02:39:19,830 --> 02:39:22,830
And maybe they just decide
to drop IE support.

3391
02:39:22,830 --> 02:39:24,860
And sometimes they're doing
it the wrong way.

3392
02:39:24,860 --> 02:39:28,950
I mean, they try to sniff in
the user agent or something

3393
02:39:28,950 --> 02:39:32,660
and try to eliminate the older
IE, which seem to be old.

3394
02:39:32,660 --> 02:39:35,230
But many times, they're doing
it the wrong way.

3395
02:39:35,230 --> 02:39:37,530
So let's say, I work
for Nokia.

3396
02:39:37,530 --> 02:39:40,140
And I use a Lumia
phone regularly.

3397
02:39:40,140 --> 02:39:43,720
And my browser choice-- well,
it's not my choice actually.

3398
02:39:43,720 --> 02:39:46,230
It comes with the operating
system.

3399
02:39:46,230 --> 02:39:47,770
And it's IE 10.

3400
02:39:47,770 --> 02:39:50,200
And oftentimes, I
see the site.

3401
02:39:50,200 --> 02:39:53,210
Sorry, you have to update
your browser.

3402
02:39:53,210 --> 02:39:54,230
It's like, really.

3403
02:39:54,230 --> 02:39:55,150
It's IE 10.

3404
02:39:55,150 --> 02:39:55,980
It's pretty decent.

3405
02:39:55,980 --> 02:40:00,230
And I believe that service
or sites should work.

3406
02:40:00,230 --> 02:40:03,010
But I think they're just
trying to sniff it out,

3407
02:40:03,010 --> 02:40:07,135
mistakenly and try to suggest
to me to upgrade the browser

3408
02:40:07,135 --> 02:40:08,860
or just download some
other browsers.

3409
02:40:08,860 --> 02:40:11,350
But the thing is, like you were
saying, we don't always

3410
02:40:11,350 --> 02:40:12,470
have a choice.

3411
02:40:12,470 --> 02:40:14,130
Users don't always
have the choice.

3412
02:40:14,130 --> 02:40:16,750
So that's something I have
to just remind people.

3413
02:40:16,750 --> 02:40:17,890
I have to remind.

3414
02:40:17,890 --> 02:40:21,760
PAUL IRISH: So I guess, on the
topic of support, support is

3415
02:40:21,760 --> 02:40:23,760
kind of difficult.

3416
02:40:23,760 --> 02:40:26,380
It's the verb that we always
use in this discussion.

3417
02:40:26,380 --> 02:40:29,270
And it implies that it
is a binary decision.

3418
02:40:29,270 --> 02:40:30,630
You either support
it, or you don't.

3419
02:40:30,630 --> 02:40:34,320
And I think, for many of our
development cycles, our

3420
02:40:34,320 --> 02:40:37,970
development approach support is
kind of this sliding scale.

3421
02:40:37,970 --> 02:40:40,810

3422
02:40:40,810 --> 02:40:44,920
So Tom, with cutting the
mustard, when a browser falls

3423
02:40:44,920 --> 02:40:48,240
into unsupported, they get
a core experience.

3424
02:40:48,240 --> 02:40:52,080
TOM MASLEN: There is
no unsupported.

3425
02:40:52,080 --> 02:40:55,910
The idea is that everybody is
supplied a core experience.

3426
02:40:55,910 --> 02:40:57,700
Everybody gets the content.

3427
02:40:57,700 --> 02:41:02,350
But the content, the way it's
displayed is very simple.

3428
02:41:02,350 --> 02:41:06,420
So if there's additional content
on the homepage of the

3429
02:41:06,420 --> 02:41:11,790
BBC News site, for example,
analysis and features.

3430
02:41:11,790 --> 02:41:14,900
That's available, but you have
to click it, to go to it.

3431
02:41:14,900 --> 02:41:19,520
So the experience
is very basic.

3432
02:41:19,520 --> 02:41:20,750
But you still get
all the content.

3433
02:41:20,750 --> 02:41:23,020
But then, with the premium
version, we'll just go and

3434
02:41:23,020 --> 02:41:24,740
fetch all of that content
and put it straight into

3435
02:41:24,740 --> 02:41:25,300
the page for you.

3436
02:41:25,300 --> 02:41:27,410
PAUL IRISH: And is the
difference in your case the

3437
02:41:27,410 --> 02:41:32,010
amount of testing between
the core and the premium

3438
02:41:32,010 --> 02:41:32,640
experience?

3439
02:41:32,640 --> 02:41:36,980
I imagine you are not as
actively testing the core

3440
02:41:36,980 --> 02:41:37,290
experience.

3441
02:41:37,290 --> 02:41:39,940
TOM MASLEN: The core experience
is so simple.

3442
02:41:39,940 --> 02:41:41,760
It's a single column.

3443
02:41:41,760 --> 02:41:45,070
We don't add any functionality
into the page.

3444
02:41:45,070 --> 02:41:46,360
Yeah, so that's going to pretty

3445
02:41:46,360 --> 02:41:47,700
much render on anything.

3446
02:41:47,700 --> 02:41:48,890
PAUL IRISH: Right.

3447
02:41:48,890 --> 02:41:52,750
I think Andy Clark, a well-known
developer in the

3448
02:41:52,750 --> 02:41:58,170
UK, a while ago, released a
universal IE 6 style sheet.

3449
02:41:58,170 --> 02:42:01,860
The idea here was basically a
style sheet that had very good

3450
02:42:01,860 --> 02:42:06,710
looking typography but destroyed
all the layout,

3451
02:42:06,710 --> 02:42:08,120
killed all your floats,
just kept it

3452
02:42:08,120 --> 02:42:09,020
all in a single column.

3453
02:42:09,020 --> 02:42:13,020
And the idea was, give that to
IE, give them nothing else.

3454
02:42:13,020 --> 02:42:15,680
The content is there,
and it's accessible.

3455
02:42:15,680 --> 02:42:18,700
But you can forget about
the visualness of

3456
02:42:18,700 --> 02:42:19,970
the rest of the site.

3457
02:42:19,970 --> 02:42:22,400
And I think that's kind of a
nice way for something to go

3458
02:42:22,400 --> 02:42:23,110
unsupported.

3459
02:42:23,110 --> 02:42:27,150
It's basically to fall into it
a pit of accessible content.

3460
02:42:27,150 --> 02:42:30,480
ED SOWDEN: So having an IE
6 style sheet which has

3461
02:42:30,480 --> 02:42:32,660
virtually nothing is kind of the
approach we took for on of

3462
02:42:32,660 --> 02:42:34,710
the large sections of GOV UK.

3463
02:42:34,710 --> 02:42:36,840
Because we used the approach
that Tom was mentioning during

3464
02:42:36,840 --> 02:42:41,080
the intro, with using mobile
first and then sending

3465
02:42:41,080 --> 02:42:45,130
specific IE style sheet
for IE 6, 7, and 8.

3466
02:42:45,130 --> 02:42:47,800
But IE 6, they don't get any
layout, because layout is

3467
02:42:47,800 --> 02:42:49,740
added on desktop.

3468
02:42:49,740 --> 02:42:52,090
So IE 6 just gets
a mobile view.

3469
02:42:52,090 --> 02:42:53,760
So it's a single column.

3470
02:42:53,760 --> 02:42:55,375
It's basically got typography
because that's

3471
02:42:55,375 --> 02:42:56,560
all that you get.

3472
02:42:56,560 --> 02:42:58,430
TOM MASLEN: I think it's a
benefit as well, because

3473
02:42:58,430 --> 02:43:00,520
people with IE 6 or
IE 7 probably

3474
02:43:00,520 --> 02:43:02,010
don't have a good computer.

3475
02:43:02,010 --> 02:43:04,760
And so the fact that it's so
simple means it will render

3476
02:43:04,760 --> 02:43:07,910
like five or six times faster
than other experiences.

3477
02:43:07,910 --> 02:43:09,900
TOMOMI IMURA: [INAUDIBLE], and
that's as long as users can

3478
02:43:09,900 --> 02:43:11,432
get what they want.

3479
02:43:11,432 --> 02:43:12,995
The experience is not killed.

3480
02:43:12,995 --> 02:43:16,310
SHWETANK DIXIT: I think that's
a good strategy, because

3481
02:43:16,310 --> 02:43:19,420
there's so many sites which
either support it or just send

3482
02:43:19,420 --> 02:43:20,780
an error message saying
that, OK,

3483
02:43:20,780 --> 02:43:22,170
this site is not supported.

3484
02:43:22,170 --> 02:43:23,200
And that's it.

3485
02:43:23,200 --> 02:43:25,880
The user cannot do anything
about that.

3486
02:43:25,880 --> 02:43:29,050
So I think that's a very
important thing, that you

3487
02:43:29,050 --> 02:43:30,450
don't block anyone.

3488
02:43:30,450 --> 02:43:33,070
You at least serve them
the core experience.

3489
02:43:33,070 --> 02:43:35,130
And the first part of that
question was, if

3490
02:43:35,130 --> 02:43:36,660
you know your audience.

3491
02:43:36,660 --> 02:43:40,000
And it's really difficult to
know your audience in a very,

3492
02:43:40,000 --> 02:43:41,320
very accurate way.

3493
02:43:41,320 --> 02:43:45,140
Even if you know, using your
statistics and your analysis,

3494
02:43:45,140 --> 02:43:48,730
what are the browsers which are
coming through, there are

3495
02:43:48,730 --> 02:43:50,920
times in which you get to
know a mention on the

3496
02:43:50,920 --> 02:43:51,830
front page of Reddit.

3497
02:43:51,830 --> 02:43:53,550
Or you get slashdotted.

3498
02:43:53,550 --> 02:43:56,990
Or an influential news
website mentions you.

3499
02:43:56,990 --> 02:43:59,580
And then you'll get this whole
stream of traffic, which is

3500
02:43:59,580 --> 02:44:01,090
completely unpredictable.

3501
02:44:01,090 --> 02:44:05,080
So even that premise of that
question, that you know your

3502
02:44:05,080 --> 02:44:06,306
audience, is flawed.

3503
02:44:06,306 --> 02:44:08,590
PAUL IRISH: So I think it's a
good time to move on to the

3504
02:44:08,590 --> 02:44:09,330
next question.

3505
02:44:09,330 --> 02:44:11,880
This one is to be asked
by John Fallows.

3506
02:44:11,880 --> 02:44:15,110

3507
02:44:15,110 --> 02:44:17,290
AUDIENCE: So this is an
anonymous question.

3508
02:44:17,290 --> 02:44:20,720
What's the best way to make
legacy clients a visible part

3509
02:44:20,720 --> 02:44:23,675
of the development process?

3510
02:44:23,675 --> 02:44:27,300
PAUL IRISH: So I think this
is both visibility on the

3511
02:44:27,300 --> 02:44:33,990
developer side, to understand
what is necessary to give them

3512
02:44:33,990 --> 02:44:38,960
what you plan to give them and
also, potentially on the

3513
02:44:38,960 --> 02:44:41,890
executive side, to better
understand what from a

3514
02:44:41,890 --> 02:44:47,220
development cost perspective
is included here.

3515
02:44:47,220 --> 02:44:52,480
TOM MASLEN: So at the BBC
News, once we made the

3516
02:44:52,480 --> 02:44:52,850
responsive site.

3517
02:44:52,850 --> 02:44:54,000
But it was a small
team that did it.

3518
02:44:54,000 --> 02:44:56,290
And then, eventually, we fanned
it out to the rest of

3519
02:44:56,290 --> 02:45:00,630
the department And so we've had
to go through a training

3520
02:45:00,630 --> 02:45:03,870
process with everyone,
as they become

3521
02:45:03,870 --> 02:45:06,000
engaged with the product.

3522
02:45:06,000 --> 02:45:09,770
So we've got the designers
thinking about the core

3523
02:45:09,770 --> 02:45:10,440
experience as well.

3524
02:45:10,440 --> 02:45:11,960
And they're thinking about
progressive enhancement.

3525
02:45:11,960 --> 02:45:15,850
So they start off with the core
experience, and then they

3526
02:45:15,850 --> 02:45:18,920
progressively enhance it and
make the better version.

3527
02:45:18,920 --> 02:45:24,090
The problem that we find is
that, many people just

3528
02:45:24,090 --> 02:45:26,230
associated the core
basic experience

3529
02:45:26,230 --> 02:45:31,050
with a very thin layout.

3530
02:45:31,050 --> 02:45:34,520
What they find harder to do is
to probably try and understand

3531
02:45:34,520 --> 02:45:36,950
that, the core experience
could be any width.

3532
02:45:36,950 --> 02:45:40,522
And the premium experience could
be any width as well.

3533
02:45:40,522 --> 02:45:43,290
PAUL IRISH: I also
wonder is there--

3534
02:45:43,290 --> 02:45:47,060
included on this, I think, there
is a visibility of the

3535
02:45:47,060 --> 02:45:49,510
perceived experience
between legacy

3536
02:45:49,510 --> 02:45:50,910
clients and modern clients.

3537
02:45:50,910 --> 02:45:54,900
And one of these parts is
performance, certainly.

3538
02:45:54,900 --> 02:45:59,210
So just rendering a page or
any sort of interactivity,

3539
02:45:59,210 --> 02:46:01,800
with a more modern browser, it's
going to be quite a bit

3540
02:46:01,800 --> 02:46:03,700
more responsive.

3541
02:46:03,700 --> 02:46:08,750
Is there a good way to kind of
demonstrate the difference

3542
02:46:08,750 --> 02:46:13,900
between the user experience of
someone on an older client

3543
02:46:13,900 --> 02:46:15,290
versus a newer client?

3544
02:46:15,290 --> 02:46:21,120
And is that something that the
executive team wants to see

3545
02:46:21,120 --> 02:46:22,370
and understand?

3546
02:46:22,370 --> 02:46:25,970

3547
02:46:25,970 --> 02:46:29,680
TOMOMI IMURA: Maybe, I
would say, some UI.

3548
02:46:29,680 --> 02:46:34,300
Or I would say UX, using some
Ajaxy type of interaction.

3549
02:46:34,300 --> 02:46:37,760
And that works probably
wonderfully on the latest

3550
02:46:37,760 --> 02:46:40,100
greatest browsers--

3551
02:46:40,100 --> 02:46:43,780
Chrome on desktop for
me works nicely.

3552
02:46:43,780 --> 02:46:46,810
But yeah, they show the
same UI on, let's say,

3553
02:46:46,810 --> 02:46:48,490
older mobile browsers.

3554
02:46:48,490 --> 02:46:51,090
It could be Android, older
Android and stuff.

3555
02:46:51,090 --> 02:46:53,600
Probably, it's going to
look really janky

3556
02:46:53,600 --> 02:46:54,850
or maybe even fails.

3557
02:46:54,850 --> 02:46:57,070

3558
02:46:57,070 --> 02:46:59,440
ED SOWDEN: A lot of it is
managing expectation though.

3559
02:46:59,440 --> 02:47:02,640
People on the older browser,
people on IE 6 who are stuck

3560
02:47:02,640 --> 02:47:04,720
on IE 6 in their corporate
environments, they'll be used

3561
02:47:04,720 --> 02:47:07,030
to an internet which is not
quite like the internet the

3562
02:47:07,030 --> 02:47:09,510
rest of us use.

3563
02:47:09,510 --> 02:47:14,220
So while, for me or for you,
browsing a website in IE 6

3564
02:47:14,220 --> 02:47:18,565
will feel painfully janky
and painfully horrible.

3565
02:47:18,565 --> 02:47:21,340
They're kind of almost
expecting that.

3566
02:47:21,340 --> 02:47:23,500
And people aren't left on these
browsers because they

3567
02:47:23,500 --> 02:47:24,780
want to be there.

3568
02:47:24,780 --> 02:47:27,680
They're there because those are
the browsers they have.

3569
02:47:27,680 --> 02:47:31,190
Because corporate IT have said,
that's what they've got.

3570
02:47:31,190 --> 02:47:34,010
So it's all a case of managing
expectation, for those guys.

3571
02:47:34,010 --> 02:47:37,240
Those people, if they know
they're getting a janky

3572
02:47:37,240 --> 02:47:40,350
experience, they come
into that knowing.

3573
02:47:40,350 --> 02:47:43,540
And my colleagues, I have
colleagues who have IE 6 as

3574
02:47:43,540 --> 02:47:45,030
their browser on
their machines.

3575
02:47:45,030 --> 02:47:47,496
And they know it's
going look crap.

3576
02:47:47,496 --> 02:47:50,535
And they joke with me like,
is this supposed

3577
02:47:50,535 --> 02:47:51,180
to look that bad?

3578
02:47:51,180 --> 02:47:53,590
And it's like, I think
the developer picked

3579
02:47:53,590 --> 02:47:54,310
that color for you.

3580
02:47:54,310 --> 02:47:56,220
It's like no.

3581
02:47:56,220 --> 02:47:57,960
They know the internet
is horrible.

3582
02:47:57,960 --> 02:48:02,380
SHWETANK DIXIT: Yeah, the thing
is just to add or maybe

3583
02:48:02,380 --> 02:48:08,010
even remove from your point,
they might be used to it when

3584
02:48:08,010 --> 02:48:08,600
they're working.

3585
02:48:08,600 --> 02:48:12,930
But for sure, they're using the
internet at their home or

3586
02:48:12,930 --> 02:48:15,000
on their mobile in transit
or something.

3587
02:48:15,000 --> 02:48:18,720
So they know what the real
internet is like.

3588
02:48:18,720 --> 02:48:23,860
And it will be even more
frustrating for them to see

3589
02:48:23,860 --> 02:48:27,270
the internet as it is
in the wild on IE 6,

3590
02:48:27,270 --> 02:48:28,090
all the time at work.

3591
02:48:28,090 --> 02:48:30,480
ED SOWDEN: Go and sit next
to them at work.

3592
02:48:30,480 --> 02:48:32,915
Their lives are a pain,
at work anyway.

3593
02:48:32,915 --> 02:48:34,116
They know.

3594
02:48:34,116 --> 02:48:37,040
PAUL IRISH: Calvin Spealman,
something to add?

3595
02:48:37,040 --> 02:48:39,055
AUDIENCE: Actually, I was going
to ask something about

3596
02:48:39,055 --> 02:48:40,060
what you just said.

3597
02:48:40,060 --> 02:48:41,900
But I wanted to ask,
specifically,

3598
02:48:41,900 --> 02:48:43,220
is there a way to--

3599
02:48:43,220 --> 02:48:46,070
if people have these different
experiences at work and at

3600
02:48:46,070 --> 02:48:48,020
home, they know your site is
different when they're

3601
02:48:48,020 --> 02:48:49,180
accessing it at work.

3602
02:48:49,180 --> 02:48:51,050
And so they might be missing
functionality that they're

3603
02:48:51,050 --> 02:48:51,930
used to at home.

3604
02:48:51,930 --> 02:48:54,970
Is there some strategy we can
take to make them not

3605
02:48:54,970 --> 02:48:57,470
frustrated at us, seeming like
they're suddenly hitting a

3606
02:48:57,470 --> 02:49:01,194
broken version of the site
they're used to?

3607
02:49:01,194 --> 02:49:03,970
ED SOWDEN: I think this comes
back to the approach with

3608
02:49:03,970 --> 02:49:04,380
cutting the mustard.

3609
02:49:04,380 --> 02:49:06,200
You make sure they can
get the content they

3610
02:49:06,200 --> 02:49:08,210
need to get, still.

3611
02:49:08,210 --> 02:49:09,380
While it will look different.

3612
02:49:09,380 --> 02:49:10,520
It will feel at bit different.

3613
02:49:10,520 --> 02:49:12,870
As long as they can achieve
the goals they need to

3614
02:49:12,870 --> 02:49:18,170
achieve, it's the best
you can do for them.

3615
02:49:18,170 --> 02:49:21,565
PAUL IRISH: I think, what I'm
hearing from both of you is

3616
02:49:21,565 --> 02:49:22,990
that, there is kind of--

3617
02:49:22,990 --> 02:49:27,650
both strategies include a
degraded experience for older

3618
02:49:27,650 --> 02:49:30,920
browsers, in some way.

3619
02:49:30,920 --> 02:49:33,920
And that seems to scale
pretty well.

3620
02:49:33,920 --> 02:49:38,290
But that does mean that we do
have at least two experiences.

3621
02:49:38,290 --> 02:49:40,050
And so if we are in a situation
where you have

3622
02:49:40,050 --> 02:49:43,540
someone that has seen both of
the experiences, is that going

3623
02:49:43,540 --> 02:49:44,710
to be a problem?

3624
02:49:44,710 --> 02:49:50,330
TOM MASLEN: I think that's fine,
because like I said in

3625
02:49:50,330 --> 02:49:55,630
the talk, we can't make a
premium experience that works

3626
02:49:55,630 --> 02:49:58,800
across the whole spectrum
of browsers.

3627
02:49:58,800 --> 02:50:04,590
Because poly filling and mobile
internet connections

3628
02:50:04,590 --> 02:50:06,795
are so hard to marry
up together.

3629
02:50:06,795 --> 02:50:11,190
PAUL IRISH: So it has to be good
enough, because there's

3630
02:50:11,190 --> 02:50:11,710
no other way.

3631
02:50:11,710 --> 02:50:14,120
SHWETANK DIXIT: Yeah, it's
better than just showing them

3632
02:50:14,120 --> 02:50:17,310
that, your browser is
not supported by--

3633
02:50:17,310 --> 02:50:19,455
it's at least better
than that.

3634
02:50:19,455 --> 02:50:22,170
TOM MASLEN: Sorry, the one
caveat to what I just said is

3635
02:50:22,170 --> 02:50:26,030
that, if you do server-side
detection and

3636
02:50:26,030 --> 02:50:28,350
sniff for old browsers.

3637
02:50:28,350 --> 02:50:31,260
Because normally people, when
they talk about UA sniffing,

3638
02:50:31,260 --> 02:50:33,530
you think about, is this
a mobile device.

3639
02:50:33,530 --> 02:50:34,750
Or is this a desktop device?

3640
02:50:34,750 --> 02:50:37,170
Whereas, I think now, we should
probably be thinking

3641
02:50:37,170 --> 02:50:41,030
about, is this an old browser
or a new browser.

3642
02:50:41,030 --> 02:50:42,110
I think that would be
an interesting--

3643
02:50:42,110 --> 02:50:43,920
PAUL IRISH: In your case,
would it be--

3644
02:50:43,920 --> 02:50:46,045
does this browser
cut the mustard?

3645
02:50:46,045 --> 02:50:47,842
TOM MASLEN: Yeah, you could
do that on the server,

3646
02:50:47,842 --> 02:50:48,646
if you wanted to.

3647
02:50:48,646 --> 02:50:51,160
TOMOMI IMURA: Right, the old
browser, that doesn't support

3648
02:50:51,160 --> 02:50:51,490
JavaScript.

3649
02:50:51,490 --> 02:50:55,110
It doesn't understand JavaScript
feature detection.

3650
02:50:55,110 --> 02:50:59,350
Then you have to rely
on the server side.

3651
02:50:59,350 --> 02:51:00,330
PAUL IRISH: All right.

3652
02:51:00,330 --> 02:51:02,990
I'd like to move on to
the next question.

3653
02:51:02,990 --> 02:51:05,060
This one comes from
Dustin Castin.

3654
02:51:05,060 --> 02:51:07,560

3655
02:51:07,560 --> 02:51:09,180
Dustin is up here
in the purple.

3656
02:51:09,180 --> 02:51:12,414

3657
02:51:12,414 --> 02:51:16,110
AUDIENCE: So what, as a
community, can we do to help

3658
02:51:16,110 --> 02:51:18,910
the holdouts of legacy clients,
such as government

3659
02:51:18,910 --> 02:51:20,260
and IT departments?

3660
02:51:20,260 --> 02:51:21,730
PAUL IRISH: Nothing.

3661
02:51:21,730 --> 02:51:23,310
TOM MASLEN: That was
my answer as well.

3662
02:51:23,310 --> 02:51:24,910
I was going to say, nothing.

3663
02:51:24,910 --> 02:51:29,170
ED SOWDEN: So I did a little bit
of research kind of around

3664
02:51:29,170 --> 02:51:31,400
this point, before I
came, this think

3665
02:51:31,400 --> 02:51:33,350
Paul said to me earlier.

3666
02:51:33,350 --> 02:51:37,510
I've built a thing which takes
your Google Analytics and

3667
02:51:37,510 --> 02:51:40,630
splits out browsers with graphs,
so you can see browser

3668
02:51:40,630 --> 02:51:41,490
usage over time.

3669
02:51:41,490 --> 02:51:43,880
PAUL IRISH: So it's called
Browser Matrix, takes in your

3670
02:51:43,880 --> 02:51:46,190
Google Analytics account and
then just charts the trend

3671
02:51:46,190 --> 02:51:47,540
lines for a browser merger.

3672
02:51:47,540 --> 02:51:49,010
ED SOWDEN: Paul said, it would
be cool, if you could show

3673
02:51:49,010 --> 02:51:51,010
future trends.

3674
02:51:51,010 --> 02:51:55,300
So I went and had a look,
because I'm a nerd.

3675
02:51:55,300 --> 02:52:00,470
IE 6's and 7's trend lines on
GOV UK, they're going down.

3676
02:52:00,470 --> 02:52:04,950
IE 6 lost half a percent
in the last six months.

3677
02:52:04,950 --> 02:52:08,710
It's gone from just over
one to around half.

3678
02:52:08,710 --> 02:52:11,330
TOM MASLEN: Is that any
particular time of the week?

3679
02:52:11,330 --> 02:52:16,840
ED SOWDEN: So it can also show
you stats on a day by day,

3680
02:52:16,840 --> 02:52:18,580
seven day rolling basis.

3681
02:52:18,580 --> 02:52:21,720
And during the week,
6 is above that.

3682
02:52:21,720 --> 02:52:23,770
And at weekends, it's
not really there.

3683
02:52:23,770 --> 02:52:27,140
PAUL IRISH: But I guess the
question is, IE 8 would be a

3684
02:52:27,140 --> 02:52:27,970
better case.

3685
02:52:27,970 --> 02:52:29,880
ED SOWDEN: So those guys,
they're going down.

3686
02:52:29,880 --> 02:52:31,450
They're going to get there.

3687
02:52:31,450 --> 02:52:35,500
And from the government
perspective, like working in

3688
02:52:35,500 --> 02:52:39,775
government, everyone is
painfully aware in government,

3689
02:52:39,775 --> 02:52:42,220
that we're tied into these
horrible contracts that

3690
02:52:42,220 --> 02:52:43,590
require us to have IE 6.

3691
02:52:43,590 --> 02:52:45,820
And everyone is working try
and get out of them.

3692
02:52:45,820 --> 02:52:48,220
No one is trying to stay
in that world.

3693
02:52:48,220 --> 02:52:50,610
There's not much the development
community can do

3694
02:52:50,610 --> 02:52:52,970
to help that.

3695
02:52:52,970 --> 02:52:56,050
And on GOV UK, we have a browser
bar that pops up, if

3696
02:52:56,050 --> 02:52:59,190
you're on an old browser, that
says, try and upgrade.

3697
02:52:59,190 --> 02:53:00,750
which hilariously--

3698
02:53:00,750 --> 02:53:02,720
we won a design award
earlier this year.

3699
02:53:02,720 --> 02:53:05,150
And a whole collection of the
screen shot that were in news

3700
02:53:05,150 --> 02:53:07,080
articles, you could see
that browser bar.

3701
02:53:07,080 --> 02:53:09,744

3702
02:53:09,744 --> 02:53:11,490
It made our [INAUDIBLE]

3703
02:53:11,490 --> 02:53:14,630
smile that these people writing
reports for fairly

3704
02:53:14,630 --> 02:53:19,060
large magazines online still
use older browsers as well.

3705
02:53:19,060 --> 02:53:22,120
But in terms of government and
massive corporates, very

3706
02:53:22,120 --> 02:53:26,870
aware, we're trying to get
rid of it, internally.

3707
02:53:26,870 --> 02:53:29,325
PAUL IRISH: Question from
the audience, Daniel.

3708
02:53:29,325 --> 02:53:34,580

3709
02:53:34,580 --> 02:53:38,990
AUDIENCE: So we always want to
allow users to be happy.

3710
02:53:38,990 --> 02:53:39,880
And I looked at some numbers.

3711
02:53:39,880 --> 02:53:41,180
And we have IE.

3712
02:53:41,180 --> 02:53:43,670
All of IE is like 8%
of our traffic.

3713
02:53:43,670 --> 02:53:48,770
Maybe 4% of our traffic
is IE 8.

3714
02:53:48,770 --> 02:53:53,550
But is it worth spending the
effort versus things like

3715
02:53:53,550 --> 02:53:55,660
developer happiness
and retention?

3716
02:53:55,660 --> 02:53:57,910
PAUL IRISH: Sounds like it's not
worth the effort for you.

3717
02:53:57,910 --> 02:54:01,060

3718
02:54:01,060 --> 02:54:03,870
Sounds like you're doing well.

3719
02:54:03,870 --> 02:54:05,680
TOM MASLEN: I'd say,
it depends.

3720
02:54:05,680 --> 02:54:08,860
I mean, those old devices might
bring a lot of traffic

3721
02:54:08,860 --> 02:54:09,310
to your site.

3722
02:54:09,310 --> 02:54:11,226
But do they bring a
lot of revenue?

3723
02:54:11,226 --> 02:54:14,821

3724
02:54:14,821 --> 02:54:19,390
PAUL IRISH: I think that's
something that, it's more by

3725
02:54:19,390 --> 02:54:21,970
the performance load
time of the site.

3726
02:54:21,970 --> 02:54:26,930
But I think it's worth looking
into how those technical

3727
02:54:26,930 --> 02:54:30,700
metrics of the site and of those
users translate into

3728
02:54:30,700 --> 02:54:34,830
their success on site.

3729
02:54:34,830 --> 02:54:37,390
I guess, to get back to Dustin's
question, we're

3730
02:54:37,390 --> 02:54:40,120
talking about what our community
can do to help

3731
02:54:40,120 --> 02:54:42,780
legacy clients.

3732
02:54:42,780 --> 02:54:52,940
So Google Apps dropped support
for IE 8 last November.

3733
02:54:52,940 --> 02:54:55,340
And Google Analytics dashboards
is dropping support

3734
02:54:55,340 --> 02:54:58,410
for IE 8 in a few months.

3735
02:54:58,410 --> 02:55:02,410
Google has a policy of only
supporting the most recent and

3736
02:55:02,410 --> 02:55:04,550
the last version.

3737
02:55:04,550 --> 02:55:07,710
And so Google is being kind of
aggressive in this and saying,

3738
02:55:07,710 --> 02:55:09,810
you just have to upgrade,
in order to use it.

3739
02:55:09,810 --> 02:55:15,020
You can't use Google
Docs on IE 8.

3740
02:55:15,020 --> 02:55:19,600
But is there anyone else that
is in a position where they

3741
02:55:19,600 --> 02:55:21,330
can help move this forward?

3742
02:55:21,330 --> 02:55:24,400
Or were you just in a case where
we are just waiting for

3743
02:55:24,400 --> 02:55:30,430
those trend lines to naturally
go down over the course years,

3744
02:55:30,430 --> 02:55:32,055
as we did with IE 6.

3745
02:55:32,055 --> 02:55:33,400
ED SOWDEN: Internally,
in UK government,

3746
02:55:33,400 --> 02:55:34,540
I'd love to say more.

3747
02:55:34,540 --> 02:55:40,040
But there is work going on to
fix it there But yeah, it's

3748
02:55:40,040 --> 02:55:42,155
still-- there are
people trying.

3749
02:55:42,155 --> 02:55:45,110
SHWETANK DIXIT: One more thing
that I wanted to add was, a

3750
02:55:45,110 --> 02:55:47,480
lot of these things are decided
at the contract level.

3751
02:55:47,480 --> 02:55:50,420

3752
02:55:50,420 --> 02:55:52,210
I can at least talk about
the Indian government.

3753
02:55:52,210 --> 02:55:54,210
Sometimes, what happens
is, they don't make

3754
02:55:54,210 --> 02:55:55,290
the government websites.

3755
02:55:55,290 --> 02:55:58,790
They sometimes send it out
to a contractor who

3756
02:55:58,790 --> 02:56:00,760
makes it for them.

3757
02:56:00,760 --> 02:56:03,440
And usually, things
are decided when

3758
02:56:03,440 --> 02:56:04,440
the contract is signed.

3759
02:56:04,440 --> 02:56:07,290
And if there's a clause
saying that, OK,

3760
02:56:07,290 --> 02:56:09,050
IE 6 will be supported.

3761
02:56:09,050 --> 02:56:11,220
It has to be supported.

3762
02:56:11,220 --> 02:56:13,400
So one of the two
things is to--

3763
02:56:13,400 --> 02:56:15,770
as a web developer, if you're
vying for that contract-- to

3764
02:56:15,770 --> 02:56:18,530
argue at that level, before
signing, that, yes.

3765
02:56:18,530 --> 02:56:20,600
I will not be supporting
these things.

3766
02:56:20,600 --> 02:56:24,580
I might be supporting
the newer versions.

3767
02:56:24,580 --> 02:56:27,010
And the second thing I wanted
to mention was, this problem

3768
02:56:27,010 --> 02:56:31,140
is exacerbated by the fact that
many people who were in

3769
02:56:31,140 --> 02:56:34,760
government weren't really tech
savvy that much, for a while.

3770
02:56:34,760 --> 02:56:38,690
They didn't really know about
browsers and stuff like that.

3771
02:56:38,690 --> 02:56:41,960
But with newer devices coming
in, people are having iPhones

3772
02:56:41,960 --> 02:56:44,540
and iPads and stuff like that.

3773
02:56:44,540 --> 02:56:47,630
They still might not know what
a browser is or not care.

3774
02:56:47,630 --> 02:56:52,470
But they do know that, OK, this
website that I'm signing

3775
02:56:52,470 --> 02:56:55,600
the contract for, it has to work
on my iPad, for example.

3776
02:56:55,600 --> 02:56:59,060
So they're more focused on
those things, on devices,

3777
02:56:59,060 --> 02:57:01,320
rather than the older
browsers.

3778
02:57:01,320 --> 02:57:03,720
So that mind shift is happening
a little bit.

3779
02:57:03,720 --> 02:57:08,070
But once again, as web
developers, before signing the

3780
02:57:08,070 --> 02:57:10,330
contract, you have to
see it and be very

3781
02:57:10,330 --> 02:57:11,895
careful about that.

3782
02:57:11,895 --> 02:57:14,980
ED SOWDEN: Talking of contracts,
old contracts that

3783
02:57:14,980 --> 02:57:18,440
UK government signs now can't
have anything which even hints

3784
02:57:18,440 --> 02:57:21,140
at vendor lock-in or device
or browse or lock-in.

3785
02:57:21,140 --> 02:57:23,810
Anything that hints at a
specific version has to be

3786
02:57:23,810 --> 02:57:26,430
removed before contracts
can go out to tender.

3787
02:57:26,430 --> 02:57:29,995
There's nothing like that
sent out anymore.

3788
02:57:29,995 --> 02:57:33,490
PAUL IRISH: Coming from the
audience, Mary from O'Reilly--

3789
02:57:33,490 --> 02:57:34,480
AUDIENCE: Hey.

3790
02:57:34,480 --> 02:57:35,870
So just going back to--

3791
02:57:35,870 --> 02:57:38,740
we were talking earlier about
how frustrating it is for your

3792
02:57:38,740 --> 02:57:41,010
coworkers, if they have one
browser version at home and

3793
02:57:41,010 --> 02:57:43,830
one browser version at work and
those types of scenarios.

3794
02:57:43,830 --> 02:57:48,960
I think we might be referring to
a very specific portion of

3795
02:57:48,960 --> 02:57:52,760
the world, in that, those are
the people who are very tech

3796
02:57:52,760 --> 02:57:56,310
savvy, who have the latest and
greatest things, who--

3797
02:57:56,310 --> 02:57:59,230
yeah, bigger and newer
is better.

3798
02:57:59,230 --> 02:58:03,420
But what about the rest
of the world that--

3799
02:58:03,420 --> 02:58:05,550
updating your browser is scary,
because it means, all

3800
02:58:05,550 --> 02:58:08,250
of a sudden, you don't know
how to use it anymore.

3801
02:58:08,250 --> 02:58:10,440
So there are people who
consciously make the choice to

3802
02:58:10,440 --> 02:58:13,350
not update because of that.

3803
02:58:13,350 --> 02:58:14,905
TOMOMI IMURA: Your moms.

3804
02:58:14,905 --> 02:58:15,610
AUDIENCE: I'm sorry?

3805
02:58:15,610 --> 02:58:16,980
TOMOMI IMURA: I said,
your moms.

3806
02:58:16,980 --> 02:58:18,140
AUDIENCE: Well, OK.

3807
02:58:18,140 --> 02:58:19,340
So yeah, that's an example.

3808
02:58:19,340 --> 02:58:20,890
My mom does that.

3809
02:58:20,890 --> 02:58:23,360
But I mean, it's a
legit scenario.

3810
02:58:23,360 --> 02:58:29,790
And by eliminating the ability
for them to view your website,

3811
02:58:29,790 --> 02:58:31,920
you're basically telling
them they don't matter.

3812
02:58:31,920 --> 02:58:32,790
PAUL IRISH: Yes.

3813
02:58:32,790 --> 02:58:36,300
I think change aversion is real
for everyone, in a lot of

3814
02:58:36,300 --> 02:58:40,430
cases, browsers and website
features as well.

3815
02:58:40,430 --> 02:58:44,950
And my take here is that, lot of
it is up to browser makers

3816
02:58:44,950 --> 02:58:47,850
themselves, to make transitions

3817
02:58:47,850 --> 02:58:49,215
as smooth as possible.

3818
02:58:49,215 --> 02:58:50,920
TOM MASLEN: We're getting there,
because the problem was

3819
02:58:50,920 --> 02:58:54,590
always IE or more like
corporate IE.

3820
02:58:54,590 --> 02:58:56,930
So people would build corporate
intranets, and they

3821
02:58:56,930 --> 02:58:58,690
would rely on ActiveX.

3822
02:58:58,690 --> 02:59:00,870
And that's why we're in a
situation where there are so

3823
02:59:00,870 --> 02:59:05,065
many corporate desktops
that can't upgrade.

3824
02:59:05,065 --> 02:59:07,060
TOMOMI IMURA: I was going
to mention that too.

3825
02:59:07,060 --> 02:59:10,470
Many times, you can't just
download and install any

3826
02:59:10,470 --> 02:59:11,530
browser on you computers.

3827
02:59:11,530 --> 02:59:14,240
You have to ask the IT
guys to do that.

3828
02:59:14,240 --> 02:59:18,570
So obviously, probably,
that's where legacy

3829
02:59:18,570 --> 02:59:19,270
IE is coming from.

3830
02:59:19,270 --> 02:59:24,660
So if you're working for the web
services, for enterprise

3831
02:59:24,660 --> 02:59:27,940
and such, this is something
like a really huge issue.

3832
02:59:27,940 --> 02:59:31,360
And you have to really watch
your browser stats and what

3833
02:59:31,360 --> 02:59:33,410
your people are using.

3834
02:59:33,410 --> 02:59:35,730
PAUL IRISH: So I want to move
on to the next question.

3835
02:59:35,730 --> 02:59:38,040
But before I do, I want
to get Jeffrey

3836
02:59:38,040 --> 02:59:39,510
Burtoft from Microsoft.

3837
02:59:39,510 --> 02:59:43,650
Since we are talking about IE a
lot, it would be nice to get

3838
02:59:43,650 --> 02:59:46,894
his comment here.

3839
02:59:46,894 --> 02:59:48,690
JEFFREY BURTOFT: Yeah,
thank you.

3840
02:59:48,690 --> 02:59:55,290
So first, to defend
Microsoft here--

3841
02:59:55,290 --> 02:59:56,410
and I do that proudly.

3842
02:59:56,410 --> 02:59:58,070
Because one of the things I
want to make sure that we

3843
02:59:58,070 --> 03:00:02,410
understand is that, Windows
XP that runs IE

3844
03:00:02,410 --> 03:00:04,490
8 was a great product.

3845
03:00:04,490 --> 03:00:06,110
And that's why people
still use it.

3846
03:00:06,110 --> 03:00:09,450
So any time we build great
products, we're going to have

3847
03:00:09,450 --> 03:00:11,640
to deal with legacy browsers,
because they're

3848
03:00:11,640 --> 03:00:12,890
going to stick around.

3849
03:00:12,890 --> 03:00:17,540
So if you look at a parallel
to iOS, Apple just stopped

3850
03:00:17,540 --> 03:00:18,470
supporting--

3851
03:00:18,470 --> 03:00:20,810
was it 3GS--

3852
03:00:20,810 --> 03:00:24,200
with updates, which means that
iOS 6 is the last version

3853
03:00:24,200 --> 03:00:25,540
they'll ever see.

3854
03:00:25,540 --> 03:00:27,980
But those phones are going
to continue to be around.

3855
03:00:27,980 --> 03:00:29,960
And they'll become
a legacy platform

3856
03:00:29,960 --> 03:00:31,340
that we have to support.

3857
03:00:31,340 --> 03:00:33,200
So when we have good products
that are going to stick

3858
03:00:33,200 --> 03:00:35,470
around, it's something that
we need to plan for.

3859
03:00:35,470 --> 03:00:38,605
So these type of discussions
will always be relevant.

3860
03:00:38,605 --> 03:00:44,740
PAUL IRISH: I think, in this
case, our situation is that,

3861
03:00:44,740 --> 03:00:47,150
Windows XP is a great product.

3862
03:00:47,150 --> 03:00:51,590
But the problem there is that,
users of IE on Windows XP

3863
03:00:51,590 --> 03:00:55,100
don't have an ability to upgrade
their browser to the

3864
03:00:55,100 --> 03:00:56,320
next version of IE.

3865
03:00:56,320 --> 03:01:02,050
JEFFREY BURTOFT: Yeah, so that's
something that's clear.

3866
03:01:02,050 --> 03:01:05,420
If you are on that platform,
there are two different things

3867
03:01:05,420 --> 03:01:09,280
that are going to cause you to
stay on older versions of IE.

3868
03:01:09,280 --> 03:01:11,690
One is, it's your environment,
whether it's because you don't

3869
03:01:11,690 --> 03:01:12,220
want to upgrade.

3870
03:01:12,220 --> 03:01:17,260
Or you can't upgrade or the fact
that, with IE, you can't

3871
03:01:17,260 --> 03:01:20,540
upgrade past IE 8, if you're
on Windows XP.

3872
03:01:20,540 --> 03:01:25,215
So at Microsoft, we
use JavaScript.

3873
03:01:25,215 --> 03:01:28,010
We use our JavaScript
engine, HTML5, in

3874
03:01:28,010 --> 03:01:29,860
a lot of our products.

3875
03:01:29,860 --> 03:01:35,180
And so whether it's writing apps
for Office or in embedded

3876
03:01:35,180 --> 03:01:38,670
or an Xbox or in Windows 8 apps,
all of that can be done

3877
03:01:38,670 --> 03:01:40,320
with the JavaScript engine.

3878
03:01:40,320 --> 03:01:44,000
So there's definitely a coupling
there that makes us

3879
03:01:44,000 --> 03:01:47,250
have to draw some lines in the
sand, as to where we can

3880
03:01:47,250 --> 03:01:48,640
update and where we can't.

3881
03:01:48,640 --> 03:01:53,140
So there are reasons behind
it, I guess is

3882
03:01:53,140 --> 03:01:53,970
what I would say.

3883
03:01:53,970 --> 03:01:54,470
PAUL IRISH: Sure.

3884
03:01:54,470 --> 03:01:58,820
And I guess we can close this
IE discussion for now, with

3885
03:01:58,820 --> 03:02:03,350
the end-of-support date for
Windows XP is April, 2014.

3886
03:02:03,350 --> 03:02:04,040
JEFFREY BURTOFT: That's right.

3887
03:02:04,040 --> 03:02:07,830
PAUL IRISH: So that trend line
that we're watching for IE 8

3888
03:02:07,830 --> 03:02:13,015
may potentially drop down more
substantially at that point.

3889
03:02:13,015 --> 03:02:16,340
ED SOWDEN: So there's a whole
other dark world which no one

3890
03:02:16,340 --> 03:02:17,730
talks about.

3891
03:02:17,730 --> 03:02:20,100
Talking about old IEs and the
fact there are other things

3892
03:02:20,100 --> 03:02:21,680
which we have support, which
no one talks about.

3893
03:02:21,680 --> 03:02:25,170
And they're old screen readers,
screen-reading

3894
03:02:25,170 --> 03:02:25,665
technology.

3895
03:02:25,665 --> 03:02:28,100
PAUL IRISH: Ed, before we move
on to screen readers, I want

3896
03:02:28,100 --> 03:02:31,421
to get Alex Russell's
comments here.

3897
03:02:31,421 --> 03:02:32,685
ALEX RUSSELL: Thanks.

3898
03:02:32,685 --> 03:02:35,005
Alex Russell-- one of my first
projects at Google was a

3899
03:02:35,005 --> 03:02:38,150
product called Chrome Frame,
which was necessitated because

3900
03:02:38,150 --> 03:02:39,770
you didn't do what
you just said.

3901
03:02:39,770 --> 03:02:43,550
Microsoft didn't take
care of the legacy.

3902
03:02:43,550 --> 03:02:46,100
It was Microsoft's
responsibility to do that.

3903
03:02:46,100 --> 03:02:49,380
And instead, Microsoft chose not
to invest in making sure

3904
03:02:49,380 --> 03:02:52,430
that users of Windows XP could
continue to use modern

3905
03:02:52,430 --> 03:02:53,010
technology.

3906
03:02:53,010 --> 03:02:58,240
So having done the clean-up work
for you, I just need to

3907
03:02:58,240 --> 03:03:01,800
make the point that
you didn't.

3908
03:03:01,800 --> 03:03:08,740
[APPLAUSE]

3909
03:03:08,740 --> 03:03:10,240
PAUL IRISH: This is going
to get exciting.

3910
03:03:10,240 --> 03:03:14,580
So for the moment, we're
going to move

3911
03:03:14,580 --> 03:03:17,650
on to the next question.

3912
03:03:17,650 --> 03:03:21,710
This one, Matthias Coutsman.

3913
03:03:21,710 --> 03:03:27,470

3914
03:03:27,470 --> 03:03:28,620
AUDIENCE: Hi.

3915
03:03:28,620 --> 03:03:31,860
My question is, for how long
is it for worth polyfilling

3916
03:03:31,860 --> 03:03:34,540
features for legacy browsers
and taking the hit in

3917
03:03:34,540 --> 03:03:36,870
performance or of
productivity?

3918
03:03:36,870 --> 03:03:39,050
What factors should influence
the [INAUDIBLE]

3919
03:03:39,050 --> 03:03:41,960
tries to see support for
a legacy client?

3920
03:03:41,960 --> 03:03:45,880
PAUL IRISH: So in a lot of
cases, our method of dealing

3921
03:03:45,880 --> 03:03:47,910
with older clients that don't
support a certain capability

3922
03:03:47,910 --> 03:03:49,620
is polyfilling them.

3923
03:03:49,620 --> 03:03:54,120
We started out with the
json2.js, the JSON polyfill.

3924
03:03:54,120 --> 03:03:57,080
And we've managed to polyfill
many, many things.

3925
03:03:57,080 --> 03:04:00,720
These polyfills do have
performance cost, not only in

3926
03:04:00,720 --> 03:04:04,200
the bytes that we have to send
down the wire in CSS and

3927
03:04:04,200 --> 03:04:07,290
JavaScript, but also in
runtime performance.

3928
03:04:07,290 --> 03:04:12,030
So performance of polyfills
is a concern.

3929
03:04:12,030 --> 03:04:16,330
And what are the other aspects
that could help influence the

3930
03:04:16,330 --> 03:04:19,030
choice to--

3931
03:04:19,030 --> 03:04:21,110
see support might not
be the right words--

3932
03:04:21,110 --> 03:04:24,140
but change the support level?

3933
03:04:24,140 --> 03:04:27,070
TOM MASLEN: So maybe a good
example is with animation.

3934
03:04:27,070 --> 03:04:29,800
So a couple years ago, people
would JavaScript animations.

3935
03:04:29,800 --> 03:04:33,350
And now we try [INAUDIBLE]
animations with CSS.

3936
03:04:33,350 --> 03:04:36,850
And we just say, well, if you
don't have that CSS feature,

3937
03:04:36,850 --> 03:04:42,180
you just get a janky
animation.

3938
03:04:42,180 --> 03:04:43,120
I'd say, that's fine.

3939
03:04:43,120 --> 03:04:47,160
I don't have a problem with
people in IE getting janky

3940
03:04:47,160 --> 03:04:48,020
transitions.

3941
03:04:48,020 --> 03:04:49,720
TOMOMI IMURA: I'm not sure
about jankiness.

3942
03:04:49,720 --> 03:04:53,950
I mean, if you want to have some
animation but it doesn't

3943
03:04:53,950 --> 03:04:56,095
work in some browsers,
I think you have to

3944
03:04:56,095 --> 03:04:57,530
just kill the animation.

3945
03:04:57,530 --> 03:04:59,840
I think not moving
at all is far

3946
03:04:59,840 --> 03:05:01,620
better than janky animation.

3947
03:05:01,620 --> 03:05:03,400
TOM MASLEN: So when I say,
janky, I'll actually mean

3948
03:05:03,400 --> 03:05:04,490
binary-like.

3949
03:05:04,490 --> 03:05:06,310
It's closed, then it's open.

3950
03:05:06,310 --> 03:05:09,580
But then, with a more modern
browser, you can slide--

3951
03:05:09,580 --> 03:05:11,520
TOMOMI IMURA: On and
off toggling.

3952
03:05:11,520 --> 03:05:13,140
TOM MASLEN: Although, I guess
an issue with that is not so

3953
03:05:13,140 --> 03:05:14,650
much with polyfill.

3954
03:05:14,650 --> 03:05:18,530
I've seen recently where
I made a panel, a pair.

3955
03:05:18,530 --> 03:05:22,120
And I gave it a nice
animation.

3956
03:05:22,120 --> 03:05:23,920
It worked lovely in iOS.

3957
03:05:23,920 --> 03:05:29,110
But when I checked it on
an Amazon Kindle Fire--

3958
03:05:29,110 --> 03:05:30,310
it had a great browser.

3959
03:05:30,310 --> 03:05:31,880
It supported the feature.

3960
03:05:31,880 --> 03:05:36,710
But it was really janky, because
the hardware just

3961
03:05:36,710 --> 03:05:39,242
couldn't keep up.

3962
03:05:39,242 --> 03:05:41,285
TOMOMI IMURA: And not just
the hardware, actually.

3963
03:05:41,285 --> 03:05:43,040
On the Amazon Kindle,
and the sale

3964
03:05:43,040 --> 03:05:46,110
browser is a proxy browser.

3965
03:05:46,110 --> 03:05:49,960
Or maybe in marketing terms,
it's cloud accelerated browser

3966
03:05:49,960 --> 03:05:53,250
or whatever that is.

3967
03:05:53,250 --> 03:05:56,325
Yeah, so let us keep in mind,
it's not like all JavaScript

3968
03:05:56,325 --> 03:05:59,190
is forced to work in some
WebKit, works in any way you

3969
03:05:59,190 --> 03:06:01,836
want in a proxy.

3970
03:06:01,836 --> 03:06:06,790
PAUL IRISH: But I think when we
talk about legacy clients,

3971
03:06:06,790 --> 03:06:10,500
there's a few reasons why
we use the term legacy.

3972
03:06:10,500 --> 03:06:13,030
And that does happen
to usually refer

3973
03:06:13,030 --> 03:06:14,560
to them being old.

3974
03:06:14,560 --> 03:06:17,970
But I think the reason that we
don't embrace them and love

3975
03:06:17,970 --> 03:06:22,070
them is because they
may have bugs.

3976
03:06:22,070 --> 03:06:24,660
They're probably slower than
what we're used to.

3977
03:06:24,660 --> 03:06:28,450
And they lack features that
we want to use, that we're

3978
03:06:28,450 --> 03:06:29,595
interested in using.

3979
03:06:29,595 --> 03:06:32,220
So it's not necessarily that
they're old, but they're

3980
03:06:32,220 --> 03:06:35,820
aren't good as what we want.

3981
03:06:35,820 --> 03:06:42,380
And is it worth forming a policy
around how to change

3982
03:06:42,380 --> 03:06:43,640
your support level
for browsers.

3983
03:06:43,640 --> 03:06:45,962
What's your take on
this, Shwetank?

3984
03:06:45,962 --> 03:06:48,610
SHWETANK DIXIT: I think,
ultimately, there are going to

3985
03:06:48,610 --> 03:06:52,280
be so many variations that you
should stop with the mindset

3986
03:06:52,280 --> 03:06:55,280
of supporting or not supporting
those kind of

3987
03:06:55,280 --> 03:06:56,190
browsers or not.

3988
03:06:56,190 --> 03:06:59,360
You should just go with the
thing of progressive

3989
03:06:59,360 --> 03:07:03,290
enhancement and feature
detection.

3990
03:07:03,290 --> 03:07:06,970
Because what will happen is, you
say that, OK, I'm going to

3991
03:07:06,970 --> 03:07:09,030
support this old browser.

3992
03:07:09,030 --> 03:07:11,710
But ultimately, what will happen
is, you'll get more and

3993
03:07:11,710 --> 03:07:12,330
more devices.

3994
03:07:12,330 --> 03:07:16,310
And nowadays, we get devices
which are running a very good

3995
03:07:16,310 --> 03:07:20,210
version of Android but
are less than $100.

3996
03:07:20,210 --> 03:07:23,210
So even though they're running
like a very, very nice version

3997
03:07:23,210 --> 03:07:27,510
of WebKit, for example, the
performance is such that it

3998
03:07:27,510 --> 03:07:29,560
really makes them almost
like a legacy

3999
03:07:29,560 --> 03:07:32,090
browser, in many cases.

4000
03:07:32,090 --> 03:07:36,030
So how you define a legacy
browser is going to become

4001
03:07:36,030 --> 03:07:36,820
more and more muddled.

4002
03:07:36,820 --> 03:07:43,130
Because a browser with a very,
very nice phone can behave

4003
03:07:43,130 --> 03:07:46,850
like a legacy browser, if the
network connection sucks.

4004
03:07:46,850 --> 03:07:51,680
And there's a lot of smartphones
coming up, with a

4005
03:07:51,680 --> 03:07:57,360
good version of WebKit but
very underpowered.

4006
03:07:57,360 --> 03:07:59,110
TOM MASLEN: It's
a strange time.

4007
03:07:59,110 --> 03:08:03,520
So you've got like a Nokia C5,
that's an entry level phone.

4008
03:08:03,520 --> 03:08:07,170
It's got a really bad
processor and RAM.

4009
03:08:07,170 --> 03:08:08,840
But it'll have to have
a really good version

4010
03:08:08,840 --> 03:08:09,890
of WebKit on it.

4011
03:08:09,890 --> 03:08:10,600
So it will render the
page really well.

4012
03:08:10,600 --> 03:08:14,710
And then, you can compare that
to an iPhone 5 that has Opera

4013
03:08:14,710 --> 03:08:15,250
Mini in it.

4014
03:08:15,250 --> 03:08:18,810
So the capabilities would be
less, or you'd at least get a

4015
03:08:18,810 --> 03:08:19,770
static version of the site.

4016
03:08:19,770 --> 03:08:24,080
It's a very bizarre issue
to try and solve.

4017
03:08:24,080 --> 03:08:25,940
I don't think there is
where a magic bullet.

4018
03:08:25,940 --> 03:08:29,230
TOMOMI IMURA: Actually, in the
Modernizr web page, the

4019
03:08:29,230 --> 03:08:33,040
documentation says, because you
can use a portal doesn't

4020
03:08:33,040 --> 03:08:34,050
mean you should.

4021
03:08:34,050 --> 03:08:35,090
I think it says that.

4022
03:08:35,090 --> 03:08:36,070
PAUL IRISH: It's true.

4023
03:08:36,070 --> 03:08:41,510
TOMOMI IMURA: So that's really,
developers have to

4024
03:08:41,510 --> 03:08:43,820
decide what you want
to really support.

4025
03:08:43,820 --> 03:08:46,990
And many times, a fancy UI
will be breeding nice.

4026
03:08:46,990 --> 03:08:49,900
But do you really care
in some browsers,

4027
03:08:49,900 --> 03:08:51,330
having rounded corners?

4028
03:08:51,330 --> 03:08:51,680
Really?

4029
03:08:51,680 --> 03:08:53,070
You don't always need this.

4030
03:08:53,070 --> 03:08:55,160
You can always drop certain--

4031
03:08:55,160 --> 03:08:57,560
especially if it's just a UI
prettiness, you can drop that.

4032
03:08:57,560 --> 03:09:00,180
PAUL IRISH: But I guess the
other part of this is that,

4033
03:09:00,180 --> 03:09:01,000
there are some features.

4034
03:09:01,000 --> 03:09:04,480
There's a set of features that
you cannot let degrade

4035
03:09:04,480 --> 03:09:06,170
gracefully.

4036
03:09:06,170 --> 03:09:13,550
WebGL, GetUserMedia, Web Audio
API, these many can't be

4037
03:09:13,550 --> 03:09:15,820
polyfilled.

4038
03:09:15,820 --> 03:09:19,060
So what is the responsible way
in defining a browser-support

4039
03:09:19,060 --> 03:09:22,530
policy, when you're dealing with
features of this sort,

4040
03:09:22,530 --> 03:09:26,290
where you're providing an
experience that competes with

4041
03:09:26,290 --> 03:09:29,000
something on a native
platform, and

4042
03:09:29,000 --> 03:09:30,390
it's not content based?

4043
03:09:30,390 --> 03:09:31,530
TOM MASLEN: So you
mentioned WebGL.

4044
03:09:31,530 --> 03:09:35,840
I can give you an
example there.

4045
03:09:35,840 --> 03:09:40,280
On the BBC m we've started
doing WebGL content now.

4046
03:09:40,280 --> 03:09:44,100
We have the Mars Lander
3D object.

4047
03:09:44,100 --> 03:09:48,210
So if you had WebGL supported,
you could spin it around and

4048
03:09:48,210 --> 03:09:49,530
zoom in and stuff like that.

4049
03:09:49,530 --> 03:09:50,440
And it was really nice.

4050
03:09:50,440 --> 03:09:53,770
But then, there's no
polyfill in that.

4051
03:09:53,770 --> 03:09:57,580
So what other browsers
would get an image

4052
03:09:57,580 --> 03:09:59,530
gallery of the 3D model.

4053
03:09:59,530 --> 03:10:03,040
So we wouldn't try to polyfill
the content.

4054
03:10:03,040 --> 03:10:04,990
We'd offer an alternative
content.

4055
03:10:04,990 --> 03:10:09,427

4056
03:10:09,427 --> 03:10:10,380
PAUL IRISH: OK.

4057
03:10:10,380 --> 03:10:12,580
I'd like to move on to
the next question.

4058
03:10:12,580 --> 03:10:15,692
John Resig, if you could--

4059
03:10:15,692 --> 03:10:18,010
I would love.

4060
03:10:18,010 --> 03:10:20,605
Thank you.

4061
03:10:20,605 --> 03:10:22,460
AUDIENCE: So I took this
question because

4062
03:10:22,460 --> 03:10:23,390
I didn't like it.

4063
03:10:23,390 --> 03:10:26,480
So I didn't want
it to be asked.

4064
03:10:26,480 --> 03:10:31,140
The question was roughly that,
they felt that you could get

4065
03:10:31,140 --> 03:10:35,930
away with supporting browsers
that did not have JavaScript.

4066
03:10:35,930 --> 03:10:39,270
And I feel that's
not the case.

4067
03:10:39,270 --> 03:10:42,320
That for most content websites,
you need to support

4068
03:10:42,320 --> 03:10:44,100
clients that do not
have JavaScript.

4069
03:10:44,100 --> 03:10:48,210
But to spin into a more
legitimate question, what

4070
03:10:48,210 --> 03:10:51,860
about web applications where
you're not dealing with

4071
03:10:51,860 --> 03:10:53,030
strictly content-based?

4072
03:10:53,030 --> 03:10:55,450
I feel like most of you are
dealing with content, where

4073
03:10:55,450 --> 03:10:56,910
it's like, here's
a news article.

4074
03:10:56,910 --> 03:10:58,860
Here's some information
you want to read.

4075
03:10:58,860 --> 03:11:01,570
Obviously, in that case, there
shouldn't be a barrier between

4076
03:11:01,570 --> 03:11:03,330
you and reading that.

4077
03:11:03,330 --> 03:11:06,810
But what about a whole
application that is built and

4078
03:11:06,810 --> 03:11:08,440
very JavaScript-concentric?

4079
03:11:08,440 --> 03:11:10,910
Should do you be making
a fall-back for that?

4080
03:11:10,910 --> 03:11:13,900
Like, I know, if you want to
use Gmail and there's no

4081
03:11:13,900 --> 03:11:17,330
JavaScript, you fall back to
this form-based thing.

4082
03:11:17,330 --> 03:11:19,620
And I have no idea how well
that's maintained.

4083
03:11:19,620 --> 03:11:21,400
But that's got to be
someone's sad job.

4084
03:11:21,400 --> 03:11:24,870

4085
03:11:24,870 --> 03:11:30,920
But I assume not everyone wants
to be doing old HTML

4086
03:11:30,920 --> 03:11:32,680
tables and doing the forms.

4087
03:11:32,680 --> 03:11:34,750
And so is that a legitimate
thing?

4088
03:11:34,750 --> 03:11:36,800
Should people be worrying
about that, for their

4089
03:11:36,800 --> 03:11:38,050
applications?

4090
03:11:38,050 --> 03:11:40,060

4091
03:11:40,060 --> 03:11:40,935
PAUL IRISH: Tom--

4092
03:11:40,935 --> 03:11:43,490
TOM MASLEN: I'd say, it's
always best to create an

4093
03:11:43,490 --> 03:11:45,980
experience that doesn't just
immediately fail, when

4094
03:11:45,980 --> 03:11:48,470
something goes wrong with
the JavaScript.

4095
03:11:48,470 --> 03:11:51,380
So I think Gmail is a great
example that you point out.

4096
03:11:51,380 --> 03:11:53,640
So it's something that
is a service.

4097
03:11:53,640 --> 03:11:57,360
It is purely functionality.

4098
03:11:57,360 --> 03:12:00,670
But then, I think we should
just make experiences.

4099
03:12:00,670 --> 03:12:02,460
There's a great.

4100
03:12:02,460 --> 03:12:04,600
In fact, I'll let
you say this.

4101
03:12:04,600 --> 03:12:09,150
So I read on the GDS website
about why you should make

4102
03:12:09,150 --> 03:12:10,520
progress enhancement
with JavaScript.

4103
03:12:10,520 --> 03:12:13,202
Do you get what I'm
talking about?

4104
03:12:13,202 --> 03:12:14,098
ED SOWDEN: No.

4105
03:12:14,098 --> 03:12:19,200
TOM MASLEN: OK, so that said,
instead of build your

4106
03:12:19,200 --> 03:12:22,660
applications like an escalator
instead of a lift.

4107
03:12:22,660 --> 03:12:23,560
Do you get me now?

4108
03:12:23,560 --> 03:12:24,790
Was the you that said that?

4109
03:12:24,790 --> 03:12:25,845
ED SOWDEN: I don't think
I wrote that.

4110
03:12:25,845 --> 03:12:26,820
TOMOMI IMURA: Was it Jake?

4111
03:12:26,820 --> 03:12:29,200
I remember reading this
about an elevator.

4112
03:12:29,200 --> 03:12:33,250
ED SOWDEN: So somebody said,
if an escalator breaks, the

4113
03:12:33,250 --> 03:12:35,450
worst thing that's going to
happen is, it's going to turn

4114
03:12:35,450 --> 03:12:38,260
into some stairs.

4115
03:12:38,260 --> 03:12:41,550
So you can keep walking up it.

4116
03:12:41,550 --> 03:12:43,140
But then, if you're in
a lift and it breaks.

4117
03:12:43,140 --> 03:12:46,170
Then you're stuck in the
fucking lift, you know.

4118
03:12:46,170 --> 03:12:46,960
There's nothing you can do.

4119
03:12:46,960 --> 03:12:48,440
And it's the same with
JavaScript applications.

4120
03:12:48,440 --> 03:12:50,290
PAUL IRISH: Well, I guess
there's a certain class.

4121
03:12:50,290 --> 03:12:53,890
There's plenty of JavaScript
applications, diagramming tool

4122
03:12:53,890 --> 03:12:55,680
and IM Client.

4123
03:12:55,680 --> 03:12:59,960
Many of these rely on Real Time
Data, cannot be done with

4124
03:12:59,960 --> 03:13:02,380
page refreshes.

4125
03:13:02,380 --> 03:13:05,330
And so some of these do require
JavaScript for their

4126
03:13:05,330 --> 03:13:06,000
interactions.

4127
03:13:06,000 --> 03:13:08,660
TOM MASLEN: Jake, wrote a good
blog post on this recently.

4128
03:13:08,660 --> 03:13:12,348

4129
03:13:12,348 --> 03:13:15,862
PAUL IRISH: Jake, would you
like to comment on how--

4130
03:13:15,862 --> 03:13:18,808
TOM MASLEN: For those who can't
see, Jake was waving

4131
03:13:18,808 --> 03:13:19,600
quite madly.

4132
03:13:19,600 --> 03:13:20,170
JAKE ARCHIBALD: I'm kind of
perching on the stairs because

4133
03:13:20,170 --> 03:13:21,840
I was actually on the
way to the bathroom.

4134
03:13:21,840 --> 03:13:24,390
So you caught me just
at the right point.

4135
03:13:24,390 --> 03:13:28,520
Any website that has a loading
bar is a missed opportunity.

4136
03:13:28,520 --> 03:13:31,530
It's a missed opportunity to
serve the content directly,

4137
03:13:31,530 --> 03:13:33,850
without JavaScript and
then get JavaScript

4138
03:13:33,850 --> 03:13:34,640
in there to do it.

4139
03:13:34,640 --> 03:13:37,580
And Gmail is an example
of that.

4140
03:13:37,580 --> 03:13:38,500
Gmail should have URLs.

4141
03:13:38,500 --> 03:13:41,720
I should be able to bookmark a
page, to a particular email.

4142
03:13:41,720 --> 03:13:44,330
And when I hit that, I should
get that content on the page.

4143
03:13:44,330 --> 03:13:46,690
And then JavaScript can come
in and add the rest.

4144
03:13:46,690 --> 03:13:49,600
It is just a series
of tabs and forms.

4145
03:13:49,600 --> 03:13:52,610
It doesn't need to depend on
JavaScript for first render.

4146
03:13:52,610 --> 03:13:57,440
PAUL IRISH: But the Gmail web
app also has URLs that are

4147
03:13:57,440 --> 03:14:00,052
perma-linkable for all
messages as well.

4148
03:14:00,052 --> 03:14:02,010
SHWETANK DIXIT: One thing I
wanted to mention, just to

4149
03:14:02,010 --> 03:14:07,200
repeat, which matches this use
case is, you have JavaScript

4150
03:14:07,200 --> 03:14:10,650
applications heavily reliant
on JavaScript.

4151
03:14:10,650 --> 03:14:16,610
But you also have these phones
which are coming up, which

4152
03:14:16,610 --> 03:14:18,730
will have browsers which
support JavaScript.

4153
03:14:18,730 --> 03:14:22,320
But these are on underpowered
phones, in which it will be

4154
03:14:22,320 --> 03:14:25,560
actually better for them to
get a version without

4155
03:14:25,560 --> 03:14:28,540
JavaScript than to get a version
with JavaScript, which

4156
03:14:28,540 --> 03:14:30,250
runs really slowly.

4157
03:14:30,250 --> 03:14:33,720
So in those cases, it might be
better for them to get a

4158
03:14:33,720 --> 03:14:36,840
lighter version of the page.

4159
03:14:36,840 --> 03:14:40,120
And the other thing is, search
engines-- once again, if you

4160
03:14:40,120 --> 03:14:44,580
have single-page applications,
you can run Node and Phantom

4161
03:14:44,580 --> 03:14:48,330
JS and use a solution
with that.

4162
03:14:48,330 --> 03:14:52,430
But I still think that, it would
be better to just have

4163
03:14:52,430 --> 03:14:56,600
something which can be run
without JavaScript.

4164
03:14:56,600 --> 03:14:57,480
PAUL IRISH: Yes.

4165
03:14:57,480 --> 03:15:00,640
I suppose, in the search engine
optimization, its a

4166
03:15:00,640 --> 03:15:02,260
balance of what's
easy for you.

4167
03:15:02,260 --> 03:15:05,640
But certainly, if it's important
for you to have that

4168
03:15:05,640 --> 03:15:09,250
content available to search, you
need to find a way to do

4169
03:15:09,250 --> 03:15:11,210
that, either through progressive
enhancement or

4170
03:15:11,210 --> 03:15:13,380
through a complex server-side
rendering farm.

4171
03:15:13,380 --> 03:15:16,860
TOM MASLEN: The alternative, the
other side of the argument

4172
03:15:16,860 --> 03:15:21,420
is that, making an application
that purely relies on

4173
03:15:21,420 --> 03:15:22,980
JavaScript is probably
a lot faster.

4174
03:15:22,980 --> 03:15:26,110

4175
03:15:26,110 --> 03:15:29,580
So I'd say, if you're trying
to get something up and

4176
03:15:29,580 --> 03:15:34,980
running fast, if you're
prototyping, if you've got

4177
03:15:34,980 --> 03:15:38,000
deadline issues, then
that is an option.

4178
03:15:38,000 --> 03:15:38,970
You can do that.

4179
03:15:38,970 --> 03:15:43,000
However, I would always try to
make something a progressive

4180
03:15:43,000 --> 03:15:43,490
enhancement.

4181
03:15:43,490 --> 03:15:46,670
So in the slide where I spoke
about the things that were

4182
03:15:46,670 --> 03:15:49,740
that were nice-- so
accessibility, SEO, working

4183
03:15:49,740 --> 03:15:51,800
without JavaScript,
usability--

4184
03:15:51,800 --> 03:15:55,200
all those things
are idealisms.

4185
03:15:55,200 --> 03:15:59,180
But on their own, they're
probably not great arguments

4186
03:15:59,180 --> 03:16:01,880
that you can go to your manager
and say, hey, this

4187
03:16:01,880 --> 03:16:04,590
doesn't work with
screen readers.

4188
03:16:04,590 --> 03:16:06,360
Because your boss would probably
turn around and say,

4189
03:16:06,360 --> 03:16:07,560
I don't care about
screen readers.

4190
03:16:07,560 --> 03:16:11,280
But when you add them all
together, they create

4191
03:16:11,280 --> 03:16:12,200
something bigger.

4192
03:16:12,200 --> 03:16:16,740
And that's the whole
point of the web.

4193
03:16:16,740 --> 03:16:20,140
And all of those things, if you
develop with all of those

4194
03:16:20,140 --> 03:16:25,430
things in mind, then you're
kind of developing in the

4195
03:16:25,430 --> 03:16:27,290
current of the web.

4196
03:16:27,290 --> 03:16:29,730
You're swimming with the web,
as opposed to swimming and

4197
03:16:29,730 --> 03:16:33,010
against it, which is what I
think is why applications that

4198
03:16:33,010 --> 03:16:38,190
are purely the JavaScript are
swimming against a little bit.

4199
03:16:38,190 --> 03:16:40,420
So you can make things that
are purely JavaScript.

4200
03:16:40,420 --> 03:16:44,300
But I think it's better, and
you get added benefits by

4201
03:16:44,300 --> 03:16:46,320
building things in the
progressive enhancement.

4202
03:16:46,320 --> 03:16:48,270
PAUL IRISH: Matt May, I see
you have a comment.

4203
03:16:48,270 --> 03:16:49,740
We're going to have to
make this very quick.

4204
03:16:49,740 --> 03:16:54,040
But I want to get
your voice here.

4205
03:16:54,040 --> 03:16:54,830
AUDIENCE: Sorry.

4206
03:16:54,830 --> 03:16:57,520
Somebody says, accessibility,
and I go crazy.

4207
03:16:57,520 --> 03:17:00,040
I just wanted to say, to add on
to this-- and I think BBC

4208
03:17:00,040 --> 03:17:02,770
is a great example of this.

4209
03:17:02,770 --> 03:17:06,950
The users of assisted technology
are not legacy or

4210
03:17:06,950 --> 03:17:09,290
down-level users either.

4211
03:17:09,290 --> 03:17:12,640
If you have something like data
visualization or chat or

4212
03:17:12,640 --> 03:17:15,800
anything interactive, those are
still things that you need

4213
03:17:15,800 --> 03:17:18,060
to make successful, whether or
not you're going to serve them

4214
03:17:18,060 --> 03:17:19,470
to legacy clients.

4215
03:17:19,470 --> 03:17:20,780
Everybody is expecting that.

4216
03:17:20,780 --> 03:17:22,630
They have the latest assistive
technologies.

4217
03:17:22,630 --> 03:17:24,650
They have the latest browsers,
like everybody else.

4218
03:17:24,650 --> 03:17:27,380
And it's important to decouple
them from, well, we'll just

4219
03:17:27,380 --> 03:17:29,130
serve them the text-only site.

4220
03:17:29,130 --> 03:17:30,950
Because that's the same
thin girl they've

4221
03:17:30,950 --> 03:17:32,812
had since the '90s.

4222
03:17:32,812 --> 03:17:36,060
PAUL IRISH: Yes, 98.4% of
screen reader users have

4223
03:17:36,060 --> 03:17:40,190
JavaScript enabled from the
latest WebAIM survey.

4224
03:17:40,190 --> 03:17:42,490
But guys, I think we're
out of time.

4225
03:17:42,490 --> 03:17:44,500
Thank you very much to
our panelists for

4226
03:17:44,500 --> 03:17:45,290
joining us up here.

4227
03:17:45,290 --> 03:17:46,488
And thank you guys.

4228
03:17:46,488 --> 03:17:59,436
[APPLAUSE]

4229
03:17:59,436 --> 03:18:00,290
ANDREW BETTS: OK.

4230
03:18:00,290 --> 03:18:02,090
We're going to go straight into
the Payments Panel now.

4231
03:18:02,090 --> 03:18:06,739
So could the Payments
panelist come up?

4232
03:18:06,739 --> 03:18:09,004
ROB GRIMSHAW: Where
do you want me?

4233
03:18:09,004 --> 03:18:10,720
ANDREW BETTS: Take
a seat anywhere,

4234
03:18:10,720 --> 03:18:11,960
really, just not there.

4235
03:18:11,960 --> 03:18:13,210
[INTERPOSING VOICES]

4236
03:18:13,210 --> 03:20:02,030

4237
03:20:02,030 --> 03:20:06,200
We're for our final session
of the day, everyone.

4238
03:20:06,200 --> 03:20:08,680
This is the Payment session.

4239
03:20:08,680 --> 03:20:12,420
So for those of us in the
business of selling content,

4240
03:20:12,420 --> 03:20:16,320
Payments is a problem that we
all have to deal with, whether

4241
03:20:16,320 --> 03:20:17,670
we like it or not.

4242
03:20:17,670 --> 03:20:22,720
And the range of solutions we
have available at moment for

4243
03:20:22,720 --> 03:20:26,010
payments is really quite
limiting to the kinds of

4244
03:20:26,010 --> 03:20:27,410
things we can do with
web developers.

4245
03:20:27,410 --> 03:20:31,920
So there's a lot of exciting new
technologies coming along.

4246
03:20:31,920 --> 03:20:34,550
And I think now is a great time
to be discussing that.

4247
03:20:34,550 --> 03:20:36,940
So we have a great panel of
people to talk about this.

4248
03:20:36,940 --> 03:20:39,110
And the chair for this session
is Natasha Rooney, Web

4249
03:20:39,110 --> 03:20:40,140
Technologist at GSMA.

4250
03:20:40,140 --> 03:20:41,950
And I'll let her introduce
the rest of the panel.

4251
03:20:41,950 --> 03:20:45,950
[APPLAUSE]

4252
03:20:45,950 --> 03:20:47,280
NATASHA ROONEY: Cool.

4253
03:20:47,280 --> 03:20:48,360
Thank you so much.

4254
03:20:48,360 --> 03:20:53,040
So yeah, we have the exciting
topic of payments left for

4255
03:20:53,040 --> 03:20:53,870
this afternoon.

4256
03:20:53,870 --> 03:20:54,440
I'm sorry.

4257
03:20:54,440 --> 03:20:57,000
But it's one of these
things that is--

4258
03:20:57,000 --> 03:21:00,090
usually, at home actually, when
we have the last panel,

4259
03:21:00,090 --> 03:21:03,350
I'd say, I'm sorry for standing
in the way of you

4260
03:21:03,350 --> 03:21:04,160
guys and the pub.

4261
03:21:04,160 --> 03:21:05,520
But we don't really
have the pub here.

4262
03:21:05,520 --> 03:21:07,390
So I'm sorry.

4263
03:21:07,390 --> 03:21:09,260
We're standing in front of
you guys and dinner.

4264
03:21:09,260 --> 03:21:11,740
But there is decent beer,
so I suppose that's OK.

4265
03:21:11,740 --> 03:21:15,050
And now I'm starting to sound
like an alcoholic Brit.

4266
03:21:15,050 --> 03:21:15,870
OK, let's move on.

4267
03:21:15,870 --> 03:21:18,670
So payments are very,
very important.

4268
03:21:18,670 --> 03:21:23,100
I've been speaking a lot with
the W3C people, a lot of

4269
03:21:23,100 --> 03:21:24,920
people that are involved
in standardization.

4270
03:21:24,920 --> 03:21:26,240
And we all want to make
the web better.

4271
03:21:26,240 --> 03:21:27,460
And that's fantastic.

4272
03:21:27,460 --> 03:21:29,420
But you know what one
of problems is?

4273
03:21:29,420 --> 03:21:31,480
It's the money needs to
come from somewhere.

4274
03:21:31,480 --> 03:21:33,320
We need the funding to
do the cool things

4275
03:21:33,320 --> 03:21:34,680
that we want to do.

4276
03:21:34,680 --> 03:21:37,240
So unfortunately, this is just
something that we have to go

4277
03:21:37,240 --> 03:21:38,180
and have a chat about.

4278
03:21:38,180 --> 03:21:39,880
And you know, if you're really
into it, then great.

4279
03:21:39,880 --> 03:21:42,805
Because there's a lot of money
to be made out of it.

4280
03:21:42,805 --> 03:21:46,920
So cool, panelists, we've got
Manu Sporny, on my left.

4281
03:21:46,920 --> 03:21:51,010
He sits in the W3C on the IETF,
doing a lot of work

4282
03:21:51,010 --> 03:21:56,240
around standardization on
payments right now and founder

4283
03:21:56,240 --> 03:21:57,490
of Digital Bazaar.

4284
03:21:57,490 --> 03:21:59,890

4285
03:21:59,890 --> 03:22:04,770
Ricardo from Telefonica, Ricardo
Villera, head honcho

4286
03:22:04,770 --> 03:22:08,190
of the BlueVia change to mobile
work and did some stuff

4287
03:22:08,190 --> 03:22:09,950
on [INAUDIBLE] before then.

4288
03:22:09,950 --> 03:22:12,910
Rob Grimshaw, managing director
of the "Financial

4289
03:22:12,910 --> 03:22:17,260
Times," is sitting to my right
here, known for "FT's"

4290
03:22:17,260 --> 03:22:18,575
pioneering payment models.

4291
03:22:18,575 --> 03:22:21,070
So cool, we'll have a lot
of questions for you.

4292
03:22:21,070 --> 03:22:24,180
Kumar McMillan, right at the
end there, from Mozilla,

4293
03:22:24,180 --> 03:22:25,270
working on a lot of things.

4294
03:22:25,270 --> 03:22:27,770
I'm sure you do a lot of stuff
with mozPay and Firefox

4295
03:22:27,770 --> 03:22:29,730
Marketplace, excellent.

4296
03:22:29,730 --> 03:22:33,880
And Cindy over here does a lot
of working in Google, with

4297
03:22:33,880 --> 03:22:37,390
Google Wallet and the magic
requestAutocomplete, which I'm

4298
03:22:37,390 --> 03:22:39,010
sure will come up today.

4299
03:22:39,010 --> 03:22:40,810
So Manu is speaking
for us today.

4300
03:22:40,810 --> 03:22:44,560
So I'm driver of the slides.

4301
03:22:44,560 --> 03:22:47,600
So I get all the good jobs.

4302
03:22:47,600 --> 03:22:48,960
So take it away.

4303
03:22:48,960 --> 03:22:52,960
MANU SPORNY: So this panel is
kind of titled Payments.

4304
03:22:52,960 --> 03:22:57,870
But I think it's far
deeper than that.

4305
03:22:57,870 --> 03:23:01,340
When we think payments, we think
getting a payment from

4306
03:23:01,340 --> 03:23:03,030
customer to the vendor.

4307
03:23:03,030 --> 03:23:07,160
We don't think about, for
example, 30% of the people in

4308
03:23:07,160 --> 03:23:09,650
the United States that currently
don't have a bank

4309
03:23:09,650 --> 03:23:12,000
account, that has no
way of saving.

4310
03:23:12,000 --> 03:23:14,910
In other nations, it's
even worse than that.

4311
03:23:14,910 --> 03:23:19,680
It can be up to 70% of the
population that has no way of

4312
03:23:19,680 --> 03:23:23,450
saving money, putting money
aside for school, for food,

4313
03:23:23,450 --> 03:23:24,510
things of that nature.

4314
03:23:24,510 --> 03:23:28,220
So while we're talking about
web payments, I think that

4315
03:23:28,220 --> 03:23:31,600
there's a far deeper and more
important story here.

4316
03:23:31,600 --> 03:23:37,340
And that is figuring out a way
to get the web to help people

4317
03:23:37,340 --> 03:23:41,200
that can't save money, that
don't live in countries where

4318
03:23:41,200 --> 03:23:46,120
putting money in a bank is a
feasible solution for them.

4319
03:23:46,120 --> 03:23:46,610
So OK.

4320
03:23:46,610 --> 03:23:50,860
So this isn't just about paying
for products, while

4321
03:23:50,860 --> 03:23:52,940
that's important
for all of us.

4322
03:23:52,940 --> 03:23:54,760
This is not just a first
world problem.

4323
03:23:54,760 --> 03:23:59,460
It's a problem for people
all around the world.

4324
03:23:59,460 --> 03:24:06,850
So as Natasha said, I am the W3C
Chair for the Web Payments

4325
03:24:06,850 --> 03:24:08,160
Group right now.

4326
03:24:08,160 --> 03:24:11,340
I also deal quite a bit with
linked data, microformats,

4327
03:24:11,340 --> 03:24:15,050
micro data, RDFA, JSON-LD,
things like that.

4328
03:24:15,050 --> 03:24:17,670
And I also deal quite a bit with
identity and security,

4329
03:24:17,670 --> 03:24:19,680
both at the ITF and the W3C.

4330
03:24:19,680 --> 03:24:22,780
And basically, what that means
is, I get to see a lot of

4331
03:24:22,780 --> 03:24:27,610
different technologies
come by these groups.

4332
03:24:27,610 --> 03:24:29,640
And what we're trying to do is,
we're trying to pick and

4333
03:24:29,640 --> 03:24:34,760
choose which technologies will
probably be good candidates

4334
03:24:34,760 --> 03:24:38,600
for integrating into the core
of the web's architecture.

4335
03:24:38,600 --> 03:24:43,630
Until now, we really haven't had
a core way of transferring

4336
03:24:43,630 --> 03:24:45,580
value around the web.

4337
03:24:45,580 --> 03:24:49,650
I mean, the thing that we look
at to spend money on the web

4338
03:24:49,650 --> 03:24:51,430
right now are to move money
back and forth with things

4339
03:24:51,430 --> 03:24:52,930
like credit cards and ATH.

4340
03:24:52,930 --> 03:24:55,280
And that's just not
cool anymore.

4341
03:24:55,280 --> 03:24:57,770
We have to have a
better solution.

4342
03:24:57,770 --> 03:25:00,040
And so I spent a lot of time
kind of championing

4343
03:25:00,040 --> 03:25:02,390
technologies, a lot of the
technologies that our

4344
03:25:02,390 --> 03:25:05,980
panelists are working
on currently.

4345
03:25:05,980 --> 03:25:11,920
So we've got a problem
on the web.

4346
03:25:11,920 --> 03:25:17,070
And that's, sending and
receiving money is typically

4347
03:25:17,070 --> 03:25:18,110
proprietary.

4348
03:25:18,110 --> 03:25:19,600
It's very slow.

4349
03:25:19,600 --> 03:25:20,970
It's insecure.

4350
03:25:20,970 --> 03:25:24,100
And it is actively hostile
to innovation.

4351
03:25:24,100 --> 03:25:27,050
That's the reason that we
don't have very many

4352
03:25:27,050 --> 03:25:30,290
innovative companies in
the payment space.

4353
03:25:30,290 --> 03:25:32,090
You could argue that we do.

4354
03:25:32,090 --> 03:25:35,600
And I hope that we do get into
that argument on this panel.

4355
03:25:35,600 --> 03:25:38,920
But really, when it comes to
making money on the web, many

4356
03:25:38,920 --> 03:25:46,440
of us, our jobs are such
that we get paid

4357
03:25:46,440 --> 03:25:47,920
to work on the web.

4358
03:25:47,920 --> 03:25:51,580
But some people don't have the
benefit of working for a large

4359
03:25:51,580 --> 03:25:55,210
company like Google or
Microsoft, that can cover

4360
03:25:55,210 --> 03:25:56,070
their expenses.

4361
03:25:56,070 --> 03:25:57,910
They would like to have
a more direct

4362
03:25:57,910 --> 03:25:59,500
relationship with their customers.

4363
03:25:59,500 --> 03:26:01,980
And right, now content
monetization on the web is

4364
03:26:01,980 --> 03:26:02,820
really hard.

4365
03:26:02,820 --> 03:26:04,020
It's really expensive,

4366
03:26:04,020 --> 03:26:05,990
especially if you're a merchant.

4367
03:26:05,990 --> 03:26:08,840
You pay thousands of dollars in
fees, just for the right to

4368
03:26:08,840 --> 03:26:11,720
process credit cards.

4369
03:26:11,720 --> 03:26:15,370
And the reason that is,
partially, is because a lot of

4370
03:26:15,370 --> 03:26:18,160
the payment tech that we use
today on the web was invented

4371
03:26:18,160 --> 03:26:19,410
in the '70s.

4372
03:26:19,410 --> 03:26:22,090
It's ACH, Automated
Clearinghouse system.

4373
03:26:22,090 --> 03:26:23,100
It's credit cards.

4374
03:26:23,100 --> 03:26:27,690
All this stuff is really, really
old legacy stuff, that

4375
03:26:27,690 --> 03:26:30,400
predates the web by
a large degree.

4376
03:26:30,400 --> 03:26:34,890
So I guess it would be good to
kind of take a look at some to

4377
03:26:34,890 --> 03:26:36,660
use cases that we're trying
to address, right.

4378
03:26:36,660 --> 03:26:38,880
Let's ground this discussion.

4379
03:26:38,880 --> 03:26:43,210
Payment for physical goods
today is actually--

4380
03:26:43,210 --> 03:26:46,560
we do a pretty decent job
at it on the web.

4381
03:26:46,560 --> 03:26:49,970
We've got like things like
Google Wallet and Paypal, that

4382
03:26:49,970 --> 03:26:51,320
you can use to pay for goods.

4383
03:26:51,320 --> 03:26:52,180
We get the goods.

4384
03:26:52,180 --> 03:26:54,390
Everyone is kind of happy.

4385
03:26:54,390 --> 03:26:57,630
But when you look at the
merchant side of this,

4386
03:26:57,630 --> 03:26:59,770
creating a merchant account to
be able to process credit

4387
03:26:59,770 --> 03:27:01,610
cards is very expensive.

4388
03:27:01,610 --> 03:27:03,110
There are a lot of fees
attached to it.

4389
03:27:03,110 --> 03:27:08,190
Even when you have a really
good merchant provider,

4390
03:27:08,190 --> 03:27:13,240
payment provider, it's still
an awful process for folks

4391
03:27:13,240 --> 03:27:15,380
that are kind of mom and
pop shops that try to

4392
03:27:15,380 --> 03:27:17,445
set up on the web.

4393
03:27:17,445 --> 03:27:19,970
You're usually locked into
a payment processor,

4394
03:27:19,970 --> 03:27:20,830
when you pick them.

4395
03:27:20,830 --> 03:27:23,580
There's no such thing
as data portability.

4396
03:27:23,580 --> 03:27:28,540
Or if there is, it's really
kind of terrible.

4397
03:27:28,540 --> 03:27:31,050
Doing things like in-app
payments right now, you're

4398
03:27:31,050 --> 03:27:35,440
usually tied to a particular app
store of some kind, either

4399
03:27:35,440 --> 03:27:37,630
the iTunes store or the
Google Play store

4400
03:27:37,630 --> 03:27:38,810
or things like that.

4401
03:27:38,810 --> 03:27:42,000
And doing things like crowd
funding and crowd loaning on

4402
03:27:42,000 --> 03:27:44,460
by yourself, instead of going
through Kickstarter, which

4403
03:27:44,460 --> 03:27:49,920
takes 10% of the money that you
make, you can't do that.

4404
03:27:49,920 --> 03:27:53,580
And these are things that, at
least some of us in the Web

4405
03:27:53,580 --> 03:27:56,500
Payments group, think should
be fundamental rights, not

4406
03:27:56,500 --> 03:27:58,310
just in the US, but
around the world.

4407
03:27:58,310 --> 03:28:03,440
You should be able to be in
charge of your own financial

4408
03:28:03,440 --> 03:28:04,960
well-being.

4409
03:28:04,960 --> 03:28:11,430
So I guess the core here that
we're talking about at this

4410
03:28:11,430 --> 03:28:14,320
panel is three different
categories of things, three

4411
03:28:14,320 --> 03:28:16,360
different ways that we spend
money on the web, three

4412
03:28:16,360 --> 03:28:18,060
different ways of
raising money.

4413
03:28:18,060 --> 03:28:21,170
And the first one is kind of
the old money, the popular

4414
03:28:21,170 --> 03:28:22,670
proprietary category.

4415
03:28:22,670 --> 03:28:24,380
This is most of the payment
services that

4416
03:28:24,380 --> 03:28:25,770
we have right now.

4417
03:28:25,770 --> 03:28:29,150
And this is absolutely not a
slam to any of the companies

4418
03:28:29,150 --> 03:28:30,170
that are on this slide.

4419
03:28:30,170 --> 03:28:33,540
These companies solve a very
important problem, which is,

4420
03:28:33,540 --> 03:28:36,630
it really sucks to do
transactions over the web,

4421
03:28:36,630 --> 03:28:38,650
using your credit card in ACH.

4422
03:28:38,650 --> 03:28:41,900
So we've got Paypal, Amazon
payments, Google Wallet.

4423
03:28:41,900 --> 03:28:44,870
Even the new poster children
for really cool payment

4424
03:28:44,870 --> 03:28:48,550
startups, like Stripe Square,
Paymode, Dwolla, and sites

4425
03:28:48,550 --> 03:28:51,950
like Kickstarter Indiegogo and
Crowdtilt, these are all based

4426
03:28:51,950 --> 03:28:55,000
on this really horrible
old, legacy system.

4427
03:28:55,000 --> 03:28:57,500
There are tons and tons of
problems that we'll go into,

4428
03:28:57,500 --> 03:29:00,540
during the discussion today.

4429
03:29:00,540 --> 03:29:02,170
So that's kind of the
first category.

4430
03:29:02,170 --> 03:29:04,870
This is what's kind of
popular right now.

4431
03:29:04,870 --> 03:29:08,010
The next category is
online app stores.

4432
03:29:08,010 --> 03:29:11,380
So these are other types of
kind of proprietary silos.

4433
03:29:11,380 --> 03:29:15,400
They lock you in, the Apple
iTunes store, the Apple store,

4434
03:29:15,400 --> 03:29:17,640
Facebook credits, which used
to exist when these slides

4435
03:29:17,640 --> 03:29:19,150
were made but doesn't
exist anymore.

4436
03:29:19,150 --> 03:29:21,750
They were just shut down
a little while ago.

4437
03:29:21,750 --> 03:29:23,690
The Windows Store, Google Play,
these are all kind of

4438
03:29:23,690 --> 03:29:28,740
examples of stores that give
really great user experiences.

4439
03:29:28,740 --> 03:29:31,700
But you're kind of locked into
them when you use them.

4440
03:29:31,700 --> 03:29:36,340
The idea of having this open
app marketplace has been

4441
03:29:36,340 --> 03:29:36,970
talked about.

4442
03:29:36,970 --> 03:29:40,040
And luckily for us, I think,
Mozilla has been doing some

4443
03:29:40,040 --> 03:29:43,850
really great work in this area,
making it so that you

4444
03:29:43,850 --> 03:29:46,350
can sell web apps from
any website.

4445
03:29:46,350 --> 03:29:48,470
You don't have to go through
an app store

4446
03:29:48,470 --> 03:29:50,040
of one kind or another.

4447
03:29:50,040 --> 03:29:53,550
And so then the final category,
I think, is

4448
03:29:53,550 --> 03:29:55,980
predominantly what I'm
really excited about.

4449
03:29:55,980 --> 03:29:58,010
This is what gives me hope.

4450
03:29:58,010 --> 03:30:02,930
And so the last bit are these
Open Web payment solutions.

4451
03:30:02,930 --> 03:30:07,340
Finally, people are starting
to work on things that fit

4452
03:30:07,340 --> 03:30:08,640
very nicely with the web.

4453
03:30:08,640 --> 03:30:12,020
They don't try and shim the
old 1970s credit card

4454
03:30:12,020 --> 03:30:13,630
architecture into the web.

4455
03:30:13,630 --> 03:30:16,910
They are a new way of looking at
payments on the web, where

4456
03:30:16,910 --> 03:30:18,290
payments are instantaneous.

4457
03:30:18,290 --> 03:30:21,520
There's a lot of rich metadata
that goes with it.

4458
03:30:21,520 --> 03:30:24,110
So Firefox OS is doing
a great job with

4459
03:30:24,110 --> 03:30:25,310
their Marketplace stuff.

4460
03:30:25,310 --> 03:30:27,650
We have Pay Swarm, which is the
first universal payment

4461
03:30:27,650 --> 03:30:30,390
standard for the web.

4462
03:30:30,390 --> 03:30:33,130
Bitcoin, I'm sure many of you
have heard of Bitcoin.

4463
03:30:33,130 --> 03:30:36,810
How many of you have
heard of Ripple?

4464
03:30:36,810 --> 03:30:38,610
Wow.

4465
03:30:38,610 --> 03:30:40,700
I was just at a banking
conference last week.

4466
03:30:40,700 --> 03:30:44,520
And like half the bankers
raised their hands.

4467
03:30:44,520 --> 03:30:45,350
That's surprising.

4468
03:30:45,350 --> 03:30:47,050
That never happens.

4469
03:30:47,050 --> 03:30:50,840
So anyway Ripple was built
by the Bitcoin folks.

4470
03:30:50,840 --> 03:30:52,940
It's kind of a better
version of Bitcoin.

4471
03:30:52,940 --> 03:30:57,150
But these are all really cool
technologies, that are native

4472
03:30:57,150 --> 03:31:00,650
to the web, that are really
going to shake things up.

4473
03:31:00,650 --> 03:31:04,490
I think they're really going to
finally bring payments into

4474
03:31:04,490 --> 03:31:06,030
the modern age.

4475
03:31:06,030 --> 03:31:12,020
So I guess the goal here, what
we're trying to do is, we're

4476
03:31:12,020 --> 03:31:14,030
trying to integrate open payment
technology into the

4477
03:31:14,030 --> 03:31:15,830
core architecture of the web.

4478
03:31:15,830 --> 03:31:18,140
We did this for communication
with email.

4479
03:31:18,140 --> 03:31:19,750
Emails got protocols.

4480
03:31:19,750 --> 03:31:22,060
The reason that it's so easy
to type in a person's email

4481
03:31:22,060 --> 03:31:24,280
address and send a message
halfway around the world is,

4482
03:31:24,280 --> 03:31:26,350
there's a whole set of
protocol around it.

4483
03:31:26,350 --> 03:31:30,530
No such thing exists for
payments on the web.

4484
03:31:30,530 --> 03:31:31,840
It's just starting.

4485
03:31:31,840 --> 03:31:35,490
We've got Bitcoin and
Ripple coming along.

4486
03:31:35,490 --> 03:31:36,920
But we really need
to work on it.

4487
03:31:36,920 --> 03:31:38,810
And that's what we focus
on the Web Payments

4488
03:31:38,810 --> 03:31:41,580
Group at the W3C.

4489
03:31:41,580 --> 03:31:43,840
Most of the panel members
here are a part of the

4490
03:31:43,840 --> 03:31:44,970
Web Payments Group.

4491
03:31:44,970 --> 03:31:46,260
It's completely open.

4492
03:31:46,260 --> 03:31:48,210
We really need developers
to join.

4493
03:31:48,210 --> 03:31:50,600
So if you're interested in any
of the stuff that you hear on

4494
03:31:50,600 --> 03:31:53,250
the panel today, please join.

4495
03:31:53,250 --> 03:31:55,170
Jump onto the group and join,
if you just Google Web

4496
03:31:55,170 --> 03:31:56,930
Payments W3C.

4497
03:31:56,930 --> 03:32:00,880
And if you want to talk about
this stuff, pull me aside and

4498
03:32:00,880 --> 03:32:01,620
introduce yourself.

4499
03:32:01,620 --> 03:32:04,470
I love talking about
this stuff.

4500
03:32:04,470 --> 03:32:08,570
So please, at the party after
this, pull me aside, if you're

4501
03:32:08,570 --> 03:32:11,480
interested in any of the stuff
that you hear on the panel, as

4502
03:32:11,480 --> 03:32:13,700
well as the rest of the
panelists here.

4503
03:32:13,700 --> 03:32:17,240
So quickly, in closing, there's
a whole bunch of

4504
03:32:17,240 --> 03:32:20,220
contact info for you to get in
touch, if you're interested in

4505
03:32:20,220 --> 03:32:22,050
payments or interested
in actually taking

4506
03:32:22,050 --> 03:32:23,530
part in this work.

4507
03:32:23,530 --> 03:32:26,630
There's a lot of good that
you can do here.

4508
03:32:26,630 --> 03:32:29,370
This is world-changing stuff.

4509
03:32:29,370 --> 03:32:32,660
Twitter, G+ handle, email, and
the slides are posted up

4510
03:32:32,660 --> 03:32:34,290
there-- payswarm.com/slides.

4511
03:32:34,290 --> 03:32:37,520
So without further ado, let's
get into the discussion.

4512
03:32:37,520 --> 03:32:38,892
NATASHA ROONEY: Fantastic.

4513
03:32:38,892 --> 03:32:44,620
[APPLAUSE]

4514
03:32:44,620 --> 03:32:46,370
So thank you very much
for that, Manu.

4515
03:32:46,370 --> 03:32:48,860
And with that, like you said,
we'll kick off with the first

4516
03:32:48,860 --> 03:32:51,520
question, which comes
from Ada Edwards.

4517
03:32:51,520 --> 03:32:54,510
I believe you're reading
out this one.

4518
03:32:54,510 --> 03:32:56,440
Oh, actually, can we just
wait for a mic.

4519
03:32:56,440 --> 03:32:58,580
Thanks.

4520
03:32:58,580 --> 03:33:01,245
AUDIENCE: So I have a question
from a certain Andrew Betts.

4521
03:33:01,245 --> 03:33:04,420

4522
03:33:04,420 --> 03:33:06,780
Topping up a prepaid account
with a merchant to fund

4523
03:33:06,780 --> 03:33:08,975
micropayments is free money
for the merchant.

4524
03:33:08,975 --> 03:33:11,930
Why would they kill the golden
goose by moving to instant

4525
03:33:11,930 --> 03:33:13,180
micropayments?

4526
03:33:13,180 --> 03:33:16,261

4527
03:33:16,261 --> 03:33:18,510
MANU SPORNY: So I can jump in?

4528
03:33:18,510 --> 03:33:20,175
NATASHA ROONEY: Yeah,
go for it.

4529
03:33:20,175 --> 03:33:24,310
MANU SPORNY: I don't know if I
quite agree with the question,

4530
03:33:24,310 --> 03:33:27,450
meaning that I think it's short
sighted for any merchant

4531
03:33:27,450 --> 03:33:30,930
to think of it as-- anybody
that's not large, so Google

4532
03:33:30,930 --> 03:33:31,680
can think in that way.

4533
03:33:31,680 --> 03:33:33,740
Google can say, I'm going
to require someone

4534
03:33:33,740 --> 03:33:35,060
to prefund an account.

4535
03:33:35,060 --> 03:33:36,270
And then across all the Google

4536
03:33:36,270 --> 03:33:38,940
properties, you can buy things.

4537
03:33:38,940 --> 03:33:43,980
Your mom and pop web store,
someone doing a niche site is

4538
03:33:43,980 --> 03:33:45,500
never going to be
able to do that.

4539
03:33:45,500 --> 03:33:47,150
Or if they're good if they're
going to do that, they're

4540
03:33:47,150 --> 03:33:48,610
going to lose quite
a bit of business.

4541
03:33:48,610 --> 03:33:51,380
Because I guess Theme Forest
is a great example of this.

4542
03:33:51,380 --> 03:33:53,940
They require you to put in
like $5 or $10, but their

4543
03:33:53,940 --> 03:33:55,830
themes cost $1.24.

4544
03:33:55,830 --> 03:33:57,260
And you have to kind of be--

4545
03:33:57,260 --> 03:33:59,790
at least I was, when I bought
one of the themes off there.

4546
03:33:59,790 --> 03:34:00,650
I was pretty desperate.

4547
03:34:00,650 --> 03:34:01,930
I was really looking
for a theme.

4548
03:34:01,930 --> 03:34:02,750
I was under a deadline.

4549
03:34:02,750 --> 03:34:04,700
I was like, fine, here's $5.

4550
03:34:04,700 --> 03:34:08,900
And a lot of my money is kind
of sitting there still.

4551
03:34:08,900 --> 03:34:11,840
So I'm a bit ticked
at them for that.

4552
03:34:11,840 --> 03:34:15,820
I wish I could have just gone to
the site, spent $1.24, and

4553
03:34:15,820 --> 03:34:17,640
gone somewhere else.

4554
03:34:17,640 --> 03:34:20,110
And I think that is the model
that we really should be

4555
03:34:20,110 --> 03:34:21,130
shooting for on the web.

4556
03:34:21,130 --> 03:34:24,880
You should be able to go to a
site, just click a buy button.

4557
03:34:24,880 --> 03:34:26,470
You don't have to sign
up for an account.

4558
03:34:26,470 --> 03:34:28,135
You don't have to put in your
credit card information.

4559
03:34:28,135 --> 03:34:29,570
You just click Buy.

4560
03:34:29,570 --> 03:34:31,700
The browser takes care of
the vast majority of

4561
03:34:31,700 --> 03:34:34,070
the payment for you.

4562
03:34:34,070 --> 03:34:35,290
It's ease of use.

4563
03:34:35,290 --> 03:34:38,010
And I think micropayments is
kind of a part of that.

4564
03:34:38,010 --> 03:34:39,910
You don't want to be charging
people $0.02

4565
03:34:39,910 --> 03:34:40,960
or $0.03 at a time.

4566
03:34:40,960 --> 03:34:43,470
But the idea that you should
be able to do $1.25

4567
03:34:43,470 --> 03:34:46,850
transaction I don't
think is crazy.

4568
03:34:46,850 --> 03:34:48,310
I think you should be able
to do that on the web.

4569
03:34:48,310 --> 03:34:50,650
NATASHA ROONEY: Does anybody
feel any differently about--

4570
03:34:50,650 --> 03:34:51,190
Ricardo--

4571
03:34:51,190 --> 03:34:52,280
RICARDO VILLERO: I was
actually going

4572
03:34:52,280 --> 03:34:52,910
to comment one thing.

4573
03:34:52,910 --> 03:34:55,000
So first, actually, if I could
do a bit of a survey, how many

4574
03:34:55,000 --> 03:34:56,930
people actually take payments
on the web?

4575
03:34:56,930 --> 03:35:00,080
How many people have a product
that actually takes payment

4576
03:35:00,080 --> 03:35:00,820
kind of reduce one?

4577
03:35:00,820 --> 03:35:02,530
And regarding the Ripple
question, how many people know

4578
03:35:02,530 --> 03:35:04,630
Bitcoin, for example?

4579
03:35:04,630 --> 03:35:05,500
Everybody, no?

4580
03:35:05,500 --> 03:35:07,250
OK, it's a good one.

4581
03:35:07,250 --> 03:35:07,650
Good.

4582
03:35:07,650 --> 03:35:10,000
So the thing that I was going to
mention is, that one of the

4583
03:35:10,000 --> 03:35:11,650
problems that we have
had with payments.

4584
03:35:11,650 --> 03:35:13,220
I've been working in
payments for years.

4585
03:35:13,220 --> 03:35:16,510
And when I got in, I worked with
mobile operators, which,

4586
03:35:16,510 --> 03:35:18,680
if they're good at something,
it's basically taking your

4587
03:35:18,680 --> 03:35:20,260
money, as you probably know.

4588
03:35:20,260 --> 03:35:21,990
So has anybody never
received a charge

4589
03:35:21,990 --> 03:35:22,750
from a mobile operator?

4590
03:35:22,750 --> 03:35:24,840
The bill always gets
there, right.

4591
03:35:24,840 --> 03:35:28,550
So I thought that, actually, we
had our stuff better sorted

4592
03:35:28,550 --> 03:35:30,300
out, than when I actually
go there.

4593
03:35:30,300 --> 03:35:32,740
And in payments, the main
problem is that, it's a

4594
03:35:32,740 --> 03:35:34,000
domain-specific problem.

4595
03:35:34,000 --> 03:35:36,380
And it's heavily regulated
domain as well.

4596
03:35:36,380 --> 03:35:39,310
So for example, why would
somebody want to pre-load an

4597
03:35:39,310 --> 03:35:41,550
account and then take your money
from there and actually

4598
03:35:41,550 --> 03:35:45,200
make that charge of fees
in that transaction?

4599
03:35:45,200 --> 03:35:47,490
Because there are different
roles in payments, so

4600
03:35:47,490 --> 03:35:48,870
actually, when a payment
occurs, it

4601
03:35:48,870 --> 03:35:50,510
hasn't really occurred.

4602
03:35:50,510 --> 03:35:52,070
It occurs in different phases.

4603
03:35:52,070 --> 03:35:54,830
So when you, for example, pay
something with a credit card,

4604
03:35:54,830 --> 03:35:57,020
that money is not yet on
the merchant account.

4605
03:35:57,020 --> 03:36:00,910
That money has got to go from
bank to bank, normally through

4606
03:36:00,910 --> 03:36:03,720
a series if not only one,
of clearinghouses.

4607
03:36:03,720 --> 03:36:05,820
And then that ends up
in the other bank.

4608
03:36:05,820 --> 03:36:08,900
So basically, that means that
bank hasn't actually got paid.

4609
03:36:08,900 --> 03:36:12,140
There's actually a risk that
money never gets paid.

4610
03:36:12,140 --> 03:36:15,080
And that is what, normally,
your bank calls bad debt.

4611
03:36:15,080 --> 03:36:18,880
So when you, for example, prepay
an account, what that

4612
03:36:18,880 --> 03:36:21,500
merchant, that acquirer in that
case is actually trying

4613
03:36:21,500 --> 03:36:23,420
to do is reduce their
bad debt problem.

4614
03:36:23,420 --> 03:36:25,790
They're trying to say,
I've got the funds.

4615
03:36:25,790 --> 03:36:27,980
So if actually this transaction
occurs, I'm going

4616
03:36:27,980 --> 03:36:29,740
to automatically pay myself.

4617
03:36:29,740 --> 03:36:30,830
Thank you very much.

4618
03:36:30,830 --> 03:36:33,540
So that actually occurs whenever
two parties in a

4619
03:36:33,540 --> 03:36:36,050
transaction don't have trust
in between them.

4620
03:36:36,050 --> 03:36:38,520
And this is a concept I suppose
will go back and back

4621
03:36:38,520 --> 03:36:41,530
again in the panel, because
payments is all about trust.

4622
03:36:41,530 --> 03:36:44,740
If I actually email
you and tell you,

4623
03:36:44,740 --> 03:36:46,240
will you lend me $20.

4624
03:36:46,240 --> 03:36:48,155
And you actually give me $20.

4625
03:36:48,155 --> 03:36:52,020
That is a transaction
that has occurred.

4626
03:36:52,020 --> 03:36:54,340
Maybe I don't even have my
money, but you've promised me

4627
03:36:54,340 --> 03:36:55,890
that you're going
to pay me $20.

4628
03:36:55,890 --> 03:36:57,020
Then I get my $20.

4629
03:36:57,020 --> 03:36:58,690
At some point, I may pay
you back or not.

4630
03:36:58,690 --> 03:36:59,860
You never know.

4631
03:36:59,860 --> 03:37:02,110
So that is actually
a transaction, and

4632
03:37:02,110 --> 03:37:03,430
that actually happens.

4633
03:37:03,430 --> 03:37:06,640
So the concept of you paying
me, the concept of you

4634
03:37:06,640 --> 03:37:09,430
establishing my identity via
receiving an email from me,

4635
03:37:09,430 --> 03:37:10,730
which by the way, is
not something you

4636
03:37:10,730 --> 03:37:11,700
should trust probably.

4637
03:37:11,700 --> 03:37:14,950
SMTP is not the most secure
thing in the world.

4638
03:37:14,950 --> 03:37:16,950
Those things are what actually
happens in payments.

4639
03:37:16,950 --> 03:37:20,970
And I think we still don't have
a full solution to model

4640
03:37:20,970 --> 03:37:22,860
all that complexity technically
in the web.

4641
03:37:22,860 --> 03:37:24,710
And that's one of the problems
we're trying to deal with.

4642
03:37:24,710 --> 03:37:28,070
NATASHA ROONEY: And I think I
actually owe Andrew Betts $20.

4643
03:37:28,070 --> 03:37:30,730
So we'll see if he does or
does not get that money.

4644
03:37:30,730 --> 03:37:33,310
So we actually have a question
from the floor.

4645
03:37:33,310 --> 03:37:38,251
So Alex Sexton, please, there
you go, over there, guys.

4646
03:37:38,251 --> 03:37:39,190
AUDIENCE: Hello.

4647
03:37:39,190 --> 03:37:43,316
Full disclosure, Stripe
employee--

4648
03:37:43,316 --> 03:37:45,190
NATASHA ROONEY: Actually, for
the floor, would you mind just

4649
03:37:45,190 --> 03:37:46,760
explaining what Stripe
is, just in case?

4650
03:37:46,760 --> 03:37:51,890
AUDIENCE: Stripe is a company
that currently does payments

4651
03:37:51,890 --> 03:37:52,610
for the web.

4652
03:37:52,610 --> 03:37:55,450
So I think we're in the
first slide, along

4653
03:37:55,450 --> 03:37:57,950
with many other companies.

4654
03:37:57,950 --> 03:38:02,970
So I think me and my friends
would all agree that stuff

4655
03:38:02,970 --> 03:38:06,890
like Ripple and Bitcoin is
really cool and totally this

4656
03:38:06,890 --> 03:38:09,960
cool, federated way
of doing payments.

4657
03:38:09,960 --> 03:38:16,590
But the bootstrapping of that
system is the blocker I think.

4658
03:38:16,590 --> 03:38:20,360
So how do you get my
parents to be able

4659
03:38:20,360 --> 03:38:21,090
to deal with Bitcoin.

4660
03:38:21,090 --> 03:38:22,280
You're talking about,
I don't want to

4661
03:38:22,280 --> 03:38:23,090
sign up for an account.

4662
03:38:23,090 --> 03:38:24,110
I don't want tot do
any of this stuff.

4663
03:38:24,110 --> 03:38:25,680
I just want to hit
this button, and

4664
03:38:25,680 --> 03:38:26,760
money changes hands.

4665
03:38:26,760 --> 03:38:29,210
And there aren't any of
these old systems.

4666
03:38:29,210 --> 03:38:34,040
So how do you rewire people's
brains to make this much more

4667
03:38:34,040 --> 03:38:37,840
complicated system to
them, something that

4668
03:38:37,840 --> 03:38:40,601
makes sense at all?

4669
03:38:40,601 --> 03:38:44,190
MANU SPORNY: I think the short
answer is, ease of use.

4670
03:38:44,190 --> 03:38:48,100
I mean that is the killer app
for all of these payment

4671
03:38:48,100 --> 03:38:48,710
technologies.

4672
03:38:48,710 --> 03:38:51,920
It's the ability to just go to
any site, click the Buy Now

4673
03:38:51,920 --> 03:38:56,630
button, be shown what
you're going to buy.

4674
03:38:56,630 --> 03:38:57,770
And that's it.

4675
03:38:57,770 --> 03:38:59,550
And it doesn't matter if you're
using Google Wallet.

4676
03:38:59,550 --> 03:39:00,870
It doesn't matter if
you're using Stripe

4677
03:39:00,870 --> 03:39:02,120
or Paypal or anything.

4678
03:39:02,120 --> 03:39:05,230
They're all speaking a fairly
similar payments protocol.

4679
03:39:05,230 --> 03:39:08,140
This is kind of what Pay Swarm,
that universal payment

4680
03:39:08,140 --> 03:39:09,640
standard, is designed to do.

4681
03:39:09,640 --> 03:39:13,140
The idea here is that, you
have a common payments

4682
03:39:13,140 --> 03:39:15,180
protocol that all of
the sites use.

4683
03:39:15,180 --> 03:39:19,820
It's open, non-proprietary,
W3C standard.

4684
03:39:19,820 --> 03:39:21,200
And then you can choose.

4685
03:39:21,200 --> 03:39:24,010
You can pick and choose who's
going to process your payments

4686
03:39:24,010 --> 03:39:25,790
for you, if it's going to be
your bank or if it's going to

4687
03:39:25,790 --> 03:39:28,290
be Google Wallet or if it's
going to be Paypal.

4688
03:39:28,290 --> 03:39:31,860
And then the merchant can choose
whoever they want too.

4689
03:39:31,860 --> 03:39:35,720
So I think the way that you
bootstrap this stuff is, one,

4690
03:39:35,720 --> 03:39:36,820
through ease of use.

4691
03:39:36,820 --> 03:39:41,300
And then, the second thing is,
you have to somehow convince

4692
03:39:41,300 --> 03:39:43,090
vendors that this
is worth doing.

4693
03:39:43,090 --> 03:39:46,420
And I think that's going to be
incredibly difficult to do, if

4694
03:39:46,420 --> 03:39:50,720
Google Wallet, Stripe, Paypal,
don't join onto the work, if

4695
03:39:50,720 --> 03:39:53,190
they do if they continue do
the proprietary stuff.

4696
03:39:53,190 --> 03:39:54,870
NATASHA ROONEY: We'll take one
more comment from Rob.

4697
03:39:54,870 --> 03:39:56,970
ROB GRIMSHAW: I do agree,
actually, with the point of

4698
03:39:56,970 --> 03:39:58,570
the question.

4699
03:39:58,570 --> 03:40:02,965
Things I Bitcoin are such
wonderful ideas.

4700
03:40:02,965 --> 03:40:07,240
but these things only really
thrive if they're starting

4701
03:40:07,240 --> 03:40:07,990
from scratch.

4702
03:40:07,990 --> 03:40:13,000
I mean, you do it in a market
somewhere like developing

4703
03:40:13,000 --> 03:40:16,280
countries, like Kenya or
whatever, then actually you

4704
03:40:16,280 --> 03:40:17,720
can make something happen
very quickly.

4705
03:40:17,720 --> 03:40:20,590
So you've got a system like
M-PESA, with 17 million users.

4706
03:40:20,590 --> 03:40:23,610
But most of those people never
had a bank account in their

4707
03:40:23,610 --> 03:40:26,940
life, so they just accept it
as, this is what it is.

4708
03:40:26,940 --> 03:40:28,920
For most of the developed
markets that we're dealing

4709
03:40:28,920 --> 03:40:35,520
with, on a day to day, as a
merchant, like the "FT," all

4710
03:40:35,520 --> 03:40:39,140
these people have got their
money in existing bank

4711
03:40:39,140 --> 03:40:42,420
accounts stuck in this
1970s system.

4712
03:40:42,420 --> 03:40:44,480
And it's not going to
come out quickly.

4713
03:40:44,480 --> 03:40:48,600
So for me, the practical
solutions are about mitigating

4714
03:40:48,600 --> 03:40:51,210
that existing system of making
it to something which is at

4715
03:40:51,210 --> 03:40:54,820
least some way practical from a
web payments point of view,

4716
03:40:54,820 --> 03:40:58,530
rather than thinking about how
we can start again, through

4717
03:40:58,530 --> 03:41:01,550
some of these ideas which are
wonderful, but to some extent,

4718
03:41:01,550 --> 03:41:06,330
Utopian, from the perspective
of today's business.

4719
03:41:06,330 --> 03:41:09,250
MANU SPORNY: Just quickly,
Ripple's whole business plan

4720
03:41:09,250 --> 03:41:10,950
is to get banks for
what's there.

4721
03:41:10,950 --> 03:41:13,720
NATASHA ROONEY: We'll
come to Ripple in

4722
03:41:13,720 --> 03:41:14,560
next couple of questions.

4723
03:41:14,560 --> 03:41:16,860
But interesting, to what Rob
said, I think one of the next

4724
03:41:16,860 --> 03:41:19,730
questions is going to make you
touch on those utopian

4725
03:41:19,730 --> 03:41:20,600
viewpoints a little bit.

4726
03:41:20,600 --> 03:41:22,710
So Teddy Conda, I think
has the next

4727
03:41:22,710 --> 03:41:24,610
question for us, here.

4728
03:41:24,610 --> 03:41:25,860
Thank you.

4729
03:41:25,860 --> 03:41:28,836

4730
03:41:28,836 --> 03:41:32,000
AUDIENCE: So this question kind
of strikes close to home,

4731
03:41:32,000 --> 03:41:35,480
because I worked in publishing
and media for a good majority

4732
03:41:35,480 --> 03:41:36,490
of my career.

4733
03:41:36,490 --> 03:41:39,090
And I don't know if we'll have
an answer to it in this forum,

4734
03:41:39,090 --> 03:41:42,380
because it's a topic that
has fundamental

4735
03:41:42,380 --> 03:41:44,260
problems of its own.

4736
03:41:44,260 --> 03:41:47,320
However, I'll add a bit to it,
as well as read the question.

4737
03:41:47,320 --> 03:41:50,610
What payment model is the one
that will finally make

4738
03:41:50,610 --> 03:41:54,580
quote-unquote "old media"
profitable enough online?

4739
03:41:54,580 --> 03:41:56,380
And how soon can
we get to that?

4740
03:41:56,380 --> 03:42:00,380
And furthermore, do know of any
media venues, publishing

4741
03:42:00,380 --> 03:42:03,140
houses, that are doing this
correctly and are actually

4742
03:42:03,140 --> 03:42:07,330
profitable, through a payment
model online?

4743
03:42:07,330 --> 03:42:09,650
RICARDO VILLERO: Well, I think,
Rob, this kind of hits

4744
03:42:09,650 --> 03:42:11,130
in [INAUDIBLE].

4745
03:42:11,130 --> 03:42:12,420
ROB GRIMSHAW: We've done it.

4746
03:42:12,420 --> 03:42:14,146
It's fine.

4747
03:42:14,146 --> 03:42:16,060
NATASHA ROONEY: So explain
it to us, Rob.

4748
03:42:16,060 --> 03:42:16,990
What's it all about?

4749
03:42:16,990 --> 03:42:20,460
ROB GRIMSHAW: Well, the sort of
key thing is actually to be

4750
03:42:20,460 --> 03:42:23,010
bold enough to charge
for your product.

4751
03:42:23,010 --> 03:42:26,560
And actually, the world
is prepared to

4752
03:42:26,560 --> 03:42:27,890
pay for great content.

4753
03:42:27,890 --> 03:42:31,690
And I think we've established
that quite successfully, over

4754
03:42:31,690 --> 03:42:35,030
the past five years that we've
really pursued this policy of

4755
03:42:35,030 --> 03:42:38,330
becoming a company that
generates the majority of its

4756
03:42:38,330 --> 03:42:41,180
money from content, rather
from advertising.

4757
03:42:41,180 --> 03:42:45,830
If you look at ft.com's
finances right now, we

4758
03:42:45,830 --> 03:42:50,200
generate in excess of 70% of
our revenues from content,

4759
03:42:50,200 --> 03:42:54,130
i.e. subscriptions, the vast
marjority of that page

4760
03:42:54,130 --> 03:42:59,060
digitally, through our
subscriptions.

4761
03:42:59,060 --> 03:43:05,510
And that is not an indication
that we've lost all our

4762
03:43:05,510 --> 03:43:06,600
advertising revenue.

4763
03:43:06,600 --> 03:43:09,080
In fact, our advertising grew
over the period of time that

4764
03:43:09,080 --> 03:43:11,340
we grew our subscriptions
business.

4765
03:43:11,340 --> 03:43:14,005
It's a sign that, actually, if
you have the right offering

4766
03:43:14,005 --> 03:43:16,540
and you do work hard on the
payment side, you can build a

4767
03:43:16,540 --> 03:43:20,456
very successful business around
quality content online.

4768
03:43:20,456 --> 03:43:21,280
NATASHA ROONEY: Fantastic.

4769
03:43:21,280 --> 03:43:22,860
We've got a couple of questions
from the floor.

4770
03:43:22,860 --> 03:43:26,174
So Ally, if you want to
raise your hand--

4771
03:43:26,174 --> 03:43:29,653

4772
03:43:29,653 --> 03:43:31,255
right here, oh, sorry.

4773
03:43:31,255 --> 03:43:37,654

4774
03:43:37,654 --> 03:43:40,750
AUDIENCE: It's kind of off topic
now, because I wanted to

4775
03:43:40,750 --> 03:43:42,320
speak, actually, about
the last topic.

4776
03:43:42,320 --> 03:43:43,210
Is it OK to go back to that?

4777
03:43:43,210 --> 03:43:46,840
Or would you rather continue
moving forward?

4778
03:43:46,840 --> 03:43:50,120
I guess what I was thinking was,
we mentioned, with the

4779
03:43:50,120 --> 03:43:54,820
problem with more widespread
adoption of Bitcoin

4780
03:43:54,820 --> 03:43:56,510
being ease of use.

4781
03:43:56,510 --> 03:43:59,600
And I just had a gut reaction
to disagree with that.

4782
03:43:59,600 --> 03:44:02,720
Because I think that a much
bigger issue with it,

4783
03:44:02,720 --> 03:44:05,970
especially among an older crowd,
has to do with trust

4784
03:44:05,970 --> 03:44:10,150
issues and feeling that
they can trust

4785
03:44:10,150 --> 03:44:11,090
these different sources.

4786
03:44:11,090 --> 03:44:13,570
And it was just kind of what
I wanted to bring up.

4787
03:44:13,570 --> 03:44:17,980
And I'm wondering how you
address that and how you make

4788
03:44:17,980 --> 03:44:19,970
those older people feel
more comfortable with

4789
03:44:19,970 --> 03:44:21,220
these payment options.

4790
03:44:21,220 --> 03:44:24,775

4791
03:44:24,775 --> 03:44:27,360
CINDY: I'm not sure that they'll
ever be comfortable

4792
03:44:27,360 --> 03:44:28,650
with them, honestly.

4793
03:44:28,650 --> 03:44:30,290
I mean, look at the
supermarket.

4794
03:44:30,290 --> 03:44:32,920
When you're standing at the
supermarket, how many older

4795
03:44:32,920 --> 03:44:34,640
people use debit cards?

4796
03:44:34,640 --> 03:44:37,180
And how many are
writing checks?

4797
03:44:37,180 --> 03:44:41,720
So it might be that user
behavior is so divergent that,

4798
03:44:41,720 --> 03:44:43,580
they won't get there.

4799
03:44:43,580 --> 03:44:47,050
But that doesn't mean that we
should not continue to push

4800
03:44:47,050 --> 03:44:48,570
the envelope.

4801
03:44:48,570 --> 03:44:50,980
I do believe that Bitcoin
is going to be really

4802
03:44:50,980 --> 03:44:51,520
challenging.

4803
03:44:51,520 --> 03:44:54,690
I do believe that, from a
usability perspective, even

4804
03:44:54,690 --> 03:44:56,330
when I read up on it.

4805
03:44:56,330 --> 03:44:58,990
And there are big warnings,
keep your wallet offline.

4806
03:44:58,990 --> 03:45:00,470
I was like, whoa.

4807
03:45:00,470 --> 03:45:02,860
And I'm a tech person.

4808
03:45:02,860 --> 03:45:06,220
So the lay person is going to
read that one line that's

4809
03:45:06,220 --> 03:45:07,810
right on the Bitcoin website.

4810
03:45:07,810 --> 03:45:08,870
And they're going to run.

4811
03:45:08,870 --> 03:45:12,060
They're going to run as
fast as they can.

4812
03:45:12,060 --> 03:45:16,770
So this is a social issue, as
much as it's a payment issue.

4813
03:45:16,770 --> 03:45:17,810
And it's a trust issue.

4814
03:45:17,810 --> 03:45:22,090
So payments is a complex
ecosystem of a lot of

4815
03:45:22,090 --> 03:45:23,000
different players.

4816
03:45:23,000 --> 03:45:27,260
And trying to make everyone
happy is very challenging.

4817
03:45:27,260 --> 03:45:29,740
ROB GRIMSHAW: We do live in a
period where the price of gold

4818
03:45:29,740 --> 03:45:33,260
is at an all time high, mainly
because people don't trust

4819
03:45:33,260 --> 03:45:37,450
currencies full stop,
let alone new

4820
03:45:37,450 --> 03:45:39,740
ideas like by Bitcoin.

4821
03:45:39,740 --> 03:45:43,900
And this is a really difficult,
complex issue for

4822
03:45:43,900 --> 03:45:46,580
societies and economies as a
whole, which people have been

4823
03:45:46,580 --> 03:45:48,660
wrestling with hundreds
of year.

4824
03:45:48,660 --> 03:45:51,760
And just kind of introducing
something new into that is not

4825
03:45:51,760 --> 03:45:53,610
something that happens
in a couple of months

4826
03:45:53,610 --> 03:45:54,620
or a couple of years.

4827
03:45:54,620 --> 03:45:57,770
It can take decades, hundreds of
years, to really establish

4828
03:45:57,770 --> 03:45:59,320
a new currency properly.

4829
03:45:59,320 --> 03:46:01,520
RICARDO VILLERO: Also, I was
going to comment that,

4830
03:46:01,520 --> 03:46:03,650
actually, in Payments just
recently, we've been actually

4831
03:46:03,650 --> 03:46:05,840
talking about how this whole
payments on the web thing

4832
03:46:05,840 --> 03:46:07,470
should really be a bit more--

4833
03:46:07,470 --> 03:46:09,140
well, some of us think that
this should be more like a

4834
03:46:09,140 --> 03:46:10,260
two-phased approach.

4835
03:46:10,260 --> 03:46:13,160
Essentially, there's no open
technology to basically do

4836
03:46:13,160 --> 03:46:14,530
payments on the web
at the moment.

4837
03:46:14,530 --> 03:46:16,730
And there's also the whole bill
toward currency thing,

4838
03:46:16,730 --> 03:46:18,920
which at some point
may arrive.

4839
03:46:18,920 --> 03:46:20,630
And actually, I think there
would be even government

4840
03:46:20,630 --> 03:46:22,040
initiatives to do this.

4841
03:46:22,040 --> 03:46:24,110
Because there are lots of
benefits about issuing

4842
03:46:24,110 --> 03:46:25,830
currency that is not physical.

4843
03:46:25,830 --> 03:46:28,530
But until that moment happens,
basically, that doesn't mean

4844
03:46:28,530 --> 03:46:31,380
that you cannot start with the
first part of it, which is,

4845
03:46:31,380 --> 03:46:33,620
OK, how about we have open
technology to do those

4846
03:46:33,620 --> 03:46:35,810
payments on the web.

4847
03:46:35,810 --> 03:46:39,320
And we have that thing in W3C,
where we basically go into

4848
03:46:39,320 --> 03:46:42,410
inventing problems that you
cannot really solve, not even

4849
03:46:42,410 --> 03:46:43,820
in the existing system.

4850
03:46:43,820 --> 03:46:45,150
Imagine on the new system.

4851
03:46:45,150 --> 03:46:46,660
So we tried to first
have a system.

4852
03:46:46,660 --> 03:46:48,810
And then, we tried to add
things like virtual

4853
03:46:48,810 --> 03:46:49,782
currencies on it.

4854
03:46:49,782 --> 03:46:52,100
NATASHA ROONEY: So this goes
into the third question, which

4855
03:46:52,100 --> 03:46:53,700
came from--

4856
03:46:53,700 --> 03:46:55,430
actually, Manu, I believe this
is one of the questions that

4857
03:46:55,430 --> 03:46:56,565
you originally asked.

4858
03:46:56,565 --> 03:46:58,870
So I will ask it for you.

4859
03:46:58,870 --> 03:47:02,730
It actually goes back to the
Bitcoin and Ripple question,

4860
03:47:02,730 --> 03:47:05,750
which is, do they fit into the
plan for web-based payments.

4861
03:47:05,750 --> 03:47:07,900
And should they be included
as payment options?

4862
03:47:07,900 --> 03:47:09,970
Or should they remain
on the periphery?

4863
03:47:09,970 --> 03:47:12,010
But it seems like what Ricardo
is talking about now is,

4864
03:47:12,010 --> 03:47:14,490
they've already been considered
as being wrapped

4865
03:47:14,490 --> 03:47:15,090
into the standards.

4866
03:47:15,090 --> 03:47:17,650
MANU SPORNY: Yeah, and I really
asked that question

4867
03:47:17,650 --> 03:47:19,650
because I was more
interested in the

4868
03:47:19,650 --> 03:47:21,070
answer from the panelists.

4869
03:47:21,070 --> 03:47:25,110
And I wanted to be a bit more
pointed with the question.

4870
03:47:25,110 --> 03:47:28,840
Are there definite plans to
integrate alternative

4871
03:47:28,840 --> 03:47:31,860
currencies into product lines,
like Google Wallet.

4872
03:47:31,860 --> 03:47:33,360
Would Google Wallet
ever consider

4873
03:47:33,360 --> 03:47:34,570
adding Bitcoin or Ripple?

4874
03:47:34,570 --> 03:47:41,410
Would Mozilla consider putting a
Bitcoin wallet or even a USD

4875
03:47:41,410 --> 03:47:44,430
wallet directly into
the browser?

4876
03:47:44,430 --> 03:47:47,660
So that when you download a
browser, you've got preloaded

4877
03:47:47,660 --> 03:47:50,310
$10 that you can spend
online with it.

4878
03:47:50,310 --> 03:47:51,090
You go to a website.

4879
03:47:51,090 --> 03:47:51,890
You click Buy Now.

4880
03:47:51,890 --> 03:47:52,740
And the payment is made.

4881
03:47:52,740 --> 03:47:53,050
It's instantaneous

4882
03:47:53,050 --> 03:47:55,020
NATASHA ROONEY: Yeah,
that's actually a

4883
03:47:55,020 --> 03:47:56,750
quite interesting question.

4884
03:47:56,750 --> 03:48:00,000
So like Manu said at the
beginning, lots of us are

4885
03:48:00,000 --> 03:48:03,785
involved in this payment stuff,
and Ricardo and I from

4886
03:48:03,785 --> 03:48:05,375
the operator space.

4887
03:48:05,375 --> 03:48:07,620
And Kumar, Mozilla has taken
a little bit of a different

4888
03:48:07,620 --> 03:48:10,880
approach to this, where they
have said, we don't care who

4889
03:48:10,880 --> 03:48:12,470
the payment provider is.

4890
03:48:12,470 --> 03:48:15,980
We're just giving you the option
to pay, which is a very

4891
03:48:15,980 --> 03:48:19,020
different stance,
in this space.

4892
03:48:19,020 --> 03:48:21,090
KUMAR MCMILLAN: Yeah, the thing
with Bitcoin is, you can

4893
03:48:21,090 --> 03:48:22,660
already pay with Bitcoin
on the web.

4894
03:48:22,660 --> 03:48:25,100
There's already web-based
wallets.

4895
03:48:25,100 --> 03:48:31,720
And so Mozilla's mozPay API,
which I think you're referring

4896
03:48:31,720 --> 03:48:35,410
to, is just one of the ways you
could pay in Firefox OS.

4897
03:48:35,410 --> 03:48:36,990
It's not the only way.

4898
03:48:36,990 --> 03:48:42,310
So any app in Firefox us can
take Bitcoin payments.

4899
03:48:42,310 --> 03:48:44,680
There would just need the
JavaScript to do it.

4900
03:48:44,680 --> 03:48:47,450
They would need to online
wallet, in order to do it.

4901
03:48:47,450 --> 03:48:49,090
So it would just work.

4902
03:48:49,090 --> 03:48:53,610
But yeah, as far as mozPay, a
lot of people are interested

4903
03:48:53,610 --> 03:48:55,980
in incorporating Bitcoin.

4904
03:48:55,980 --> 03:48:58,010
it's already been asked
by a lot of people.

4905
03:48:58,010 --> 03:49:01,360
They want to see that as a
way to buy apps in the

4906
03:49:01,360 --> 03:49:02,900
marketplace, for sure.

4907
03:49:02,900 --> 03:49:05,070
Whether or not it will
happen, I don't know,

4908
03:49:05,070 --> 03:49:06,480
because it is tough.

4909
03:49:06,480 --> 03:49:07,760
There are a lot of challenges.

4910
03:49:07,760 --> 03:49:10,410
RICARDO VILLERO: And while we're
at it, actually, so that

4911
03:49:10,410 --> 03:49:12,560
you get some of the data that
we wanted to get, how many

4912
03:49:12,560 --> 03:49:15,636
people here actually own
Bitcoin of any kind?

4913
03:49:15,636 --> 03:49:18,040
Because we're the geekiest of
the geeks, somebody here

4914
03:49:18,040 --> 03:49:19,230
should have Bitcoin.

4915
03:49:19,230 --> 03:49:20,440
How many people have
actually done a

4916
03:49:20,440 --> 03:49:23,610
transaction with Bitcoin?

4917
03:49:23,610 --> 03:49:25,520
OK, and how many people, when
they bought Bitcoin,

4918
03:49:25,520 --> 03:49:27,270
actually-- when you mean you
have Bitcoin, you bought it

4919
03:49:27,270 --> 03:49:31,780
either in MongoX or one of,
basically, the big exchanges?

4920
03:49:31,780 --> 03:49:34,670
How many people are on
MongoX, actually?

4921
03:49:34,670 --> 03:49:36,800
OK, then you used a
smaller exchange.

4922
03:49:36,800 --> 03:49:37,810
Woo-hoo, OK.

4923
03:49:37,810 --> 03:49:38,810
This thing is working.

4924
03:49:38,810 --> 03:49:40,540
MANU SPORNY: How many people
have lost their wallet and

4925
03:49:40,540 --> 03:49:42,905
lost over $10 to $15?

4926
03:49:42,905 --> 03:49:46,070

4927
03:49:46,070 --> 03:49:46,970
[LAUGHING]

4928
03:49:46,970 --> 03:49:49,652
There's the problem right there,
at least with Bitcoin.

4929
03:49:49,652 --> 03:49:51,650
NATASHA ROONEY: Cool,
can we refer some

4930
03:49:51,650 --> 03:49:52,460
questions to the floor.

4931
03:49:52,460 --> 03:49:55,440
I think Marcus has got a
question, at the front.

4932
03:49:55,440 --> 03:49:57,250
And this is quite a contentious
topic, so if you

4933
03:49:57,250 --> 03:50:00,050
guys want to vote on OnSlyde
tool, that would be great.

4934
03:50:00,050 --> 03:50:04,130
Because it's a strange one,
where we'd like a little bit

4935
03:50:04,130 --> 03:50:07,030
more developer feedback on how
people are feeling about

4936
03:50:07,030 --> 03:50:07,980
particular payment methods.

4937
03:50:07,980 --> 03:50:11,135
So Marcus, please--

4938
03:50:11,135 --> 03:50:12,100
CINDY: OK.

4939
03:50:12,100 --> 03:50:13,420
It's on, sorry.

4940
03:50:13,420 --> 03:50:16,060
So Manu started the discussion,
kind of talking

4941
03:50:16,060 --> 03:50:20,410
about people that are not
in the old system.

4942
03:50:20,410 --> 03:50:26,430
So they're still using real
money, so paper money.

4943
03:50:26,430 --> 03:50:28,890
One thing to notice, a lot of
people don't want to move to

4944
03:50:28,890 --> 03:50:30,180
digital money.

4945
03:50:30,180 --> 03:50:32,700
Even if they now need to or if
they had to because they

4946
03:50:32,700 --> 03:50:35,770
wanted to buy a service,
how would they enter

4947
03:50:35,770 --> 03:50:37,690
this digital economy?

4948
03:50:37,690 --> 03:50:39,850
You haven't really
touched on that.

4949
03:50:39,850 --> 03:50:43,340
MANU SPORNY: Mobile devices,
M-PASA is completely

4950
03:50:43,340 --> 03:50:44,020
mobile-based.

4951
03:50:44,020 --> 03:50:47,270
Mobile devices are basically the
way that a lot of people

4952
03:50:47,270 --> 03:50:51,710
in emerging nations are getting
access to the web.

4953
03:50:51,710 --> 03:50:57,620
And they have access to the
largest communication network

4954
03:50:57,620 --> 03:50:59,700
that mankind has ever known.

4955
03:50:59,700 --> 03:51:01,390
And if we build a financial
protocol into

4956
03:51:01,390 --> 03:51:03,900
that, that's huge.

4957
03:51:03,900 --> 03:51:05,140
That's a really big thing.

4958
03:51:05,140 --> 03:51:08,925
CINDY: You're basically
converting telcos into banks.

4959
03:51:08,925 --> 03:51:11,340
RICARDO VILLERO: Hopefully, it's
going to be telcos and

4960
03:51:11,340 --> 03:51:13,770
the banks and companies,
like Google and Paypal.

4961
03:51:13,770 --> 03:51:16,070
Everyone would have a level
playing field, to effectively

4962
03:51:16,070 --> 03:51:20,650
be a financial institution
to these people.

4963
03:51:20,650 --> 03:51:23,820
So we know, for example, in
Europe, there's actually a

4964
03:51:23,820 --> 03:51:25,625
green paper that's being
discussed at the moment, by

4965
03:51:25,625 --> 03:51:28,290
the European Union, regarding
what is the role of actually

4966
03:51:28,290 --> 03:51:30,300
telcos, regarding the whole
payments industry.

4967
03:51:30,300 --> 03:51:32,230
This is to regulate, explicitly,
basically these

4968
03:51:32,230 --> 03:51:36,020
bill payments and one of the
things that would have full

4969
03:51:36,020 --> 03:51:38,690
consequences for telcos, if it
actually ended up being true.

4970
03:51:38,690 --> 03:51:41,370
Because the moment you've
regulated a financial product,

4971
03:51:41,370 --> 03:51:44,050
then basically, you don't have
a prepaid phone account.

4972
03:51:44,050 --> 03:51:47,020
You have a value-added account
that telcos are storing, which

4973
03:51:47,020 --> 03:51:47,990
means you could go to a shop.

4974
03:51:47,990 --> 03:51:50,670
And they could refund your money
and things like that.

4975
03:51:50,670 --> 03:51:52,640
So it has a lot of implications,
regarding how do

4976
03:51:52,640 --> 03:51:53,780
you handle money there.

4977
03:51:53,780 --> 03:51:56,060
But it also has a lot
of advantages.

4978
03:51:56,060 --> 03:51:59,390
So in this I can actually give
one anecdote, which is, at

4979
03:51:59,390 --> 03:52:01,440
BlueVia we do payments
for different--

4980
03:52:01,440 --> 03:52:02,770
basically, we're the back
end that different

4981
03:52:02,770 --> 03:52:03,710
stores connect to.

4982
03:52:03,710 --> 03:52:04,830
We do payments with Mozilla.

4983
03:52:04,830 --> 03:52:06,320
We do payments with Google.

4984
03:52:06,320 --> 03:52:09,000
And one of things happened in
Google recently is that, in

4985
03:52:09,000 --> 03:52:12,050
the Android store, WhatsApp,
which is this famous

4986
03:52:12,050 --> 03:52:15,530
application, recently decided
to charge for subscriptions.

4987
03:52:15,530 --> 03:52:20,190
And only WhatsApp tripled our
transactions during a period

4988
03:52:20,190 --> 03:52:23,190
of time in Spain, because people
who had never entered

4989
03:52:23,190 --> 03:52:26,210
their credit card in Google
Wallet decided to pay with

4990
03:52:26,210 --> 03:52:27,360
their mobile account.

4991
03:52:27,360 --> 03:52:29,530
Because they didn't
want to enter the

4992
03:52:29,530 --> 03:52:30,790
whole credit card thing.

4993
03:52:30,790 --> 03:52:32,490
They just said, OK, there's
an option to

4994
03:52:32,490 --> 03:52:33,700
actually pay with my phone.

4995
03:52:33,700 --> 03:52:35,390
That was the first time
they saw the option.

4996
03:52:35,390 --> 03:52:37,240
Pay with My Phone, probably
because it was the first time

4997
03:52:37,240 --> 03:52:38,870
that they actually paid.

4998
03:52:38,870 --> 03:52:41,590
And that thing really launched
the transactions up.

4999
03:52:41,590 --> 03:52:44,140
So it actually shows that
percentage of population, who

5000
03:52:44,140 --> 03:52:46,350
probably was the only paid
transaction they ever did,

5001
03:52:46,350 --> 03:52:47,795
they actually used
a mobile phone.

5002
03:52:47,795 --> 03:52:48,650
AUDIENCE: OK.

5003
03:52:48,650 --> 03:52:51,490
So the larger question is--

5004
03:52:51,490 --> 03:52:52,870
you mentioned some of
the implications.

5005
03:52:52,870 --> 03:52:57,720
There are tons of legal
implications around this.

5006
03:52:57,720 --> 03:53:00,850
How are you guys going to deal
with that, especially in a

5007
03:53:00,850 --> 03:53:02,580
small community group?

5008
03:53:02,580 --> 03:53:04,550
RICARDO VILLERO: Right
now, it's actually a

5009
03:53:04,550 --> 03:53:05,400
bit of a gray area.

5010
03:53:05,400 --> 03:53:07,450
Because at the moment, for
example, when you charge

5011
03:53:07,450 --> 03:53:09,840
something to your phone and then
it gets into your bill.

5012
03:53:09,840 --> 03:53:10,950
And then your bill gets settled

5013
03:53:10,950 --> 03:53:12,170
with your bank account.

5014
03:53:12,170 --> 03:53:14,390
In reality, the operator never
got hold of that money.

5015
03:53:14,390 --> 03:53:16,170
That money has to never
gone to the operator.

5016
03:53:16,170 --> 03:53:20,160
It actually only settles when
the bank pays me from your

5017
03:53:20,160 --> 03:53:20,970
bank account.

5018
03:53:20,970 --> 03:53:22,330
So in reality, your money
has always been

5019
03:53:22,330 --> 03:53:23,370
in your bank account.

5020
03:53:23,370 --> 03:53:26,250
It's more like a virtual ledger,
what we are holding.

5021
03:53:26,250 --> 03:53:29,100
AUDIENCE: Which wasn't what ha
said initially, about the 70%

5022
03:53:29,100 --> 03:53:30,610
of the people in the
world not having

5023
03:53:30,610 --> 03:53:32,908
access to a bank account.

5024
03:53:32,908 --> 03:53:34,830
So the thing I'm not
getting is that.

5025
03:53:34,830 --> 03:53:36,500
RICARDO VILLERO: But that's
because that's 70% of--

5026
03:53:36,500 --> 03:53:38,470
so you take, for example, a
country, this is a country

5027
03:53:38,470 --> 03:53:41,810
like Spain, where people have
got more contracts, or UK.

5028
03:53:41,810 --> 03:53:44,720
There are countries like Brazil
mostly Latin America,

5029
03:53:44,720 --> 03:53:46,330
where, actually, there are
three phone plans.

5030
03:53:46,330 --> 03:53:47,820
Basically, there's prepaid.

5031
03:53:47,820 --> 03:53:49,520
There's post-pay, the construct
the you're used to.

5032
03:53:49,520 --> 03:53:50,940
And there's [INAUDIBLE],
which is where I pay

5033
03:53:50,940 --> 03:53:52,500
during a period of time.

5034
03:53:52,500 --> 03:53:53,910
So say, I pay 5 Euros.

5035
03:53:53,910 --> 03:53:56,930
And I'm like in a contract for
a week, that kind of thing.

5036
03:53:56,930 --> 03:53:58,340
So when you're in
those systems.

5037
03:53:58,340 --> 03:54:00,660
Most people are prepay on those
markets, by the way.

5038
03:54:00,660 --> 03:54:02,020
And what they do is,
they actually pay

5039
03:54:02,020 --> 03:54:03,200
their bill on a shop.

5040
03:54:03,200 --> 03:54:04,090
They go to a shop.

5041
03:54:04,090 --> 03:54:05,890
They get a coupon.

5042
03:54:05,890 --> 03:54:07,250
And they load their phone.

5043
03:54:07,250 --> 03:54:08,660
So that's mostly
what they use.

5044
03:54:08,660 --> 03:54:09,800
NATASHA ROONEY: OK.

5045
03:54:09,800 --> 03:54:13,585
Yeah, complicated like Las Vegas
hotel-- so we will go on

5046
03:54:13,585 --> 03:54:15,070
to the next question,
which has come up

5047
03:54:15,070 --> 03:54:16,840
a little bit already.

5048
03:54:16,840 --> 03:54:19,200
But Matt Morgan, if
you're around, and

5049
03:54:19,200 --> 03:54:20,140
stick your hand up.

5050
03:54:20,140 --> 03:54:21,390
Oh, there we go, very easy.

5051
03:54:21,390 --> 03:54:25,511

5052
03:54:25,511 --> 03:54:27,090
AUDIENCE: Hi.

5053
03:54:27,090 --> 03:54:29,240
I think part of this
question comes from

5054
03:54:29,240 --> 03:54:30,855
our host, Andre Betts.

5055
03:54:30,855 --> 03:54:34,030
I'm going to personalize
it a little.

5056
03:54:34,030 --> 03:54:36,000
The basic question is, what
needs to happen to make

5057
03:54:36,000 --> 03:54:38,890
one-quick payment a reality
for everyone?

5058
03:54:38,890 --> 03:54:40,930
What I'd like you to do is
think of everyone really

5059
03:54:40,930 --> 03:54:45,030
broadly and include maybe
organizations like libraries

5060
03:54:45,030 --> 03:54:47,530
and their readers, for
whom complete content

5061
03:54:47,530 --> 03:54:49,363
confidentiality is
a requirement.

5062
03:54:49,363 --> 03:54:50,150
NATASHA ROONEY: OK.

5063
03:54:50,150 --> 03:54:53,820
So the one-click payment thing
is quite interesting. and it

5064
03:54:53,820 --> 03:54:56,250
was one of the things that I was
quite blown away with, at

5065
03:54:56,250 --> 03:54:57,450
Google I/O this year.

5066
03:54:57,450 --> 03:55:00,180
And Cindy, this is something
that work on, right?

5067
03:55:00,180 --> 03:55:03,260
CINDY: So this is a
common problem.

5068
03:55:03,260 --> 03:55:05,770
Users go to hundreds of
different forms and fill out

5069
03:55:05,770 --> 03:55:07,560
the exact same information.

5070
03:55:07,560 --> 03:55:11,300
So that was kind of the
hypothesis behind

5071
03:55:11,300 --> 03:55:13,860
requestAutocomplete, which
is the new web standard

5072
03:55:13,860 --> 03:55:17,160
initiative that Chrome
is implementing.

5073
03:55:17,160 --> 03:55:20,300
And part of that initiative, I'm
fortunate to be able to be

5074
03:55:20,300 --> 03:55:22,820
part of it, because they are
integrating Google Wallet as a

5075
03:55:22,820 --> 03:55:25,850
payment option, in addition
to Chrome Autofill data.

5076
03:55:25,850 --> 03:55:28,420
But it's that concept that users
are filling out the same

5077
03:55:28,420 --> 03:55:31,030
exact information again
and again and again.

5078
03:55:31,030 --> 03:55:34,010
They don't necessarily want to
hand it over to 50 different

5079
03:55:34,010 --> 03:55:34,900
merchant websites.

5080
03:55:34,900 --> 03:55:37,920
So why does not the browser,
as a container, hold that

5081
03:55:37,920 --> 03:55:40,920
information for them and provide
it to the different

5082
03:55:40,920 --> 03:55:43,100
merchant websites
on their behalf?

5083
03:55:43,100 --> 03:55:47,320
So now, requestAutocomplete is
obviously dedicated to that

5084
03:55:47,320 --> 03:55:48,810
true payments use case.

5085
03:55:48,810 --> 03:55:52,830
It is providing the user's
information to complete the

5086
03:55:52,830 --> 03:55:53,770
transaction.

5087
03:55:53,770 --> 03:55:56,180
So in terms of--

5088
03:55:56,180 --> 03:55:57,085
I cannot pronounce.

5089
03:55:57,085 --> 03:55:58,244
MANU SPORNY: Anonymity.

5090
03:55:58,244 --> 03:56:02,450
AUDIENCE: In terms of that,
you know, that gets

5091
03:56:02,450 --> 03:56:03,870
challenging in payments
period.

5092
03:56:03,870 --> 03:56:06,930
So that's an interesting thread
that I was surprised

5093
03:56:06,930 --> 03:56:10,390
hasn't come up sooner, because
that is one of the biggest

5094
03:56:10,390 --> 03:56:14,290
changes between those 1970s
technologies and kind of what

5095
03:56:14,290 --> 03:56:15,700
is coming out today.

5096
03:56:15,700 --> 03:56:18,090
Because there are tons
of regulations

5097
03:56:18,090 --> 03:56:20,500
around payment companies.

5098
03:56:20,500 --> 03:56:24,360
And once you're regulated, you
have to monitor, depending on

5099
03:56:24,360 --> 03:56:25,720
changes country by country.

5100
03:56:25,720 --> 03:56:27,900
But there's anti-money
laundering.

5101
03:56:27,900 --> 03:56:31,050
There are initiatives that
governments put in place

5102
03:56:31,050 --> 03:56:35,730
really for consumer safety that,
with this anonymous new

5103
03:56:35,730 --> 03:56:38,310
digital currency, you lose.

5104
03:56:38,310 --> 03:56:44,050
So definitely, the identity
thread is an interesting one.

5105
03:56:44,050 --> 03:56:46,430
MANU SPORNY: You will not be
able to be anonymous when you

5106
03:56:46,430 --> 03:56:47,790
do a payment online.

5107
03:56:47,790 --> 03:56:50,570
It is going to be highly,
highly, highly unlikely your

5108
03:56:50,570 --> 03:56:53,810
government will not let that
happen, unless you rise

5109
03:56:53,810 --> 03:56:54,630
up and change it.

5110
03:56:54,630 --> 03:56:57,000
But if we look at history,
that doesn't happen.

5111
03:56:57,000 --> 03:56:58,820
NATASHA ROONEY: So actually,
I have a quick

5112
03:56:58,820 --> 03:57:00,670
questions to go over.

5113
03:57:00,670 --> 03:57:03,020
Talking about one-click payment,
is this something

5114
03:57:03,020 --> 03:57:07,260
that FireFox OS or Mozilla
are looking at generally?

5115
03:57:07,260 --> 03:57:10,860
And then, what if a user
decides to opt

5116
03:57:10,860 --> 03:57:11,980
in to Do Not Track.

5117
03:57:11,980 --> 03:57:15,150
And then, how does that work?

5118
03:57:15,150 --> 03:57:16,861
Oh, sorry.

5119
03:57:16,861 --> 03:57:19,600
KUMAR MCMILLAN: I mean,
one-tap payments are

5120
03:57:19,600 --> 03:57:22,990
definitely something that
mozPay wants to support.

5121
03:57:22,990 --> 03:57:25,820
Firefox Marketplace wants
to support it.

5122
03:57:25,820 --> 03:57:27,620
That doesn't mean it'll
work for everybody.

5123
03:57:27,620 --> 03:57:31,330
So that's a really much harder
problem to solve.

5124
03:57:31,330 --> 03:57:34,550
Amazon already does one-click
payments.

5125
03:57:34,550 --> 03:57:37,250
I mean, it's obviously very
possible on the web.

5126
03:57:37,250 --> 03:57:39,060
It's very easy to do.

5127
03:57:39,060 --> 03:57:42,550
I think, in the short term,
requestAutocomplete is the

5128
03:57:42,550 --> 03:57:43,730
best way to get there.

5129
03:57:43,730 --> 03:57:47,680
I think that's just the reality
of the web right now.

5130
03:57:47,680 --> 03:57:51,620
It's that every place takes a
credit card form, and carried

5131
03:57:51,620 --> 03:57:53,110
billing is a little bit
more complicated.

5132
03:57:53,110 --> 03:57:56,600
But with credit cards, you can
have requestAutocomplete

5133
03:57:56,600 --> 03:57:58,710
securely store your credit
card number.

5134
03:57:58,710 --> 03:58:00,160
And it's two clicks maybe.

5135
03:58:00,160 --> 03:58:05,120
But you could just tap the
button and say that, yes, fill

5136
03:58:05,120 --> 03:58:05,910
in my credit card.

5137
03:58:05,910 --> 03:58:06,640
And you're done.

5138
03:58:06,640 --> 03:58:09,210
And that's going to be a big
win for both sides, for

5139
03:58:09,210 --> 03:58:11,140
consumers and for
the merchants.

5140
03:58:11,140 --> 03:58:14,580
Because on mobile especially,
it's really hard to enter in

5141
03:58:14,580 --> 03:58:17,040
your credit card, if you
do it once on one site.

5142
03:58:17,040 --> 03:58:19,670
And if you have to do it an
infinite number of time for

5143
03:58:19,670 --> 03:58:21,700
each other site, that's
going to really suck.

5144
03:58:21,700 --> 03:58:24,810
MANU SPORNY: So I disagree,
partially.

5145
03:58:24,810 --> 03:58:26,640
I think you're right
in that it is-- and

5146
03:58:26,640 --> 03:58:27,560
you were very specific.

5147
03:58:27,560 --> 03:58:29,670
You said, in the short term,
that's probably going to be

5148
03:58:29,670 --> 03:58:30,830
the best solution,
requestAutocomplete.

5149
03:58:30,830 --> 03:58:32,200
And I totally agree with that.

5150
03:58:32,200 --> 03:58:35,830

5151
03:58:35,830 --> 03:58:37,610
And I don't think anyone on
the panel believes this.

5152
03:58:37,610 --> 03:58:40,600
But I think it would be
incredibly shortsighted for us

5153
03:58:40,600 --> 03:58:43,740
to stop there, to say that, this
is the way it should be

5154
03:58:43,740 --> 03:58:44,960
for the next five or 10 years.

5155
03:58:44,960 --> 03:58:48,640
We really need to fix the whole
credit card numbers

5156
03:58:48,640 --> 03:58:51,340
given to every single
merchant you visit

5157
03:58:51,340 --> 03:58:53,220
our on the web issue.

5158
03:58:53,220 --> 03:58:56,040
I mean, how many people in here
would tell your users, I

5159
03:58:56,040 --> 03:58:59,230
think you should use the exact
same password for every single

5160
03:58:59,230 --> 03:59:00,730
financial account
that you have.

5161
03:59:00,730 --> 03:59:02,910
And whenever you go to a
website, whenever you want to

5162
03:59:02,910 --> 03:59:05,340
spend money, you give
them your password.

5163
03:59:05,340 --> 03:59:06,580
That's your credit
card number.

5164
03:59:06,580 --> 03:59:07,340
CINDY: I'm going to jump in.

5165
03:59:07,340 --> 03:59:10,400
And that's where the Google
Wallet integration with

5166
03:59:10,400 --> 03:59:13,200
requestAutocomplete, especially
on the Chrome side,

5167
03:59:13,200 --> 03:59:16,690
does close that hole, because we
do use the virtual tokens.

5168
03:59:16,690 --> 03:59:19,360
So we do protect that user's
true credit card.

5169
03:59:19,360 --> 03:59:21,073
MANU SPORNY: But it's
proprietary to Google, right.

5170
03:59:21,073 --> 03:59:21,920
AUDIENCE: It is.

5171
03:59:21,920 --> 03:59:22,230
NATASHA ROONEY: OK.

5172
03:59:22,230 --> 03:59:24,780
We probably should take--

5173
03:59:24,780 --> 03:59:28,220
CINDY: But we are open to
integration with other browser

5174
03:59:28,220 --> 03:59:28,490
manufacturers.

5175
03:59:28,490 --> 03:59:30,180
NATASHA ROONEY: We
need to take some

5176
03:59:30,180 --> 03:59:32,810
questions from the floor.

5177
03:59:32,810 --> 03:59:36,500
Tede, so somebody can pass
Tede a mic, please.

5178
03:59:36,500 --> 03:59:39,620
CINDY: So I guess my question
kind of relates to the debate

5179
03:59:39,620 --> 03:59:41,430
that was just on.

5180
03:59:41,430 --> 03:59:42,600
But we've been talking about

5181
03:59:42,600 --> 03:59:44,305
responsiveness, legacy clients.

5182
03:59:44,305 --> 03:59:47,212
And it's great when we move to
world where there is an open

5183
03:59:47,212 --> 03:59:48,440
web standard for payments.

5184
03:59:48,440 --> 03:59:50,290
But right now, it's not that.

5185
03:59:50,290 --> 03:59:51,600
It's very fragmented.

5186
03:59:51,600 --> 03:59:53,280
Everyone is trying to push a

5187
03:59:53,280 --> 03:59:55,130
one-click solution to payments.

5188
03:59:55,130 --> 03:59:56,280
You have Amazon.

5189
03:59:56,280 --> 03:59:57,350
You have Strip.

5190
03:59:57,350 --> 03:59:59,280
Everyone is putting a
button on your page,

5191
03:59:59,280 --> 04:00:00,210
saying, pay with me.

5192
04:00:00,210 --> 04:00:04,450
And so now, for developers, our
payment form is just now

5193
04:00:04,450 --> 04:00:06,810
cluttered with pay
with everything.

5194
04:00:06,810 --> 04:00:10,170
So is there kind of strategy for
developers in a way that

5195
04:00:10,170 --> 04:00:13,150
we're not cutting into our
margins, because we're not

5196
04:00:13,150 --> 04:00:15,160
given the users the payment
method they want.

5197
04:00:15,160 --> 04:00:16,965
How do we balance that?

5198
04:00:16,965 --> 04:00:18,630
NATASHA ROONEY: Is this
a web-intense thing?

5199
04:00:18,630 --> 04:00:21,820
ROB GRIMSHAW: I've got to
endorse that comment, because

5200
04:00:21,820 --> 04:00:25,690
referring back onto so many of
these solutions for one-click

5201
04:00:25,690 --> 04:00:27,830
payment are essentially
proprietary.

5202
04:00:27,830 --> 04:00:30,430
And when you look at it from a
merchant's point of view, what

5203
04:00:30,430 --> 04:00:33,300
it amounts to is this sort of
smorgasbord of different

5204
04:00:33,300 --> 04:00:36,890
payment solutions that, one by
one, you have to kind of

5205
04:00:36,890 --> 04:00:40,020
integrate with your
own systems.

5206
04:00:40,020 --> 04:00:42,390
And each one just
delivers a tiny

5207
04:00:42,390 --> 04:00:44,660
fraction of extra payments.

5208
04:00:44,660 --> 04:00:47,120
And for a merchant like
this, which is

5209
04:00:47,120 --> 04:00:49,470
operating across borders--

5210
04:00:49,470 --> 04:00:52,360
we have subscribers
in 150 countries.

5211
04:00:52,360 --> 04:00:55,330
This is just a nightmare,
because many of these

5212
04:00:55,330 --> 04:00:58,320
solutions only work in one or
two or a select number of

5213
04:00:58,320 --> 04:00:59,870
territories.

5214
04:00:59,870 --> 04:01:03,780
And it's completely
impractical.

5215
04:01:03,780 --> 04:01:08,050
We are so far away from a
one-click solution which will

5216
04:01:08,050 --> 04:01:11,195
operate seamlessly around the
globe, for any merchant

5217
04:01:11,195 --> 04:01:12,600
really, at the moment.

5218
04:01:12,600 --> 04:01:15,575
And that's what we really need
to make things work.

5219
04:01:15,575 --> 04:01:16,230
NATASHA ROONEY: Yeah.

5220
04:01:16,230 --> 04:01:18,840
I was going to talk about
something around the intense

5221
04:01:18,840 --> 04:01:20,560
model, to be able to say,
I just want to pay.

5222
04:01:20,560 --> 04:01:22,290
And then, it's just your
chosen payment

5223
04:01:22,290 --> 04:01:23,110
method comes through.

5224
04:01:23,110 --> 04:01:25,930
But this is very similar along
the lines of what Facebook

5225
04:01:25,930 --> 04:01:27,260
tried with credits.

5226
04:01:27,260 --> 04:01:29,400
And then they came up against
the foreign exchange problem,

5227
04:01:29,400 --> 04:01:32,565
which anyone who's worked in
the financial markets will

5228
04:01:32,565 --> 04:01:34,790
know is just a complete
nightmare.

5229
04:01:34,790 --> 04:01:38,250
So your any other thoughts
on this topic?

5230
04:01:38,250 --> 04:01:40,750
MANU SPORNY: So I think Cindy
and Kumar are probably never

5231
04:01:40,750 --> 04:01:42,410
going to talk to me again
after this panel.

5232
04:01:42,410 --> 04:01:44,210
CINDY: You're slopping
dangerously close.

5233
04:01:44,210 --> 04:01:46,970
MANU SPORNY: Yes, I know,
by the hole too.

5234
04:01:46,970 --> 04:01:51,460
So I think the best thing that
web developers can do is put

5235
04:01:51,460 --> 04:01:55,200
some pressure on Google and
Mozilla and Paypal and Stripe

5236
04:01:55,200 --> 04:01:58,440
and tell them that you want some
kind of unified payment

5237
04:01:58,440 --> 04:02:01,590
mechanism that's
non-proprietary, on the web.

5238
04:02:01,590 --> 04:02:03,620
I honestly think that is
the best thing for

5239
04:02:03,620 --> 04:02:04,290
the web right now.

5240
04:02:04,290 --> 04:02:10,730
And I really, in your heart of
hearts, I think you agree.

5241
04:02:10,730 --> 04:02:12,560
CINDY: He's a tough salesman.

5242
04:02:12,560 --> 04:02:14,890
KUMAR MCMILLAN: What I think
is really interesting about

5243
04:02:14,890 --> 04:02:18,960
that this is, Mozilla and Google
are browser vendors.

5244
04:02:18,960 --> 04:02:20,720
And I actually don't think
we have a lot of

5245
04:02:20,720 --> 04:02:21,530
leverage to do this.

5246
04:02:21,530 --> 04:02:22,770
I think it needs to
come from banks.

5247
04:02:22,770 --> 04:02:24,710
MANU SPORNY: You do.

5248
04:02:24,710 --> 04:02:27,670
I was in Dubai at a banking
conference with all the major

5249
04:02:27,670 --> 04:02:28,220
world banks.

5250
04:02:28,220 --> 04:02:30,080
And they are absolutely
terrified of technology

5251
04:02:30,080 --> 04:02:31,960
companies coming in and stealing
their customers.

5252
04:02:31,960 --> 04:02:35,620
You have so much power
to change this.

5253
04:02:35,620 --> 04:02:38,095
You have so much power
to change this.

5254
04:02:38,095 --> 04:02:38,910
NATASHA ROONEY: OK.

5255
04:02:38,910 --> 04:02:41,910
Let's move back to the questions
from the floor.

5256
04:02:41,910 --> 04:02:45,500
Steve, here, if we can
get another mic--

5257
04:02:45,500 --> 04:02:49,757

5258
04:02:49,757 --> 04:02:51,500
AUDIENCE: I guess it was really
just a question about

5259
04:02:51,500 --> 04:02:55,320
what Manu said, that I can't
be anonymous on the web.

5260
04:02:55,320 --> 04:02:59,160
In the physical world, I can go
pay something with cash and

5261
04:02:59,160 --> 04:03:01,940
be completely anonymous.

5262
04:03:01,940 --> 04:03:03,840
Why would I want to give up--

5263
04:03:03,840 --> 04:03:06,360
why should I give up that
anonymity that I currently

5264
04:03:06,360 --> 04:03:08,510
have in a physical world?

5265
04:03:08,510 --> 04:03:10,230
MANU SPORNY: It's a very
good question.

5266
04:03:10,230 --> 04:03:11,860
You shouldn't if you
don't want to.

5267
04:03:11,860 --> 04:03:16,910
But I mean, we're
dealing with--

5268
04:03:16,910 --> 04:03:19,160
there's a lot of information
that's collected from

5269
04:03:19,160 --> 04:03:19,950
on us on the web.

5270
04:03:19,950 --> 04:03:21,720
If you don't want that
information collected on you,

5271
04:03:21,720 --> 04:03:23,360
don't get on the web.

5272
04:03:23,360 --> 04:03:26,750
We've got issues with PRISM, the
NSA, we know how easy it

5273
04:03:26,750 --> 04:03:28,000
is to tap this stuff.

5274
04:03:28,000 --> 04:03:30,030
It's very easy to track it,
even Bitcoin, which is

5275
04:03:30,030 --> 04:03:32,510
supposed to be this
pseudo-anonymous protocol,

5276
04:03:32,510 --> 04:03:36,040
people have been able to track
down spending habits, who's

5277
04:03:36,040 --> 04:03:37,010
spending money.

5278
04:03:37,010 --> 04:03:39,400
So for example, if someone
steals your Bitcoin wallet,

5279
04:03:39,400 --> 04:03:41,880
that money can't ever
be used, really.

5280
04:03:41,880 --> 04:03:46,810
Because if it's used and it's
tracked down to a shipping

5281
04:03:46,810 --> 04:03:49,940
address, then they
can find you.

5282
04:03:49,940 --> 04:03:51,410
You report your wallet
as stolen.

5283
04:03:51,410 --> 04:03:53,590
And any money coming out of that
wallet can be tracked to

5284
04:03:53,590 --> 04:03:56,250
the person that made of any
kind of physical purchase.

5285
04:03:56,250 --> 04:03:57,800
NATASHA ROONEY: Well, this
brings me back to the whole do

5286
04:03:57,800 --> 04:03:58,390
not track thing.

5287
04:03:58,390 --> 04:04:00,070
I'm still really quite
interested to know about how

5288
04:04:00,070 --> 04:04:03,830
this would work, with them a
mozPay system on FireFox OS,

5289
04:04:03,830 --> 04:04:05,780
because they're pushing
so much for that.

5290
04:04:05,780 --> 04:04:08,370
RICARDO VILLERO: I'll wait for
the mozPay one, if I can add

5291
04:04:08,370 --> 04:04:09,100
only one thing to this.

5292
04:04:09,100 --> 04:04:11,270
The problem, as we were saying
before, is basically, the

5293
04:04:11,270 --> 04:04:14,510
whole payments is based
on risk and trust.

5294
04:04:14,510 --> 04:04:15,630
And in this case, what
you're saying.

5295
04:04:15,630 --> 04:04:18,000
What you're doing in that
financial transaction in cash

5296
04:04:18,000 --> 04:04:21,150
with somebody is that, they
issuer, the person who's

5297
04:04:21,150 --> 04:04:24,410
generating the funds, AKA you
is making a transaction with

5298
04:04:24,410 --> 04:04:25,900
the merchant, which is,
at the same time, the

5299
04:04:25,900 --> 04:04:27,580
acquire, this person.

5300
04:04:27,580 --> 04:04:30,090
And this transaction occurs on
something that we both trust,

5301
04:04:30,090 --> 04:04:33,150
AKA government money, because we
both think that is actually

5302
04:04:33,150 --> 04:04:34,170
valuable money.

5303
04:04:34,170 --> 04:04:36,140
So this transaction has
occurred between us.

5304
04:04:36,140 --> 04:04:37,880
You actually gave away
your identity.

5305
04:04:37,880 --> 04:04:41,040
You gave away your identity to
this person who actually can

5306
04:04:41,040 --> 04:04:41,560
recognize you.

5307
04:04:41,560 --> 04:04:44,800
And he felt that this was enough
to establish trust.

5308
04:04:44,800 --> 04:04:46,735
So that's why they accepted
your money.

5309
04:04:46,735 --> 04:04:49,040
In the digital world, the
problem is that, this person

5310
04:04:49,040 --> 04:04:50,320
is a server down there.

5311
04:04:50,320 --> 04:04:52,320
And you are a browser,
somewhere down here.

5312
04:04:52,320 --> 04:04:55,340
And that trust has got to be
established between you two,

5313
04:04:55,340 --> 04:04:59,600
before those funds get changed
from your bank to their bank.

5314
04:04:59,600 --> 04:05:00,520
And that's kind of
the problem.

5315
04:05:00,520 --> 04:05:03,220
It's that, at that moment,
that other person, that

5316
04:05:03,220 --> 04:05:05,720
acquirer is going to only
trust something.

5317
04:05:05,720 --> 04:05:09,780
And in general, Google will
perfectly trust your Google

5318
04:05:09,780 --> 04:05:10,580
Wallet account.

5319
04:05:10,580 --> 04:05:13,380
Paypal will perfectly trust
your PayPal account.

5320
04:05:13,380 --> 04:05:15,850
And Mozilla will trust whichever
account you actually

5321
04:05:15,850 --> 04:05:17,810
have got to be configured
in mozPay.

5322
04:05:17,810 --> 04:05:22,105
But Google won't accept your
PayPal identity as being a

5323
04:05:22,105 --> 04:05:22,880
valid identity.

5324
04:05:22,880 --> 04:05:25,580
That is where the problem comes,
because they don't

5325
04:05:25,580 --> 04:05:29,070
establish trust based on
the other identity.

5326
04:05:29,070 --> 04:05:31,570
NATASHA ROONEY: We probably
should actually move forward.

5327
04:05:31,570 --> 04:05:32,720
So Tom, see if you've.

5328
04:05:32,720 --> 04:05:33,260
OK, good.

5329
04:05:33,260 --> 04:05:35,170
There we go.

5330
04:05:35,170 --> 04:05:36,550
AUDIENCE: Thanks.

5331
04:05:36,550 --> 04:05:41,080
I think, if I can distinguish
between anonymity and

5332
04:05:41,080 --> 04:05:42,710
confidentiality.

5333
04:05:42,710 --> 04:05:46,130
Somebody is coming to the
library to pay a $0.25 fine

5334
04:05:46,130 --> 04:05:47,210
for an overdue book.

5335
04:05:47,210 --> 04:05:50,030
And we don't want
anybody to know.

5336
04:05:50,030 --> 04:05:53,060
We know who that person is
because we know you checked

5337
04:05:53,060 --> 04:05:53,720
out the book.

5338
04:05:53,720 --> 04:05:55,740
But I don't want anybody
else to know that you

5339
04:05:55,740 --> 04:05:57,440
paid a fine on it.

5340
04:05:57,440 --> 04:06:02,208
Is there a way I can do
that online for $0.25?

5341
04:06:02,208 --> 04:06:03,080
KUMAR MCMILLAN: No.

5342
04:06:03,080 --> 04:06:04,690
ROB GRIMSHAW: No.

5343
04:06:04,690 --> 04:06:05,480
MANU SPORNY: Yes.

5344
04:06:05,480 --> 04:06:07,106
I mean, not yet.

5345
04:06:07,106 --> 04:06:08,360
I think there is.

5346
04:06:08,360 --> 04:06:12,000
If you use Bitcoin to do it
and you create a one-off

5347
04:06:12,000 --> 04:06:13,700
wallet, you could
do that payment.

5348
04:06:13,700 --> 04:06:16,730
But I mean, it's very difficult
to do that,

5349
04:06:16,730 --> 04:06:20,350
technically possible, not very
feasible, which I think is the

5350
04:06:20,350 --> 04:06:22,185
answer they were giving.

5351
04:06:22,185 --> 04:06:24,410
It's not a good user
experience.

5352
04:06:24,410 --> 04:06:25,390
NATASHA ROONEY: Oh, sorry, Rob.

5353
04:06:25,390 --> 04:06:25,920
You go.

5354
04:06:25,920 --> 04:06:27,360
ROB GRIMSHAW: Some of the
stuff is not about the

5355
04:06:27,360 --> 04:06:28,150
technology.

5356
04:06:28,150 --> 04:06:32,040
I think governments around the
globe are attacking anonymity

5357
04:06:32,040 --> 04:06:35,260
in the financial system, on
all fronts, for issues of

5358
04:06:35,260 --> 04:06:37,625
taxation, money laundering,
et cetera.

5359
04:06:37,625 --> 04:06:41,140
And I don't think that effort
is going to stop.

5360
04:06:41,140 --> 04:06:45,010
And as we move into an
electronics payments world, I

5361
04:06:45,010 --> 04:06:47,640
don't think they're going
to allow big channels of

5362
04:06:47,640 --> 04:06:49,410
anonymous payments,
whether it's

5363
04:06:49,410 --> 04:06:50,915
technically possible or not.

5364
04:06:50,915 --> 04:06:51,580
NATASHA ROONEY: All right.

5365
04:06:51,580 --> 04:06:53,410
We should move on now.

5366
04:06:53,410 --> 04:06:56,740
I'm liking what people are
managing to get on the-- here

5367
04:06:56,740 --> 04:06:58,130
we have money bags and
Scrooge McDuck.

5368
04:06:58,130 --> 04:07:00,520
CINDY: Is this the
end of the day?

5369
04:07:00,520 --> 04:07:01,690
Am I Scrooge McDuck?

5370
04:07:01,690 --> 04:07:03,845
Brilliant, that's fantastic.

5371
04:07:03,845 --> 04:07:05,600
I see how it is.

5372
04:07:05,600 --> 04:07:08,130
I kind of wish that was the
case, unfortunately not.

5373
04:07:08,130 --> 04:07:11,130
So Matt Andrews, if you'd stick
up your had for the next

5374
04:07:11,130 --> 04:07:12,380
question, please.

5375
04:07:12,380 --> 04:07:15,616

5376
04:07:15,616 --> 04:07:17,470
AUDIENCE: Here's another
anonymous question.

5377
04:07:17,470 --> 04:07:19,250
I think it's pretty been
done to death.

5378
04:07:19,250 --> 04:07:20,750
But here we go.

5379
04:07:20,750 --> 04:07:23,020
What are the possibilities for
decentralized peer-to-peer

5380
04:07:23,020 --> 04:07:26,160
payments, and what security
considerations are involved in

5381
04:07:26,160 --> 04:07:27,250
doing this?

5382
04:07:27,250 --> 04:07:28,780
NATASHA ROONEY: So decentralized
peer-to-peer

5383
04:07:28,780 --> 04:07:31,630
payments, and what security
considerations are involved in

5384
04:07:31,630 --> 04:07:33,460
doing this, going back
to a similar think.

5385
04:07:33,460 --> 04:07:35,000
Kumar, do you want to start
us off on this?

5386
04:07:35,000 --> 04:07:35,760
KUMAR MCMILLAN: Sure.

5387
04:07:35,760 --> 04:07:38,540
Well, I've been sort of in the
realm of Firefox OS, which is

5388
04:07:38,540 --> 04:07:39,760
a mobile operating system.

5389
04:07:39,760 --> 04:07:43,840
And it's really hard, on
mobile devices, to do

5390
04:07:43,840 --> 04:07:47,840
something to get to a
decentralized place like that.

5391
04:07:47,840 --> 04:07:52,610
We would need the Web Crypto
API to land, so that we can

5392
04:07:52,610 --> 04:07:55,890
make sure that things are
very secure and even

5393
04:07:55,890 --> 04:07:59,340
in memory are secure.

5394
04:07:59,340 --> 04:08:03,520
maybe And another API which is
coming is to access a secure

5395
04:08:03,520 --> 04:08:08,870
element, on certain Sim cards,
where you can actually do sort

5396
04:08:08,870 --> 04:08:11,350
of public key exchange
type of things.

5397
04:08:11,350 --> 04:08:14,020
All those technologies
are needed.

5398
04:08:14,020 --> 04:08:19,310
But at the end of the day, you
could still route a device, if

5399
04:08:19,310 --> 04:08:20,170
you were to steal it.

5400
04:08:20,170 --> 04:08:22,700
And then, you can get access
to a lot of things.

5401
04:08:22,700 --> 04:08:24,650
So I think we're
pretty far off.

5402
04:08:24,650 --> 04:08:28,270
But I think that's what
would need to happen.

5403
04:08:28,270 --> 04:08:31,560
It would have to be something
that's would have to be this

5404
04:08:31,560 --> 04:08:32,560
bulletproof device.

5405
04:08:32,560 --> 04:08:35,840
Because also, if it's completely
decentralized, that

5406
04:08:35,840 --> 04:08:38,690
means that you're paying
with a device.

5407
04:08:38,690 --> 04:08:40,820
And let's say, it's Bitcoin
or something.

5408
04:08:40,820 --> 04:08:42,710
And it's not backed up on
a server because it's

5409
04:08:42,710 --> 04:08:43,910
decentralized.

5410
04:08:43,910 --> 04:08:45,610
You might lose that device.

5411
04:08:45,610 --> 04:08:47,330
And then you lose
all your money.

5412
04:08:47,330 --> 04:08:48,770
And maybe there's some
way to distribute

5413
04:08:48,770 --> 04:08:50,440
that across many nodes.

5414
04:08:50,440 --> 04:08:54,476
I don't know, but
hard problem.

5415
04:08:54,476 --> 04:08:56,730
NATASHA ROONEY: Sort of against
the cloud pattern that

5416
04:08:56,730 --> 04:08:58,890
seems to be happening with
lots of things, I guess.

5417
04:08:58,890 --> 04:09:01,811
Any other points on that--

5418
04:09:01,811 --> 04:09:05,390
MANU SPORNY: I mean, there
are already decentralized

5419
04:09:05,390 --> 04:09:07,090
peer-to-peer payment
systems on the web.

5420
04:09:07,090 --> 04:09:09,110
Bitcoin and Ripple
are two of them.

5421
04:09:09,110 --> 04:09:10,210
You can use them.

5422
04:09:10,210 --> 04:09:11,280
They're online wallets.

5423
04:09:11,280 --> 04:09:14,360
So you have to be able to get
to some website to run the

5424
04:09:14,360 --> 04:09:15,550
transaction.

5425
04:09:15,550 --> 04:09:17,790
But the protocols work.

5426
04:09:17,790 --> 04:09:19,830
I mean, the Bitcoin has been
under attack, since

5427
04:09:19,830 --> 04:09:20,730
it ever came out.

5428
04:09:20,730 --> 04:09:26,640
And by really smart people in
crypto and security areas.

5429
04:09:26,640 --> 04:09:29,430
And no one has really
broken the protocol.

5430
04:09:29,430 --> 04:09:31,500
So I think they're here.

5431
04:09:31,500 --> 04:09:34,040
It's just, the idea of it being
integrated directly into

5432
04:09:34,040 --> 04:09:36,390
the browser is probably--

5433
04:09:36,390 --> 04:09:40,040
I would expect that would never
happen, at least not for

5434
04:09:40,040 --> 04:09:41,140
the next 10 to 15 years.

5435
04:09:41,140 --> 04:09:44,260
Because the risk you run when
you put it into a browsers is,

5436
04:09:44,260 --> 04:09:45,910
you have to end up supporting
it forever.

5437
04:09:45,910 --> 04:09:47,630
And I don't think any of the
browser-- and I don't think it

5438
04:09:47,630 --> 04:09:49,890
would be smart for any of the
browser vendors to build that

5439
04:09:49,890 --> 04:09:53,770
technology in right now, which
is why the Firefox Marketplace

5440
04:09:53,770 --> 04:09:56,640
and Telefonica are taking
the approach they

5441
04:09:56,640 --> 04:09:58,910
are on these APIs.

5442
04:09:58,910 --> 04:10:01,850
They're trying to be very
generic and not trying to be

5443
04:10:01,850 --> 04:10:06,835
king makers, when it comes
to payment technologies.

5444
04:10:06,835 --> 04:10:08,716
It's the right way to do it.

5445
04:10:08,716 --> 04:10:09,740
NATASHA ROONEY: Fantastic.

5446
04:10:09,740 --> 04:10:11,460
Let's take another question.

5447
04:10:11,460 --> 04:10:14,985
So Adam Sontag, if you're
in the room, put up--

5448
04:10:14,985 --> 04:10:16,925
I think he's over there.

5449
04:10:16,925 --> 04:10:23,230

5450
04:10:23,230 --> 04:10:27,880
CINDY: So this is an anonymous
question that, at the request

5451
04:10:27,880 --> 04:10:32,460
of Jake Archibald, I have
mildly reformatted into

5452
04:10:32,460 --> 04:10:33,660
rhyming verse.

5453
04:10:33,660 --> 04:10:38,450
So one question that still needs
distilling is, wha't the

5454
04:10:38,450 --> 04:10:40,930
feasibility of operator
billing.

5455
04:10:40,930 --> 04:10:45,350
And given that phone prefer
Wi-Fi to cell, will I have to

5456
04:10:45,350 --> 04:10:47,700
forget this network
to buy and sell?

5457
04:10:47,700 --> 04:10:54,574

5458
04:10:54,574 --> 04:10:57,690
RICARDO VILLERO: Very
impressive, by the way-- so my

5459
04:10:57,690 --> 04:10:59,540
skill is not enough to actually
answer you in verse,

5460
04:10:59,540 --> 04:11:00,490
I'm afraid.

5461
04:11:00,490 --> 04:11:03,120
But definitely, integrative
billing is something that is

5462
04:11:03,120 --> 04:11:04,130
widely used now.

5463
04:11:04,130 --> 04:11:06,710
We are also, for people who
are not familiar, in the

5464
04:11:06,710 --> 04:11:07,950
middle of a change
of technology.

5465
04:11:07,950 --> 04:11:10,880
So we went from premium SMS,
which is essentially charging

5466
04:11:10,880 --> 04:11:12,450
you for an SMS message--

5467
04:11:12,450 --> 04:11:16,090
very clunky, had lots of
messages, really high revenue

5468
04:11:16,090 --> 04:11:18,660
share for the operator because
it was a really old technology

5469
04:11:18,660 --> 04:11:20,590
used to sell ring tones
and things like that.

5470
04:11:20,590 --> 04:11:23,450
So not as good as
direct-operator billing, which

5471
04:11:23,450 --> 04:11:26,510
is essentially, you make a call
to an API, which is more,

5472
04:11:26,510 --> 04:11:28,440
hello, 21st century.

5473
04:11:28,440 --> 04:11:31,170
And basically, you send me an
amount and a phone number.

5474
04:11:31,170 --> 04:11:34,060
And the phone number acts as,
basically, the user account.

5475
04:11:34,060 --> 04:11:35,310
That is working now.

5476
04:11:35,310 --> 04:11:36,910
Actually, you can pay
with that in Google.

5477
04:11:36,910 --> 04:11:38,580
You can pay in RIM, in Nokia.

5478
04:11:38,580 --> 04:11:41,070
In BlueVia, we work with at
least 20-something different

5479
04:11:41,070 --> 04:11:43,500
providers, including Mozilla.

5480
04:11:43,500 --> 04:11:45,500
And basically, that
is what modern

5481
04:11:45,500 --> 04:11:47,290
operator billing is about.

5482
04:11:47,290 --> 04:11:49,770
The problem that I see with
modern operator billing is

5483
04:11:49,770 --> 04:11:52,800
that, modern operator billing
was thought to be something

5484
04:11:52,800 --> 04:11:54,990
that you negotiate
with an operator.

5485
04:11:54,990 --> 04:11:56,630
So you negotiate with O2.

5486
04:11:56,630 --> 04:11:58,460
Then you go and negotiate
with Vodafone.

5487
04:11:58,460 --> 04:12:00,840
Then you go and negotiate
with Telefonica.

5488
04:12:00,840 --> 04:12:04,100
And the problem there is that,
you have to close one account

5489
04:12:04,100 --> 04:12:05,320
for each of these things.

5490
04:12:05,320 --> 04:12:07,680
So one of the things that we
actually tried to stop with

5491
04:12:07,680 --> 04:12:10,450
BlueVia to give, to the
Telefonica group, just one

5492
04:12:10,450 --> 04:12:12,190
connection for all
those billings.

5493
04:12:12,190 --> 04:12:15,700
So do what Visa does in the
case of banks, where you

5494
04:12:15,700 --> 04:12:17,570
basically take Visa payments.

5495
04:12:17,570 --> 04:12:20,000
You don't take Lloyd's,
NatWest, Barclays, and

5496
04:12:20,000 --> 04:12:21,480
whatnot, don't know
what payments.

5497
04:12:21,480 --> 04:12:23,590
You take payments
from a network.

5498
04:12:23,590 --> 04:12:26,330
So I think that is the step
that we have missing.

5499
04:12:26,330 --> 04:12:29,205
But actually, you can do charges
to a phone number now

5500
04:12:29,205 --> 04:12:30,050
with modern technology.

5501
04:12:30,050 --> 04:12:32,040
NATASHA ROONEY: One of the
functions is, though, this

5502
04:12:32,040 --> 04:12:33,280
issue of being over Wi-Fi.

5503
04:12:33,280 --> 04:12:37,680
It's that an operator cannot
recognize you as a user, if

5504
04:12:37,680 --> 04:12:39,145
you're on a Wi-Fi network,
correct?

5505
04:12:39,145 --> 04:12:41,010
RICARDO VILLERO: You only need
to know what's the phone

5506
04:12:41,010 --> 04:12:41,800
number of the user.

5507
04:12:41,800 --> 04:12:44,410
And that can happen in a
one-time transaction, which

5508
04:12:44,410 --> 04:12:45,940
is, for example, how
google does it.

5509
04:12:45,940 --> 04:12:47,310
It's how Mozilla does it.

5510
04:12:47,310 --> 04:12:50,720
Basically, operators have
multiple ways of recognizing

5511
04:12:50,720 --> 04:12:51,640
what phone number you're in.

5512
04:12:51,640 --> 04:12:53,320
For a start, you're connected
to a base station.

5513
04:12:53,320 --> 04:12:56,210
So we if we are giving you
service, we know your number.

5514
04:12:56,210 --> 04:12:59,490
So if you're connected to a
normal network, you can

5515
04:12:59,490 --> 04:13:01,240
identify the user through
the network.

5516
04:13:01,240 --> 04:13:04,500
If they're connected in Wi-Fi,
then you do a fallback to SMS,

5517
04:13:04,500 --> 04:13:07,090
which normally mean either
you send an SMS to the

5518
04:13:07,090 --> 04:13:08,560
device with a code.

5519
04:13:08,560 --> 04:13:12,250
Or you make the device send
you an SMS, and then you

5520
04:13:12,250 --> 04:13:12,720
receive it.

5521
04:13:12,720 --> 04:13:14,410
In both cases, you establish
what is the

5522
04:13:14,410 --> 04:13:15,510
number of the user.

5523
04:13:15,510 --> 04:13:17,900
And then you can guess use
that again and again.

5524
04:13:17,900 --> 04:13:20,630
We have a specific API built
for this in BlueVia.

5525
04:13:20,630 --> 04:13:22,780
In other operators, you have
to do it more manually.

5526
04:13:22,780 --> 04:13:24,115
But you can that.

5527
04:13:24,115 --> 04:13:26,290
KUMAR MCMILLAN: And to be clear,
you can do it again and

5528
04:13:26,290 --> 04:13:28,710
again because it just stores
a cookie on-device.

5529
04:13:28,710 --> 04:13:31,390
I mean, the cookie lasts 30 days
or something like that.

5530
04:13:31,390 --> 04:13:33,050
And when you're on Wi-Fi,
it reads the cookies.

5531
04:13:33,050 --> 04:13:34,345
So you know you're
authenticated.

5532
04:13:34,345 --> 04:13:38,120

5533
04:13:38,120 --> 04:13:39,540
NATASHA ROONEY: Fantastic.

5534
04:13:39,540 --> 04:13:42,510
So enough can I be
Montgomery Burns,

5535
04:13:42,510 --> 04:13:43,800
please, this time, yeah?

5536
04:13:43,800 --> 04:13:45,930
Awesome.

5537
04:13:45,930 --> 04:13:47,930
It's getting better.

5538
04:13:47,930 --> 04:13:49,190
We only have five
minutes left.

5539
04:13:49,190 --> 04:13:50,800
So I kind of want
to close on a--

5540
04:13:50,800 --> 04:13:52,345
we have a room of technologists
here.

5541
04:13:52,345 --> 04:13:55,200
And I'd like to focus on a
little bit of the standards, a

5542
04:13:55,200 --> 04:13:56,870
little bit of what we can do.

5543
04:13:56,870 --> 04:14:00,470
So if we just go around and have
a little bit of a chat.

5544
04:14:00,470 --> 04:14:04,010
If you could all give one minute
on what we could do

5545
04:14:04,010 --> 04:14:08,940
you, as developers, to push to
the ideal payment solution--

5546
04:14:08,940 --> 04:14:11,590
and Kumar, I'm afraid I'm
going to start with you.

5547
04:14:11,590 --> 04:14:13,550
KUMAR MCMILLAN: Sure.

5548
04:14:13,550 --> 04:14:14,880
As developers--

5549
04:14:14,880 --> 04:14:17,030
NATASHA ROONEY: Or
standardizers.

5550
04:14:17,030 --> 04:14:19,010
KUMAR MCMILLAN: Yeah,
that's a tricky one.

5551
04:14:19,010 --> 04:14:22,370
I do think, as I mentioned
before, I think to a really

5552
04:14:22,370 --> 04:14:24,780
have a sort of federated payment
system, where anyone

5553
04:14:24,780 --> 04:14:29,730
can pay with any currency and
any merchant can accept money

5554
04:14:29,730 --> 04:14:35,960
from anywhere, I think some API
needs to be agreed upon

5555
04:14:35,960 --> 04:14:39,050
and implemented by
banks or maybe a

5556
04:14:39,050 --> 04:14:40,950
clearinghouse in front of banks.

5557
04:14:40,950 --> 04:14:44,510
And I don't think the browser
vendors can do that.

5558
04:14:44,510 --> 04:14:47,680
So I have strayed from
the topic of what

5559
04:14:47,680 --> 04:14:48,730
developers can do.

5560
04:14:48,730 --> 04:14:50,450
I still don't know what
developers can do.

5561
04:14:50,450 --> 04:14:53,125

5562
04:14:53,125 --> 04:14:54,272
NATASHA ROONEY: Ricardo--

5563
04:14:54,272 --> 04:14:57,110
RICARDO VILLERO: Well, I think
that, for a start, we have add

5564
04:14:57,110 --> 04:14:59,460
more realistic expectations
in all of this.

5565
04:14:59,460 --> 04:15:03,230
I think, judging from the work
that we did in WAC, where you

5566
04:15:03,230 --> 04:15:07,740
tried to do mobile billing, in
this case, for 40-something

5567
04:15:07,740 --> 04:15:08,860
operators across the globe.

5568
04:15:08,860 --> 04:15:11,960
And this includes Asia and
Africa and Latin America.

5569
04:15:11,960 --> 04:15:14,020
There's no way you can sync
all of those things.

5570
04:15:14,020 --> 04:15:15,390
It's too big a problem.

5571
04:15:15,390 --> 04:15:17,810
However, you can start
in smaller areas.

5572
04:15:17,810 --> 04:15:19,460
So you take something like
the European Union.

5573
04:15:19,460 --> 04:15:21,950
The European Union is about to
standardize on a series of

5574
04:15:21,950 --> 04:15:23,560
measures, called SEPA.

5575
04:15:23,560 --> 04:15:26,770
You could do, in theory, some
hub for the European Union,

5576
04:15:26,770 --> 04:15:29,760
with a specific protocol that
works across all the providers

5577
04:15:29,760 --> 04:15:30,830
in the European Union.

5578
04:15:30,830 --> 04:15:32,290
Obviously, it won't work
in Latin America.

5579
04:15:32,290 --> 04:15:33,155
It won't work in China.

5580
04:15:33,155 --> 04:15:34,440
But it's something.

5581
04:15:34,440 --> 04:15:36,620
So we start trying to
standardize there.

5582
04:15:36,620 --> 04:15:39,130
And we try to push for a
standard API or a standard way

5583
04:15:39,130 --> 04:15:42,270
that different providers can
implement that there, which is

5584
04:15:42,270 --> 04:15:43,110
how it normally happens.

5585
04:15:43,110 --> 04:15:45,750
Banks didn't go and try to
standardize on this type of

5586
04:15:45,750 --> 04:15:46,540
thing worldwide.

5587
04:15:46,540 --> 04:15:49,100
They standardize in the European
Union, more or less.

5588
04:15:49,100 --> 04:15:50,780
And then, let's see
how it extends.

5589
04:15:50,780 --> 04:15:51,770
Or you do two networks.

5590
04:15:51,770 --> 04:15:54,650
And then we talk among protocol,
among our networks.

5591
04:15:54,650 --> 04:15:55,480
That would be fine.

5592
04:15:55,480 --> 04:15:57,180
The thing is, that you
need those initial

5593
04:15:57,180 --> 04:15:58,320
solutions to be there.

5594
04:15:58,320 --> 04:16:02,240
So requestAutocomplete or mozPay
are initial tries of

5595
04:16:02,240 --> 04:16:04,290
getting to that standard API.

5596
04:16:04,290 --> 04:16:06,940
Just use them, feedback to them
into saying, I'm lacking

5597
04:16:06,940 --> 04:16:07,370
this thing.

5598
04:16:07,370 --> 04:16:09,180
So requestAutocomplete doesn't
support [INAUDIBLE] billing.

5599
04:16:09,180 --> 04:16:11,860
MozPay, we're going to do
another iteration now, which

5600
04:16:11,860 --> 04:16:14,520
everything that we have just
feed back to that and start

5601
04:16:14,520 --> 04:16:18,780
with that smaller goal, before
we get to the bigger goal.

5602
04:16:18,780 --> 04:16:21,090
ROB GRIMSHAW: I'm actually very
excited about some of the

5603
04:16:21,090 --> 04:16:23,340
things that Ricardo
is talking about.

5604
04:16:23,340 --> 04:16:26,390
I believe, fundamentally, that
the solutions are going to be

5605
04:16:26,390 --> 04:16:28,970
mobile based, ultimately.

5606
04:16:28,970 --> 04:16:31,260
We're almost to the point where,
there are more mobile

5607
04:16:31,260 --> 04:16:34,170
devices than people
on the planet.

5608
04:16:34,170 --> 04:16:36,290
There are far more people with
mobiles that there are with

5609
04:16:36,290 --> 04:16:38,960
bank accounts, for example.

5610
04:16:38,960 --> 04:16:42,750
And if some of the things that
Ricardo is talking about, i.e.

5611
04:16:42,750 --> 04:16:48,760
the development of a sort of
global standard network for

5612
04:16:48,760 --> 04:16:52,780
payments, across major mobile
operators can develop.

5613
04:16:52,780 --> 04:16:57,160
Then I can see how a merchant
like us can take payments on

5614
04:16:57,160 --> 04:17:01,850
mobile devices, potentially from
a marketplace of billions

5615
04:17:01,850 --> 04:17:03,340
of people around the globe.

5616
04:17:03,340 --> 04:17:05,450
And that's very,
very exciting.

5617
04:17:05,450 --> 04:17:06,660
And if you think about
it, what you've

5618
04:17:06,660 --> 04:17:08,550
got there is a chain.

5619
04:17:08,550 --> 04:17:11,320
All these devices, in some way,
are linked up to a source

5620
04:17:11,320 --> 04:17:13,480
of value, whether that's a bank
account or whether that's

5621
04:17:13,480 --> 04:17:15,130
a prepay or whatever.

5622
04:17:15,130 --> 04:17:19,280
The chain of value is already
there, if you can create the

5623
04:17:19,280 --> 04:17:22,980
standard across the top of it,
maybe starting in the US or

5624
04:17:22,980 --> 04:17:26,470
whatever, which then a merchant
like us can then hook

5625
04:17:26,470 --> 04:17:29,095
into, that can deliver
the solution.

5626
04:17:29,095 --> 04:17:32,490
And I don't think you have to
think about Utopian scenarios,

5627
04:17:32,490 --> 04:17:33,590
in order to get there.

5628
04:17:33,590 --> 04:17:36,760
It's not difficult to see how
this step can be taken.

5629
04:17:36,760 --> 04:17:40,050
NATASHA ROONEY: Yes, so from
my point of view, I think

5630
04:17:40,050 --> 04:17:42,430
that's an important issue.

5631
04:17:42,430 --> 04:17:44,760
Lots of users think about what
would be great for the users.

5632
04:17:44,760 --> 04:17:47,200
And I think, the way you're
going to get the thing that

5633
04:17:47,200 --> 04:17:51,000
you want as a user is to
influence from a merchant

5634
04:17:51,000 --> 04:17:53,600
standpoint or from the bank
standpoint or from the

5635
04:17:53,600 --> 04:17:54,810
standardization standpoint.

5636
04:17:54,810 --> 04:17:55,960
And that's my takeaway.

5637
04:17:55,960 --> 04:17:57,660
It's that, OK, if you
want your user

5638
04:17:57,660 --> 04:17:58,550
goals, you go for it.

5639
04:17:58,550 --> 04:18:00,990
But you put a slant on it and
sell it up to those other

5640
04:18:00,990 --> 04:18:04,060
people, that makes them think
they're getting something when

5641
04:18:04,060 --> 04:18:05,500
you're actually getting
something.

5642
04:18:05,500 --> 04:18:07,850
And that's the way to
get where you want--

5643
04:18:07,850 --> 04:18:09,930
so lifestyle tips.

5644
04:18:09,930 --> 04:18:11,185
Manu, go for it.

5645
04:18:11,185 --> 04:18:14,470
MANU SPORNY: So anybody in
here that's interested in

5646
04:18:14,470 --> 04:18:16,630
payments, the thing that you
could do is join the Web

5647
04:18:16,630 --> 04:18:18,400
Payments Group, join
the discussion.

5648
04:18:18,400 --> 04:18:19,390
It's completely open.

5649
04:18:19,390 --> 04:18:22,150
Anyone can join and
participate.

5650
04:18:22,150 --> 04:18:25,900
Educate yourself about it and
help us actually figure out

5651
04:18:25,900 --> 04:18:30,260
what standards to build, what to
build it that you can use.

5652
04:18:30,260 --> 04:18:32,920
The only other point I wanted
to kind of make is, playing

5653
04:18:32,920 --> 04:18:36,220
off of Kumar's bank-based
thing.

5654
04:18:36,220 --> 04:18:38,890
I did spend the last week
at the World Banking

5655
04:18:38,890 --> 04:18:40,985
Conference in Dubai.

5656
04:18:40,985 --> 04:18:43,070
No bank is working on this.

5657
04:18:43,070 --> 04:18:44,400
I guarantee you.

5658
04:18:44,400 --> 04:18:46,910
I had a high-level, low-level,
all kinds of

5659
04:18:46,910 --> 04:18:48,920
discussions with them.

5660
04:18:48,920 --> 04:18:52,010
The standard bank system is
written in COBOL or Fortran.

5661
04:18:52,010 --> 04:18:55,850
It was implemented in
1987 through 1992.

5662
04:18:55,850 --> 04:18:57,740
They're still running
that code base.

5663
04:18:57,740 --> 04:19:01,010
They're absolutely mortified
of doing any kind of large

5664
04:19:01,010 --> 04:19:02,050
change to their system.

5665
04:19:02,050 --> 04:19:04,920
So this solution is not going
to come from the banks.

5666
04:19:04,920 --> 04:19:07,200
It could come from the
mobile operators.

5667
04:19:07,200 --> 04:19:11,610
It could come from the
people like Google

5668
04:19:11,610 --> 04:19:13,470
Wallet, Paypal, Stripe.

5669
04:19:13,470 --> 04:19:16,060
But at some point, all of us
are going to have to band

5670
04:19:16,060 --> 04:19:19,310
together in some kind of clump
and push something forward.

5671
04:19:19,310 --> 04:19:20,530
It's definitely not going
to be the banks

5672
04:19:20,530 --> 04:19:21,300
that do that though.

5673
04:19:21,300 --> 04:19:22,640
NATASHA ROONEY: So throw
yourself into the

5674
04:19:22,640 --> 04:19:23,610
standardization.

5675
04:19:23,610 --> 04:19:24,530
And finally, Cindy--

5676
04:19:24,530 --> 04:19:25,770
CINDY: Real quick, because
I know everyone

5677
04:19:25,770 --> 04:19:26,980
is ready to be done.

5678
04:19:26,980 --> 04:19:31,450
So just really use mozPay,
use requestAutocomplete.

5679
04:19:31,450 --> 04:19:34,180
Even though it is technology
from the '70s, it is what

5680
04:19:34,180 --> 04:19:36,200
everyone is still using.

5681
04:19:36,200 --> 04:19:39,740
And there's plenty of room to
improve that '70s technology

5682
04:19:39,740 --> 04:19:43,150
experience on the web, as we try
and lay a foundation and

5683
04:19:43,150 --> 04:19:46,520
segue into more different
technologies.

5684
04:19:46,520 --> 04:19:49,250
But definitely
requestAutocomplete, mozPay--

5685
04:19:49,250 --> 04:19:52,020
participate, we are trying
to make it better.

5686
04:19:52,020 --> 04:19:53,030
NATASHA ROONEY: Excellent.

5687
04:19:53,030 --> 04:19:53,900
So that's our stand.

5688
04:19:53,900 --> 04:19:55,200
Thank you so much to
the panelists.

5689
04:19:55,200 --> 04:19:58,000

5690
04:19:58,000 --> 04:20:04,525
[APPLAUSE]

5691
04:20:04,525 --> 04:20:06,380
ANDREW BETTS: So I
think we're done.

5692
04:20:06,380 --> 04:20:10,630
I just have a few wrap up things
to do, including giving

5693
04:20:10,630 --> 04:20:11,450
out some prizes.

5694
04:20:11,450 --> 04:20:13,900
So don't go anywhere, because
you don't get a prize unless

5695
04:20:13,900 --> 04:20:17,950
you are in the room A couple
of other things,

5696
04:20:17,950 --> 04:20:18,940
sorry about the noise.

5697
04:20:18,940 --> 04:20:20,600
Nothing we could do about it,
I think Google is building a

5698
04:20:20,600 --> 04:20:23,810
new tree house or something.

5699
04:20:23,810 --> 04:20:27,260
So a few thank yous--

5700
04:20:27,260 --> 04:20:30,910
I think the biggest thanks I
want to give is to Peter Page

5701
04:20:30,910 --> 04:20:33,878
who's behind me, frantically
doing some presentation work.

5702
04:20:33,878 --> 04:20:39,700
He tirelessly did all the
logistics for Edge, including

5703
04:20:39,700 --> 04:20:43,390
all of the venue stuff that's
been going on today.

5704
04:20:43,390 --> 04:20:47,630
And Wes, who's over here, who
wrote, OnSlyde, basically from

5705
04:20:47,630 --> 04:20:48,880
scratch for this event.

5706
04:20:48,880 --> 04:20:54,060

5707
04:20:54,060 --> 04:20:56,830
And I think we can all agree
that even though it might be

5708
04:20:56,830 --> 04:21:00,085
slightly gameable, it
works pretty well.

5709
04:21:00,085 --> 04:21:03,340

5710
04:21:03,340 --> 04:21:07,850
And yes, so I'm going to just
switch to my slides, if these

5711
04:21:07,850 --> 04:21:08,800
are working.

5712
04:21:08,800 --> 04:21:10,080
Yes.

5713
04:21:10,080 --> 04:21:12,360
So the first thing and
most important thing

5714
04:21:12,360 --> 04:21:14,570
is to give out prizes.

5715
04:21:14,570 --> 04:21:16,590
We also, of course, are
supporting Girls Who Code.

5716
04:21:16,590 --> 04:21:19,670
So we'll just cover that off.

5717
04:21:19,670 --> 04:21:21,010
Then we have dinner.

5718
04:21:21,010 --> 04:21:22,500
And then we have party.

5719
04:21:22,500 --> 04:21:25,760
So all of these agenda items
are fairly important.

5720
04:21:25,760 --> 04:21:28,350
So first of all, I said,
we were doing

5721
04:21:28,350 --> 04:21:30,370
some prizes for feedback.

5722
04:21:30,370 --> 04:21:31,520
I cocked this up terribly.

5723
04:21:31,520 --> 04:21:34,510
I didn't tick the box that said
I wanted to know who had

5724
04:21:34,510 --> 04:21:36,200
left the feedback.

5725
04:21:36,200 --> 04:21:39,620
So I have no idea who
any of them are.

5726
04:21:39,620 --> 04:21:42,540
I've now ticked the box, so
please do leave feedback.

5727
04:21:42,540 --> 04:21:44,152
AUDIENCE: If I'm not
going to get a

5728
04:21:44,152 --> 04:21:44,890
Chromebook, then for feedback.

5729
04:21:44,890 --> 04:21:45,920
ANDREW BETTS: You're not going
to get a Chromebook, sorry.

5730
04:21:45,920 --> 04:21:47,180
But I still want to
know the feedback.

5731
04:21:47,180 --> 04:21:48,850
So we're going to do random
draw instead.

5732
04:21:48,850 --> 04:21:53,300
So I loaded up Eventbrite, did
some query selector all, with

5733
04:21:53,300 --> 04:21:57,370
some random node selection
on our attendee list.

5734
04:21:57,370 --> 04:21:59,640
And we came up with some
random drawings.

5735
04:21:59,640 --> 04:22:02,690
And I also chatted with some
of the other moderators.

5736
04:22:02,690 --> 04:22:06,390
And we picked out a couple
of people for their great

5737
04:22:06,390 --> 04:22:09,840
interventions today and also for
covering the event really

5738
04:22:09,840 --> 04:22:10,840
well on social media.

5739
04:22:10,840 --> 04:22:14,805
So without further ado, Pete,
do we have the Chromebooks?

5740
04:22:14,805 --> 04:22:18,390
Pete is running to get
the Chromebooks.

5741
04:22:18,390 --> 04:22:20,950
The most inspired interventions
of the day, I

5742
04:22:20,950 --> 04:22:22,420
think we all thought
came from Kyle.

5743
04:22:22,420 --> 04:22:23,810
So is he here?

5744
04:22:23,810 --> 04:22:26,510

5745
04:22:26,510 --> 04:22:27,760
Congratulations.

5746
04:22:27,760 --> 04:22:30,990

5747
04:22:30,990 --> 04:22:32,370
Come and get a Chromebook.

5748
04:22:32,370 --> 04:22:35,060

5749
04:22:35,060 --> 04:22:37,910
So maybe, Pete, you can give
out the Chromebooks.

5750
04:22:37,910 --> 04:22:40,730

5751
04:22:40,730 --> 04:22:45,220
The second Chromebook goes to
the person who thought covered

5752
04:22:45,220 --> 04:22:46,580
the event best on
social media.

5753
04:22:46,580 --> 04:22:49,130
And that's not just kind of
bigging us up but also just

5754
04:22:49,130 --> 04:22:53,360
making really insightful
comments--

5755
04:22:53,360 --> 04:22:55,410
it'll work, honestly--

5756
04:22:55,410 --> 04:22:58,390
insightful comments about the
day and really kind of drawing

5757
04:22:58,390 --> 04:23:01,310
on what the panelists have been
saying and producing some

5758
04:23:01,310 --> 04:23:02,175
nice original content.

5759
04:23:02,175 --> 04:23:04,460
And for that, we thought
Ashley Williams did a

5760
04:23:04,460 --> 04:23:05,030
brilliant job.

5761
04:23:05,030 --> 04:23:05,987
Is she here?

5762
04:23:05,987 --> 04:23:09,883
[APPLAUSE]

5763
04:23:09,883 --> 04:23:11,133
Congratulations.

5764
04:23:11,133 --> 04:23:14,270

5765
04:23:14,270 --> 04:23:17,310
So that leaves us just to
dig into our digital

5766
04:23:17,310 --> 04:23:19,800
hat of raffle tickets.

5767
04:23:19,800 --> 04:23:22,900
Unfortunately, due to another
slight crisis, we didn't give

5768
04:23:22,900 --> 04:23:24,280
raffle tickets to everyone.

5769
04:23:24,280 --> 04:23:27,990
So we've randomly chosen
people from Eventbrite.

5770
04:23:27,990 --> 04:23:30,430
And those people are
Kyle Kennerman.

5771
04:23:30,430 --> 04:23:33,810
Are you here?

5772
04:23:33,810 --> 04:23:34,630
No.

5773
04:23:34,630 --> 04:23:36,992
AUDIENCE: Ooh.

5774
04:23:36,992 --> 04:23:37,968
Poor Kyle.

5775
04:23:37,968 --> 04:23:42,180
ANDREW BETTS: Kyle does
not get a Chromebook.

5776
04:23:42,180 --> 04:23:45,810
Schabse Laks, are you here?

5777
04:23:45,810 --> 04:23:47,700
No, we've lost another one.

5778
04:23:47,700 --> 04:23:48,950
OK.

5779
04:23:48,950 --> 04:23:51,610

5780
04:23:51,610 --> 04:23:54,435
Aurelia Moser, are you here?

5781
04:23:54,435 --> 04:23:56,198
Aurelia, hurray.

5782
04:23:56,198 --> 04:24:00,580

5783
04:24:00,580 --> 04:24:03,710
So I had one back that was the
round random on the list.

5784
04:24:03,710 --> 04:24:04,820
And I didn't get two.

5785
04:24:04,820 --> 04:24:05,770
So we'll this one.

5786
04:24:05,770 --> 04:24:06,570
And we'll do another
one after.

5787
04:24:06,570 --> 04:24:09,140
So Ben Holland, are you here?

5788
04:24:09,140 --> 04:24:10,390
Ben, congratulations.

5789
04:24:10,390 --> 04:24:17,390

5790
04:24:17,390 --> 04:24:19,810
So we'll do another one.

5791
04:24:19,810 --> 04:24:21,960
We'll do it over dinner
or something.

5792
04:24:21,960 --> 04:24:26,570
So next, the financials,
we did this for Edge 1.

5793
04:24:26,570 --> 04:24:28,790
And was quite well received that
we told everyone exactly

5794
04:24:28,790 --> 04:24:30,440
how much money we made, where
we got it from, and

5795
04:24:30,440 --> 04:24:31,890
how we spent it.

5796
04:24:31,890 --> 04:24:35,990
So this is where we made our
money, how we spent our money.

5797
04:24:35,990 --> 04:24:40,200
And that's left us with $8,216,
which we're donating

5798
04:24:40,200 --> 04:24:42,120
to Girls Who Code.

5799
04:24:42,120 --> 04:24:47,400

5800
04:24:47,400 --> 04:24:53,150
So I'm really delighted to to
say that, Kristen Titus from

5801
04:24:53,150 --> 04:24:54,250
Girls Who Code is
actually here.

5802
04:24:54,250 --> 04:24:57,821
And she's going to say a
few words to everyone.

5803
04:24:57,821 --> 04:24:58,873
Let's get you a mic.

5804
04:24:58,873 --> 04:25:00,292
KRISTEN TITUS: It's OK.

5805
04:25:00,292 --> 04:25:00,765
Hi, guys.

5806
04:25:00,765 --> 04:25:01,540
Can you hear me?

5807
04:25:01,540 --> 04:25:02,740
No, you can't.

5808
04:25:02,740 --> 04:25:03,870
Hi, I'm Kristen.

5809
04:25:03,870 --> 04:25:06,150
I'm the executive director
of Girls Who Code.

5810
04:25:06,150 --> 04:25:08,592
And that number makes
me very happy.

5811
04:25:08,592 --> 04:25:11,890
And it'll make everyone happy.

5812
04:25:11,890 --> 04:25:13,256
Michelle, Danielle--

5813
04:25:13,256 --> 04:25:15,340
does everyone know there are two
Girls Who code, who missed

5814
04:25:15,340 --> 04:25:17,750
school today to be here all day
and have done nothing but

5815
04:25:17,750 --> 04:25:19,220
dream about this for weeks?

5816
04:25:19,220 --> 04:25:24,150
[APPLAUSE]

5817
04:25:24,150 --> 04:25:27,300
Thanks to you guys, this number
right here will make

5818
04:25:27,300 --> 04:25:30,680
sure that we have half of this
room as women, in five years,

5819
04:25:30,680 --> 04:25:32,610
in four year, hopefully,
in three years if

5820
04:25:32,610 --> 04:25:33,720
we're really lucky.

5821
04:25:33,720 --> 04:25:36,130
So thank you immensely.

5822
04:25:36,130 --> 04:25:37,190
It means the world to us.

5823
04:25:37,190 --> 04:25:38,890
And if any of you are interested
in getting involved

5824
04:25:38,890 --> 04:25:40,940
in Girls Who Code, we're working
to close the gender

5825
04:25:40,940 --> 04:25:41,970
gap in the tech space.

5826
04:25:41,970 --> 04:25:43,780
We need everyone here
a part of that.

5827
04:25:43,780 --> 04:25:45,790
This is going to make
a big difference.

5828
04:25:45,790 --> 04:25:47,040
Thank you, immensely.

5829
04:25:47,040 --> 04:25:52,855

5830
04:25:52,855 --> 04:25:55,260
ANDREW BETTS: Thank you.

5831
04:25:55,260 --> 04:25:58,090
So that is pretty much it.

5832
04:25:58,090 --> 04:25:59,180
We have dinner.

5833
04:25:59,180 --> 04:26:00,620
Dinner is upstairs.

5834
04:26:00,620 --> 04:26:02,450
And this is going to be slightly
complicated because

5835
04:26:02,450 --> 04:26:05,380
we all have to be escorted
up to the canteen.

5836
04:26:05,380 --> 04:26:09,140
So I'm told that Googlers are
assembling near the doors.

5837
04:26:09,140 --> 04:26:13,330
So go and grab a Google,
not physically.

5838
04:26:13,330 --> 04:26:15,130
And they will take
you to dinner.

5839
04:26:15,130 --> 04:26:18,190
Before you guy, just to be
aware, after dinner, we're

5840
04:26:18,190 --> 04:26:20,860
going to see the party
hosted by Facebook.

5841
04:26:20,860 --> 04:26:22,930
Facebook wants to escort
us there as well.

5842
04:26:22,930 --> 04:26:25,200
So Facebookers will be
arriving to do that.

5843
04:26:25,200 --> 04:26:27,550
[LAUGHING]

5844
04:26:27,550 --> 04:26:30,090
And this is how we're
going to get there.

5845
04:26:30,090 --> 04:26:32,630
So if you want to know roughly
where you're going.

5846
04:26:32,630 --> 04:26:33,910
That's where the party is.

5847
04:26:33,910 --> 04:26:35,420
There will be Facebook
people to take

5848
04:26:35,420 --> 04:26:36,900
you there after dinner.

5849
04:26:36,900 --> 04:26:37,920
So I'll see you upstairs.

5850
04:26:37,920 --> 04:27:27,420
[MUSIC PLAYING]

5851
04:27:27,420 --> 04:28:27,120

5852
04:28:27,120 --> 04:29:26,820

5853
04:29:26,820 --> 04:30:26,520

5854
04:30:26,520 --> 04:31:26,220

5855
04:31:26,220 --> 04:33:13,634

